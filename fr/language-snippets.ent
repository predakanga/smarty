<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->

<!ENTITY note.parameter.merge '<note>
 <title>Note technique</title>
 <para>
  Le paramètre <parameter>merge</parameter> respecte les clés du tableau,
  donc, si vous fusionnez deux tableaux indexés numériquement, ils peuvent
  se recouvrir les uns les autres ou aboutir à des clés non séquentielles. Ceci
  est diférent de la fonction PHP <ulink url="&url.php-manual;array_merge">array_merge()</ulink> 
  qui élimine des clés numériques et les renumérote.
 </para>
</note>'>

<!ENTITY parameter.compileid '<para>
 En tant que troisième paramètre optionnel, vous pouvez passer un 
 identifiant de compilation <parameter>compile_id</parameter>. 
 C&#39;est au cas où vous voudriez compiler plusieurs versions du
 même template, par exemple, pour avoir des templates compilés
 pour différents langages. Une autre utilité pour l&#39;identifiant de compilation
 compile_id est lorsque vous utilisez plus d&#39;un
 <link linkend="variable.template.dir">$template_dir</link> mais
 seulement un <link linkend="variable.compile.dir">$compile_dir</link>. 
 Définissez un <parameter>$compile_id</parameter>
 séparé pour chaque <link linkend="variable.template.dir">$template_dir</link>, 
 sinon, les templates du même nom s&#39;effaceront. Vous pouvez également 
 définir la variable $compile_id une seule fois plutôt que de la passer à chaque appel à la fonction.
</para>'>