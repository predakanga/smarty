<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.5 Maintainer: didou Status: ready -->
<sect1 id="caching.cacheable">
 <title>Contrôler la mise en cache des sorties des Plugins</title>
 <para>
  Depuis Smarty-2.6.0, la mise en cache des plugins peut être déclarée lors
  de leur inscription. Les troisièmes paramètres de register_block,
  register_compiler_function et register_function sont appelés
  <parameter>$cacheable</parameter> et valent true par défaut, ce qui est
  aussi le comportement par défaut des versions de Smarty précédent la 2.6.0
 </para>
 
 <para>
  Lors de l'inscription d'un plugin avec $cacheable=false, le plugin est
  appelé à chaque fois que la page est affichée, même si la page vient du
  cache. La fonction plugin se comporte presque comme la fonction
  <link linkend="plugins.inserts">insert</link>.
  </para>
  
  <para>
   Contrairement à <link linkend="language.function.insert">{insert}</link>
   les attributs pour le plugin ne sont pas mis en cache par défaut. Cela peut
   être le cas en utilisant le quatrième paramètre
   <parameter>$cache_attrs</parameter>. <parameter>$cache_attrs</parameter>
   est un tableau de noms d'attributs qui doivent être mis en cache, pour que
   la fonction plugin reçoive les valeurs telles qu'elles étaient définies lorsque
   la page a été mise en cache, à chaque récupération à partir du cache.
  </para>
  
  <example>
   <title>Eviter la mise en cache du résultat d'un plugin</title>
   <programlisting role="php">
<![CDATA[
<?php

require('Smarty.class.php');
$smarty = new Smarty;
$smarty->caching = true;

function remaining_seconds($params, &$smarty) {
    $remain = $params['endtime'] - time();
    if ($remain >=0)
        return $remain . " second(s)";
    else
        return "done";
}

$smarty->register_function('remaining', 'remaining_seconds', false, array('endtime'));

if (!$smarty->is_cached('index.tpl')) {
    // récupération de $obj à partir de la page et assignation...
    $smarty->assign_by_ref('obj', $obj);
}

$smarty->display('index.tpl');
?>
]]>
   </programlisting>
   <para>
    Où index.tpl contient :
   </para>
   <programlisting>
<![CDATA[
Time Remaining: {remain endtime=$obj->endtime}
]]>
   </programlisting>
   <para>
    Le nombre de secondes avant que la date de fin de $obj ne soit atteinte
    change à chaque affichage de la page, même si la page est mise en cache. 
    Comme l'attribut endtime est mis en cache, il n'y a que l'objet qui ait 
    besoin d'être extrait de la base de données lors de la mise en cache de 
    la page, mais pas lors des affichages ultérieurs de la page.
   </para>
  </example>
  
  <example>
   <title>Eviter la mise en cache d'une portion du template</title>
   <programlisting role="php">
<![CDATA[
<?php
require('Smarty.class.php');
$smarty = new Smarty;
$smarty->caching = true;

function smarty_block_dynamic($param, $content, &$smarty) {
    return $content;
}
$smarty->register_block('dynamic', 'smarty_block_dynamic', false);

$smarty->display('index.tpl');
?>
]]>
   </programlisting>
   <para>
    Où index.tpl contient :
   </para>
   <programlisting>
<![CDATA[
Page created: {"0"|date_format:"%D %H:%M:%S"}

{dynamic}

Now is: {"0"|date_format:"%D %H:%M:%S"}

... do other stuff ...

{/dynamic}
]]>
   </programlisting>
  </example>
  
  <para>
   Lors du rechargement de la page, vous remarquerez que les deux dates sont 
   différentes. L'une est "dynamique" et l'autre est "statique". Vous pouvez 
   faire ce que vous voulez entre {dynamic}...{/dynamic} et être sûrs que 
   cela ne sera pas mis en cache comme le reste de la page.
  </para>
  
 </sect1>
 
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
