<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<sect1 id="advanced.features.postfilters">
 <title>Filtres de post-compilation</title>
 <para>
  Les filtres de post-compilation sont des fonctions PHP que vos templates
  exécutent après avoir été compilés. Les filtres de post-compilation peuvent
  être soit <link linkend="api.register.postfilter">déclarés</link> soit chargés
  depuis les répertoires des plugins en utilisant la fonction
  <link linkend="api.load.filter">load_filter()</link> ou en réglant
   la variable <link linkend="variable.autoload.filters">$autoload_filters</link>.
   Smarty passera le template compilé en tant que premier paramètre et attendra
   de la fonction qu'elle retourne le résultat de l'exécution.
  </para>
  <example>
   <title>utilisation d'un filtre de post-compilation de templates</title>
<programlisting>
&lt;?php
// mettez cela dans votre application
function add_header_comment($tpl_source, &amp;$smarty)
{
    return "&lt;?php echo \"&lt;!-- Created by Smarty! --&gt;\n\" ?&gt;\n".$tpl_source;
}

// enregistre le filtre de post-compilation
$smarty->register_postfilter("add_header_comment");
$smarty->display("index.tpl");
?&gt;

{* template Smarty compilé index.tpl *}
&lt;!-- Created by Smarty! --&gt;
{* reste du contenu du template... *}</programlisting>
  </example>
 </sect1>
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
