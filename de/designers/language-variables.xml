<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
  <chapter id="language.variables">
   <title>Variablen</title>
   <para>
    Smarty hat verschiedene Variablentypen, welche weiter unten detailliert
    beschrieben werden. Der Typ der Variable wird durch das Vorzeichen bestimmt.
   </para>
   
   <para>
    Variablen k&ouml;nnen in Smarty direkt ausgegeben werden oder als Argumente
    f&uuml;r Funktionsparameter und Modifikatoren sowie in Bedingungen verwendet werden.
    Um eine Variable auszugeben, umschliessen Sie sie mit Trennzeichen, so dass
    die Variable das einzige enthaltene Element ist. Beispiele:
    <programlisting>
{$Name}

{$Kontakte[zeile].Telefon}

&lt;body bgcolor="{#bgcolor#}"&gt;</programlisting>
   </para>

   <sect1 id="language.assigned.variables">
    <title>Aus einem PHP-Skript zugewiesene Variablen</title>
    <para>
     Variablen die in einem PHP Skript zugewiesen wurden, m&uuml;ssen mit eine Dollar Zeichen <literal>$</literal>
     versehen werden.
    </para>
    <example>

     <title>zugewiesene Variablen</title>
<programlisting>
Hallo {$vorname}, sch&ouml;n dass Du wieder da bist.
&lt;p&gt;
Letzer zugriff: {$lastLoginDate}.

AUSGABE:

Hallo Andreas, sch&ouml;n dass Du wieder da bist.
&lt;p&gt;
Letzer Zugriff: January 11th, 2001.</programlisting>
</example>

		<sect2 id="language.variables.assoc.arrays">
			<title>Assoziative Arrays</title>
			<para>
			Sie k&ouml;nnen auch auf die Werte eines in PHP zugewiesenen assoziativen Arrays zugreifen,
            indem Sie den Schl&uuml;ssel nach einem '.'-Zeichen (Punkt) notieren.
			</para>
<example>
<title>Zugriff auf Variablen eines assoziativen Arrays</title>
<programlisting>
{$Kontakte.fax}&lt;br&gt;
{$Kontakte.email}&lt;br&gt;
{* auch multidimensionale Arrays k&ouml;nnen so angesprochen werden *}
{$Kontakte.telefon.privat}&lt;br&gt;
{$Kontakte.telefon.mobil}&lt;br&gt;

AUSGABE:

555-222-9876&lt;br&gt;
zaphod@slartibartfast.com&lt;br&gt;
555-444-3333&lt;br&gt;
555-111-1234&lt;br&gt;
</programlisting>
</example>
		</sect2>
        <sect2 id="language.variables.array.indexes">
			<title>Array Index</title>
			<para>
			Arrays k&ouml;nnen - &auml;hnlich der PHP-Syntax - auch &uuml;ber ihren Index angesprochen werden.
			</para>
<example>
<title>Zugriff &uuml;ber den Array Index</title>
<programlisting>
{$Kontakte[0]}&lt;br&gt;
{$Kontakte[1]}&lt;br&gt;
{* auch hier sind multidimensionale Arrays m&ouml;glich *}
{$Kontakte[0][0]}&lt;br&gt;
{$Kontakte[0][1]}&lt;br&gt;</programlisting>
</example>
		</sect2>
        <sect2 id="language.variables.objects">
			<title>Objekte</title>
			<para>
			Attribute von aus PHP zugewiesenen Objekten k&ouml;nnen
            &uuml;ber das '-&gt;'-Symbol erreicht werden.
			</para>
<example>
<title>Zugriff auf Objekt-Attribute</title>
<programlisting>
name: {$person-&gt;name}&lt;br&gt;
email: {$person-&gt;email}&lt;br&gt;

AUSGABE:

name: Zaphod Beeblebrox&lt;br&gt;
email: zaphod@slartibartfast.com&lt;br&gt;</programlisting>
</example>
		</sect2>
       </sect1>
       <sect1 id="language.config.variables">
			<title>Verwendung von Variablen aus Konfigurationsdateien</title>
			<para>
	     Variablen, die aus einer Konfigurationsdatei geladen werden, referenziert man mit
         umschliessenden '#'-Zeichen (Raute).
			</para>
<example>

<title>Konfigurationsvariablen</title>
<programlisting>
&lt;html&gt;
&lt;title&gt;{#seitenTitel#}&lt;/title&gt;
&lt;body bgcolor="{#bodyHintergrundFarbe#}"&gt;
&lt;table border="{#tabelleRahmenBreite#}" bgcolor="{#tabelleHintergrundFarbe#}"&gt;
&lt;tr bgcolor="{#reiheHintergrundFarbe#}"&gt;
	&lt;td&gt;Vornamen&lt;/td&gt;
	&lt;td&gt;Nachnamen&lt;/td&gt;
	&lt;td&gt;Adresse&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
</example>
			<para>
	    		Variablen aus Konfigurationsdateien k&ouml;nnen erst verwendet werden,
			wenn sie aus der Datei geladen wurden. Dieser Vorgang wird im Abschnitt
                            <command>config_load</command> weiter unten n&auml;her erl&auml;utert.
			</para>
		</sect1>

        <sect1 id="language.variables.smarty">
         <title>Die reservierte {$smarty} Variable</title>
         <para>
	  Die reservierte Variable {$smarty} wird verwendet, um auf spezielle Template-Variablen
           zuzugreifen. Im Folgenden die Liste der Variablen:
         </para>

         <sect2 id="language.variables.smarty.request">
          <title>Request-Variablen</title>
          <para>
	   Auf die Request-Variablen (Anfragevariablen) 'get', 'post', 'cookie', 'server', 'environment' und 'session'
       kann wie folgt zugegriffen werden:
          </para>
          <example>

           <title>Ausgabe der Requestvariablen (Anfragevariablen)</title>
           <programlisting>
{* anzeigen der variable 'page' aus der URL oder dem FORM, welche mit GET &uuml;bertragen wurde *}
{$smarty.get.page}

{* anzeigen der variable 'page' welche mit POST &uuml;bertragen wurde *}
{$smarty.post.page}

{* anzeigen des cookies "benutzer" *}
{$smarty.cookies.benutzer}

{* anzeigen der Server-Variable "SERVER_NAME" *}
{$smarty.server.SERVER_NAME}

{* anzeigen der Environment-Variable "PATH" *}
{$smarty.env.PATH}

{* anzeigen der Session-Variable "id" *}
{$smarty.session.id}

{* anzeigen der Variable "benutzer" aus dem $_REQUEST Array (Zusammenstellung von get/post/cookie/server/env) *}
{$smarty.request.benutzer}</programlisting>

</example>
		</sect2>

        <sect2 id="language.variables.smarty.now">
			<title>{$smarty.now}</title>
			<para>
			Die momentane Unix-Timestamp kann &uuml;ber {$smarty.now} angefragt werden.
			Diese Zahl ist die Summe der verstrichenen Sekunden seit Beginn der UNIX-Epoche
            (1. Januar 1970) und kann zur Anzeige direkt dem 'date_format'-Modifikator
            &uuml;bergeben werden.
			</para>
<example>

<title>Verwendung von {$smarty.now}</title>
<programlisting>
{* Verwendung des 'date_format'-Modifikators zur Anzeige der Zeit *}
{$smarty.now|date_format:"%Y-%m-%d %H:%M:%S"}</programlisting>
</example>
		</sect2>

		<sect2 id="language.variables.smarty.capture">
			<title>{$smarty.capture}</title>
			<para>
			Auf die mit dem {capture}..{/capture} Konstrukt abgefangene Ausgabe kann
            via {$smarty} zugegriffen werden. Ein Beispiel dazu finden Sie im Abschnitt 
            zu <link linkend="language.function.capture">capture</link>.
			</para>
		</sect2>

        <sect2 id="language.variables.smarty.loops">
			<title>{$smarty.section}, {$smarty.foreach}</title>
			<para>
			{$smarty} wird auch verwendet, um auf Eigenschaften von
            'section' und 'foreach' Schleifen zuzugreifen. Weitere 
            Informationen dazu finden sie in der Dokumentation 
            von <link linkend="language.function.section">section</link> 
            und <link linkend="language.function.foreach">foreach</link>.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.template">
			<title>{$smarty.template}</title>
			<para>
			Diese Variable enth&auml;lt den Namen des gerade verarbeiteten Templates.
			</para>
		</sect2>

		</sect1>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->