<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
     <sect1 id="language.function.capture">
      <title>capture (Ausgabe abfangen)</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Attribut Name</entry>
                        <entry>Typ</entry>
                        <entry>Ben&ouml;tigt</entry>
                        <entry>Standardwert</entry>
                        <entry>Beschreibung</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>no</entry>
                        <entry><emphasis>default</emphasis></entry>
                        <entry>Der Name des abgefangenen Blocks</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Der Name der Variable welcher der Wert zugewiesen werden soll.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
      <para>
       'capture' wird verwendet, um die Template-Ausgabe abzufangen und in einer
       Variable zu speichern. Der Inhalt zwischen {capture name="foo"} und {/capture}
       wird unter der im 'name' Attribut angegebenen Variable abgelegt und kann &uuml;ber 
       '$smarty.capture.foo' angesprochen werden. Falls kein 'name'-Attribut
       &uuml;bergeben wurde, wird der Inhalt in 'default' abgelegt.
       Jede {capture} Sektion muss mit {/capture} beendet werden.
       'capture'-Bl&ouml;cke k&ouml;nnen verschachtelt sein.
      </para>
	  <note>
	  <title>Technische Bemerkung</title>
      <para>
       Smarty 1.4.0 - 1.4.4 speicherte den abgefangenen Inhalt in der
       Variable '$return'. Seit 1.4.5 wird das 'name'-Attribut verwenden.
       Bitte passen Sie Ihre Templates entsprechend an.
      </para>
	  </note>
      <caution>
       <para>
	Seien Sie vorsichtig, wenn sie die Ausgabe von <command>insert</command>
	abfangen wollen. Sie sollten die Ausgabe nicht abfangen, wenn Caching 
         eingeschaltet ist und Sie einen <command>insert</command>
	Befehl verwenden, um Ausgaben vom Caching auszuschliessen.
       </para>
      </caution>
      <para>
       <example>
        <title>Template-Inhalte abfangen</title>
        <programlisting>

{* Tabellenzeile nur ausgeben, wenn Inhalt vorhanden *}
{capture name=banner}
{include file="get_banner.tpl"}
{/capture}
{if $smarty.capture.banner ne ""}
	&lt;tr&gt;
		&lt;td&gt;
			{$smarty.capture.banner}
		&lt;/td&gt;
	&lt;/tr&gt;
{/if}</programlisting>
       </example>
      </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->