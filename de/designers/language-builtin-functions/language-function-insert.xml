<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
		<sect1 id="language.function.insert">
			<title>insert (einf&uuml;gen)</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Attribut Name</entry>
                        <entry>Typ</entry>
                        <entry>Erforderlich</entry>       
                        <entry>Standardwert</entry>
                        <entry>Beschreibung</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Ja</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Der Name der Insert-Funktion</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Nein</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Name der Template-Variable, in der die Ausgabe der 'insert'-Funktion optional abgelegt wird.</entry>
                    </row>
                    <row>
                        <entry>script</entry>
                        <entry>string</entry>
                        <entry>Nein</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Name des PHP-Skriptes, das vor Aufruf der 'insert'-Funktion eingebunden werden soll.</entry>
                    </row>
                    <row>
                        <entry>[var ...]</entry>
                        <entry>[var typ]</entry>
                        <entry>Nein</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Variablen die der 'insert'-Funktion &uuml;bergeben werden sollen.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			'insert'-Tags funktionieren &auml;hnlich den 'include'-Tags,
			werden aber nicht gecached, falls <link linkend="caching">caching</link>
			eingeschaltet ist. Sie werden bei jedem Aufruf des Templates ausgef&uuml;hrt.
			</para>
            <para>
	        Stellen Sie sich vor, sie h&auml;tten ein Template mit einem
	        Werbebanner. Dieser Banner kann verschiedene Arten von
	        Inhalten haben: Bilder, HTML, Flash, etc. 
            Deshalb k&ouml;nnen wir nicht einfach einen statischen Link
	        verwenden und m&uuml;ssen vermeiden, dass dieser Inhalt gecached wird.
	        Hier kommt das 'insert'-Tag ins Spiel. Das Template kennt die Variablen
	        '#banner_location_id#' und '#site_id#' (zum Beispiel aus einer Konfigurationsdatei)
	        und soll eine Funktion aufrufen, die den Inhalt des Banners liefert.
			</para>
<example>
<title>Funktion 'insert'</title>
<programlisting>

{* erzeugen des Banners *}
{insert name="getBanner" lid=#banner_location_id# sid=#site_id#}</programlisting>
</example>
			<para>
			In diesem Beispiel verwenden wir die Funktion 'getBanner' und
			&uuml;bergeben die Parameter '#banner_location_id#' und '#site_id#'.
			Smarty wird daraufhin in Ihrer Applikatiopn nach einer Funktion
			namens 'getBanner' suchen und diese mit den Parametern '#banner_location_id#'
			und '#site_id#' aufrufen. Allen 'insert'-Funktionen in Ihrer Applikation
			muss 'insert_' vorangestellt werden, um Konflikte im Namensraum
			zu vermeiden. Ihre 'insert_getBanner()'-Funktion sollte etwas mit den
			&uuml;bergebenen Parametern unternehmen und das Resultat zur&uuml;ckgeben.
			Dieses Resultat wird an der Stelle des 'insert'-Tags in Ihrem Template ausgegeben.
			In diesem Beispiel w&uuml;rde Smarty folgende Funktion aufrufen:
			insert_getBanner(array("lid" => "12345","sid" => "67890")) und die erhaltenen Resultate
			an Stelle des 'insert'-Tags ausgeben.
			</para>
			<para>
			Falls Sie das 'assign'-Attribut &uuml;bergeben, wird die Ausgabe
			des 'insert'-Tags in dieser Variablen abgelegt. 
                            Bemerkung: dies ist nicht sinnvoll, wenn Caching eingeschaltet ist.
			</para>
			<para>
			Falls Sie das 'script'-Attribut &uuml;bergeben, wird das angegebene
			PHP-Skript vor der Ausf&uuml;hrung der 'insert'-Funktion eingebunden.
			Dies ist n&uuml;tzlich, um die 'insert'-Funktion erst in diesem
			Skript zu definieren.
			Der Pfad kann absolut oder relativ zu '$trusted_dir' angegeben werden.
			Wenn Sicherheit eingeschaltet ist, muss das Skript in '$trusted_dir'
			liegen.
			</para>
			<para>
			Als zweites Argument wird der 'insert'-Funktion das Smarty-Objekt selbst
                            &uuml;bergeben. Damit kann dort auf die Informationen im Smarty-Objekt 
                            zugegriffen werden.
			</para>
			<note>
			<title>Technische Bemerkung</title>
			<para>
	    Es gibt die M&ouml;glichkeit, Teile des Templates nicht zu cachen.
	    Wenn Sie <link linkend="caching">caching</link> eingeschaltet haben,
	    werden 'insert'-Tags nicht gecached. Sie werden jedesmal ausgef&uuml;hrt, wenn
	    die Seite erstellt wird - selbst innerhalb gecachter Seiten. Dies funktioniert
	    gut f&uuml;r Dinge wie Werbung (Banner), Abstimmungen, Wetterberichte, Such-Resultate, Benutzer-Feedback-Ecke, etc.
			</para>
			</note>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->