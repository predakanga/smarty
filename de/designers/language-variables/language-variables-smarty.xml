<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
        <sect1 id="language.variables.smarty">
         <title>Die reservierte {$smarty} Variable</title>
         <para>
	  Die reservierte Variable {$smarty} wird verwendet, um auf spezielle Template-Variablen
           zuzugreifen. Im Folgenden die Liste der Variablen:
         </para>

         <sect2 id="language.variables.smarty.request">
          <title>Request-Variablen</title>
          <para>
	   Auf die Request-Variablen (Anfragevariablen) 'get', 'post', 'cookie', 'server', 'environment' und 'session'
       kann wie folgt zugegriffen werden:
          </para>
          <example>

           <title>Ausgabe der Requestvariablen (Anfragevariablen)</title>
           <programlisting>
{* anzeigen der variable 'page' aus der URL oder dem FORM, welche mit GET &uuml;bertragen wurde *}
{$smarty.get.page}

{* anzeigen der variable 'page' welche mit POST &uuml;bertragen wurde *}
{$smarty.post.page}

{* anzeigen des cookies "benutzer" *}
{$smarty.cookies.benutzer}

{* anzeigen der Server-Variable "SERVER_NAME" *}
{$smarty.server.SERVER_NAME}

{* anzeigen der Environment-Variable "PATH" *}
{$smarty.env.PATH}

{* anzeigen der Session-Variable "id" *}
{$smarty.session.id}

{* anzeigen der Variable "benutzer" aus dem $_REQUEST Array (Zusammenstellung von get/post/cookie/server/env) *}
{$smarty.request.benutzer}</programlisting>

</example>
		</sect2>

        <sect2 id="language.variables.smarty.now">
			<title>{$smarty.now}</title>
			<para>
			Die momentane Unix-Timestamp kann &uuml;ber {$smarty.now} angefragt werden.
			Diese Zahl ist die Summe der verstrichenen Sekunden seit Beginn der UNIX-Epoche
            (1. Januar 1970) und kann zur Anzeige direkt dem 'date_format'-Modifikator
            &uuml;bergeben werden.
			</para>
<example>

<title>Verwendung von {$smarty.now}</title>
<programlisting>
{* Verwendung des 'date_format'-Modifikators zur Anzeige der Zeit *}
{$smarty.now|date_format:"%Y-%m-%d %H:%M:%S"}</programlisting>
</example>
		</sect2>

		<sect2 id="language.variables.smarty.capture">
			<title>{$smarty.capture}</title>
			<para>
			Auf die mit dem {capture}..{/capture} Konstrukt abgefangene Ausgabe kann
            via {$smarty} zugegriffen werden. Ein Beispiel dazu finden Sie im Abschnitt 
            zu <link linkend="language.function.capture">capture</link>.
			</para>
		</sect2>

        <sect2 id="language.variables.smarty.loops">
			<title>{$smarty.section}, {$smarty.foreach}</title>
			<para>
			{$smarty} wird auch verwendet, um auf Eigenschaften von
            'section' und 'foreach' Schleifen zuzugreifen. Weitere 
            Informationen dazu finden sie in der Dokumentation 
            von <link linkend="language.function.section">section</link> 
            und <link linkend="language.function.foreach">foreach</link>.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.template">
			<title>{$smarty.template}</title>
			<para>
			Diese Variable enth&auml;lt den Namen des gerade verarbeiteten Templates.
			</para>
		</sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->