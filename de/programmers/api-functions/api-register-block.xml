<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
  <sect1 id="api.register.block">
   <title>register_block (Block-Funktion registrieren)</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>register_block</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>mixed <parameter>impl</parameter></paramdef>
     <paramdef>bool <parameter>cacheable</parameter></paramdef>
     <paramdef>array or null <parameter>cache_attrs</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Wird verwendet, um Block-Funktion-Plugins dynamisch zu registrieren.
    &Uuml;bergeben Sie dazu den Namen der Block-Funktion und den Namen der
    PHP-Callback-Funktion, die die entsprechende Funktionalit&auml;t bereitstellt.
    </para>
    <para>
    Der Parameter <parameter>impl</parameter> kann als (a) einen Funktionnamen oder (b) einem Array der Form <literal>array(&amp;$object, $method)</literal>,
    wobei <literal>&amp;$object</literal> eine Referenz zu einem Objekt und <literal>$method</literal> der Name der Methode die aufgerufen werden soll ist,
    oder als Array der Form <literal>array(&amp;$class, $method)</literal>, wobei <literal>$class</literal> der Name der Klasse und <literal>$method</literal>
    der Name der Methode ist die aufgerufen werden soll, &uuml;bergeben werden.
    </para>
    <para>
    <parameter>$cacheable</parameter> und <parameter>$cache_attrs</parameter> k&ouml;nnen in den meisten F&auml;llen weggelassen werden. Konsultieren Sie <link linkend="caching.cacheable">Die Ausgabe von cachebaren Plugins Kontrollieren</link> f&uuml;r weitere Informationen. 
   </para>
   <example>
    <title>register_block (Block-Funktion registrieren)</title>
    <programlisting>
     /* PHP */
     $smarty->register_block("translate", "do_translation");
     
     function do_translation ($params, $content, &amp;$smarty, &amp;$repeat) {
     if (isset($content)) {
     $lang = $params['lang'];
     
     // &uuml;bersetze den Inhalt von '$content'
     return $translation;
     }
     }
     
     {* template *}
     {translate lang="br"}
     Hello, world!
     {/translate}</programlisting>
   </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->