<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->block_nesting_level = 0;
				$this->is_xml = false;
				$this->asp_tags = (ini_get('asp_tags') != '0');
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 129 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LITERALSTART                   = 11;
    const TP_LITERALEND                     = 12;
    const TP_LITERAL                        = 13;
    const TP_LDEL                           = 14;
    const TP_RDEL                           = 15;
    const TP_DOLLAR                         = 16;
    const TP_ID                             = 17;
    const TP_EQUAL                          = 18;
    const TP_PTR                            = 19;
    const TP_LDELIF                         = 20;
    const TP_SPACE                          = 21;
    const TP_LDELFOR                        = 22;
    const TP_SEMICOLON                      = 23;
    const TP_INCDEC                         = 24;
    const TP_TO                             = 25;
    const TP_STEP                           = 26;
    const TP_LDELFOREACH                    = 27;
    const TP_AS                             = 28;
    const TP_APTR                           = 29;
    const TP_LDELSLASH                      = 30;
    const TP_INTEGER                        = 31;
    const TP_COMMA                          = 32;
    const TP_MATH                           = 33;
    const TP_UNIMATH                        = 34;
    const TP_ANDSYM                         = 35;
    const TP_ISIN                           = 36;
    const TP_ISDIVBY                        = 37;
    const TP_ISNOTDIVBY                     = 38;
    const TP_ISEVEN                         = 39;
    const TP_ISNOTEVEN                      = 40;
    const TP_ISEVENBY                       = 41;
    const TP_ISNOTEVENBY                    = 42;
    const TP_ISODD                          = 43;
    const TP_ISNOTODD                       = 44;
    const TP_ISODDBY                        = 45;
    const TP_ISNOTODDBY                     = 46;
    const TP_INSTANCEOF                     = 47;
    const TP_OPENP                          = 48;
    const TP_CLOSEP                         = 49;
    const TP_QMARK                          = 50;
    const TP_NOT                            = 51;
    const TP_TYPECAST                       = 52;
    const TP_HEX                            = 53;
    const TP_DOT                            = 54;
    const TP_SINGLEQUOTESTRING              = 55;
    const TP_DOUBLECOLON                    = 56;
    const TP_AT                             = 57;
    const TP_HATCH                          = 58;
    const TP_OPENB                          = 59;
    const TP_CLOSEB                         = 60;
    const TP_EQUALS                         = 61;
    const TP_NOTEQUALS                      = 62;
    const TP_GREATERTHAN                    = 63;
    const TP_LESSTHAN                       = 64;
    const TP_GREATEREQUAL                   = 65;
    const TP_LESSEQUAL                      = 66;
    const TP_IDENTITY                       = 67;
    const TP_NONEIDENTITY                   = 68;
    const TP_MOD                            = 69;
    const TP_LAND                           = 70;
    const TP_LOR                            = 71;
    const TP_LXOR                           = 72;
    const TP_QUOTE                          = 73;
    const TP_BACKTICK                       = 74;
    const TP_DOLLARID                       = 75;
    const YY_NO_ACTION = 550;
    const YY_ACCEPT_ACTION = 549;
    const YY_ERROR_ACTION = 548;

    const YY_SZ_ACTTAB = 2360;
static public $yy_action = array(
 /*     0 */   181,  240,  272,  271,  269,  264,  259,  257,  260,  284,
 /*    10 */   285,  232,  159,  210,  314,    2,  109,  205,    3,    3,
 /*    20 */   183,  199,   33,  206,  203,  309,  112,  112,  124,   10,
 /*    30 */   253,  216,   48,   42,   46,   41,   26,   16,  329,  328,
 /*    40 */    36,   37,  359,  347,   28,   29,  343,  352,   23,   92,
 /*    50 */   356,  340,   34,  159,  342,  332,    8,   45,   88,  117,
 /*    60 */   302,  300,  303,  304,  299,  290,  293,  297,  296,  307,
 /*    70 */   320,  319,  181,  321,  231,   23,  334,  100,  340,   97,
 /*    80 */    52,  118,   99,  153,   23,  286,  310,  340,  167,  207,
 /*    90 */   318,  208,  183,   89,  238,  243,  249,  324,  549,   83,
 /*   100 */   244,  272,  271,  193,   48,   42,   46,   41,   26,   16,
 /*   110 */   329,  328,   36,   37,  359,  347,   28,   29,  331,   23,
 /*   120 */   341,   23,  340,   20,  340,   34,  160,  292,   27,  283,
 /*   130 */   105,  278,  302,  300,  303,  304,  299,  290,  293,  297,
 /*   140 */   296,  307,  320,  319,  181,  288,  321,  234,  204,    4,
 /*   150 */   212,  123,  218,   66,  323,  110,   23,  274,  194,  340,
 /*   160 */   183,  139,   12,  318,  183,  237,  324,  238,  243,   25,
 /*   170 */   324,  192,  462,  150,  249,  335,   48,   42,   46,   41,
 /*   180 */    26,   16,  329,  328,   36,   37,  359,  347,   28,   29,
 /*   190 */   161,  280,    3,  157,  292,  421,  419,  360,  191,  156,
 /*   200 */   112,  421,  419,  103,  302,  300,  303,  304,  299,  290,
 /*   210 */   293,  297,  296,  307,  320,  319,  181,  321,    6,  188,
 /*   220 */   144,  100,   24,  101,   51,  118,   99,   45,   23,    3,
 /*   230 */   152,  340,  129,  249,  318,  163,  183,  112,  238,  243,
 /*   240 */    45,  324,   32,  249,   31,   14,  333,  250,   48,   42,
 /*   250 */    46,   41,   26,   16,  329,  328,   36,   37,  359,  347,
 /*   260 */    28,   29,  181,  171,  313,  158,   23,  171,   13,  340,
 /*   270 */   183,  220,   13,  234,    5,  129,  302,  300,  303,  304,
 /*   280 */   299,  290,  293,  297,  296,  307,  320,  319,  145,   23,
 /*   290 */   335,   30,  340,   11,   48,   42,   46,   41,   26,   16,
 /*   300 */   329,  328,   36,   37,  359,  347,   28,   29,  181,  208,
 /*   310 */     3,  418,  111,   15,  104,  107,  147,  183,  112,  325,
 /*   320 */   234,  140,  302,  300,  303,  304,  299,  290,  293,  297,
 /*   330 */   296,  307,  320,  319,  249,   23,  195,  175,  186,   39,
 /*   340 */    48,   42,   46,   41,   26,   16,  329,  328,   36,   37,
 /*   350 */   359,  347,   28,   29,  181,  163,  315,  349,  183,  209,
 /*   360 */   181,   86,  183,  183,   31,   14,  357,  246,  302,  300,
 /*   370 */   303,  304,  299,  290,  293,  297,  296,  307,  320,  319,
 /*   380 */   183,   23,   23,  214,  211,  179,   48,   42,   46,   41,
 /*   390 */    26,   16,  329,  328,   36,   37,  359,  347,   28,   29,
 /*   400 */   181,   93,  355,  305,  210,  154,  292,   45,  234,  183,
 /*   410 */    32,  357,  106,  132,  302,  300,  303,  304,  299,  290,
 /*   420 */   293,  297,  296,  307,  320,  319,  249,  353,  215,  219,
 /*   430 */     8,  316,   48,   42,   46,   41,   26,   16,  329,  328,
 /*   440 */    36,   37,  359,  347,   28,   29,  223,  346,  200,  361,
 /*   450 */   311,  298,  252,  312,  149,  183,  183,  183,  183,  183,
 /*   460 */   302,  300,  303,  304,  299,  290,  293,  297,  296,  307,
 /*   470 */   320,  319,  181,  321,  229,  151,  141,  178,  102,  218,
 /*   480 */    50,  121,  110,   45,   23,  344,  164,  340,  249,  249,
 /*   490 */   318,  263,  350,  276,  238,  243,  287,  324,  183,  217,
 /*   500 */   326,    7,  250,  250,   48,   42,   46,   41,   26,   16,
 /*   510 */   329,  328,   36,   37,  359,  347,   28,   29,  135,  301,
 /*   520 */   223,  270,  294,  165,  291,  183,   19,  183,  183,  251,
 /*   530 */   183,  249,  302,  300,  303,  304,  299,  290,  293,  297,
 /*   540 */   296,  307,  320,  319,  181,  321,   17,  226,  127,  174,
 /*   550 */   351,  218,   72,  256,  110,  295,  183,  336,  255,  146,
 /*   560 */   277,  183,  318,  183,  163,   91,  238,  243,  289,  324,
 /*   570 */    12,  281,  249,   31,   14,  242,   48,   42,   46,   41,
 /*   580 */    26,   16,  329,  328,   36,   37,  359,  347,   28,   29,
 /*   590 */   143,  224,  245,  265,  120,  168,  129,  197,  279,  119,
 /*   600 */   119,  308,  335,  249,  302,  300,  303,  304,  299,  290,
 /*   610 */   293,  297,  296,  307,  320,  319,  181,  321,  241,  280,
 /*   620 */   126,  212,  183,  218,   53,  122,  110,  138,   95,  148,
 /*   630 */   322,  134,  277,  111,  318,  113,  163,  129,  238,  243,
 /*   640 */   277,  324,  249,  317,  249,   31,   14,   40,   48,   42,
 /*   650 */    46,   41,   26,   16,  329,  328,   36,   37,  359,  347,
 /*   660 */    28,   29,  181,   18,   39,  335,  275,  250,  273,   94,
 /*   670 */   337,   87,   22,   90,  142,  137,  302,  300,  303,  304,
 /*   680 */   299,  290,  293,  297,  296,  307,  320,  319,  249,  155,
 /*   690 */   222,  262,  305,  305,   48,   42,   46,   41,   26,   16,
 /*   700 */   329,  328,   36,   37,  359,  347,   28,   29,  131,  125,
 /*   710 */   305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
 /*   720 */   277,  277,  302,  300,  303,  304,  299,  290,  293,  297,
 /*   730 */   296,  307,  320,  319,  181,  128,  305,  321,   96,  305,
 /*   740 */   108,  212,  305,  218,   75,  354,  110,  277,  166,    9,
 /*   750 */   277,   98,  277,  305,  318,  199,  305,  206,  238,  243,
 /*   760 */   305,  324,  124,  277,  305,  216,   48,   42,   46,   41,
 /*   770 */    26,   16,  329,  328,   36,   37,  359,  347,   28,   29,
 /*   780 */   133,  305,  305,  305,  305,  305,  305,  305,  305,  305,
 /*   790 */   305,  305,  305,  249,  302,  300,  303,  304,  299,  290,
 /*   800 */   293,  297,  296,  307,  320,  319,  181,  321,  345,   38,
 /*   810 */   358,  212,  181,  218,   79,  305,  110,  305,  305,  305,
 /*   820 */   227,  130,  305,  305,  318,  305,  338,  305,  238,  243,
 /*   830 */   189,  324,  183,  277,  305,  305,  305,  305,   48,   42,
 /*   840 */    46,   41,   26,   16,  329,  328,   36,   37,  359,  347,
 /*   850 */    28,   29,  181,  305,  305,  305,  305,  305,  305,  305,
 /*   860 */   305,  305,  305,  305,  305,  305,  302,  300,  303,  304,
 /*   870 */   299,  290,  293,  297,  296,  307,  320,  319,  305,  305,
 /*   880 */   305,  305,  305,  305,   48,   42,   46,   41,   26,   16,
 /*   890 */   329,  328,   36,   37,  359,  347,   28,   29,  305,  305,
 /*   900 */   235,  305,  305,  305,  305,  305,  305,  305,  305,  305,
 /*   910 */   305,  305,  302,  300,  303,  304,  299,  290,  293,  297,
 /*   920 */   296,  307,  320,  319,  181,  321,  305,  305,  305,  212,
 /*   930 */   305,  218,   49,  305,  110,  305,  305,  305,  268,  305,
 /*   940 */   305,  305,  318,  305,  305,  305,  238,  243,  305,  324,
 /*   950 */   305,  305,  305,  305,  305,  305,   48,   42,   46,   41,
 /*   960 */    26,   16,  329,  328,   36,   37,  359,  347,   28,   29,
 /*   970 */   305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
 /*   980 */   305,  305,  305,  305,  302,  300,  303,  304,  299,  290,
 /*   990 */   293,  297,  296,  307,  320,  319,  181,  305,  321,  305,
 /*  1000 */   305,  305,  212,  305,  218,   60,  305,  110,  305,  305,
 /*  1010 */   305,  136,  305,  305,  305,  318,  163,  305,  162,  238,
 /*  1020 */   243,  305,  324,  305,  249,   31,   14,  305,   48,   42,
 /*  1030 */    46,   41,   26,   16,  329,  328,   36,   37,  359,  347,
 /*  1040 */    28,   29,  181,  305,  305,  305,  305,  305,  305,  305,
 /*  1050 */   305,  305,  305,  305,  305,  305,  302,  300,  303,  304,
 /*  1060 */   299,  290,  293,  297,  296,  307,  320,  319,  305,  305,
 /*  1070 */   305,  305,  305,  305,   48,   42,   46,   41,   26,   16,
 /*  1080 */   329,  328,   36,   37,  359,  347,   28,   29,  305,  305,
 /*  1090 */   305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
 /*  1100 */   305,  305,  302,  300,  303,  304,  299,  290,  293,  297,
 /*  1110 */   296,  307,  320,  319,  305,  305,  305,    2,  305,  115,
 /*  1120 */   172,  305,  321,  199,  305,  206,  212,  305,  218,   61,
 /*  1130 */   124,  110,  305,  216,  198,  305,  305,   44,  305,  318,
 /*  1140 */   305,  305,  305,  238,  243,  305,  324,  305,  305,  305,
 /*  1150 */   305,   35,  305,  339,   47,   43,  267,  221,  239,  305,
 /*  1160 */   305,   88,    1,  248,  305,  305,    2,  305,  115,  182,
 /*  1170 */   305,  305,  199,  305,  206,  305,   84,  305,  305,  124,
 /*  1180 */   305,  305,  216,  198,  305,  305,   44,  305,  305,  305,
 /*  1190 */   305,  305,  321,  305,  305,  305,  212,  305,  218,   57,
 /*  1200 */    35,  110,  305,   47,   43,  267,  221,  239,  305,  318,
 /*  1210 */    88,    1,  305,  238,  243,    2,  324,  109,  182,  305,
 /*  1220 */   321,  199,  305,  206,  212,   84,  218,   61,  124,  110,
 /*  1230 */   305,  216,  198,  305,  305,   44,  305,  318,  305,  305,
 /*  1240 */   305,  238,  243,  305,  324,  305,  305,  305,  305,   35,
 /*  1250 */   305,  190,   47,   43,  267,  221,  239,  305,  305,   88,
 /*  1260 */     1,  305,  305,  305,    2,  305,  109,  169,  305,  305,
 /*  1270 */   199,  305,  206,  305,   84,  305,  305,  124,  305,  305,
 /*  1280 */   216,  185,  305,  305,   44,  305,  305,  305,  305,  305,
 /*  1290 */   321,  305,  305,  305,  212,  305,  218,   74,   35,  110,
 /*  1300 */   305,   47,   43,  267,  221,  239,  305,  318,   88,    1,
 /*  1310 */   305,  238,  243,    2,  324,  115,  182,  305,  321,  199,
 /*  1320 */   305,  206,  212,   84,  218,   61,  124,  110,  305,  216,
 /*  1330 */   198,  305,  305,   44,  305,  318,  305,  305,  305,  238,
 /*  1340 */   243,  305,  324,  305,  305,  305,  305,   21,  305,  202,
 /*  1350 */    47,   43,  267,  221,  239,  305,  305,   88,    1,  305,
 /*  1360 */   305,  305,    2,  305,  116,   85,  305,  305,  199,  305,
 /*  1370 */   206,  305,   84,  305,  305,  124,  305,  305,  216,  198,
 /*  1380 */   305,  305,   44,  305,  305,  305,  305,  305,  321,  305,
 /*  1390 */   305,  305,  212,  305,  218,   64,   21,  110,  305,   47,
 /*  1400 */    43,  267,  221,  239,  305,  318,   88,    1,  305,  238,
 /*  1410 */   243,    2,  324,  115,  173,  305,  321,  199,  305,  206,
 /*  1420 */   212,   84,  218,   61,  124,  110,  305,  216,  198,  305,
 /*  1430 */   305,   44,  305,  318,  305,  305,  305,  238,  243,  305,
 /*  1440 */   324,  305,  305,  305,  305,   35,  305,  196,   47,   43,
 /*  1450 */   267,  221,  239,  305,  305,   88,    1,  305,  305,  305,
 /*  1460 */     2,  305,  114,  182,  305,  305,  199,  305,  206,  305,
 /*  1470 */    84,  305,  305,  124,  305,  305,  216,  198,  305,  305,
 /*  1480 */    44,  305,  305,  305,  305,  305,  321,  305,  305,  305,
 /*  1490 */   212,  305,  218,   80,   35,  110,  305,   47,   43,  267,
 /*  1500 */   221,  239,  305,  318,   88,    1,  305,  238,  243,    2,
 /*  1510 */   324,  115,  170,  305,  321,  199,  305,  206,  212,   84,
 /*  1520 */   218,   59,  124,  110,  305,  216,  198,  305,  305,   44,
 /*  1530 */   305,  318,  305,  305,  305,  238,  243,  305,  324,  305,
 /*  1540 */   305,  305,  305,   21,  305,  305,   47,   43,  267,  221,
 /*  1550 */   239,  305,  305,   88,    1,  305,  305,  305,    2,  305,
 /*  1560 */   109,  182,  305,  305,  199,  305,  206,  305,   84,  354,
 /*  1570 */   305,  124,  305,    9,  216,  198,  305,  305,   44,  199,
 /*  1580 */   305,  206,  305,  305,  321,  305,  124,  305,  212,  216,
 /*  1590 */   218,   55,   35,  110,  305,   47,   43,  267,  221,  239,
 /*  1600 */   305,  318,   88,  305,  305,  238,  243,    2,  324,  109,
 /*  1610 */   177,  305,  305,  199,  305,  206,  305,   84,  305,  305,
 /*  1620 */   124,  305,  305,  216,  198,  305,  305,   44,  305,  305,
 /*  1630 */   305,  305,  348,   38,  358,  305,  305,  305,  305,  305,
 /*  1640 */   305,   35,  305,  305,   47,   43,  267,  221,  239,  305,
 /*  1650 */   305,   88,  321,  305,  305,  305,  184,  305,  218,   81,
 /*  1660 */   305,  110,  305,  305,  305,  305,   84,  305,  305,  318,
 /*  1670 */   305,  305,  305,  238,  243,  305,  324,  305,  305,  305,
 /*  1680 */   305,  305,  305,  321,  305,  176,  327,  184,  305,  218,
 /*  1690 */    81,  305,  110,  305,  305,  305,  305,  305,  305,  305,
 /*  1700 */   318,  305,  305,  305,  238,  243,  305,  324,  305,  305,
 /*  1710 */   305,  305,  305,  305,  321,  305,  305,  330,  212,  305,
 /*  1720 */   218,   78,  305,  110,  305,  305,  305,  305,  305,  305,
 /*  1730 */   305,  318,  305,  321,  305,  238,  243,  212,  324,  218,
 /*  1740 */    62,  305,  110,  305,  305,  305,  305,  305,  305,  305,
 /*  1750 */   318,  305,  305,  305,  238,  243,  305,  324,  305,  305,
 /*  1760 */   305,  305,  305,  305,  321,  305,  305,  305,  212,  305,
 /*  1770 */   218,   82,  305,  110,  305,  305,  305,  305,  305,  305,
 /*  1780 */   305,  318,  305,  305,  305,  238,  243,  305,  324,  305,
 /*  1790 */   305,  305,  305,  305,  305,  321,  305,  305,  305,  212,
 /*  1800 */   305,  218,   63,  305,  110,  305,  305,  305,  305,  305,
 /*  1810 */   305,  305,  318,  305,  321,  305,  238,  243,  212,  324,
 /*  1820 */   218,   77,  305,  110,  305,  305,  305,  305,  305,  305,
 /*  1830 */   305,  318,  305,  305,  305,  238,  243,  305,  324,  305,
 /*  1840 */   305,  305,  305,  305,  305,  321,  305,  305,  305,  212,
 /*  1850 */   305,  218,   54,  305,  110,  305,  305,  305,  305,  305,
 /*  1860 */   305,  305,  318,  305,  305,  305,  238,  243,  305,  324,
 /*  1870 */   305,  305,  305,  305,  305,  305,  321,  305,  305,  305,
 /*  1880 */   212,  305,  218,   68,  305,  110,  305,  305,  305,  305,
 /*  1890 */   305,  305,  305,  318,  305,  321,  305,  238,  243,  212,
 /*  1900 */   324,  218,   73,  305,  110,  305,  305,  305,  305,  305,
 /*  1910 */   305,  305,  318,  305,  305,  305,  238,  243,  305,  324,
 /*  1920 */   305,  305,  305,  305,  305,  305,  321,  305,  305,  305,
 /*  1930 */   212,  305,  180,   58,  305,  110,  305,  305,  305,  305,
 /*  1940 */   305,  305,  305,  318,  305,  305,  305,  238,  243,  305,
 /*  1950 */   324,  305,  305,  305,  305,  305,  305,  321,  305,  305,
 /*  1960 */   305,  212,  305,  218,   71,  305,  110,  305,  305,  305,
 /*  1970 */   305,  305,  305,  305,  318,  305,  321,  305,  238,  243,
 /*  1980 */   212,  324,  218,   65,  305,  110,  305,  305,  305,  305,
 /*  1990 */   305,  305,  305,  318,  305,  305,  305,  238,  243,  305,
 /*  2000 */   324,  305,  305,  305,  305,  305,  305,  321,  305,  305,
 /*  2010 */   305,  212,  305,  218,   56,  305,  110,  305,  305,  305,
 /*  2020 */   305,  305,  305,  305,  318,  305,  305,  305,  238,  243,
 /*  2030 */   305,  324,  305,  305,  305,  305,  305,  305,  321,  305,
 /*  2040 */   305,  305,  212,  305,  218,   76,  305,  110,  305,  305,
 /*  2050 */   305,  305,  305,  305,  305,  318,  305,  321,  305,  238,
 /*  2060 */   243,  212,  324,  218,   67,  305,  110,  305,  305,  305,
 /*  2070 */   305,  305,  305,  305,  318,  305,  305,  305,  238,  243,
 /*  2080 */   305,  324,  305,  305,  305,  305,  305,  305,  321,  305,
 /*  2090 */   305,  305,  212,  305,  218,   69,  305,  110,  305,  305,
 /*  2100 */   305,  305,  305,  305,  305,  318,  305,  305,  305,  238,
 /*  2110 */   243,  305,  324,  305,  305,  305,  305,  305,  305,  321,
 /*  2120 */   305,  305,  305,  212,  305,  218,   70,  305,  110,  305,
 /*  2130 */   305,  305,  305,  305,  305,  305,  318,  305,  321,  305,
 /*  2140 */   238,  243,  213,  324,  218,  305,  305,  110,  305,  305,
 /*  2150 */   305,  305,  305,  305,  305,  187,  305,  305,  305,  238,
 /*  2160 */   243,  305,  324,  305,  305,  305,  305,  305,  305,  321,
 /*  2170 */   305,  305,  305,  230,  305,  218,  305,  305,  110,  305,
 /*  2180 */   305,  305,  305,  305,  305,  305,  236,  305,  305,  305,
 /*  2190 */   238,  243,  305,  324,  305,  305,  305,  305,  305,  305,
 /*  2200 */   321,  305,  305,  305,  247,  305,  218,  321,  305,  110,
 /*  2210 */   305,  282,  305,  218,  305,  305,  110,  254,  305,  305,
 /*  2220 */   305,  238,  243,  305,  324,  305,  305,  305,  238,  243,
 /*  2230 */   305,  324,  305,  305,  305,  305,  321,  305,  305,  305,
 /*  2240 */   225,  305,  218,  321,  305,  110,  305,  261,  305,  218,
 /*  2250 */   321,  305,  110,  305,  266,  305,  218,  238,  243,  110,
 /*  2260 */   324,  305,  305,  305,  238,  243,  305,  324,  305,  305,
 /*  2270 */   305,  238,  243,  305,  324,  305,  305,  305,  305,  305,
 /*  2280 */   305,  321,  305,  305,  305,  233,  305,  218,  321,  305,
 /*  2290 */   110,  305,  228,  305,  218,  305,  305,  110,  305,  305,
 /*  2300 */   305,  305,  238,  243,  181,  324,  305,  305,  305,  238,
 /*  2310 */   243,  305,  324,  305,  305,  305,  305,  321,  306,  305,
 /*  2320 */   305,  258,  201,  218,  183,  305,  110,  305,  305,  305,
 /*  2330 */   305,  305,  305,  305,  305,  305,  305,  305,  238,  243,
 /*  2340 */   305,  324,  305,  305,  305,  305,  305,  305,  305,  305,
 /*  2350 */   305,    3,  305,  305,  305,  305,  305,  305,  305,  112,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   79,   80,   81,    3,    4,    5,    6,    7,    8,
 /*    10 */     9,   10,   11,    2,   15,   14,   16,   17,   48,   48,
 /*    20 */    21,   20,   14,   22,   54,   15,   56,   56,   27,   18,
 /*    30 */    60,   30,   33,   34,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,    4,    5,   14,   91,
 /*    50 */     8,   17,   18,   11,   12,   13,   48,   47,   58,   16,
 /*    60 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,    1,   80,   15,   14,   15,   84,   17,   86,
 /*    80 */    87,   88,   89,   85,   14,   15,   15,   17,   90,   17,
 /*    90 */    97,   57,   21,   91,  101,  102,   98,  104,   77,   78,
 /*   100 */    79,   80,   81,   31,   33,   34,   35,   36,   37,   38,
 /*   110 */    39,   40,   41,   42,   43,   44,   45,   46,   81,   14,
 /*   120 */    83,   14,   17,   18,   17,   18,  108,  109,   14,   24,
 /*   130 */    16,   17,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   140 */    69,   70,   71,   72,    1,   31,   80,   24,   86,   48,
 /*   150 */    84,   89,   86,   87,   15,   89,   14,   15,   92,   17,
 /*   160 */    21,   85,   18,   97,   21,   49,  104,  101,  102,   26,
 /*   170 */   104,   29,   28,  105,   98,  107,   33,   34,   35,   36,
 /*   180 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   190 */    23,  106,   48,  108,  109,   15,   15,   74,   28,   32,
 /*   200 */    56,   21,   21,   16,   61,   62,   63,   64,   65,   66,
 /*   210 */    67,   68,   69,   70,   71,   72,    1,   80,   32,   17,
 /*   220 */    85,   84,   29,   86,   87,   88,   89,   47,   14,   48,
 /*   230 */    85,   17,   19,   98,   97,   90,   21,   56,  101,  102,
 /*   240 */    47,  104,   18,   98,   99,  100,   60,  112,   33,   34,
 /*   250 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   260 */    45,   46,    1,   54,   15,   17,   14,   54,   59,   17,
 /*   270 */    21,   57,   59,   24,   18,   19,   61,   62,   63,   64,
 /*   280 */    65,   66,   67,   68,   69,   70,   71,   72,  105,   14,
 /*   290 */   107,   29,   17,   32,   33,   34,   35,   36,   37,   38,
 /*   300 */    39,   40,   41,   42,   43,   44,   45,   46,    1,   57,
 /*   310 */    48,   15,   56,   14,   16,   16,   17,   21,   56,   17,
 /*   320 */    24,   85,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   330 */    69,   70,   71,   72,   98,   14,   92,   93,   17,    2,
 /*   340 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*   350 */    43,   44,   45,   46,    1,   90,   15,   15,   21,   57,
 /*   360 */     1,   17,   21,   21,   99,  100,   80,   60,   61,   62,
 /*   370 */    63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
 /*   380 */    21,   14,   14,   28,   17,   17,   33,   34,   35,   36,
 /*   390 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   400 */     1,  115,  116,   15,    2,  108,  109,   47,   24,   21,
 /*   410 */    18,   80,   16,   85,   61,   62,   63,   64,   65,   66,
 /*   420 */    67,   68,   69,   70,   71,   72,   98,   74,   16,   17,
 /*   430 */    48,   15,   33,   34,   35,   36,   37,   38,   39,   40,
 /*   440 */    41,   42,   43,   44,   45,   46,   54,  116,   49,   15,
 /*   450 */    15,   15,   15,   15,  105,   21,   21,   21,   21,   21,
 /*   460 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   470 */    71,   72,    1,   80,   31,   85,   85,   84,   16,   86,
 /*   480 */    87,   88,   89,   47,   14,   15,   15,   17,   98,   98,
 /*   490 */    97,   31,   15,   17,  101,  102,   17,  104,   21,   29,
 /*   500 */    17,   21,  112,  112,   33,   34,   35,   36,   37,   38,
 /*   510 */    39,   40,   41,   42,   43,   44,   45,   46,   85,   15,
 /*   520 */    54,   15,   15,   90,   15,   21,   25,   21,   21,   60,
 /*   530 */    21,   98,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   540 */    69,   70,   71,   72,    1,   80,   50,   49,   95,   84,
 /*   550 */    15,   86,   87,   88,   89,   15,   21,   15,   15,   85,
 /*   560 */   107,   21,   97,   21,   90,   17,  101,  102,   49,  104,
 /*   570 */    18,   17,   98,   99,  100,   58,   33,   34,   35,   36,
 /*   580 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   590 */    85,   96,  103,  103,   21,   90,   19,   17,   15,  110,
 /*   600 */   110,   98,  107,   98,   61,   62,   63,   64,   65,   66,
 /*   610 */    67,   68,   69,   70,   71,   72,    1,   80,   58,  106,
 /*   620 */    95,   84,   21,   86,   87,   88,   89,  105,   95,   85,
 /*   630 */    15,   85,  107,   56,   97,   16,   90,   19,  101,  102,
 /*   640 */   107,  104,   98,  109,   98,   99,  100,   21,   33,   34,
 /*   650 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   660 */    45,   46,    1,    2,    2,  107,  110,  112,   21,   82,
 /*   670 */    12,  105,   94,   91,  105,   85,   61,   62,   63,   64,
 /*   680 */    65,   66,   67,   68,   69,   70,   71,   72,   98,   91,
 /*   690 */    94,   92,  117,  117,   33,   34,   35,   36,   37,   38,
 /*   700 */    39,   40,   41,   42,   43,   44,   45,   46,   95,   95,
 /*   710 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   720 */   107,  107,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   730 */    69,   70,   71,   72,    1,   95,  117,   80,   95,  117,
 /*   740 */    95,   84,  117,   86,   87,   10,   89,  107,   15,   14,
 /*   750 */   107,   95,  107,  117,   97,   20,  117,   22,  101,  102,
 /*   760 */   117,  104,   27,  107,  117,   30,   33,   34,   35,   36,
 /*   770 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   780 */    85,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   790 */   117,  117,  117,   98,   61,   62,   63,   64,   65,   66,
 /*   800 */    67,   68,   69,   70,   71,   72,    1,   80,   73,   74,
 /*   810 */    75,   84,    1,   86,   87,  117,   89,  117,  117,  117,
 /*   820 */    15,   95,  117,  117,   97,  117,   15,  117,  101,  102,
 /*   830 */    19,  104,   21,  107,  117,  117,  117,  117,   33,   34,
 /*   840 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   850 */    45,   46,    1,  117,  117,  117,  117,  117,  117,  117,
 /*   860 */   117,  117,  117,  117,  117,  117,   61,   62,   63,   64,
 /*   870 */    65,   66,   67,   68,   69,   70,   71,   72,  117,  117,
 /*   880 */   117,  117,  117,  117,   33,   34,   35,   36,   37,   38,
 /*   890 */    39,   40,   41,   42,   43,   44,   45,   46,  117,  117,
 /*   900 */    49,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   910 */   117,  117,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   920 */    69,   70,   71,   72,    1,   80,  117,  117,  117,   84,
 /*   930 */   117,   86,   87,  117,   89,  117,  117,  117,   15,  117,
 /*   940 */   117,  117,   97,  117,  117,  117,  101,  102,  117,  104,
 /*   950 */   117,  117,  117,  117,  117,  117,   33,   34,   35,   36,
 /*   960 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   970 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   980 */   117,  117,  117,  117,   61,   62,   63,   64,   65,   66,
 /*   990 */    67,   68,   69,   70,   71,   72,    1,  117,   80,  117,
 /*  1000 */   117,  117,   84,  117,   86,   87,  117,   89,  117,  117,
 /*  1010 */   117,   85,  117,  117,  117,   97,   90,  117,   23,  101,
 /*  1020 */   102,  117,  104,  117,   98,   99,  100,  117,   33,   34,
 /*  1030 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  1040 */    45,   46,    1,  117,  117,  117,  117,  117,  117,  117,
 /*  1050 */   117,  117,  117,  117,  117,  117,   61,   62,   63,   64,
 /*  1060 */    65,   66,   67,   68,   69,   70,   71,   72,  117,  117,
 /*  1070 */   117,  117,  117,  117,   33,   34,   35,   36,   37,   38,
 /*  1080 */    39,   40,   41,   42,   43,   44,   45,   46,  117,  117,
 /*  1090 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  1100 */   117,  117,   61,   62,   63,   64,   65,   66,   67,   68,
 /*  1110 */    69,   70,   71,   72,  117,  117,  117,   14,  117,   16,
 /*  1120 */    17,  117,   80,   20,  117,   22,   84,  117,   86,   87,
 /*  1130 */    27,   89,  117,   30,   31,  117,  117,   34,  117,   97,
 /*  1140 */   117,  117,  117,  101,  102,  117,  104,  117,  117,  117,
 /*  1150 */   117,   48,  117,  111,   51,   52,   53,   54,   55,  117,
 /*  1160 */   117,   58,   59,   60,  117,  117,   14,  117,   16,   17,
 /*  1170 */   117,  117,   20,  117,   22,  117,   73,  117,  117,   27,
 /*  1180 */   117,  117,   30,   31,  117,  117,   34,  117,  117,  117,
 /*  1190 */   117,  117,   80,  117,  117,  117,   84,  117,   86,   87,
 /*  1200 */    48,   89,  117,   51,   52,   53,   54,   55,  117,   97,
 /*  1210 */    58,   59,  117,  101,  102,   14,  104,   16,   17,  117,
 /*  1220 */    80,   20,  117,   22,   84,   73,   86,   87,   27,   89,
 /*  1230 */   117,   30,   31,  117,  117,   34,  117,   97,  117,  117,
 /*  1240 */   117,  101,  102,  117,  104,  117,  117,  117,  117,   48,
 /*  1250 */   117,  111,   51,   52,   53,   54,   55,  117,  117,   58,
 /*  1260 */    59,  117,  117,  117,   14,  117,   16,   17,  117,  117,
 /*  1270 */    20,  117,   22,  117,   73,  117,  117,   27,  117,  117,
 /*  1280 */    30,   31,  117,  117,   34,  117,  117,  117,  117,  117,
 /*  1290 */    80,  117,  117,  117,   84,  117,   86,   87,   48,   89,
 /*  1300 */   117,   51,   52,   53,   54,   55,  117,   97,   58,   59,
 /*  1310 */   117,  101,  102,   14,  104,   16,   17,  117,   80,   20,
 /*  1320 */   117,   22,   84,   73,   86,   87,   27,   89,  117,   30,
 /*  1330 */    31,  117,  117,   34,  117,   97,  117,  117,  117,  101,
 /*  1340 */   102,  117,  104,  117,  117,  117,  117,   48,  117,  111,
 /*  1350 */    51,   52,   53,   54,   55,  117,  117,   58,   59,  117,
 /*  1360 */   117,  117,   14,  117,   16,   17,  117,  117,   20,  117,
 /*  1370 */    22,  117,   73,  117,  117,   27,  117,  117,   30,   31,
 /*  1380 */   117,  117,   34,  117,  117,  117,  117,  117,   80,  117,
 /*  1390 */   117,  117,   84,  117,   86,   87,   48,   89,  117,   51,
 /*  1400 */    52,   53,   54,   55,  117,   97,   58,   59,  117,  101,
 /*  1410 */   102,   14,  104,   16,   17,  117,   80,   20,  117,   22,
 /*  1420 */    84,   73,   86,   87,   27,   89,  117,   30,   31,  117,
 /*  1430 */   117,   34,  117,   97,  117,  117,  117,  101,  102,  117,
 /*  1440 */   104,  117,  117,  117,  117,   48,  117,  111,   51,   52,
 /*  1450 */    53,   54,   55,  117,  117,   58,   59,  117,  117,  117,
 /*  1460 */    14,  117,   16,   17,  117,  117,   20,  117,   22,  117,
 /*  1470 */    73,  117,  117,   27,  117,  117,   30,   31,  117,  117,
 /*  1480 */    34,  117,  117,  117,  117,  117,   80,  117,  117,  117,
 /*  1490 */    84,  117,   86,   87,   48,   89,  117,   51,   52,   53,
 /*  1500 */    54,   55,  117,   97,   58,   59,  117,  101,  102,   14,
 /*  1510 */   104,   16,   17,  117,   80,   20,  117,   22,   84,   73,
 /*  1520 */    86,   87,   27,   89,  117,   30,   31,  117,  117,   34,
 /*  1530 */   117,   97,  117,  117,  117,  101,  102,  117,  104,  117,
 /*  1540 */   117,  117,  117,   48,  117,  117,   51,   52,   53,   54,
 /*  1550 */    55,  117,  117,   58,   59,  117,  117,  117,   14,  117,
 /*  1560 */    16,   17,  117,  117,   20,  117,   22,  117,   73,   10,
 /*  1570 */   117,   27,  117,   14,   30,   31,  117,  117,   34,   20,
 /*  1580 */   117,   22,  117,  117,   80,  117,   27,  117,   84,   30,
 /*  1590 */    86,   87,   48,   89,  117,   51,   52,   53,   54,   55,
 /*  1600 */   117,   97,   58,  117,  117,  101,  102,   14,  104,   16,
 /*  1610 */    17,  117,  117,   20,  117,   22,  117,   73,  117,  117,
 /*  1620 */    27,  117,  117,   30,   31,  117,  117,   34,  117,  117,
 /*  1630 */   117,  117,   73,   74,   75,  117,  117,  117,  117,  117,
 /*  1640 */   117,   48,  117,  117,   51,   52,   53,   54,   55,  117,
 /*  1650 */   117,   58,   80,  117,  117,  117,   84,  117,   86,   87,
 /*  1660 */   117,   89,  117,  117,  117,  117,   73,  117,  117,   97,
 /*  1670 */   117,  117,  117,  101,  102,  117,  104,  117,  117,  117,
 /*  1680 */   117,  117,  117,   80,  117,  113,  114,   84,  117,   86,
 /*  1690 */    87,  117,   89,  117,  117,  117,  117,  117,  117,  117,
 /*  1700 */    97,  117,  117,  117,  101,  102,  117,  104,  117,  117,
 /*  1710 */   117,  117,  117,  117,   80,  117,  117,  114,   84,  117,
 /*  1720 */    86,   87,  117,   89,  117,  117,  117,  117,  117,  117,
 /*  1730 */   117,   97,  117,   80,  117,  101,  102,   84,  104,   86,
 /*  1740 */    87,  117,   89,  117,  117,  117,  117,  117,  117,  117,
 /*  1750 */    97,  117,  117,  117,  101,  102,  117,  104,  117,  117,
 /*  1760 */   117,  117,  117,  117,   80,  117,  117,  117,   84,  117,
 /*  1770 */    86,   87,  117,   89,  117,  117,  117,  117,  117,  117,
 /*  1780 */   117,   97,  117,  117,  117,  101,  102,  117,  104,  117,
 /*  1790 */   117,  117,  117,  117,  117,   80,  117,  117,  117,   84,
 /*  1800 */   117,   86,   87,  117,   89,  117,  117,  117,  117,  117,
 /*  1810 */   117,  117,   97,  117,   80,  117,  101,  102,   84,  104,
 /*  1820 */    86,   87,  117,   89,  117,  117,  117,  117,  117,  117,
 /*  1830 */   117,   97,  117,  117,  117,  101,  102,  117,  104,  117,
 /*  1840 */   117,  117,  117,  117,  117,   80,  117,  117,  117,   84,
 /*  1850 */   117,   86,   87,  117,   89,  117,  117,  117,  117,  117,
 /*  1860 */   117,  117,   97,  117,  117,  117,  101,  102,  117,  104,
 /*  1870 */   117,  117,  117,  117,  117,  117,   80,  117,  117,  117,
 /*  1880 */    84,  117,   86,   87,  117,   89,  117,  117,  117,  117,
 /*  1890 */   117,  117,  117,   97,  117,   80,  117,  101,  102,   84,
 /*  1900 */   104,   86,   87,  117,   89,  117,  117,  117,  117,  117,
 /*  1910 */   117,  117,   97,  117,  117,  117,  101,  102,  117,  104,
 /*  1920 */   117,  117,  117,  117,  117,  117,   80,  117,  117,  117,
 /*  1930 */    84,  117,   86,   87,  117,   89,  117,  117,  117,  117,
 /*  1940 */   117,  117,  117,   97,  117,  117,  117,  101,  102,  117,
 /*  1950 */   104,  117,  117,  117,  117,  117,  117,   80,  117,  117,
 /*  1960 */   117,   84,  117,   86,   87,  117,   89,  117,  117,  117,
 /*  1970 */   117,  117,  117,  117,   97,  117,   80,  117,  101,  102,
 /*  1980 */    84,  104,   86,   87,  117,   89,  117,  117,  117,  117,
 /*  1990 */   117,  117,  117,   97,  117,  117,  117,  101,  102,  117,
 /*  2000 */   104,  117,  117,  117,  117,  117,  117,   80,  117,  117,
 /*  2010 */   117,   84,  117,   86,   87,  117,   89,  117,  117,  117,
 /*  2020 */   117,  117,  117,  117,   97,  117,  117,  117,  101,  102,
 /*  2030 */   117,  104,  117,  117,  117,  117,  117,  117,   80,  117,
 /*  2040 */   117,  117,   84,  117,   86,   87,  117,   89,  117,  117,
 /*  2050 */   117,  117,  117,  117,  117,   97,  117,   80,  117,  101,
 /*  2060 */   102,   84,  104,   86,   87,  117,   89,  117,  117,  117,
 /*  2070 */   117,  117,  117,  117,   97,  117,  117,  117,  101,  102,
 /*  2080 */   117,  104,  117,  117,  117,  117,  117,  117,   80,  117,
 /*  2090 */   117,  117,   84,  117,   86,   87,  117,   89,  117,  117,
 /*  2100 */   117,  117,  117,  117,  117,   97,  117,  117,  117,  101,
 /*  2110 */   102,  117,  104,  117,  117,  117,  117,  117,  117,   80,
 /*  2120 */   117,  117,  117,   84,  117,   86,   87,  117,   89,  117,
 /*  2130 */   117,  117,  117,  117,  117,  117,   97,  117,   80,  117,
 /*  2140 */   101,  102,   84,  104,   86,  117,  117,   89,  117,  117,
 /*  2150 */   117,  117,  117,  117,  117,   97,  117,  117,  117,  101,
 /*  2160 */   102,  117,  104,  117,  117,  117,  117,  117,  117,   80,
 /*  2170 */   117,  117,  117,   84,  117,   86,  117,  117,   89,  117,
 /*  2180 */   117,  117,  117,  117,  117,  117,   97,  117,  117,  117,
 /*  2190 */   101,  102,  117,  104,  117,  117,  117,  117,  117,  117,
 /*  2200 */    80,  117,  117,  117,   84,  117,   86,   80,  117,   89,
 /*  2210 */   117,   84,  117,   86,  117,  117,   89,   97,  117,  117,
 /*  2220 */   117,  101,  102,  117,  104,  117,  117,  117,  101,  102,
 /*  2230 */   117,  104,  117,  117,  117,  117,   80,  117,  117,  117,
 /*  2240 */    84,  117,   86,   80,  117,   89,  117,   84,  117,   86,
 /*  2250 */    80,  117,   89,  117,   84,  117,   86,  101,  102,   89,
 /*  2260 */   104,  117,  117,  117,  101,  102,  117,  104,  117,  117,
 /*  2270 */   117,  101,  102,  117,  104,  117,  117,  117,  117,  117,
 /*  2280 */   117,   80,  117,  117,  117,   84,  117,   86,   80,  117,
 /*  2290 */    89,  117,   84,  117,   86,  117,  117,   89,  117,  117,
 /*  2300 */   117,  117,  101,  102,    1,  104,  117,  117,  117,  101,
 /*  2310 */   102,  117,  104,  117,  117,  117,  117,   80,   15,  117,
 /*  2320 */   117,   84,   19,   86,   21,  117,   89,  117,  117,  117,
 /*  2330 */   117,  117,  117,  117,  117,  117,  117,  117,  101,  102,
 /*  2340 */   117,  104,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  2350 */   117,   48,  117,  117,  117,  117,  117,  117,  117,   56,
);
    const YY_SHIFT_USE_DFLT = -31;
    const YY_SHIFT_MAX = 224;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1397, 1348, 1152, 1152, 1299, 1397, 1446, 1152, 1348,
 /*    10 */  1299, 1152, 1495, 1103, 1152, 1152, 1152, 1152, 1152, 1152,
 /*    20 */  1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
 /*    30 */  1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1201,
 /*    40 */  1250, 1201, 1544, 1544, 1544, 1593, 1544, 1544, 1544,  143,
 /*    50 */    71,   -1,  215,  215,  851,  307,  805,  995,  353,  661,
 /*    60 */   399,  261,  733,  923,  543,  471,  615, 1041, 1041, 1041,
 /*    70 */  1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041,
 /*    80 */  1041, 1041, 1041,    1, 1559, 2303,  811,  213,    0,  337,
 /*    90 */   337,  359,  337,  735,   42,  105,   34,  296,  252,  256,
 /*   100 */   436,  249,  275,  275,  275,  275,  275,  321,  275,  275,
 /*   110 */   577,  412,  412,  275,  367,  367,  368,  275,  601,  618,
 /*   120 */   619,  601,  601,  618,  626,  470,  142,   70,  214,  299,
 /*   130 */   107,   61,  139,  542,  506,  504,  507,  540,  209,  535,
 /*   140 */   509,  477,  209,  388,  342,  209,  435,    8,  438,  209,
 /*   150 */   209,  437,  341,  434,  618,  662,  619,  618,  101,  658,
 /*   160 */   618,  647,  647,  -31,  -31,  -31,  -31,  -31,  -31,  144,
 /*   170 */   181,  114,  -30,  262,  180,  167,  186,  -29,   10,   11,
 /*   180 */   123,  302,  -29,   72,  193,  392,  101,  170,   59,  202,
 /*   190 */   116,  187,   43,  224,  583,  501,  498,  469,  466,  480,
 /*   200 */   496,  548,  519,  580,  560,  517,  573,  552,  554,  483,
 /*   210 */   479,  402,  360,  355,  396,  248,  344,  298,  384,  382,
 /*   220 */   476,  460,  462,  443,  416,
);
    const YY_REDUCE_USE_DFLT = -79;
    const YY_REDUCE_MAX = 168;
    static public $yy_reduce_ofst = array(
 /*     0 */    21, 1572,   -7, 1336, 1238,  537, 1603,   66, 1140,  137,
 /*    10 */   393, 1042,  465, 1504, 1634, 1653, 1684, 1434, 1406,  845,
 /*    20 */   727,  918, 1112, 1308, 1210, 1715, 1734, 1927, 1958, 1977,
 /*    30 */  2008,  657, 2039, 1896, 1877, 1765, 1796, 1815, 1846, 2089,
 /*    40 */  2058, 2120, 2127, 2237, 2201, 2156, 2208, 2163, 2170,  546,
 /*    50 */   474,  145,  145,  926,  265,  265,  265,  265,  265,  265,
 /*    60 */   265,  265,  265,  265,  265,  265,  265,  265,  265,  265,
 /*    70 */   265,  265,  265,  265,  265,  265,  265,  265,  265,  265,
 /*    80 */   265,  265,  265,  -78,  286,  505,   -2,   85,   62,  135,
 /*    90 */   391,  433,  390,  331,   37,  495,   68,  544,   68,   18,
 /*   100 */   590,  544,  533,  525,  613,  640,  614,  645,  183,  656,
 /*   110 */    18,  489,  490,  726,  643,  656,  656,  453,  695,  297,
 /*   120 */   244,  328,  236,   18,   76,  558,  558,  558,  558,  556,
 /*   130 */   558,  558,  503,  503,  503,  503,  503,  503,  513,  503,
 /*   140 */   503,  503,  513,  503,  503,  513,  503,  522,  503,  513,
 /*   150 */   513,  503,  503,  503,  534,  555,  599,  534,  566,  587,
 /*   160 */   534,  578,  596,  598,  569,  582,  349,  -42,    2,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 20, 22, 27, 30, ),
        /* 1 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 2 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 3 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 4 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 5 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 6 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 7 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 8 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 9 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 10 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 11 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 12 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 13 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 60, 73, ),
        /* 14 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 15 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 16 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 17 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 18 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 19 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 20 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 21 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 22 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 23 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 24 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 25 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 26 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 27 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 28 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 29 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 30 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 31 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 32 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 33 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 34 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 35 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 36 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 37 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 38 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 39 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 40 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 41 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 42 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 43 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 44 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 45 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 46 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 47 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 48 */ array(14, 16, 17, 20, 22, 27, 30, 31, 34, 48, 51, 52, 53, 54, 55, 58, 73, ),
        /* 49 */ array(1, 21, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 50 */ array(1, 15, 21, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 51 */ array(1, 15, 21, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 52 */ array(1, 21, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 53 */ array(1, 21, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 54 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 55 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 56 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 57 */ array(1, 23, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 58 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, ),
        /* 59 */ array(1, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 60 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 61 */ array(1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 62 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 63 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 64 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 65 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 66 */ array(1, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 67 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 68 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 69 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 70 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 71 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 72 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 73 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 74 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 75 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 76 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 77 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 78 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 79 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 80 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 81 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 82 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 83 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 20, 22, 27, 30, ),
        /* 84 */ array(10, 14, 20, 22, 27, 30, 73, 74, 75, ),
        /* 85 */ array(1, 15, 19, 21, 48, 56, ),
        /* 86 */ array(1, 15, 19, 21, ),
        /* 87 */ array(19, 54, 59, ),
        /* 88 */ array(16, 17, 58, ),
        /* 89 */ array(2, 21, ),
        /* 90 */ array(2, 21, ),
        /* 91 */ array(1, 21, ),
        /* 92 */ array(2, 21, ),
        /* 93 */ array(10, 14, 20, 22, 27, 30, 73, 74, 75, ),
        /* 94 */ array(4, 5, 8, 11, 12, 13, ),
        /* 95 */ array(14, 17, 18, 24, ),
        /* 96 */ array(14, 17, 18, 57, ),
        /* 97 */ array(15, 21, 24, ),
        /* 98 */ array(14, 17, 57, ),
        /* 99 */ array(18, 19, 56, ),
        /* 100 */ array(15, 21, 47, ),
        /* 101 */ array(15, 21, 24, ),
        /* 102 */ array(14, 17, ),
        /* 103 */ array(14, 17, ),
        /* 104 */ array(14, 17, ),
        /* 105 */ array(14, 17, ),
        /* 106 */ array(14, 17, ),
        /* 107 */ array(14, 17, ),
        /* 108 */ array(14, 17, ),
        /* 109 */ array(14, 17, ),
        /* 110 */ array(19, 56, ),
        /* 111 */ array(16, 17, ),
        /* 112 */ array(16, 17, ),
        /* 113 */ array(14, 17, ),
        /* 114 */ array(14, 17, ),
        /* 115 */ array(14, 17, ),
        /* 116 */ array(14, 17, ),
        /* 117 */ array(14, 17, ),
        /* 118 */ array(21, ),
        /* 119 */ array(19, ),
        /* 120 */ array(16, ),
        /* 121 */ array(21, ),
        /* 122 */ array(21, ),
        /* 123 */ array(19, ),
        /* 124 */ array(21, ),
        /* 125 */ array(14, 15, 17, 29, ),
        /* 126 */ array(14, 15, 17, 29, ),
        /* 127 */ array(14, 15, 17, ),
        /* 128 */ array(14, 17, 57, ),
        /* 129 */ array(14, 16, 17, ),
        /* 130 */ array(14, 17, 18, ),
        /* 131 */ array(14, 15, 17, ),
        /* 132 */ array(15, 21, ),
        /* 133 */ array(15, 21, ),
        /* 134 */ array(15, 21, ),
        /* 135 */ array(15, 21, ),
        /* 136 */ array(15, 21, ),
        /* 137 */ array(15, 21, ),
        /* 138 */ array(54, 59, ),
        /* 139 */ array(15, 21, ),
        /* 140 */ array(15, 21, ),
        /* 141 */ array(15, 21, ),
        /* 142 */ array(54, 59, ),
        /* 143 */ array(15, 21, ),
        /* 144 */ array(15, 21, ),
        /* 145 */ array(54, 59, ),
        /* 146 */ array(15, 21, ),
        /* 147 */ array(14, 48, ),
        /* 148 */ array(15, 21, ),
        /* 149 */ array(54, 59, ),
        /* 150 */ array(54, 59, ),
        /* 151 */ array(15, 21, ),
        /* 152 */ array(15, 21, ),
        /* 153 */ array(15, 21, ),
        /* 154 */ array(19, ),
        /* 155 */ array(2, ),
        /* 156 */ array(16, ),
        /* 157 */ array(19, ),
        /* 158 */ array(48, ),
        /* 159 */ array(12, ),
        /* 160 */ array(19, ),
        /* 161 */ array(21, ),
        /* 162 */ array(21, ),
        /* 163 */ array(),
        /* 164 */ array(),
        /* 165 */ array(),
        /* 166 */ array(),
        /* 167 */ array(),
        /* 168 */ array(),
        /* 169 */ array(18, 28, 48, 56, ),
        /* 170 */ array(15, 21, 48, 56, ),
        /* 171 */ array(14, 16, 17, 31, ),
        /* 172 */ array(48, 54, 56, 60, ),
        /* 173 */ array(29, 48, 56, ),
        /* 174 */ array(15, 21, 47, ),
        /* 175 */ array(23, 32, ),
        /* 176 */ array(32, 60, ),
        /* 177 */ array(48, 56, ),
        /* 178 */ array(15, 47, ),
        /* 179 */ array(2, 18, ),
        /* 180 */ array(24, 74, ),
        /* 181 */ array(17, 57, ),
        /* 182 */ array(48, 56, ),
        /* 183 */ array(17, 31, ),
        /* 184 */ array(29, 47, ),
        /* 185 */ array(18, 54, ),
        /* 186 */ array(48, ),
        /* 187 */ array(28, ),
        /* 188 */ array(15, ),
        /* 189 */ array(17, ),
        /* 190 */ array(49, ),
        /* 191 */ array(16, ),
        /* 192 */ array(16, ),
        /* 193 */ array(18, ),
        /* 194 */ array(15, ),
        /* 195 */ array(25, ),
        /* 196 */ array(49, ),
        /* 197 */ array(60, ),
        /* 198 */ array(54, ),
        /* 199 */ array(21, ),
        /* 200 */ array(50, ),
        /* 201 */ array(17, ),
        /* 202 */ array(49, ),
        /* 203 */ array(17, ),
        /* 204 */ array(58, ),
        /* 205 */ array(58, ),
        /* 206 */ array(21, ),
        /* 207 */ array(18, ),
        /* 208 */ array(17, ),
        /* 209 */ array(17, ),
        /* 210 */ array(17, ),
        /* 211 */ array(2, ),
        /* 212 */ array(47, ),
        /* 213 */ array(28, ),
        /* 214 */ array(16, ),
        /* 215 */ array(17, ),
        /* 216 */ array(17, ),
        /* 217 */ array(16, ),
        /* 218 */ array(24, ),
        /* 219 */ array(48, ),
        /* 220 */ array(17, ),
        /* 221 */ array(31, ),
        /* 222 */ array(16, ),
        /* 223 */ array(31, ),
        /* 224 */ array(15, ),
        /* 225 */ array(),
        /* 226 */ array(),
        /* 227 */ array(),
        /* 228 */ array(),
        /* 229 */ array(),
        /* 230 */ array(),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
);
    static public $yy_default = array(
 /*     0 */   548,  531,  548,  504,  504,  548,  548,  548,  504,  548,
 /*    10 */   548,  504,  548,  548,  548,  548,  548,  548,  548,  548,
 /*    20 */   548,  548,  548,  548,  548,  548,  548,  548,  548,  548,
 /*    30 */   548,  548,  548,  548,  548,  548,  548,  548,  548,  548,
 /*    40 */   548,  548,  548,  548,  548,  548,  548,  548,  548,  418,
 /*    50 */   548,  548,  418,  418,  548,  548,  548,  548,  548,  548,
 /*    60 */   548,  503,  548,  548,  548,  548,  548,  448,  443,  533,
 /*    70 */   424,  427,  420,  444,  532,  435,  447,  439,  438,  403,
 /*    80 */   451,  534,  440,  362,  548,  462,  548,  510,  548,  418,
 /*    90 */   418,  418,  418,  548,  548,  548,  477,  452,  477,  470,
 /*   100 */   428,  452,  548,  548,  548,  548,  548,  548,  477,  548,
 /*   110 */   470,  548,  548,  548,  548,  548,  548,  548,  418,  507,
 /*   120 */   548,  418,  418,  470,  418,  548,  548,  548,  478,  548,
 /*   130 */   548,  548,  548,  548,  548,  548,  548,  548,  494,  548,
 /*   140 */   548,  548,  497,  548,  548,  495,  548,  477,  548,  496,
 /*   150 */   475,  548,  548,  548,  508,  434,  548,  511,  477,  378,
 /*   160 */   491,  547,  547,  513,  477,  513,  477,  513,  513,  423,
 /*   170 */   462,  548,  462,  462,  428,  548,  548,  449,  428,  489,
 /*   180 */   452,  548,  462,  548,  428,  458,  489,  548,  548,  548,
 /*   190 */   548,  548,  548,  548,  548,  425,  548,  548,  458,  548,
 /*   200 */   464,  548,  548,  548,  548,  548,  548,  423,  548,  548,
 /*   210 */   548,  489,  428,  548,  548,  548,  548,  548,  452,  509,
 /*   220 */   548,  548,  548,  460,  548,  450,  499,  482,  432,  459,
 /*   230 */   514,  415,  374,  453,  456,  464,  515,  500,  463,  465,
 /*   240 */   364,  474,  473,  466,  363,  468,  485,  437,  486,  417,
 /*   250 */   512,  484,  414,  483,  436,  490,  422,  370,  455,  369,
 /*   260 */   371,  454,  426,  461,  368,  467,  430,  457,  406,  366,
 /*   270 */   405,  367,  365,  546,  410,  498,  479,  487,  480,  401,
 /*   280 */   476,  471,  431,  404,  372,  373,  411,  429,  481,  501,
 /*   290 */   521,  394,  492,  522,  393,  385,  524,  523,  384,  520,
 /*   300 */   517,  397,  516,  518,  519,  395,  396,  525,  416,  389,
 /*   310 */   390,  391,  386,  542,  543,  387,  402,  493,  433,  527,
 /*   320 */   526,  469,  400,  392,  472,  506,  505,  529,  442,  441,
 /*   330 */   530,  379,  380,  528,  409,  488,  388,  375,  412,  502,
 /*   340 */   489,  377,  376,  381,  408,  536,  537,  446,  535,  398,
 /*   350 */   399,  407,  383,  540,  545,  538,  382,  544,  541,  445,
 /*   360 */   539,  413,
);
    const YYNOCODE = 118;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 362;
    const YYNRULE = 186;
    const YYERRORSYMBOL = 76;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',   
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'RDEL',        
  'DOLLAR',        'ID',            'EQUAL',         'PTR',         
  'LDELIF',        'SPACE',         'LDELFOR',       'SEMICOLON',   
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH', 
  'AS',            'APTR',          'LDELSLASH',     'INTEGER',     
  'COMMA',         'MATH',          'UNIMATH',       'ANDSYM',      
  'ISIN',          'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',      
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',       
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',  
  'OPENP',         'CLOSEP',        'QMARK',         'NOT',         
  'TYPECAST',      'HEX',           'DOT',           'SINGLEQUOTESTRING',
  'DOUBLECOLON',   'AT',            'HATCH',         'OPENB',       
  'CLOSEB',        'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',         
  'LXOR',          'QUOTE',         'BACKTICK',      'DOLLARID',    
  'error',         'start',         'template',      'template_element',
  'smartytag',     'literal',       'literal_elements',  'literal_element',
  'value',         'attributes',    'variable',      'expr',        
  'ternary',       'varindexed',    'modifier',      'modparameters',
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'attribute',     'ifcond',      
  'lop',           'function',      'doublequoted_with_quotes',  'static_class_access',
  'object',        'arrayindex',    'indexdef',      'varvarele',   
  'objectchain',   'objectelement',  'method',        'params',      
  'modparameter',  'arrayelements',  'arrayelement',  'doublequoted',
  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG",
 /*   7 */ "template_element ::= PHPENDTAG",
 /*   8 */ "template_element ::= ASPSTARTTAG",
 /*   9 */ "template_element ::= ASPENDTAG",
 /*  10 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  11 */ "template_element ::= XMLTAG",
 /*  12 */ "template_element ::= OTHER",
 /*  13 */ "literal ::= LITERALSTART LITERALEND",
 /*  14 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  15 */ "literal_elements ::= literal_elements literal_element",
 /*  16 */ "literal_elements ::=",
 /*  17 */ "literal_element ::= literal",
 /*  18 */ "literal_element ::= LITERAL",
 /*  19 */ "literal_element ::= PHPSTARTTAG",
 /*  20 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  21 */ "literal_element ::= PHPENDTAG",
 /*  22 */ "smartytag ::= LDEL value RDEL",
 /*  23 */ "smartytag ::= LDEL value attributes RDEL",
 /*  24 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  25 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  26 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  27 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  28 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  29 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  30 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  31 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  32 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  34 */ "smartytag ::= LDEL ID RDEL",
 /*  35 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  38 */ "smartytag ::= LDELIF SPACE expr RDEL",
 /*  39 */ "smartytag ::= LDELIF SPACE statement RDEL",
 /*  40 */ "smartytag ::= LDELFOR SPACE statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  41 */ "foraction ::= EQUAL expr",
 /*  42 */ "foraction ::= INCDEC",
 /*  43 */ "smartytag ::= LDELFOR SPACE statement TO expr attributes RDEL",
 /*  44 */ "smartytag ::= LDELFOR SPACE statement TO expr STEP expr RDEL",
 /*  45 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  46 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  47 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  48 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  49 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  50 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  51 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  52 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  53 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  54 */ "attributes ::= attributes attribute",
 /*  55 */ "attributes ::= attribute",
 /*  56 */ "attributes ::=",
 /*  57 */ "attribute ::= SPACE ID EQUAL ID",
 /*  58 */ "attribute ::= SPACE ID EQUAL expr",
 /*  59 */ "attribute ::= SPACE ID EQUAL value",
 /*  60 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  61 */ "attribute ::= SPACE ID",
 /*  62 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  63 */ "statements ::= statement",
 /*  64 */ "statements ::= statements COMMA statement",
 /*  65 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  66 */ "expr ::= value",
 /*  67 */ "expr ::= DOLLAR ID COLON ID",
 /*  68 */ "expr ::= expr MATH value",
 /*  69 */ "expr ::= expr UNIMATH value",
 /*  70 */ "expr ::= expr ANDSYM value",
 /*  71 */ "expr ::= array",
 /*  72 */ "expr ::= expr modifier modparameters",
 /*  73 */ "expr ::= expr ifcond expr",
 /*  74 */ "expr ::= expr ISIN array",
 /*  75 */ "expr ::= expr ISIN value",
 /*  76 */ "expr ::= expr lop expr",
 /*  77 */ "expr ::= expr ISDIVBY expr",
 /*  78 */ "expr ::= expr ISNOTDIVBY expr",
 /*  79 */ "expr ::= expr ISEVEN",
 /*  80 */ "expr ::= expr ISNOTEVEN",
 /*  81 */ "expr ::= expr ISEVENBY expr",
 /*  82 */ "expr ::= expr ISNOTEVENBY expr",
 /*  83 */ "expr ::= expr ISODD",
 /*  84 */ "expr ::= expr ISNOTODD",
 /*  85 */ "expr ::= expr ISODDBY expr",
 /*  86 */ "expr ::= expr ISNOTODDBY expr",
 /*  87 */ "expr ::= value INSTANCEOF ID",
 /*  88 */ "expr ::= value INSTANCEOF value",
 /*  89 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  90 */ "value ::= variable",
 /*  91 */ "value ::= UNIMATH value",
 /*  92 */ "value ::= NOT value",
 /*  93 */ "value ::= TYPECAST value",
 /*  94 */ "value ::= variable INCDEC",
 /*  95 */ "value ::= HEX",
 /*  96 */ "value ::= INTEGER",
 /*  97 */ "value ::= INTEGER DOT INTEGER",
 /*  98 */ "value ::= INTEGER DOT",
 /*  99 */ "value ::= DOT INTEGER",
 /* 100 */ "value ::= ID",
 /* 101 */ "value ::= function",
 /* 102 */ "value ::= OPENP expr CLOSEP",
 /* 103 */ "value ::= SINGLEQUOTESTRING",
 /* 104 */ "value ::= doublequoted_with_quotes",
 /* 105 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 106 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 107 */ "value ::= smartytag",
 /* 108 */ "variable ::= varindexed",
 /* 109 */ "variable ::= DOLLAR varvar AT ID",
 /* 110 */ "variable ::= object",
 /* 111 */ "variable ::= HATCH ID HATCH",
 /* 112 */ "variable ::= HATCH variable HATCH",
 /* 113 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 114 */ "arrayindex ::= arrayindex indexdef",
 /* 115 */ "arrayindex ::=",
 /* 116 */ "indexdef ::= DOT DOLLAR varvar",
 /* 117 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 118 */ "indexdef ::= DOT ID",
 /* 119 */ "indexdef ::= DOT INTEGER",
 /* 120 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 121 */ "indexdef ::= OPENB ID CLOSEB",
 /* 122 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 123 */ "indexdef ::= OPENB expr CLOSEB",
 /* 124 */ "indexdef ::= OPENB CLOSEB",
 /* 125 */ "varvar ::= varvarele",
 /* 126 */ "varvar ::= varvar varvarele",
 /* 127 */ "varvarele ::= ID",
 /* 128 */ "varvarele ::= LDEL expr RDEL",
 /* 129 */ "object ::= varindexed objectchain",
 /* 130 */ "objectchain ::= objectelement",
 /* 131 */ "objectchain ::= objectchain objectelement",
 /* 132 */ "objectelement ::= PTR ID arrayindex",
 /* 133 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 134 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 135 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 136 */ "objectelement ::= PTR method",
 /* 137 */ "function ::= ID OPENP params CLOSEP",
 /* 138 */ "method ::= ID OPENP params CLOSEP",
 /* 139 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 140 */ "params ::= expr COMMA params",
 /* 141 */ "params ::= expr",
 /* 142 */ "params ::=",
 /* 143 */ "modifier ::= VERT AT ID",
 /* 144 */ "modifier ::= VERT ID",
 /* 145 */ "static_class_access ::= method",
 /* 146 */ "static_class_access ::= method objectchain",
 /* 147 */ "static_class_access ::= ID",
 /* 148 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 149 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 150 */ "modparameters ::= modparameters modparameter",
 /* 151 */ "modparameters ::=",
 /* 152 */ "modparameter ::= COLON value",
 /* 153 */ "modparameter ::= COLON array",
 /* 154 */ "ifcond ::= EQUALS",
 /* 155 */ "ifcond ::= NOTEQUALS",
 /* 156 */ "ifcond ::= GREATERTHAN",
 /* 157 */ "ifcond ::= LESSTHAN",
 /* 158 */ "ifcond ::= GREATEREQUAL",
 /* 159 */ "ifcond ::= LESSEQUAL",
 /* 160 */ "ifcond ::= IDENTITY",
 /* 161 */ "ifcond ::= NONEIDENTITY",
 /* 162 */ "ifcond ::= MOD",
 /* 163 */ "lop ::= LAND",
 /* 164 */ "lop ::= LOR",
 /* 165 */ "lop ::= LXOR",
 /* 166 */ "array ::= OPENB arrayelements CLOSEB",
 /* 167 */ "arrayelements ::= arrayelement",
 /* 168 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 169 */ "arrayelements ::=",
 /* 170 */ "arrayelement ::= value APTR expr",
 /* 171 */ "arrayelement ::= ID APTR expr",
 /* 172 */ "arrayelement ::= expr",
 /* 173 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 174 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 175 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 176 */ "doublequoted ::= doublequotedcontent",
 /* 177 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 178 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 179 */ "doublequotedcontent ::= DOLLARID",
 /* 180 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 181 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 182 */ "doublequotedcontent ::= smartytag",
 /* 183 */ "doublequotedcontent ::= OTHER",
 /* 184 */ "optspace ::= SPACE",
 /* 185 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 81 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1652 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 7 ),
  array( 'lhs' => 80, 'rhs' => 7 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 8 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 12 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 7 ),
  array( 'lhs' => 80, 'rhs' => 8 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 7 ),
  array( 'lhs' => 80, 'rhs' => 10 ),
  array( 'lhs' => 80, 'rhs' => 7 ),
  array( 'lhs' => 80, 'rhs' => 10 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 4 ),
  array( 'lhs' => 80, 'rhs' => 6 ),
  array( 'lhs' => 80, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 0 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 7 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 0 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 5 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 5 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 4 ),
  array( 'lhs' => 109, 'rhs' => 5 ),
  array( 'lhs' => 109, 'rhs' => 6 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 110, 'rhs' => 4 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 0 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        17 => 0,
        18 => 0,
        66 => 0,
        90 => 0,
        95 => 0,
        96 => 0,
        101 => 0,
        103 => 0,
        104 => 0,
        110 => 0,
        145 => 0,
        167 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        16 => 13,
        14 => 14,
        15 => 15,
        91 => 15,
        93 => 15,
        94 => 15,
        146 => 15,
        19 => 19,
        20 => 19,
        21 => 21,
        22 => 22,
        23 => 23,
        24 => 23,
        25 => 23,
        26 => 23,
        27 => 27,
        28 => 27,
        29 => 29,
        30 => 29,
        31 => 31,
        32 => 31,
        33 => 33,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 38,
        40 => 40,
        41 => 41,
        42 => 42,
        55 => 42,
        141 => 42,
        147 => 42,
        172 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 58,
        60 => 58,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 64,
        65 => 65,
        67 => 67,
        68 => 68,
        69 => 68,
        70 => 68,
        71 => 71,
        125 => 71,
        184 => 71,
        72 => 72,
        73 => 73,
        76 => 73,
        87 => 73,
        74 => 74,
        75 => 75,
        77 => 77,
        78 => 78,
        79 => 79,
        84 => 79,
        80 => 80,
        83 => 80,
        81 => 81,
        86 => 81,
        82 => 82,
        85 => 82,
        88 => 88,
        89 => 89,
        92 => 92,
        97 => 97,
        98 => 98,
        99 => 99,
        100 => 100,
        102 => 102,
        105 => 105,
        106 => 106,
        107 => 107,
        108 => 108,
        109 => 109,
        111 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        151 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        123 => 120,
        121 => 121,
        122 => 122,
        124 => 124,
        185 => 124,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        142 => 142,
        143 => 143,
        144 => 143,
        148 => 148,
        149 => 149,
        150 => 150,
        152 => 152,
        153 => 152,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 177,
        180 => 177,
        179 => 179,
        181 => 181,
        182 => 182,
        183 => 183,
    );
#line 92 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2051 "smarty_internal_templateparser.php"
#line 98 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 2060 "smarty_internal_templateparser.php"
#line 106 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 2070 "smarty_internal_templateparser.php"
#line 119 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { 
                                           $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                         }  
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 2082 "smarty_internal_templateparser.php"
#line 131 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 2085 "smarty_internal_templateparser.php"
#line 137 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2098 "smarty_internal_templateparser.php"
#line 149 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true; 
                                       $this->is_xml = true; 
                                       $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '?<?php ?>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = htmlspecialchars('?>', ENT_QUOTES);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2114 "smarty_internal_templateparser.php"
#line 165 "smarty_internal_templateparser.y"
    function yy_r8(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '<<?php ?>%';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = $this->compiler->processNocacheCode('<%', true);
                                        } else {
                                         $this->_retvalue = '<<?php ?>%';
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = '';
                                        } else {
                                         $this->_retvalue = '<<?php ?>%';
                                        }
                                      }
                                        }
#line 2135 "smarty_internal_templateparser.php"
#line 186 "smarty_internal_templateparser.y"
    function yy_r9(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '%<?php ?>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = htmlspecialchars('%>', ENT_QUOTES);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = $this->compiler->processNocacheCode('%>', true);
                                        } else {
                                         $this->_retvalue = '%<?php ?>>';
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = '';
                                        } else {
                                         $this->_retvalue = '%<?php ?>>';
                                        }
                                      }
                                        }
#line 2156 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r10(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2164 "smarty_internal_templateparser.php"
#line 214 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true);    }
#line 2167 "smarty_internal_templateparser.php"
#line 217 "smarty_internal_templateparser.y"
    function yy_r12(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2175 "smarty_internal_templateparser.php"
#line 225 "smarty_internal_templateparser.y"
    function yy_r13(){ $this->_retvalue = '';     }
#line 2178 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r14(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2181 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2184 "smarty_internal_templateparser.php"
#line 233 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2187 "smarty_internal_templateparser.php"
#line 235 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2190 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r22(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2193 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2196 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2199 "smarty_internal_templateparser.php"
#line 257 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2202 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r31(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2205 "smarty_internal_templateparser.php"
#line 262 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2208 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2211 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2214 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r36(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2219 "smarty_internal_templateparser.php"
#line 271 "smarty_internal_templateparser.y"
    function yy_r37(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2224 "smarty_internal_templateparser.php"
#line 275 "smarty_internal_templateparser.y"
    function yy_r38(){ $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2227 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r40(){
                                                             $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2231 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r41(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2234 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2237 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r43(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2240 "smarty_internal_templateparser.php"
#line 284 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2243 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2246 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r46(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2250 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r47(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2254 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r48(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2258 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r49(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2262 "smarty_internal_templateparser.php"
#line 298 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2265 "smarty_internal_templateparser.php"
#line 299 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2268 "smarty_internal_templateparser.php"
#line 300 "smarty_internal_templateparser.y"
    function yy_r52(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2273 "smarty_internal_templateparser.php"
#line 304 "smarty_internal_templateparser.y"
    function yy_r53(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2276 "smarty_internal_templateparser.php"
#line 311 "smarty_internal_templateparser.y"
    function yy_r54(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[key($this->yystack[$this->yyidx + 0]->minor)] = $this->yystack[$this->yyidx + 0]->minor[key($this->yystack[$this->yyidx + 0]->minor)];    }
#line 2279 "smarty_internal_templateparser.php"
#line 315 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = array();    }
#line 2282 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r57(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2292 "smarty_internal_templateparser.php"
#line 326 "smarty_internal_templateparser.y"
    function yy_r58(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2295 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2298 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r62(){$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2301 "smarty_internal_templateparser.php"
#line 336 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2304 "smarty_internal_templateparser.php"
#line 337 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2307 "smarty_internal_templateparser.php"
#line 339 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2310 "smarty_internal_templateparser.php"
#line 348 "smarty_internal_templateparser.y"
    function yy_r67(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2313 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2316 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r71(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2319 "smarty_internal_templateparser.php"
#line 359 "smarty_internal_templateparser.y"
    function yy_r72(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2322 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r73(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2325 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r74(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2328 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r75(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2331 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r77(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2334 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2337 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r79(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2340 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r80(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2343 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r81(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2346 "smarty_internal_templateparser.php"
#line 372 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2349 "smarty_internal_templateparser.php"
#line 378 "smarty_internal_templateparser.y"
    function yy_r88(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2352 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r89(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2355 "smarty_internal_templateparser.php"
#line 391 "smarty_internal_templateparser.y"
    function yy_r92(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2358 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2361 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';     }
#line 2364 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2367 "smarty_internal_templateparser.php"
#line 401 "smarty_internal_templateparser.y"
    function yy_r100(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2377 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2380 "smarty_internal_templateparser.php"
#line 418 "smarty_internal_templateparser.y"
    function yy_r105(){if (!$this->template->security || $this->smarty->security_handler->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor; 
                                                                }    }
#line 2385 "smarty_internal_templateparser.php"
#line 421 "smarty_internal_templateparser.y"
    function yy_r106(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2389 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r107(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2392 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r108(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
                                      } else {
                                      if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + 0]->minor['var']])) {
                                          $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + 0]->minor['var'] .']->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         } else {
                                          $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         }
                                       $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2402 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r109(){if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + -2]->minor])) {
                                                  $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 } else {
                                                  $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 }
                                                  $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2410 "smarty_internal_templateparser.php"
#line 451 "smarty_internal_templateparser.y"
    function yy_r111(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2413 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r112(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2416 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r113(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2419 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r114(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2422 "smarty_internal_templateparser.php"
#line 463 "smarty_internal_templateparser.y"
    function yy_r115(){return;    }
#line 2425 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r116(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2428 "smarty_internal_templateparser.php"
#line 468 "smarty_internal_templateparser.y"
    function yy_r117(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2431 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2434 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2437 "smarty_internal_templateparser.php"
#line 471 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2440 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2443 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r122(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2446 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r124(){$this->_retvalue = '';    }
#line 2449 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2452 "smarty_internal_templateparser.php"
#line 488 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2455 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r128(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2458 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r129(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2462 "smarty_internal_templateparser.php"
#line 498 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2465 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r131(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2468 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2471 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = '->{$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor .')->value'.$this->yystack[$this->yyidx + 0]->minor.'}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor,"'"), null, true, false)->nocache;    }
#line 2474 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2477 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2480 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r136(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2483 "smarty_internal_templateparser.php"
#line 513 "smarty_internal_templateparser.y"
    function yy_r137(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2492 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2495 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2498 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2501 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r142(){ return;    }
#line 2504 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2507 "smarty_internal_templateparser.php"
#line 548 "smarty_internal_templateparser.y"
    function yy_r148(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2510 "smarty_internal_templateparser.php"
#line 550 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2513 "smarty_internal_templateparser.php"
#line 561 "smarty_internal_templateparser.y"
    function yy_r150(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2516 "smarty_internal_templateparser.php"
#line 565 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2519 "smarty_internal_templateparser.php"
#line 569 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = '==';    }
#line 2522 "smarty_internal_templateparser.php"
#line 570 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = '!=';    }
#line 2525 "smarty_internal_templateparser.php"
#line 571 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '>';    }
#line 2528 "smarty_internal_templateparser.php"
#line 572 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '<';    }
#line 2531 "smarty_internal_templateparser.php"
#line 573 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '>=';    }
#line 2534 "smarty_internal_templateparser.php"
#line 574 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '<=';    }
#line 2537 "smarty_internal_templateparser.php"
#line 575 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '===';    }
#line 2540 "smarty_internal_templateparser.php"
#line 576 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '!==';    }
#line 2543 "smarty_internal_templateparser.php"
#line 577 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = '%';    }
#line 2546 "smarty_internal_templateparser.php"
#line 579 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = '&&';    }
#line 2549 "smarty_internal_templateparser.php"
#line 580 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = '||';    }
#line 2552 "smarty_internal_templateparser.php"
#line 581 "smarty_internal_templateparser.y"
    function yy_r165(){$this->_retvalue = ' XOR ';    }
#line 2555 "smarty_internal_templateparser.php"
#line 586 "smarty_internal_templateparser.y"
    function yy_r166(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2558 "smarty_internal_templateparser.php"
#line 588 "smarty_internal_templateparser.y"
    function yy_r168(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2561 "smarty_internal_templateparser.php"
#line 589 "smarty_internal_templateparser.y"
    function yy_r169(){ return;     }
#line 2564 "smarty_internal_templateparser.php"
#line 590 "smarty_internal_templateparser.y"
    function yy_r170(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2567 "smarty_internal_templateparser.php"
#line 591 "smarty_internal_templateparser.y"
    function yy_r171(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2570 "smarty_internal_templateparser.php"
#line 598 "smarty_internal_templateparser.y"
    function yy_r173(){ $this->_retvalue = "''";     }
#line 2573 "smarty_internal_templateparser.php"
#line 599 "smarty_internal_templateparser.y"
    function yy_r174(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2576 "smarty_internal_templateparser.php"
#line 601 "smarty_internal_templateparser.y"
    function yy_r175(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2579 "smarty_internal_templateparser.php"
#line 602 "smarty_internal_templateparser.y"
    function yy_r176(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2582 "smarty_internal_templateparser.php"
#line 604 "smarty_internal_templateparser.y"
    function yy_r177(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2585 "smarty_internal_templateparser.php"
#line 606 "smarty_internal_templateparser.y"
    function yy_r179(){if (isset($this->compiler->local_var["'".substr($this->yystack[$this->yyidx + 0]->minor,1)."'"])) {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
                                                      } else {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value');
                                                      }
                                                      $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache;
      }
#line 2594 "smarty_internal_templateparser.php"
#line 614 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2597 "smarty_internal_templateparser.php"
#line 615 "smarty_internal_templateparser.y"
    function yy_r182(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2602 "smarty_internal_templateparser.php"
#line 618 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2605 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 74 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2668 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 66 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2686 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>