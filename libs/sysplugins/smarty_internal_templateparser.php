<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 126 "smarty_internal_templateparser.php"

    const TP_COMMENT                        =  1;
    const TP_PHPSTARTTAG                    =  2;
    const TP_PHPENDTAG                      =  3;
    const TP_OTHER                          =  4;
    const TP_FAKEPHPSTARTTAG                =  5;
    const TP_PHP_CODE                       =  6;
    const TP_PHP_CODE_START_DOUBLEQUOTE     =  7;
    const TP_PHP_CODE_DOUBLEQUOTE           =  8;
    const TP_PHP_HEREDOC_START              =  9;
    const TP_PHP_HEREDOC_END                = 10;
    const TP_PHP_NOWDOC_START               = 11;
    const TP_PHP_NOWDOC_END                 = 12;
    const TP_PHP_DQ_CONTENT                 = 13;
    const TP_PHP_DQ_EMBED_START             = 14;
    const TP_PHP_DQ_EMBED_END               = 15;
    const TP_LITERALSTART                   = 16;
    const TP_LITERALEND                     = 17;
    const TP_LITERAL                        = 18;
    const TP_LDEL                           = 19;
    const TP_RDEL                           = 20;
    const TP_DOLLAR                         = 21;
    const TP_ID                             = 22;
    const TP_EQUAL                          = 23;
    const TP_FOREACH                        = 24;
    const TP_PTR                            = 25;
    const TP_IF                             = 26;
    const TP_SPACE                          = 27;
    const TP_UNIMATH                        = 28;
    const TP_FOR                            = 29;
    const TP_SEMICOLON                      = 30;
    const TP_INCDEC                         = 31;
    const TP_TO                             = 32;
    const TP_AS                             = 33;
    const TP_APTR                           = 34;
    const TP_LDELSLASH                      = 35;
    const TP_INTEGER                        = 36;
    const TP_COMMA                          = 37;
    const TP_COLON                          = 38;
    const TP_MATH                           = 39;
    const TP_ANDSYM                         = 40;
    const TP_OPENP                          = 41;
    const TP_CLOSEP                         = 42;
    const TP_QMARK                          = 43;
    const TP_NOT                            = 44;
    const TP_TYPECAST                       = 45;
    const TP_DOT                            = 46;
    const TP_BOOLEAN                        = 47;
    const TP_NULL                           = 48;
    const TP_SINGLEQUOTESTRING              = 49;
    const TP_QUOTE                          = 50;
    const TP_DOUBLECOLON                    = 51;
    const TP_AT                             = 52;
    const TP_HATCH                          = 53;
    const TP_OPENB                          = 54;
    const TP_CLOSEB                         = 55;
    const TP_VERT                           = 56;
    const TP_ISIN                           = 57;
    const TP_ISDIVBY                        = 58;
    const TP_ISNOTDIVBY                     = 59;
    const TP_ISEVEN                         = 60;
    const TP_ISNOTEVEN                      = 61;
    const TP_ISEVENBY                       = 62;
    const TP_ISNOTEVENBY                    = 63;
    const TP_ISODD                          = 64;
    const TP_ISNOTODD                       = 65;
    const TP_ISODDBY                        = 66;
    const TP_ISNOTODDBY                     = 67;
    const TP_INSTANCEOF                     = 68;
    const TP_EQUALS                         = 69;
    const TP_NOTEQUALS                      = 70;
    const TP_GREATERTHAN                    = 71;
    const TP_LESSTHAN                       = 72;
    const TP_GREATEREQUAL                   = 73;
    const TP_LESSEQUAL                      = 74;
    const TP_IDENTITY                       = 75;
    const TP_NONEIDENTITY                   = 76;
    const TP_MOD                            = 77;
    const TP_LAND                           = 78;
    const TP_LOR                            = 79;
    const TP_LXOR                           = 80;
    const TP_BACKTICK                       = 81;
    const TP_DOLLARID                       = 82;
    const YY_NO_ACTION = 589;
    const YY_ACCEPT_ACTION = 588;
    const YY_ERROR_ACTION = 587;

    const YY_SZ_ACTTAB = 1335;
static public $yy_action = array(
 /*     0 */     4,   11,   96,   53,  303,  101,  309,  187,  322,   44,
 /*    10 */   214,  242,   42,  195,   18,  195,  110,  208,   33,  376,
 /*    20 */   185,  317,    9,   43,   48,   46,   49,   14,  386,  378,
 /*    30 */   324,   55,  185,  205,   58,    2,   33,  143,   42,  317,
 /*    40 */    16,  195,  185,  588,   52,  249,  265,  288,  352,   43,
 /*    50 */    48,  137,   38,  246,  268,  271,  259,  260,  266,  258,
 /*    60 */   257,  247,  245,  250,  251,  298,  356,  185,   40,   27,
 /*    70 */    36,  337,  343,   28,   21,  342,  341,   25,   24,  246,
 /*    80 */   268,  271,  259,  260,  266,  258,  257,  247,  245,  250,
 /*    90 */   251,  280,  252,   78,  226,  274,  273,   33,  369,    4,
 /*   100 */   317,   85,  179,  178,   14,  354,    3,   54,   44,  220,
 /*   110 */     4,   37,  215,  382,  143,  110,  208,    8,  289,   20,
 /*   120 */   176,   35,  110,  104,   46,   49,  110,  386,  378,  324,
 /*   130 */    55,   42,  230,   58,    2,  277,    4,  254,   91,  183,
 /*   140 */   285,    5,   43,   48,  330,   44,  275,   95,   12,   88,
 /*   150 */    51,   94,  110,  208,   33,  374,   33,  317,   35,  317,
 /*   160 */    34,   46,   49,  360,  386,  378,  324,   55,   22,  361,
 /*   170 */    58,    2,  246,  268,  271,  259,  260,  266,  258,  257,
 /*   180 */   247,  245,  250,  251,    4,   14,   85,  190,   39,  207,
 /*   190 */    82,  304,   57,   44,  294,  143,  291,  351,   51,  293,
 /*   200 */   110,  208,  235,   15,  195,  290,   35,   30,  286,   46,
 /*   210 */    49,  173,  386,  378,  324,   55,  295,  292,   58,    2,
 /*   220 */     4,   14,   85,  184,   33,  264,  362,  317,  267,   44,
 /*   230 */   211,  143,   29,  185,   85,  124,  110,  208,  255,   54,
 /*   240 */   300,  263,   35,  297,   56,   46,   49,  185,  386,  378,
 /*   250 */   324,   55,   32,   31,   58,    2,    4,  199,   85,  180,
 /*   260 */    14,  264,  362,   38,  267,   44,   58,   85,  225,  314,
 /*   270 */   143,  296,  110,  189,  140,   54,  195,  263,   35,  172,
 /*   280 */   281,   46,   49,   51,  386,  378,  324,   55,   14,  356,
 /*   290 */    58,    2,    4,   33,   91,  183,  317,   34,  143,   58,
 /*   300 */   455,   44,  175,  465,  178,  185,  325,  195,  110,  208,
 /*   310 */   133,  382,   37,  195,    9,  171,   33,   46,   49,  317,
 /*   320 */   386,  378,  324,   55,  310,  356,   58,    2,    4,  255,
 /*   330 */    91,  182,  316,  339,  212,   56,  172,   44,  185,  195,
 /*   340 */   195,  388,  185,  382,  110,  208,  119,  253,  185,  207,
 /*   350 */    35,  172,  232,   46,   49,  104,  386,  378,  324,   55,
 /*   360 */   185,  356,   58,    2,    4,  236,   98,  183,  347,  301,
 /*   370 */    73,  364,  135,   44,  299,  195,  330,  172,  195,  169,
 /*   380 */   110,  208,  248,  185,  373,  359,   35,  356,  185,   46,
 /*   390 */    49,  311,  386,  378,  324,   55,  122,    6,   58,    2,
 /*   400 */     4,  177,   91,  181,  262,  265,  288,   33,  371,   44,
 /*   410 */   317,  356,  131,  358,  148,  334,  110,  208,  139,  373,
 /*   420 */   195,  240,    9,    1,    7,   46,   49,  356,  386,  378,
 /*   430 */   324,   55,  370,  356,   58,    2,    4,  202,   85,  190,
 /*   440 */   134,  354,   17,  150,  368,   44,  375,  354,  373,  168,
 /*   450 */   458,  231,  110,  208,  373,  356,   33,  458,   35,  317,
 /*   460 */   185,   46,   49,  145,  386,  378,  324,   55,  172,  354,
 /*   470 */    58,  109,    4,   68,   85,  188,  163,   33,  356,  340,
 /*   480 */   229,   44,  388,  156,  306,  318,  195,  345,  110,  208,
 /*   490 */   142,  195,  195,   81,   35,  174,  233,   46,   49,  132,
 /*   500 */   386,  378,  324,   55,  125,  356,   58,  244,  223,  345,
 /*   510 */   185,   40,   27,   36,  337,  343,   28,   21,  342,  341,
 /*   520 */    25,   24,  336,  366,  350,  111,  336,  302,   76,   65,
 /*   530 */   237,  195,  219,  153,  224,  104,  219,  108,  313,  104,
 /*   540 */   167,  345,  221,  213,  344,  195,  363,   72,  344,  126,
 /*   550 */   372,   72,  307,  195,  372,  336,  330,  308,  115,  195,
 /*   560 */   330,  193,  331,   89,  195,   80,   59,  106,   87,  323,
 /*   570 */   114,  315,  321,  103,  345,   66,  195,  344,  195,  195,
 /*   580 */    72,  353,  336,  372,  113,   77,  345,  116,  195,  330,
 /*   590 */    89,  149,   79,   64,  106,   87,  136,   84,  336,  319,
 /*   600 */   345,  345,  356,  141,  344,   93,  224,   72,  219,  108,
 /*   610 */   372,  104,  210,   97,  198,  144,  330,  335,  356,   33,
 /*   620 */   344,  336,  186,   72,  204,  336,  372,  239,   97,  367,
 /*   630 */   356,  219,  330,  367,  104,  219,  123,   19,  104,  319,
 /*   640 */    47,   45,  195,  344,  276,   74,   70,  344,  102,  372,
 /*   650 */    72,  196,   74,  372,  336,  330,  241,  228,   74,  330,
 /*   660 */   203,  191,  367,  385,  219,   67,   99,  104,  200,   97,
 /*   670 */   336,  185,  284,   97,  121,  138,  344,   75,  367,   72,
 /*   680 */   219,  123,  372,  104,  312,  387,  272,  112,  330,  356,
 /*   690 */   356,   83,  344,  345,  329,   72,  218,  336,  372,    5,
 /*   700 */   379,  201,  382,  345,  330,  192,   50,  219,  154,  256,
 /*   710 */   104,  216,  279,  336,  283,  278,  197,   15,   23,  344,
 /*   720 */   336,  305,   72,  219,  336,  372,  104,  282,  367,  287,
 /*   730 */   219,  330,  227,  104,  219,   61,  100,  104,  346,   26,
 /*   740 */   230,  372,  344,   30,  355,   71,  344,  330,  372,   72,
 /*   750 */   380,  211,  372,  336,  330,  377,   92,   86,  330,  338,
 /*   760 */    10,  224,  151,  219,  108,   63,  104,  357,  375,  209,
 /*   770 */   105,  319,  195,   90,   41,  344,  348,  234,   72,  129,
 /*   780 */   336,  372,   60,   13,  329,  349,  329,  330,  367,  329,
 /*   790 */   219,  123,  329,  104,  206,  329,  336,  329,  329,  329,
 /*   800 */   329,  329,  344,  329,  237,   72,  219,  153,  372,  104,
 /*   810 */   329,  333,  336,  329,  330,  329,  280,  329,  344,  329,
 /*   820 */   224,   72,  219,  107,  372,  104,  329,  329,  238,  329,
 /*   830 */   330,    3,  329,  329,  344,  329,  332,   72,  329,  329,
 /*   840 */   372,  336,  329,  329,  329,  329,  330,  110,  329,  367,
 /*   850 */   329,  219,  123,  329,  104,  329,  329,  336,  329,  329,
 /*   860 */   329,  329,  365,  344,  329,  367,   72,  219,  164,  372,
 /*   870 */   104,  329,  243,  329,  329,  330,  336,  329,  329,  344,
 /*   880 */   329,  329,   72,  329,  367,  372,  219,  158,  329,  104,
 /*   890 */   329,  330,  336,   22,  361,  329,  329,  329,  344,  329,
 /*   900 */   367,   72,  219,  155,  372,  104,  329,  329,  336,  329,
 /*   910 */   330,  329,  329,  329,  344,  329,  367,   72,  219,   62,
 /*   920 */   372,  104,  329,  329,  336,  329,  330,  329,  329,  329,
 /*   930 */   344,  329,  367,   72,  219,  166,  372,  104,  329,  329,
 /*   940 */   336,  329,  330,  329,  329,  329,  344,  329,  367,   72,
 /*   950 */   219,  130,  372,  104,  329,  329,  336,  329,  330,  329,
 /*   960 */   329,  329,  344,  329,  367,   72,  219,  162,  372,  104,
 /*   970 */   329,  329,  336,  329,  330,  329,  329,  329,  344,  329,
 /*   980 */   367,   72,  219,  120,  372,  104,  329,  329,  336,  329,
 /*   990 */   330,  329,  329,  329,  344,  329,  367,   72,  219,  157,
 /*  1000 */   372,  104,  329,  329,  336,  329,  330,  329,  329,  329,
 /*  1010 */   344,  329,  367,   72,  219,  165,  372,  104,  329,  329,
 /*  1020 */   336,  329,  330,  329,  329,  329,  344,  329,  367,   72,
 /*  1030 */   219,  160,  372,  104,  329,  329,  336,  329,  330,  329,
 /*  1040 */   329,  329,  344,  329,  367,   72,  219,  170,  372,  104,
 /*  1050 */   329,  329,  336,  329,  330,  329,  329,  329,  344,  329,
 /*  1060 */   367,   72,  219,  146,  372,  104,  329,  329,  336,  329,
 /*  1070 */   330,  329,  329,  329,  344,  329,  367,   72,  219,  128,
 /*  1080 */   372,  104,  329,  329,  336,  329,  330,  329,  329,  329,
 /*  1090 */   344,  329,  367,   72,  219,  159,  372,  104,  329,  329,
 /*  1100 */   336,  329,  330,  329,  329,  329,  344,  329,  367,   72,
 /*  1110 */   194,  117,  372,  104,  329,  329,  336,  329,  330,  329,
 /*  1120 */   329,  329,  344,  329,  367,   72,  219,  161,  372,  104,
 /*  1130 */   329,  329,  336,  329,  330,  329,  329,  329,  344,  329,
 /*  1140 */   367,   72,  219,  147,  372,  104,  329,  329,  336,  329,
 /*  1150 */   330,  329,  329,  329,  344,  329,  367,   72,  219,  127,
 /*  1160 */   372,  104,  329,  329,  336,  329,  330,  329,  329,  329,
 /*  1170 */   344,  329,  367,   72,  219,  118,  372,  104,  329,  329,
 /*  1180 */   336,  329,  330,  329,  329,  329,  344,  329,  367,   72,
 /*  1190 */   219,  152,  372,  104,  329,  329,  336,  329,  330,  329,
 /*  1200 */   329,  329,  344,  329,  367,   72,  219,  329,  372,  104,
 /*  1210 */   329,  329,  336,  329,  330,  329,  329,  329,  344,  329,
 /*  1220 */   328,   69,  219,  329,  372,  104,  329,  329,  336,  336,
 /*  1230 */   330,  329,  329,  329,  327,  329,  222,  326,  219,  219,
 /*  1240 */   372,  104,  104,  329,  329,  336,  330,  329,  329,  329,
 /*  1250 */   217,  329,  329,  270,  329,  219,  372,  372,  104,  329,
 /*  1260 */   329,  336,  330,  330,  329,  329,  329,  329,  336,  381,
 /*  1270 */   329,  219,  329,  372,  104,  329,  320,  336,  219,  330,
 /*  1280 */   329,  104,  329,  329,  336,  261,  329,  219,  329,  372,
 /*  1290 */   104,  329,  383,  336,  219,  330,  372,  104,  329,  329,
 /*  1300 */   336,  384,  330,  219,  329,  372,  104,  329,  269,  329,
 /*  1310 */   219,  330,  372,  104,  329,  329,  329,  329,  330,  329,
 /*  1320 */   329,  372,  329,  329,  329,  329,  329,  330,  372,  329,
 /*  1330 */   329,  329,  329,  329,  330,
    );
    static public $yy_lookahead = array(
 /*     0 */    19,   37,   21,   22,   20,   24,   20,   26,   20,   28,
 /*    10 */    29,   25,   28,   27,   38,   27,   35,   36,   19,   20,
 /*    20 */    56,   22,   41,   39,   40,   44,   45,   41,   47,   48,
 /*    30 */    49,   50,   56,   34,   53,   54,   19,   51,   28,   22,
 /*    40 */    23,   27,   56,   84,   85,   86,   87,   88,   31,   39,
 /*    50 */    40,   96,   38,   69,   70,   71,   72,   73,   74,   75,
 /*    60 */    76,   77,   78,   79,   80,   55,  111,   56,   57,   58,
 /*    70 */    59,   60,   61,   62,   63,   64,   65,   66,   67,   69,
 /*    80 */    70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
 /*    90 */    80,    4,    1,    2,   42,    4,    5,   19,   20,   19,
 /*   100 */    22,   21,   22,   46,   41,  125,   19,   16,   28,   46,
 /*   110 */    19,   54,   34,   31,   51,   35,   36,   23,   55,   19,
 /*   120 */    97,   41,   35,  100,   44,   45,   35,   47,   48,   49,
 /*   130 */    50,   28,   38,   53,   54,   55,   19,   50,   21,   22,
 /*   140 */   117,   41,   39,   40,  121,   28,    6,    7,   23,    9,
 /*   150 */    25,   11,   35,   36,   19,   20,   19,   22,   41,   22,
 /*   160 */    23,   44,   45,   81,   47,   48,   49,   50,   81,   82,
 /*   170 */    53,   54,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   180 */    77,   78,   79,   80,   19,   41,   21,   22,   19,   52,
 /*   190 */    21,   22,   22,   28,   24,   51,   26,   20,   25,   29,
 /*   200 */    35,   36,   25,   23,   27,   36,   41,   23,    8,   44,
 /*   210 */    45,   20,   47,   48,   49,   50,   47,   48,   53,   54,
 /*   220 */    19,   41,   21,   22,   19,    2,    3,   22,    5,   28,
 /*   230 */    46,   51,   19,   56,   21,   22,   35,   36,   88,   16,
 /*   240 */    17,   18,   41,   93,   94,   44,   45,   56,   47,   48,
 /*   250 */    49,   50,   34,   34,   53,   54,   19,   52,   21,   22,
 /*   260 */    41,    2,    3,   38,    5,   28,   53,   21,   22,   20,
 /*   270 */    51,   20,   35,   36,   96,   16,   27,   18,   41,  101,
 /*   280 */    15,   44,   45,   25,   47,   48,   49,   50,   41,  111,
 /*   290 */    53,   54,   19,   19,   21,   22,   22,   23,   51,   53,
 /*   300 */    20,   28,   20,   56,   46,   56,   20,   27,   35,   36,
 /*   310 */    96,   31,   54,   27,   41,  101,   19,   44,   45,   22,
 /*   320 */    47,   48,   49,   50,   22,  111,   53,   54,   19,   88,
 /*   330 */    21,   22,   20,   20,   93,   94,  101,   28,   56,   27,
 /*   340 */    27,   87,   56,   31,   35,   36,   96,   20,   56,   52,
 /*   350 */    41,  101,   97,   44,   45,  100,   47,   48,   49,   50,
 /*   360 */    56,  111,   53,   54,   19,   22,   21,   22,   20,   20,
 /*   370 */   116,   20,   96,   28,   42,   27,  121,  101,   27,  119,
 /*   380 */    35,   36,  128,   56,  124,   81,   41,  111,   56,   44,
 /*   390 */    45,   22,   47,   48,   49,   50,   96,   37,   53,   54,
 /*   400 */    19,  101,   21,   22,   86,   87,   88,   19,   20,   28,
 /*   410 */    22,  111,   96,   20,  119,   55,   35,   36,   96,  124,
 /*   420 */    27,   52,   41,   27,   28,   44,   45,  111,   47,   48,
 /*   430 */    49,   50,  124,  111,   53,   54,   19,   22,   21,   22,
 /*   440 */    96,  125,   38,  119,   42,   28,  122,  125,  124,  119,
 /*   450 */    20,   36,   35,   36,  124,  111,   19,   27,   41,   22,
 /*   460 */    56,   44,   45,   96,   47,   48,   49,   50,  101,  125,
 /*   470 */    53,  107,   19,  102,   21,   22,   30,   19,  111,   20,
 /*   480 */    22,   28,   87,   37,   20,   20,   27,  123,   35,   36,
 /*   490 */    96,   27,   27,  107,   41,  101,   42,   44,   45,  120,
 /*   500 */    47,   48,   49,   50,  120,  111,   53,   21,   22,  123,
 /*   510 */    56,   57,   58,   59,   60,   61,   62,   63,   64,   65,
 /*   520 */    66,   67,   87,  128,   20,  107,   87,   13,   14,  102,
 /*   530 */    95,   27,   97,   98,   95,  100,   97,   98,   20,  100,
 /*   540 */   102,  123,  103,  104,  109,   27,   20,  112,  109,  120,
 /*   550 */   115,  112,   20,   27,  115,   87,  121,   20,  107,   27,
 /*   560 */   121,  126,  127,   95,   27,   97,   98,   99,  100,   20,
 /*   570 */   107,   20,   20,   42,  123,   22,   27,  109,   27,   27,
 /*   580 */   112,   20,   87,  115,  107,  107,  123,   96,   27,  121,
 /*   590 */    95,   22,   97,   98,   99,  100,  120,   21,   87,  123,
 /*   600 */   123,  123,  111,   96,  109,   21,   95,  112,   97,   98,
 /*   610 */   115,  100,   91,   92,  103,   96,  121,   53,  111,   19,
 /*   620 */   109,   87,   22,  112,  108,   87,  115,   91,   92,   95,
 /*   630 */   111,   97,  121,   95,  100,   97,   98,   43,  100,  123,
 /*   640 */   113,  114,   27,  109,   89,   90,  112,  109,   27,  115,
 /*   650 */   112,   89,   90,  115,   87,  121,  118,   89,   90,  121,
 /*   660 */   104,  105,   95,   20,   97,   98,   99,  100,   91,   92,
 /*   670 */    87,   56,   91,   92,   96,   96,  109,  107,   95,  112,
 /*   680 */    97,   98,  115,  100,   20,   36,   17,  107,  121,  111,
 /*   690 */   111,   21,  109,  123,   53,  112,   22,   87,  115,   41,
 /*   700 */    20,  118,   31,  123,  121,   95,   68,   97,   98,   99,
 /*   710 */   100,   33,   55,   87,   10,    3,   33,   23,   32,  109,
 /*   720 */    87,   95,  112,   97,   87,  115,  100,   42,   95,   12,
 /*   730 */    97,  121,   95,  100,   97,   98,   99,  100,   22,   43,
 /*   740 */    38,  115,  109,   23,   20,  112,  109,  121,  115,  112,
 /*   750 */    20,   46,  115,   87,  121,   22,   21,   21,  121,   22,
 /*   760 */    41,   95,   30,   97,   98,  102,  100,  111,  122,  103,
 /*   770 */   117,  123,   27,   21,   27,  109,   27,  110,  112,  120,
 /*   780 */    87,  115,  120,  106,  129,  104,  129,  121,   95,  129,
 /*   790 */    97,   98,  129,  100,  106,  129,   87,  129,  129,  129,
 /*   800 */   129,  129,  109,  129,   95,  112,   97,   98,  115,  100,
 /*   810 */   129,  118,   87,  129,  121,  129,    4,  129,  109,  129,
 /*   820 */    95,  112,   97,   98,  115,  100,  129,  129,  103,  129,
 /*   830 */   121,   19,  129,  129,  109,  129,  127,  112,  129,  129,
 /*   840 */   115,   87,  129,  129,  129,  129,  121,   35,  129,   95,
 /*   850 */   129,   97,   98,  129,  100,  129,  129,   87,  129,  129,
 /*   860 */   129,  129,   50,  109,  129,   95,  112,   97,   98,  115,
 /*   870 */   100,  129,  118,  129,  129,  121,   87,  129,  129,  109,
 /*   880 */   129,  129,  112,  129,   95,  115,   97,   98,  129,  100,
 /*   890 */   129,  121,   87,   81,   82,  129,  129,  129,  109,  129,
 /*   900 */    95,  112,   97,   98,  115,  100,  129,  129,   87,  129,
 /*   910 */   121,  129,  129,  129,  109,  129,   95,  112,   97,   98,
 /*   920 */   115,  100,  129,  129,   87,  129,  121,  129,  129,  129,
 /*   930 */   109,  129,   95,  112,   97,   98,  115,  100,  129,  129,
 /*   940 */    87,  129,  121,  129,  129,  129,  109,  129,   95,  112,
 /*   950 */    97,   98,  115,  100,  129,  129,   87,  129,  121,  129,
 /*   960 */   129,  129,  109,  129,   95,  112,   97,   98,  115,  100,
 /*   970 */   129,  129,   87,  129,  121,  129,  129,  129,  109,  129,
 /*   980 */    95,  112,   97,   98,  115,  100,  129,  129,   87,  129,
 /*   990 */   121,  129,  129,  129,  109,  129,   95,  112,   97,   98,
 /*  1000 */   115,  100,  129,  129,   87,  129,  121,  129,  129,  129,
 /*  1010 */   109,  129,   95,  112,   97,   98,  115,  100,  129,  129,
 /*  1020 */    87,  129,  121,  129,  129,  129,  109,  129,   95,  112,
 /*  1030 */    97,   98,  115,  100,  129,  129,   87,  129,  121,  129,
 /*  1040 */   129,  129,  109,  129,   95,  112,   97,   98,  115,  100,
 /*  1050 */   129,  129,   87,  129,  121,  129,  129,  129,  109,  129,
 /*  1060 */    95,  112,   97,   98,  115,  100,  129,  129,   87,  129,
 /*  1070 */   121,  129,  129,  129,  109,  129,   95,  112,   97,   98,
 /*  1080 */   115,  100,  129,  129,   87,  129,  121,  129,  129,  129,
 /*  1090 */   109,  129,   95,  112,   97,   98,  115,  100,  129,  129,
 /*  1100 */    87,  129,  121,  129,  129,  129,  109,  129,   95,  112,
 /*  1110 */    97,   98,  115,  100,  129,  129,   87,  129,  121,  129,
 /*  1120 */   129,  129,  109,  129,   95,  112,   97,   98,  115,  100,
 /*  1130 */   129,  129,   87,  129,  121,  129,  129,  129,  109,  129,
 /*  1140 */    95,  112,   97,   98,  115,  100,  129,  129,   87,  129,
 /*  1150 */   121,  129,  129,  129,  109,  129,   95,  112,   97,   98,
 /*  1160 */   115,  100,  129,  129,   87,  129,  121,  129,  129,  129,
 /*  1170 */   109,  129,   95,  112,   97,   98,  115,  100,  129,  129,
 /*  1180 */    87,  129,  121,  129,  129,  129,  109,  129,   95,  112,
 /*  1190 */    97,   98,  115,  100,  129,  129,   87,  129,  121,  129,
 /*  1200 */   129,  129,  109,  129,   95,  112,   97,  129,  115,  100,
 /*  1210 */   129,  129,   87,  129,  121,  129,  129,  129,  109,  129,
 /*  1220 */    95,  112,   97,  129,  115,  100,  129,  129,   87,   87,
 /*  1230 */   121,  129,  129,  129,  109,  129,   95,   95,   97,   97,
 /*  1240 */   115,  100,  100,  129,  129,   87,  121,  129,  129,  129,
 /*  1250 */   109,  129,  129,   95,  129,   97,  115,  115,  100,  129,
 /*  1260 */   129,   87,  121,  121,  129,  129,  129,  129,   87,   95,
 /*  1270 */   129,   97,  129,  115,  100,  129,   95,   87,   97,  121,
 /*  1280 */   129,  100,  129,  129,   87,   95,  129,   97,  129,  115,
 /*  1290 */   100,  129,   95,   87,   97,  121,  115,  100,  129,  129,
 /*  1300 */    87,   95,  121,   97,  129,  115,  100,  129,   95,  129,
 /*  1310 */    97,  121,  115,  100,  129,  129,  129,  129,  121,  129,
 /*  1320 */   129,  115,  129,  129,  129,  129,  129,  121,  115,  129,
 /*  1330 */   129,  129,  129,  129,  121,
);
    const YY_SHIFT_USE_DFLT = -37;
    const YY_SHIFT_MAX = 244;
    static public $yy_shift_ofst = array(
 /*     0 */    91,  345,  309,  -19,  -19,  117,  309,  117,  273,  117,
 /*    10 */   117,  117,  273,  117,  117,  381,  117,  117,  117,  117,
 /*    20 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*    30 */   117,  117,  117,  117,  117,  117,  117,   80,  201,  165,
 /*    40 */   165,  237,  417,  417,  417,  417,  417,  417,  417,  417,
 /*    50 */   453,  213,   91,  -14,  223,   87,  259,  177,  246,  249,
 /*    60 */   258,  286,  615,   14,  615,   14,  615,  615,   14,   10,
 /*    70 */   -16,  103,  103,  812,  140,   17,  140,  137,  140,  280,
 /*    80 */   312,  297,  437,  437,  437,  437,  437,  125,  514,  526,
 /*    90 */   437,  458,  437,  437,  514,  514,  600,  514,  458,  745,
 /*   100 */   745,  747,  752,  173,  173,  173,  745,  454,   11,   -1,
 /*   110 */   170,   78,  388,  274,  135,  205,  351,  304,  327,  393,
 /*   120 */   332,  313,  -12,  -36,  100,   57,   57,  282,  191,   57,
 /*   130 */   -24,  561,   57,  504,  465,  464,   57,  518,  532,  552,
 /*   140 */   551,  549,  537,  486,  348,  459,  404,  292,  173,  719,
 /*   150 */   173,  749,  292,  292,  292,  292,  752,  292,  292,  292,
 /*   160 */   292,  292,  292,  749,  292,  292,  292,  225,  173,  173,
 /*   170 */   292,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  169,   63,
 /*   180 */   180,  247,  219,  144,  144,  369,   94,  396,  144,  184,
 /*   190 */   144,  446,  430,  360,   82,  415,  265,  576,  732,  716,
 /*   200 */   717,  685,  694,  686,  724,  736,  735,  733,  705,  730,
 /*   210 */   704,  649,  669,  643,  621,  584,  670,  678,  657,  671,
 /*   220 */   674,  680,  683,  658,  638,  641,  594,  664,  712,  702,
 /*   230 */   737,  720,  564,  696,  251,  343,  349,  218,   52,  200,
 /*   240 */   302,  402,  553,  531,  569,
);
    const YY_REDUCE_USE_DFLT = -46;
    const YY_REDUCE_MAX = 177;
    static public $yy_reduce_ofst = array(
 /*     0 */   -41,  439,  435,  468,  495,  583,  709,  666,  637,  725,
 /*    10 */   754,  693,  567,  511,  538,  610,  933,  917,  949,  965,
 /*    20 */   981,  901, 1013,  821,  805,  837,  853,  869,  997, 1061,
 /*    30 */   789, 1093, 1045, 1077, 1029,  885,  770, 1109,  633,  534,
 /*    40 */  1125, 1141, 1181,  626, 1174, 1158, 1197, 1190, 1213, 1206,
 /*    50 */  1142,   23,  318,  394,  241,  254,  150,  214,  255,  178,
 /*    60 */   324,  367,  250,  322,  178,  316,  300,  276,  344,  527,
 /*    70 */   527,  527,  527,  395,  555,  516,  562,  476,  568,  507,
 /*    80 */   507,  476,  451,  418,  364,  386,  463,  330,  521,  491,
 /*    90 */   477,  386,  570,  580,  577,  536,  386,  581,  478,  579,
 /*   100 */   578,  519,  556,  295,  330,  260,  -45,  235,  235,  648,
 /*   110 */   667,  648,  648,  648,  648,  648,  656,  235,  235,  656,
 /*   120 */   235,  656,  656,  235,  659,  646,  646,  235,  235,  646,
 /*   130 */   235,  656,  646,  656,  656,  656,  646,  656,  656,  656,
 /*   140 */   656,  656,  656,  653,  656,  656,  235,  235,  308,  662,
 /*   150 */   308,  688,  235,  235,  235,  235,  681,  235,  235,  235,
 /*   160 */   235,  235,  235,  677,  235,  235,  235,  -20,  308,  308,
 /*   170 */   235,  427,  438,  384,  371,  379,  429,  663,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(1, 2, 4, 5, 16, 19, 35, ),
        /* 1 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 2 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 3 */ array(19, 21, 22, 24, 26, 28, 29, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 4 */ array(19, 21, 22, 24, 26, 28, 29, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 5 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 6 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 7 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 8 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 9 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 10 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 11 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 12 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 13 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 14 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 15 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 16 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 17 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 18 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 19 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 20 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 21 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 22 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 23 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 24 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 25 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 26 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 27 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 28 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 29 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 30 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 31 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 32 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 33 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 34 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 35 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 36 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 37 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, 55, ),
        /* 38 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 39 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 40 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 41 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, 54, ),
        /* 42 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 43 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 44 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 45 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 46 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 47 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 48 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 49 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 50 */ array(19, 21, 22, 28, 35, 36, 41, 44, 45, 47, 48, 49, 50, 53, ),
        /* 51 */ array(19, 21, 22, 53, ),
        /* 52 */ array(1, 2, 4, 5, 16, 19, 35, ),
        /* 53 */ array(20, 25, 27, 41, 51, 56, ),
        /* 54 */ array(2, 3, 5, 16, 17, 18, ),
        /* 55 */ array(4, 19, 35, 50, 81, 82, ),
        /* 56 */ array(2, 3, 5, 16, 18, ),
        /* 57 */ array(20, 25, 27, 56, ),
        /* 58 */ array(21, 22, 53, ),
        /* 59 */ array(20, 27, 56, ),
        /* 60 */ array(25, 46, 54, ),
        /* 61 */ array(20, 27, 56, ),
        /* 62 */ array(27, 56, ),
        /* 63 */ array(27, 38, ),
        /* 64 */ array(27, 56, ),
        /* 65 */ array(27, 38, ),
        /* 66 */ array(27, 56, ),
        /* 67 */ array(27, 56, ),
        /* 68 */ array(27, 38, ),
        /* 69 */ array(28, 39, 40, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, ),
        /* 70 */ array(20, 28, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, ),
        /* 71 */ array(28, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, ),
        /* 72 */ array(28, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, ),
        /* 73 */ array(4, 19, 35, 50, 81, 82, ),
        /* 74 */ array(6, 7, 9, 11, ),
        /* 75 */ array(19, 22, 23, 31, ),
        /* 76 */ array(6, 7, 9, 11, ),
        /* 77 */ array(19, 22, 23, 52, ),
        /* 78 */ array(6, 7, 9, 11, ),
        /* 79 */ array(20, 27, 31, ),
        /* 80 */ array(20, 27, 31, ),
        /* 81 */ array(19, 22, 52, ),
        /* 82 */ array(19, 22, ),
        /* 83 */ array(19, 22, ),
        /* 84 */ array(19, 22, ),
        /* 85 */ array(19, 22, ),
        /* 86 */ array(19, 22, ),
        /* 87 */ array(23, 25, ),
        /* 88 */ array(13, 14, ),
        /* 89 */ array(20, 27, ),
        /* 90 */ array(19, 22, ),
        /* 91 */ array(19, 22, ),
        /* 92 */ array(19, 22, ),
        /* 93 */ array(19, 22, ),
        /* 94 */ array(13, 14, ),
        /* 95 */ array(13, 14, ),
        /* 96 */ array(19, 22, ),
        /* 97 */ array(13, 14, ),
        /* 98 */ array(19, 22, ),
        /* 99 */ array(27, ),
        /* 100 */ array(27, ),
        /* 101 */ array(27, ),
        /* 102 */ array(21, ),
        /* 103 */ array(25, ),
        /* 104 */ array(25, ),
        /* 105 */ array(25, ),
        /* 106 */ array(27, ),
        /* 107 */ array(42, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, ),
        /* 108 */ array(56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, ),
        /* 109 */ array(19, 20, 22, 34, ),
        /* 110 */ array(22, 24, 26, 29, ),
        /* 111 */ array(19, 20, 22, 34, ),
        /* 112 */ array(19, 20, 22, ),
        /* 113 */ array(19, 22, 23, ),
        /* 114 */ array(19, 20, 22, ),
        /* 115 */ array(19, 22, 52, ),
        /* 116 */ array(20, 27, ),
        /* 117 */ array(56, 81, ),
        /* 118 */ array(20, 56, ),
        /* 119 */ array(20, 27, ),
        /* 120 */ array(42, 56, ),
        /* 121 */ array(20, 27, ),
        /* 122 */ array(20, 27, ),
        /* 123 */ array(37, 56, ),
        /* 124 */ array(19, 41, ),
        /* 125 */ array(46, 54, ),
        /* 126 */ array(46, 54, ),
        /* 127 */ array(20, 56, ),
        /* 128 */ array(20, 56, ),
        /* 129 */ array(46, 54, ),
        /* 130 */ array(38, 56, ),
        /* 131 */ array(20, 27, ),
        /* 132 */ array(46, 54, ),
        /* 133 */ array(20, 27, ),
        /* 134 */ array(20, 27, ),
        /* 135 */ array(20, 27, ),
        /* 136 */ array(46, 54, ),
        /* 137 */ array(20, 27, ),
        /* 138 */ array(20, 27, ),
        /* 139 */ array(20, 27, ),
        /* 140 */ array(20, 27, ),
        /* 141 */ array(20, 27, ),
        /* 142 */ array(20, 27, ),
        /* 143 */ array(21, 22, ),
        /* 144 */ array(20, 27, ),
        /* 145 */ array(20, 27, ),
        /* 146 */ array(38, 56, ),
        /* 147 */ array(56, ),
        /* 148 */ array(25, ),
        /* 149 */ array(41, ),
        /* 150 */ array(25, ),
        /* 151 */ array(27, ),
        /* 152 */ array(56, ),
        /* 153 */ array(56, ),
        /* 154 */ array(56, ),
        /* 155 */ array(56, ),
        /* 156 */ array(21, ),
        /* 157 */ array(56, ),
        /* 158 */ array(56, ),
        /* 159 */ array(56, ),
        /* 160 */ array(56, ),
        /* 161 */ array(56, ),
        /* 162 */ array(56, ),
        /* 163 */ array(27, ),
        /* 164 */ array(56, ),
        /* 165 */ array(56, ),
        /* 166 */ array(56, ),
        /* 167 */ array(38, ),
        /* 168 */ array(25, ),
        /* 169 */ array(25, ),
        /* 170 */ array(56, ),
        /* 171 */ array(),
        /* 172 */ array(),
        /* 173 */ array(),
        /* 174 */ array(),
        /* 175 */ array(),
        /* 176 */ array(),
        /* 177 */ array(),
        /* 178 */ array(19, 21, 22, 36, 47, 48, ),
        /* 179 */ array(41, 46, 51, 55, ),
        /* 180 */ array(23, 41, 51, ),
        /* 181 */ array(41, 51, 56, ),
        /* 182 */ array(34, 41, 51, ),
        /* 183 */ array(41, 51, ),
        /* 184 */ array(41, 51, ),
        /* 185 */ array(22, 52, ),
        /* 186 */ array(23, 38, ),
        /* 187 */ array(27, 28, ),
        /* 188 */ array(41, 51, ),
        /* 189 */ array(23, 46, ),
        /* 190 */ array(41, 51, ),
        /* 191 */ array(30, 37, ),
        /* 192 */ array(20, 27, ),
        /* 193 */ array(37, 55, ),
        /* 194 */ array(31, 81, ),
        /* 195 */ array(22, 36, ),
        /* 196 */ array(15, ),
        /* 197 */ array(21, ),
        /* 198 */ array(30, ),
        /* 199 */ array(22, ),
        /* 200 */ array(12, ),
        /* 201 */ array(42, ),
        /* 202 */ array(23, ),
        /* 203 */ array(32, ),
        /* 204 */ array(20, ),
        /* 205 */ array(21, ),
        /* 206 */ array(21, ),
        /* 207 */ array(22, ),
        /* 208 */ array(46, ),
        /* 209 */ array(20, ),
        /* 210 */ array(10, ),
        /* 211 */ array(36, ),
        /* 212 */ array(17, ),
        /* 213 */ array(20, ),
        /* 214 */ array(27, ),
        /* 215 */ array(21, ),
        /* 216 */ array(21, ),
        /* 217 */ array(33, ),
        /* 218 */ array(55, ),
        /* 219 */ array(31, ),
        /* 220 */ array(22, ),
        /* 221 */ array(20, ),
        /* 222 */ array(33, ),
        /* 223 */ array(41, ),
        /* 224 */ array(68, ),
        /* 225 */ array(53, ),
        /* 226 */ array(43, ),
        /* 227 */ array(20, ),
        /* 228 */ array(3, ),
        /* 229 */ array(38, ),
        /* 230 */ array(22, ),
        /* 231 */ array(23, ),
        /* 232 */ array(53, ),
        /* 233 */ array(43, ),
        /* 234 */ array(20, ),
        /* 235 */ array(22, ),
        /* 236 */ array(20, ),
        /* 237 */ array(34, ),
        /* 238 */ array(42, ),
        /* 239 */ array(8, ),
        /* 240 */ array(22, ),
        /* 241 */ array(42, ),
        /* 242 */ array(22, ),
        /* 243 */ array(42, ),
        /* 244 */ array(22, ),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
);
    static public $yy_default = array(
 /*     0 */   587,  587,  572,  587,  587,  535,  587,  587,  587,  587,
 /*    10 */   535,  535,  587,  587,  535,  587,  587,  587,  587,  587,
 /*    20 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    30 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    40 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    50 */   587,  587,  389,  587,  587,  587,  411,  587,  587,  587,
 /*    60 */   497,  587,  455,  455,  455,  455,  455,  455,  455,  587,
 /*    70 */   587,  540,  466,  587,  399,  587,  399,  507,  399,  478,
 /*    80 */   478,  507,  587,  587,  587,  587,  587,  500,  405,  469,
 /*    90 */   587,  587,  587,  587,  405,  405,  587,  405,  587,  455,
 /*   100 */   455,  455,  587,  493,  500,  492,  455,  587,  542,  587,
 /*   110 */   587,  587,  587,  587,  587,  508,  587,  587,  587,  587,
 /*   120 */   587,  587,  587,  534,  507,  529,  527,  587,  587,  526,
 /*   130 */   587,  587,  528,  587,  587,  587,  505,  587,  587,  587,
 /*   140 */   587,  587,  587,  587,  587,  587,  587,  573,  495,  507,
 /*   150 */   498,  586,  574,  575,  457,  554,  587,  550,  461,  549,
 /*   160 */   438,  464,  545,  586,  546,  476,  553,  468,  523,  494,
 /*   170 */   477,  539,  539,  507,  539,  507,  507,  539,  587,  587,
 /*   180 */   460,  456,  465,  465,  541,  587,  521,  587,  555,  483,
 /*   190 */   587,  587,  469,  587,  478,  587,  587,  587,  587,  587,
 /*   200 */   587,  587,  460,  462,  587,  587,  587,  587,  483,  587,
 /*   210 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  478,
 /*   220 */   587,  587,  587,  496,  469,  587,  587,  469,  587,  521,
 /*   230 */   587,  587,  587,  488,  587,  587,  587,  469,  587,  587,
 /*   240 */   587,  587,  587,  587,  587,  566,  557,  565,  577,  390,
 /*   250 */   567,  568,  393,  522,  491,  412,  459,  564,  563,  560,
 /*   260 */   561,  474,  391,  413,  414,  392,  562,  415,  558,  472,
 /*   270 */   475,  559,  409,  397,  396,  400,  398,  518,  395,  516,
 /*   280 */   584,  407,  532,  402,  404,  530,  401,  403,  394,  515,
 /*   290 */   513,  447,  512,  448,  449,  511,  446,  410,  517,  488,
 /*   300 */   408,  452,  406,  514,  510,  470,  426,  427,  428,  430,
 /*   310 */   536,  537,  422,  421,  582,  420,  581,  521,  432,  520,
 /*   320 */   471,  433,  431,  419,  489,  423,  556,  543,  544,  503,
 /*   330 */   502,  570,  571,  533,  569,  504,  499,  547,  467,  425,
 /*   340 */   424,  552,  551,  548,  473,  519,  509,  429,  585,  463,
 /*   350 */   450,  445,  439,  451,  538,  437,  454,  453,  440,  579,
 /*   360 */   578,  580,  416,  417,  418,  490,  576,  469,  531,  443,
 /*   370 */   525,  444,  487,  524,  442,  506,  441,  501,  486,  434,
 /*   380 */   435,  479,  482,  480,  481,  436,  485,  484,  583,
);
    const YYNOCODE = 130;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 389;
    const YYNRULE = 198;
    const YYERRORSYMBOL = 83;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'OTHER',         'FAKEPHPSTARTTAG',  'PHP_CODE',      'PHP_CODE_START_DOUBLEQUOTE',
  'PHP_CODE_DOUBLEQUOTE',  'PHP_HEREDOC_START',  'PHP_HEREDOC_END',  'PHP_NOWDOC_START',
  'PHP_NOWDOC_END',  'PHP_DQ_CONTENT',  'PHP_DQ_EMBED_START',  'PHP_DQ_EMBED_END',
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',        
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',       
  'FOREACH',       'PTR',           'IF',            'SPACE',       
  'UNIMATH',       'FOR',           'SEMICOLON',     'INCDEC',      
  'TO',            'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'COLON',         'MATH',        
  'ANDSYM',        'OPENP',         'CLOSEP',        'QMARK',       
  'NOT',           'TYPECAST',      'DOT',           'BOOLEAN',     
  'NULL',          'SINGLEQUOTESTRING',  'QUOTE',         'DOUBLECOLON', 
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'VERT',          'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',         
  'LXOR',          'BACKTICK',      'DOLLARID',      'error',       
  'start',         'template',      'template_element',  'smartytag',   
  'literal',       'php_code',      'php_code_element',  'php_dq_contents',
  'php_dq_content',  'literal_elements',  'literal_element',  'value',       
  'attributes',    'variable',      'expr',          'ternary',     
  'varindexed',    'modifier',      'modparameters',  'ifexpr',      
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'specialclose',  'attribute',   
  'exprs',         'ifcond',        'lop',           'function',    
  'doublequoted',  'method',        'params',        'objectchain', 
  'arrayindex',    'object',        'indexdef',      'varvarele',   
  'objectelement',  'modparameter',  'arrayelements',  'arrayelement',
  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG php_code PHPENDTAG",
 /*   7 */ "template_element ::= OTHER",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "php_code ::= php_code_element php_code",
 /*  10 */ "php_code ::=",
 /*  11 */ "php_code_element ::= PHP_CODE",
 /*  12 */ "php_code_element ::= PHP_CODE_START_DOUBLEQUOTE php_dq_contents PHP_CODE_DOUBLEQUOTE",
 /*  13 */ "php_code_element ::= PHP_HEREDOC_START php_dq_contents PHP_HEREDOC_END",
 /*  14 */ "php_code_element ::= PHP_NOWDOC_START php_dq_contents PHP_NOWDOC_END",
 /*  15 */ "php_dq_contents ::= php_dq_content php_dq_contents",
 /*  16 */ "php_dq_contents ::=",
 /*  17 */ "php_dq_content ::= PHP_DQ_CONTENT",
 /*  18 */ "php_dq_content ::= PHP_DQ_EMBED_START php_code PHP_DQ_EMBED_END",
 /*  19 */ "literal ::= LITERALSTART LITERALEND",
 /*  20 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  21 */ "literal_elements ::= literal_element literal_elements",
 /*  22 */ "literal_elements ::=",
 /*  23 */ "literal_element ::= literal",
 /*  24 */ "literal_element ::= LITERAL",
 /*  25 */ "literal_element ::= PHPSTARTTAG",
 /*  26 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  27 */ "literal_element ::= PHPENDTAG",
 /*  28 */ "smartytag ::= LDEL value RDEL",
 /*  29 */ "smartytag ::= LDEL value attributes RDEL",
 /*  30 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  32 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  37 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  38 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID RDEL",
 /*  42 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  43 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  44 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  45 */ "smartytag ::= LDEL IF SPACE ifexpr RDEL",
 /*  46 */ "smartytag ::= LDEL IF UNIMATH ifexpr RDEL",
 /*  47 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  48 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexpr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  49 */ "foraction ::= EQUAL expr",
 /*  50 */ "foraction ::= INCDEC",
 /*  51 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  52 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  53 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  54 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  55 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  56 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  57 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  58 */ "specialclose ::= IF",
 /*  59 */ "specialclose ::= FOR",
 /*  60 */ "specialclose ::= FOREACH",
 /*  61 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  62 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  63 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  64 */ "attributes ::= attributes attribute",
 /*  65 */ "attributes ::= attribute",
 /*  66 */ "attributes ::=",
 /*  67 */ "attribute ::= SPACE ID EQUAL ID",
 /*  68 */ "attribute ::= SPACE ID EQUAL expr",
 /*  69 */ "attribute ::= SPACE ID EQUAL value",
 /*  70 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  71 */ "attribute ::= SPACE ID",
 /*  72 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  73 */ "statements ::= statement",
 /*  74 */ "statements ::= statements COMMA statement",
 /*  75 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  76 */ "expr ::= ID",
 /*  77 */ "expr ::= exprs",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "expr ::= expr modifier modparameters",
 /*  80 */ "exprs ::= value",
 /*  81 */ "exprs ::= exprs MATH value",
 /*  82 */ "exprs ::= exprs UNIMATH value",
 /*  83 */ "exprs ::= exprs ANDSYM value",
 /*  84 */ "exprs ::= array",
 /*  85 */ "exprs ::= exprs ifcond value",
 /*  86 */ "exprs ::= exprs lop value",
 /*  87 */ "ternary ::= OPENP ifexpr CLOSEP QMARK expr COLON expr",
 /*  88 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  89 */ "value ::= variable",
 /*  90 */ "value ::= UNIMATH value",
 /*  91 */ "value ::= NOT value",
 /*  92 */ "value ::= TYPECAST value",
 /*  93 */ "value ::= variable INCDEC",
 /*  94 */ "value ::= INTEGER",
 /*  95 */ "value ::= INTEGER DOT INTEGER",
 /*  96 */ "value ::= BOOLEAN",
 /*  97 */ "value ::= NULL",
 /*  98 */ "value ::= function",
 /*  99 */ "value ::= OPENP expr CLOSEP",
 /* 100 */ "value ::= SINGLEQUOTESTRING",
 /* 101 */ "value ::= QUOTE doublequoted QUOTE",
 /* 102 */ "value ::= QUOTE QUOTE",
 /* 103 */ "value ::= ID DOUBLECOLON method",
 /* 104 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /* 105 */ "value ::= ID DOUBLECOLON method objectchain",
 /* 106 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /* 107 */ "value ::= ID DOUBLECOLON ID",
 /* 108 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /* 109 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 110 */ "value ::= smartytag",
 /* 111 */ "variable ::= varindexed",
 /* 112 */ "variable ::= DOLLAR varvar AT ID",
 /* 113 */ "variable ::= object",
 /* 114 */ "variable ::= HATCH ID HATCH",
 /* 115 */ "variable ::= HATCH variable HATCH",
 /* 116 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 117 */ "arrayindex ::= arrayindex indexdef",
 /* 118 */ "arrayindex ::=",
 /* 119 */ "indexdef ::= DOT DOLLAR varvar",
 /* 120 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 121 */ "indexdef ::= DOT ID",
 /* 122 */ "indexdef ::= DOT BOOLEAN",
 /* 123 */ "indexdef ::= DOT NULL",
 /* 124 */ "indexdef ::= DOT INTEGER",
 /* 125 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 126 */ "indexdef ::= OPENB ID CLOSEB",
 /* 127 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 128 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 129 */ "indexdef ::= OPENB CLOSEB",
 /* 130 */ "varvar ::= varvarele",
 /* 131 */ "varvar ::= varvar varvarele",
 /* 132 */ "varvarele ::= ID",
 /* 133 */ "varvarele ::= LDEL expr RDEL",
 /* 134 */ "object ::= varindexed objectchain",
 /* 135 */ "objectchain ::= objectelement",
 /* 136 */ "objectchain ::= objectchain objectelement",
 /* 137 */ "objectelement ::= PTR ID arrayindex",
 /* 138 */ "objectelement ::= PTR variable arrayindex",
 /* 139 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 140 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 141 */ "objectelement ::= PTR method",
 /* 142 */ "function ::= ID OPENP params CLOSEP",
 /* 143 */ "method ::= ID OPENP params CLOSEP",
 /* 144 */ "params ::= expr COMMA params",
 /* 145 */ "params ::= expr",
 /* 146 */ "params ::=",
 /* 147 */ "modifier ::= VERT AT ID",
 /* 148 */ "modifier ::= VERT ID",
 /* 149 */ "modparameters ::= modparameters modparameter",
 /* 150 */ "modparameters ::=",
 /* 151 */ "modparameter ::= COLON exprs",
 /* 152 */ "modparameter ::= COLON ID",
 /* 153 */ "ifexpr ::= expr",
 /* 154 */ "ifexpr ::= expr ISIN array",
 /* 155 */ "ifexpr ::= expr ISIN value",
 /* 156 */ "ifexpr ::= expr ISDIVBY expr",
 /* 157 */ "ifexpr ::= expr ISNOTDIVBY expr",
 /* 158 */ "ifexpr ::= expr ISEVEN",
 /* 159 */ "ifexpr ::= expr ISNOTEVEN",
 /* 160 */ "ifexpr ::= expr ISEVENBY expr",
 /* 161 */ "ifexpr ::= expr ISNOTEVENBY expr",
 /* 162 */ "ifexpr ::= expr ISODD",
 /* 163 */ "ifexpr ::= expr ISNOTODD",
 /* 164 */ "ifexpr ::= expr ISODDBY expr",
 /* 165 */ "ifexpr ::= expr ISNOTODDBY expr",
 /* 166 */ "ifexpr ::= value INSTANCEOF ID",
 /* 167 */ "ifexpr ::= value INSTANCEOF value",
 /* 168 */ "ifcond ::= EQUALS",
 /* 169 */ "ifcond ::= NOTEQUALS",
 /* 170 */ "ifcond ::= GREATERTHAN",
 /* 171 */ "ifcond ::= LESSTHAN",
 /* 172 */ "ifcond ::= GREATEREQUAL",
 /* 173 */ "ifcond ::= LESSEQUAL",
 /* 174 */ "ifcond ::= IDENTITY",
 /* 175 */ "ifcond ::= NONEIDENTITY",
 /* 176 */ "ifcond ::= MOD",
 /* 177 */ "lop ::= LAND",
 /* 178 */ "lop ::= LOR",
 /* 179 */ "lop ::= LXOR",
 /* 180 */ "array ::= OPENB arrayelements CLOSEB",
 /* 181 */ "arrayelements ::= arrayelement",
 /* 182 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 183 */ "arrayelements ::=",
 /* 184 */ "arrayelement ::= value APTR expr",
 /* 185 */ "arrayelement ::= ID APTR expr",
 /* 186 */ "arrayelement ::= expr",
 /* 187 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 188 */ "doublequoted ::= doublequotedcontent",
 /* 189 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 190 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 191 */ "doublequotedcontent ::= DOLLARID",
 /* 192 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 193 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 194 */ "doublequotedcontent ::= smartytag",
 /* 195 */ "doublequotedcontent ::= OTHER",
 /* 196 */ "optspace ::= SPACE",
 /* 197 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 0 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 13 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 11 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 11 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 7 ),
  array( 'lhs' => 99, 'rhs' => 7 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 7 ),
  array( 'lhs' => 95, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 8 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 5 ),
  array( 'lhs' => 95, 'rhs' => 6 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 0 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 5 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 4 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 5 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 123, 'rhs' => 1 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 2 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 124, 'rhs' => 3 ),
  array( 'lhs' => 124, 'rhs' => 3 ),
  array( 'lhs' => 124, 'rhs' => 5 ),
  array( 'lhs' => 124, 'rhs' => 6 ),
  array( 'lhs' => 124, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 117, 'rhs' => 4 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 0 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 0 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 126, 'rhs' => 1 ),
  array( 'lhs' => 126, 'rhs' => 3 ),
  array( 'lhs' => 126, 'rhs' => 0 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 3 ),
  array( 'lhs' => 128, 'rhs' => 3 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 3 ),
  array( 'lhs' => 128, 'rhs' => 3 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        11 => 0,
        17 => 0,
        23 => 0,
        24 => 0,
        58 => 0,
        59 => 0,
        60 => 0,
        80 => 0,
        89 => 0,
        94 => 0,
        96 => 0,
        97 => 0,
        98 => 0,
        100 => 0,
        113 => 0,
        181 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        15 => 9,
        21 => 9,
        90 => 9,
        92 => 9,
        93 => 9,
        10 => 10,
        16 => 10,
        19 => 10,
        22 => 10,
        12 => 12,
        13 => 12,
        14 => 12,
        18 => 12,
        20 => 20,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 29,
        31 => 29,
        32 => 29,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 35,
        37 => 37,
        38 => 37,
        39 => 39,
        40 => 39,
        41 => 41,
        42 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        47 => 45,
        46 => 46,
        48 => 48,
        49 => 49,
        50 => 50,
        65 => 50,
        145 => 50,
        186 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 56,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 64,
        66 => 66,
        67 => 67,
        68 => 68,
        69 => 68,
        70 => 68,
        72 => 68,
        71 => 71,
        73 => 73,
        74 => 74,
        75 => 75,
        76 => 76,
        77 => 77,
        84 => 77,
        130 => 77,
        188 => 77,
        195 => 77,
        196 => 77,
        78 => 78,
        79 => 79,
        81 => 81,
        82 => 81,
        83 => 81,
        85 => 85,
        86 => 85,
        166 => 85,
        87 => 87,
        88 => 87,
        91 => 91,
        95 => 95,
        99 => 99,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        187 => 117,
        118 => 118,
        150 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 121,
        123 => 121,
        124 => 124,
        125 => 125,
        128 => 125,
        126 => 126,
        127 => 127,
        129 => 129,
        197 => 129,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        146 => 146,
        147 => 147,
        148 => 147,
        149 => 149,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        163 => 158,
        159 => 159,
        162 => 159,
        160 => 160,
        165 => 160,
        161 => 161,
        164 => 161,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        189 => 189,
        190 => 189,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
    );
#line 81 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1914 "smarty_internal_templateparser.php"
#line 87 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1923 "smarty_internal_templateparser.php"
#line 95 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1933 "smarty_internal_templateparser.php"
#line 108 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 1940 "smarty_internal_templateparser.php"
#line 115 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1943 "smarty_internal_templateparser.php"
#line 121 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + -2]->minor) . $this->yystack[$this->yyidx + -1]->minor . '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'?>', ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php'.$this->yystack[$this->yyidx + -1]->minor.'?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 1956 "smarty_internal_templateparser.php"
#line 135 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 1964 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 1972 "smarty_internal_templateparser.php"
#line 150 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 1975 "smarty_internal_templateparser.php"
#line 151 "smarty_internal_templateparser.y"
    function yy_r10(){ $this->_retvalue = '';     }
#line 1978 "smarty_internal_templateparser.php"
#line 154 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 1981 "smarty_internal_templateparser.php"
#line 167 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 1984 "smarty_internal_templateparser.php"
#line 174 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 1987 "smarty_internal_templateparser.php"
#line 176 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 1990 "smarty_internal_templateparser.php"
#line 184 "smarty_internal_templateparser.y"
    function yy_r28(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1993 "smarty_internal_templateparser.php"
#line 185 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 1996 "smarty_internal_templateparser.php"
#line 196 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 1999 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2002 "smarty_internal_templateparser.php"
#line 200 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2005 "smarty_internal_templateparser.php"
#line 203 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2008 "smarty_internal_templateparser.php"
#line 205 "smarty_internal_templateparser.y"
    function yy_r41(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2011 "smarty_internal_templateparser.php"
#line 207 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2014 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r43(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2019 "smarty_internal_templateparser.php"
#line 213 "smarty_internal_templateparser.y"
    function yy_r44(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2024 "smarty_internal_templateparser.php"
#line 217 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2027 "smarty_internal_templateparser.php"
#line 218 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2030 "smarty_internal_templateparser.php"
#line 221 "smarty_internal_templateparser.y"
    function yy_r48(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2034 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2037 "smarty_internal_templateparser.php"
#line 224 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2040 "smarty_internal_templateparser.php"
#line 225 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2043 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r52(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2047 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r53(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2051 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r54(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2055 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r55(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2059 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2062 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2065 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r62(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2070 "smarty_internal_templateparser.php"
#line 248 "smarty_internal_templateparser.y"
    function yy_r63(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2073 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2076 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = array();    }
#line 2079 "smarty_internal_templateparser.php"
#line 262 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2082 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2085 "smarty_internal_templateparser.php"
#line 266 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2088 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r73(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2091 "smarty_internal_templateparser.php"
#line 274 "smarty_internal_templateparser.y"
    function yy_r74(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2094 "smarty_internal_templateparser.php"
#line 276 "smarty_internal_templateparser.y"
    function yy_r75(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2097 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r76(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2100 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r77(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2103 "smarty_internal_templateparser.php"
#line 285 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2106 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r79(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2109 "smarty_internal_templateparser.php"
#line 295 "smarty_internal_templateparser.y"
    function yy_r81(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2112 "smarty_internal_templateparser.php"
#line 301 "smarty_internal_templateparser.y"
    function yy_r85(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2115 "smarty_internal_templateparser.php"
#line 307 "smarty_internal_templateparser.y"
    function yy_r87(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2118 "smarty_internal_templateparser.php"
#line 316 "smarty_internal_templateparser.y"
    function yy_r91(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2121 "smarty_internal_templateparser.php"
#line 321 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2124 "smarty_internal_templateparser.php"
#line 331 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2127 "smarty_internal_templateparser.php"
#line 335 "smarty_internal_templateparser.y"
    function yy_r101(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2136 "smarty_internal_templateparser.php"
#line 342 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = "''";     }
#line 2139 "smarty_internal_templateparser.php"
#line 344 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2142 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2145 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2148 "smarty_internal_templateparser.php"
#line 348 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2151 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r107(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2154 "smarty_internal_templateparser.php"
#line 352 "smarty_internal_templateparser.y"
    function yy_r108(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2157 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r109(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2160 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r110(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2163 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r111(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2167 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r112(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2170 "smarty_internal_templateparser.php"
#line 372 "smarty_internal_templateparser.y"
    function yy_r114(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2173 "smarty_internal_templateparser.php"
#line 373 "smarty_internal_templateparser.y"
    function yy_r115(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2176 "smarty_internal_templateparser.php"
#line 376 "smarty_internal_templateparser.y"
    function yy_r116(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2179 "smarty_internal_templateparser.php"
#line 382 "smarty_internal_templateparser.y"
    function yy_r117(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2182 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r118(){return;    }
#line 2185 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2188 "smarty_internal_templateparser.php"
#line 389 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2191 "smarty_internal_templateparser.php"
#line 392 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2194 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r124(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2197 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r125(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2200 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r126(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2203 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r127(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2206 "smarty_internal_templateparser.php"
#line 404 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue = '';    }
#line 2209 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r131(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2212 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r132(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2215 "smarty_internal_templateparser.php"
#line 417 "smarty_internal_templateparser.y"
    function yy_r133(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2218 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r134(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2222 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r135(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2225 "smarty_internal_templateparser.php"
#line 427 "smarty_internal_templateparser.y"
    function yy_r136(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2228 "smarty_internal_templateparser.php"
#line 429 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2231 "smarty_internal_templateparser.php"
#line 430 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2234 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2237 "smarty_internal_templateparser.php"
#line 432 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2240 "smarty_internal_templateparser.php"
#line 434 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2243 "smarty_internal_templateparser.php"
#line 440 "smarty_internal_templateparser.y"
    function yy_r142(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2252 "smarty_internal_templateparser.php"
#line 451 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2255 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r144(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2258 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r146(){ return;    }
#line 2261 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r147(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2264 "smarty_internal_templateparser.php"
#line 477 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2267 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2270 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2273 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r153(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2276 "smarty_internal_templateparser.php"
#line 487 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2279 "smarty_internal_templateparser.php"
#line 488 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2282 "smarty_internal_templateparser.php"
#line 489 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2285 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2288 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2291 "smarty_internal_templateparser.php"
#line 492 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2294 "smarty_internal_templateparser.php"
#line 493 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2297 "smarty_internal_templateparser.php"
#line 494 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2300 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r167(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2303 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '==';    }
#line 2306 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '!=';    }
#line 2309 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '>';    }
#line 2312 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '<';    }
#line 2315 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '>=';    }
#line 2318 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '<=';    }
#line 2321 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '===';    }
#line 2324 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '!==';    }
#line 2327 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '%';    }
#line 2330 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '&&';    }
#line 2333 "smarty_internal_templateparser.php"
#line 513 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = '||';    }
#line 2336 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = ' XOR ';    }
#line 2339 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r180(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2342 "smarty_internal_templateparser.php"
#line 521 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2345 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r183(){ return;     }
#line 2348 "smarty_internal_templateparser.php"
#line 523 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2351 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r185(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2354 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r189(){$this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;    }
#line 2357 "smarty_internal_templateparser.php"
#line 535 "smarty_internal_templateparser.y"
    function yy_r191(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2360 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r192(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."'; $this->compiler->has_variable_string = true;
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;
                                                                }
                                                                   }
#line 2368 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2371 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r194(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2374 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 71 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2437 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 63 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2455 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>
