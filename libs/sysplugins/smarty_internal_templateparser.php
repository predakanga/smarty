<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->allowed_php = false;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 127 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_FAKEPHPSTARTTAG                =  6;
    const TP_XMLTAG                         =  7;
    const TP_OTHER                          =  8;
    const TP_LITERALSTART                   =  9;
    const TP_LITERALEND                     = 10;
    const TP_LITERAL                        = 11;
    const TP_LDEL                           = 12;
    const TP_RDEL                           = 13;
    const TP_DOLLAR                         = 14;
    const TP_ID                             = 15;
    const TP_EQUAL                          = 16;
    const TP_FOREACH                        = 17;
    const TP_PTR                            = 18;
    const TP_IF                             = 19;
    const TP_SPACE                          = 20;
    const TP_UNIMATH                        = 21;
    const TP_FOR                            = 22;
    const TP_SEMICOLON                      = 23;
    const TP_INCDEC                         = 24;
    const TP_TO                             = 25;
    const TP_STEP                           = 26;
    const TP_AS                             = 27;
    const TP_APTR                           = 28;
    const TP_LDELSLASH                      = 29;
    const TP_INTEGER                        = 30;
    const TP_COMMA                          = 31;
    const TP_MATH                           = 32;
    const TP_ANDSYM                         = 33;
    const TP_OPENP                          = 34;
    const TP_CLOSEP                         = 35;
    const TP_QMARK                          = 36;
    const TP_NOT                            = 37;
    const TP_TYPECAST                       = 38;
    const TP_DOT                            = 39;
    const TP_BOOLEAN                        = 40;
    const TP_NULL                           = 41;
    const TP_SINGLEQUOTESTRING              = 42;
    const TP_QUOTE                          = 43;
    const TP_DOUBLECOLON                    = 44;
    const TP_AT                             = 45;
    const TP_HATCH                          = 46;
    const TP_OPENB                          = 47;
    const TP_CLOSEB                         = 48;
    const TP_ISIN                           = 49;
    const TP_ISDIVBY                        = 50;
    const TP_ISNOTDIVBY                     = 51;
    const TP_ISEVEN                         = 52;
    const TP_ISNOTEVEN                      = 53;
    const TP_ISEVENBY                       = 54;
    const TP_ISNOTEVENBY                    = 55;
    const TP_ISODD                          = 56;
    const TP_ISNOTODD                       = 57;
    const TP_ISODDBY                        = 58;
    const TP_ISNOTODDBY                     = 59;
    const TP_INSTANCEOF                     = 60;
    const TP_EQUALS                         = 61;
    const TP_NOTEQUALS                      = 62;
    const TP_GREATERTHAN                    = 63;
    const TP_LESSTHAN                       = 64;
    const TP_GREATEREQUAL                   = 65;
    const TP_LESSEQUAL                      = 66;
    const TP_IDENTITY                       = 67;
    const TP_NONEIDENTITY                   = 68;
    const TP_MOD                            = 69;
    const TP_LAND                           = 70;
    const TP_LOR                            = 71;
    const TP_LXOR                           = 72;
    const TP_BACKTICK                       = 73;
    const TP_DOLLARID                       = 74;
    const YY_NO_ACTION = 590;
    const YY_ACCEPT_ACTION = 589;
    const YY_ERROR_ACTION = 588;

    const YY_SZ_ACTTAB = 1702;
static public $yy_action = array(
 /*     0 */    20,  176,   91,   62,  288,   98,  287,  203,  149,   50,
 /*    10 */   233,  589,   60,  263,  321,  323,  281,  120,  223,  283,
 /*    20 */    19,  136,   17,   23,   10,   47,   49,  183,  296,  297,
 /*    30 */   299,   61,   55,  151,   64,   16,  330,  120,   20,  283,
 /*    40 */    85,  188,   71,  334,  336,  335,   42,   50,  158,  317,
 /*    50 */   333,  270,   23,  185,  281,  120,  223,  278,   19,   54,
 /*    60 */    27,   43,  151,   47,   49,  183,  296,  297,  299,   61,
 /*    70 */    51,   52,   64,   16,  254,  120,   20,  271,   87,  196,
 /*    80 */   259,   37,  282,    2,   13,   50,  257,   33,   54,  280,
 /*    90 */   298,   31,   33,  120,  223,  298,   31,  145,   27,   51,
 /*   100 */    52,   47,   49,  178,  296,  297,  299,   61,   23,  195,
 /*   110 */    64,   16,  330,  220,   20,  195,   87,  190,  151,   37,
 /*   120 */   282,  305,  256,   50,  311,  228,   63,  332,  264,   30,
 /*   130 */   267,  120,  223,  265,  193,  129,   27,  195,   33,   47,
 /*   140 */    49,  298,  296,  297,  299,   61,  195,  168,   64,   16,
 /*   150 */   330,   24,   20,  382,   87,  196,   33,  363,  351,  298,
 /*   160 */   341,   50,  218,  208,   38,  193,   95,  193,   53,  120,
 /*   170 */   223,  222,  205,  276,   18,  261,  195,    7,   49,   23,
 /*   180 */   296,  297,  299,   61,  304,  140,   64,   16,  456,  151,
 /*   190 */    20,  177,   85,  194,   33,  456,   53,  298,   36,   50,
 /*   200 */   330,   33,  358,  308,  298,  179,  284,  120,  223,   95,
 /*   210 */   193,  147,   27,   35,  311,   47,   49,  235,  296,  297,
 /*   220 */   299,   61,   22,  260,   64,   16,  330,  304,   20,  277,
 /*   230 */    85,  191,  195,  156,  453,   53,  226,   50,  312,   33,
 /*   240 */   354,  453,  298,  195,  326,  120,  198,  216,  330,  246,
 /*   250 */    27,  193,  243,   47,   49,   23,  296,  297,  299,   61,
 /*   260 */   312,    4,   64,   16,    1,  151,   20,  209,   87,  186,
 /*   270 */    41,   26,  134,   85,  146,   50,   33,  359,   54,  298,
 /*   280 */    85,  219,   33,  120,  223,  298,   25,  330,   12,   51,
 /*   290 */    52,    7,   49,  139,  296,  297,  299,   61,   39,  181,
 /*   300 */    64,   16,   10,  372,   20,   64,   83,  196,  330,  452,
 /*   310 */   137,  185,   64,   50,  154,  228,  193,  290,    1,   43,
 /*   320 */   311,  120,  223,  128,  273,  330,   18,  227,  245,    7,
 /*   330 */    49,  193,  296,  297,  299,   61,   23,  300,   64,   16,
 /*   340 */    10,    3,   20,   55,   87,  196,  151,  320,  321,  323,
 /*   350 */   345,   50,   33,  195,  163,  298,  195,  193,  369,  120,
 /*   360 */   223,  293,  339,  133,   12,  193,  166,    7,   49,  193,
 /*   370 */   296,  297,  299,   61,  160,  193,   64,   16,  330,  210,
 /*   380 */   248,    8,   11,  364,  347,    5,    6,  346,  348,    9,
 /*   390 */    15,  225,   38,  290,  325,   20,  324,   85,  194,   69,
 /*   400 */   155,  349,  350,  285,   50,  322,  319,  318,  314,  313,
 /*   410 */   315,  158,  120,  223,   20,  330,   76,   27,  356,  236,
 /*   420 */    47,   49,  242,  296,  297,  299,   61,  312,  159,   64,
 /*   430 */   300,  120,  142,  287,    8,   11,  364,  347,    5,    6,
 /*   440 */   346,  348,    9,   15,  141,  360,  144,  330,  240,   24,
 /*   450 */   368,   55,  193,  361,  349,  350,  285,  193,   48,  330,
 /*   460 */   193,  330,  251,    8,   11,  364,  347,    5,    6,  346,
 /*   470 */   348,    9,   15,  365,  362,  310,  193,  355,  207,  197,
 /*   480 */   343,  193,  193,  349,  350,  285,   45,  193,    8,   11,
 /*   490 */   364,  347,    5,    6,  346,  348,    9,   15,  378,  386,
 /*   500 */   387,  388,  389,  385,  384,  380,  379,  152,  349,  350,
 /*   510 */   285,  193,  125,   73,    8,   11,  364,  347,    5,    6,
 /*   520 */   346,  348,    9,   15,  352,  381,  300,  300,  195,  291,
 /*   530 */   331,  193,  193,  309,  349,  350,  285,  193,  126,  131,
 /*   540 */   193,    8,   11,  364,  347,    5,    6,  346,  348,    9,
 /*   550 */    15,   70,  300,   33,  330,   20,  200,   85,  199,  390,
 /*   560 */   307,  349,  350,  285,   50,  303,   68,  193,  193,  165,
 /*   570 */    40,  230,  120,  223,   34,   95,   33,   27,  122,  213,
 /*   580 */    47,   49,  148,  296,  297,  299,   61,  292,   88,   64,
 /*   590 */    86,  130,  300,  304,   74,  124,    8,   11,  364,  347,
 /*   600 */     5,    6,  346,  348,    9,   15,  330,  329,  300,  300,
 /*   610 */    20,  123,   85,  202,  193,  328,  349,  350,  285,   50,
 /*   620 */    28,  253,  193,  338,  306,  300,  342,  120,  223,  173,
 /*   630 */   337,  193,   27,  193,  287,   47,   49,  164,  296,  297,
 /*   640 */   299,   61,  287,  132,   64,  153,  217,    8,   11,  364,
 /*   650 */   347,    5,    6,  346,  348,    9,   15,   66,  330,   67,
 /*   660 */   330,   35,   44,  216,   90,  252,  303,  349,  350,  285,
 /*   670 */   127,  301,  230,   58,   96,   56,   95,  279,  180,  303,
 /*   680 */   258,   78,   97,  172,  302,  230,   81,  192,  292,   95,
 /*   690 */   269,  268,   79,  373,  304,  289,  303,  377,   32,  383,
 /*   700 */   121,  292,  230,  116,  262,  108,   95,  304,  266,  255,
 /*   710 */   272,  311,  182,  294,  302,  226,  303,  192,  292,  100,
 /*   720 */   175,  295,  230,  286,  304,  169,   95,  303,   29,  383,
 /*   730 */   211,  138,  327,  230,   59,   94,   57,   95,  292,  193,
 /*   740 */    46,  290,   82,  452,  304,  302,  288,  303,  192,  292,
 /*   750 */   193,  161,  303,  230,   38,  304,  138,   95,  230,  119,
 /*   760 */   383,  105,   95,   21,  454,  244,  316,  234,   48,  292,
 /*   770 */   302,  454,  274,  192,  292,  304,   14,  221,   99,   45,
 /*   780 */   304,   72,  275,  143,  317,  383,  317,  317,  317,  317,
 /*   790 */   312,  378,  386,  387,  388,  389,  385,  384,  380,  379,
 /*   800 */    45,  317,  317,  317,  317,  317,  317,  317,  317,  317,
 /*   810 */   317,  317,  378,  386,  387,  388,  389,  385,  384,  380,
 /*   820 */   379,  317,  317,  303,  317,  317,  317,  157,  303,  230,
 /*   830 */   367,  317,  138,   95,  230,  119,  317,  102,   95,  317,
 /*   840 */   317,  302,  317,  317,  192,  292,  302,  317,  317,  192,
 /*   850 */   292,  304,  317,  317,  317,  317,  304,  317,  317,  201,
 /*   860 */   366,  383,  317,  317,  317,  303,  317,  317,  317,  138,
 /*   870 */   317,  230,  119,  317,  114,   95,  317,  317,  303,  317,
 /*   880 */   317,  317,  150,  302,  230,  317,  192,  292,   95,  317,
 /*   890 */   317,  317,  317,  304,  317,  303,  206,  317,  383,  138,
 /*   900 */   292,  230,  119,  317,  109,   95,  304,  317,  317,  317,
 /*   910 */   317,  317,  317,  302,  317,  303,  192,  292,  317,  138,
 /*   920 */   317,  230,  119,  304,  113,   95,  317,  317,  383,  317,
 /*   930 */   317,  317,  317,  302,  317,  317,  192,  292,  317,  317,
 /*   940 */   303,  317,  317,  304,  138,  317,  230,  119,  383,  107,
 /*   950 */    95,  317,  317,  317,  317,  317,  317,  317,  302,  317,
 /*   960 */   317,  192,  292,  317,  317,  317,  303,  317,  304,  317,
 /*   970 */   167,  317,  230,  383,  317,  303,   95,  317,  317,  138,
 /*   980 */   317,  230,  119,  317,  112,   95,  317,  317,  292,  317,
 /*   990 */   317,  317,  317,  302,  304,  303,  192,  292,  317,  138,
 /*  1000 */   317,  230,  117,  304,  104,   95,  317,  317,  383,  317,
 /*  1010 */   317,  382,  317,  302,  317,  317,  192,  292,  317,  317,
 /*  1020 */   317,  317,  317,  304,  317,   45,  317,  317,  383,  317,
 /*  1030 */   317,  317,  317,  317,  317,  317,  317,  378,  386,  387,
 /*  1040 */   388,  389,  385,  384,  380,  379,  317,  317,  303,  317,
 /*  1050 */   317,  317,  138,  317,  230,  119,  317,  111,   95,  317,
 /*  1060 */   317,  317,  317,  317,  317,  317,  302,  317,  303,  192,
 /*  1070 */   292,  317,  170,  303,  230,  317,  304,  138,   95,  230,
 /*  1080 */   118,  383,  106,   95,  317,  317,  317,  317,  317,  317,
 /*  1090 */   292,  302,  317,  303,  192,  292,  304,  138,  317,  230,
 /*  1100 */   119,  304,  115,   95,  317,  317,  383,  317,  317,  317,
 /*  1110 */   317,  302,  317,  317,  192,  292,  317,  317,  303,  317,
 /*  1120 */   317,  304,  138,  317,  230,  119,  383,  101,   95,  238,
 /*  1130 */   317,  317,  317,  317,  317,  317,  302,  317,  317,  192,
 /*  1140 */   292,  317,  317,   45,  317,  317,  304,  317,  317,  317,
 /*  1150 */   317,  383,  317,  317,  317,  378,  386,  387,  388,  389,
 /*  1160 */   385,  384,  380,  379,  317,  317,  317,  317,  317,  317,
 /*  1170 */   317,  303,  317,  317,  317,  135,  317,  230,  119,  317,
 /*  1180 */   110,   95,  317,  317,  317,  317,  317,  317,  317,  302,
 /*  1190 */   317,  303,  192,  292,  317,  138,  317,  230,  117,  304,
 /*  1200 */   103,   95,  317,  317,  383,  317,  317,  317,  317,  302,
 /*  1210 */   317,  317,  192,  292,  317,  317,  303,  317,  317,  304,
 /*  1220 */   157,  317,  230,  367,  383,  317,   95,  317,  317,  317,
 /*  1230 */   317,  317,  317,  317,  302,  317,  317,  192,  292,  303,
 /*  1240 */   317,  317,  317,   65,  304,   75,   92,   93,  317,   89,
 /*  1250 */   317,  317,  317,  371,  317,  317,  317,  302,  303,  317,
 /*  1260 */   192,  292,   65,  317,   77,   84,   93,  304,   89,  317,
 /*  1270 */   317,  303,  317,  317,  317,  174,  302,  230,  241,  192,
 /*  1280 */   292,   95,  317,  317,  303,  317,  304,  317,  174,  302,
 /*  1290 */   230,  241,  192,  292,   95,  317,  224,  317,  317,  304,
 /*  1300 */   317,  317,  302,   45,  303,  192,  292,  317,  162,  374,
 /*  1310 */   230,  317,  304,  317,   95,  378,  386,  387,  388,  389,
 /*  1320 */   385,  384,  380,  379,  303,  317,  292,  317,  174,  303,
 /*  1330 */   230,  241,  304,  174,   95,  230,  241,  317,  317,   95,
 /*  1340 */   317,  317,  302,  317,  317,  192,  292,  302,  317,  215,
 /*  1350 */   192,  292,  304,  317,  232,  303,  317,  304,  317,  174,
 /*  1360 */   303,  230,  250,  317,  174,   95,  230,  237,  317,  317,
 /*  1370 */    95,  317,  317,  302,  317,  317,  192,  292,  302,  317,
 /*  1380 */   317,  192,  292,  304,  317,  303,  317,  317,  304,  174,
 /*  1390 */   317,  230,  212,  317,  317,   95,  317,  317,  303,  317,
 /*  1400 */   317,  317,  174,  302,  204,  249,  192,  292,   95,  317,
 /*  1410 */   317,  303,  317,  304,  317,  174,  302,  230,  370,  192,
 /*  1420 */   292,   95,  317,  317,  317,  317,  304,  317,  317,  302,
 /*  1430 */   303,  317,  192,  292,  174,  317,  230,  239,  317,  304,
 /*  1440 */    95,  317,  317,  317,  317,  317,  317,  317,  302,  317,
 /*  1450 */   303,  192,  292,  317,  174,  317,  230,  340,  304,  317,
 /*  1460 */    95,  317,  317,  303,  317,  317,  317,  174,  302,  230,
 /*  1470 */   357,  192,  292,   95,  317,  317,  317,  317,  304,  317,
 /*  1480 */   317,  302,  303,  317,  192,  292,  174,  317,  230,  247,
 /*  1490 */   317,  304,   95,  317,  317,  303,  317,  317,  317,  174,
 /*  1500 */   302,  230,  229,  192,  292,   95,  317,  317,  317,  317,
 /*  1510 */   304,  317,  317,  302,  303,  317,  192,  292,  174,  317,
 /*  1520 */   230,   80,  317,  304,   95,  317,  317,  317,  317,  317,
 /*  1530 */   317,  317,  302,  317,  303,  192,  292,  317,  174,  317,
 /*  1540 */   230,  231,  304,  303,   95,  317,  317,  174,  317,  230,
 /*  1550 */   214,  317,  302,   95,  317,  192,  292,  317,  317,  317,
 /*  1560 */   317,  302,  304,  317,  192,  292,  303,  317,  317,  317,
 /*  1570 */   174,  304,  230,  344,  317,  303,   95,  317,  317,  174,
 /*  1580 */   317,  230,  353,  317,  302,   95,  317,  192,  292,  317,
 /*  1590 */   317,  317,  317,  302,  304,  317,  192,  292,  303,  317,
 /*  1600 */   317,  317,  174,  304,  230,  375,  317,  317,   95,  317,
 /*  1610 */   317,  317,  317,  317,  317,  317,  302,  317,  303,  192,
 /*  1620 */   292,  317,  174,  303,  230,  376,  304,  174,   95,  230,
 /*  1630 */   317,  317,  317,   95,  317,  317,  302,  317,  317,  192,
 /*  1640 */   292,  302,  317,  317,  189,  292,  304,  317,  317,  317,
 /*  1650 */   303,  304,  317,  303,  174,  317,  230,  171,  317,  230,
 /*  1660 */    95,  317,  317,   95,  317,  317,  317,  317,  302,  317,
 /*  1670 */   317,  187,  292,  303,  317,  292,  317,  184,  304,  230,
 /*  1680 */   317,  304,  317,   95,  317,  317,  317,  317,  317,  317,
 /*  1690 */   317,  317,  317,  317,  317,  292,  317,  317,  317,  317,
 /*  1700 */   317,  304,
    );
    static public $yy_lookahead = array(
 /*     0 */    12,  105,   14,   15,  108,   17,  110,   19,  106,   21,
 /*    10 */    22,   76,   77,   78,   79,   80,    8,   29,   30,   79,
 /*    20 */    12,   84,   34,   34,  114,   37,   38,   90,   40,   41,
 /*    30 */    42,   43,   18,   44,   46,   47,   99,   29,   12,   79,
 /*    40 */    14,   15,  102,    4,    5,    6,   28,   21,    9,   10,
 /*    50 */    11,   43,   34,   39,    8,   29,   30,  117,   12,   21,
 /*    60 */    34,   47,   44,   37,   38,   90,   40,   41,   42,   43,
 /*    70 */    32,   33,   46,   47,   48,   29,   12,  117,   14,   15,
 /*    80 */    13,   73,   74,   20,   21,   21,   48,   12,   21,   43,
 /*    90 */    15,   16,   12,   29,   30,   15,   16,   84,   34,   32,
 /*   100 */    33,   37,   38,   90,   40,   41,   42,   43,   34,    1,
 /*   110 */    46,   47,   99,   39,   12,    1,   14,   15,   44,   73,
 /*   120 */    74,   13,   48,   21,   24,   45,   15,   13,   17,   12,
 /*   130 */    19,   29,   30,   22,   20,   84,   34,    1,   12,   37,
 /*   140 */    38,   15,   40,   41,   42,   43,    1,   91,   46,   47,
 /*   150 */    99,   34,   12,   35,   14,   15,   12,   13,   13,   15,
 /*   160 */    13,   21,   85,   18,  113,   20,   89,   20,   60,   29,
 /*   170 */    30,   45,   28,   73,   34,   13,    1,   37,   38,   34,
 /*   180 */    40,   41,   42,   43,  107,   84,   46,   47,   13,   44,
 /*   190 */    12,   90,   14,   15,   12,   20,   60,   15,   16,   21,
 /*   200 */    99,   12,   13,   13,   15,   85,   24,   29,   30,   89,
 /*   210 */    20,   84,   34,   16,   24,   37,   38,   28,   40,   41,
 /*   220 */    42,   43,   31,  103,   46,   47,   99,  107,   12,   73,
 /*   230 */    14,   15,    1,   84,   13,   60,   39,   21,  111,   12,
 /*   240 */    13,   20,   15,    1,   13,   29,   30,    2,   99,   18,
 /*   250 */    34,   20,   15,   37,   38,   34,   40,   41,   42,   43,
 /*   260 */   111,   16,   46,   47,   16,   44,   12,   30,   14,   15,
 /*   270 */    28,   12,   84,   14,   15,   21,   12,   13,   21,   15,
 /*   280 */    14,   15,   12,   29,   30,   15,   31,   99,   34,   32,
 /*   290 */    33,   37,   38,   84,   40,   41,   42,   43,   36,   90,
 /*   300 */    46,   47,  114,   48,   12,   46,   14,   15,   99,   13,
 /*   310 */    84,   39,   46,   21,  106,   45,   20,  109,   16,   47,
 /*   320 */    24,   29,   30,   95,   13,   99,   34,   14,   15,   37,
 /*   330 */    38,   20,   40,   41,   42,   43,   34,  109,   46,   47,
 /*   340 */   114,   16,   12,   18,   14,   15,   44,   78,   79,   80,
 /*   350 */    13,   21,   12,    1,   23,   15,    1,   20,   13,   29,
 /*   360 */    30,   15,   13,   84,   34,   20,   23,   37,   38,   20,
 /*   370 */    40,   41,   42,   43,   31,   20,   46,   47,   99,   27,
 /*   380 */    96,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   390 */    59,   45,  113,  109,   80,   12,   82,   14,   15,   91,
 /*   400 */    84,   70,   71,   72,   21,    3,    4,    5,    6,    7,
 /*   410 */     8,    9,   29,   30,   12,   99,   95,   34,   13,   35,
 /*   420 */    37,   38,   15,   40,   41,   42,   43,  111,  105,   46,
 /*   430 */   109,   29,   84,  110,   50,   51,   52,   53,   54,   55,
 /*   440 */    56,   57,   58,   59,   84,   13,   84,   99,   35,   34,
 /*   450 */    13,   18,   20,   13,   70,   71,   72,   20,    2,   99,
 /*   460 */    20,   99,   13,   50,   51,   52,   53,   54,   55,   56,
 /*   470 */    57,   58,   59,   35,   13,   13,   20,   13,   92,   93,
 /*   480 */    13,   20,   20,   70,   71,   72,   49,   20,   50,   51,
 /*   490 */    52,   53,   54,   55,   56,   57,   58,   59,   61,   62,
 /*   500 */    63,   64,   65,   66,   67,   68,   69,  106,   70,   71,
 /*   510 */    72,   20,   95,   95,   50,   51,   52,   53,   54,   55,
 /*   520 */    56,   57,   58,   59,   13,   13,  109,  109,    1,  110,
 /*   530 */    13,   20,   20,   13,   70,   71,   72,   20,   95,   84,
 /*   540 */    20,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   550 */    59,   91,  109,   12,   99,   12,   15,   14,   15,   13,
 /*   560 */    13,   70,   71,   72,   21,   79,   91,   20,   20,   83,
 /*   570 */     2,   85,   29,   30,   26,   89,   12,   34,   95,   15,
 /*   580 */    37,   38,  106,   40,   41,   42,   43,  101,   14,   46,
 /*   590 */    14,   84,  109,  107,   95,   95,   50,   51,   52,   53,
 /*   600 */    54,   55,   56,   57,   58,   59,   99,   13,  109,  109,
 /*   610 */    12,   95,   14,   15,   20,   13,   70,   71,   72,   21,
 /*   620 */    25,   48,   20,   46,   13,  109,   13,   29,   30,  105,
 /*   630 */    46,   20,   34,   20,  110,   37,   38,  105,   40,   41,
 /*   640 */    42,   43,  110,   84,   46,   84,   15,   50,   51,   52,
 /*   650 */    53,   54,   55,   56,   57,   58,   59,  106,   99,   15,
 /*   660 */    99,   16,   12,    2,   14,   15,   79,   70,   71,   72,
 /*   670 */    83,   15,   85,   86,   87,   88,   89,   13,   13,   79,
 /*   680 */    30,   14,   20,   83,   97,   85,   14,  100,  101,   89,
 /*   690 */    40,   41,   14,   35,  107,   15,   79,   97,    2,  112,
 /*   700 */    83,  101,   85,   86,   87,   88,   89,  107,   13,   35,
 /*   710 */    13,   24,   13,   15,   97,   39,   79,  100,  101,   35,
 /*   720 */    83,   30,   85,   15,  107,   15,   89,   79,   36,  112,
 /*   730 */    27,   83,   99,   85,   86,   87,   88,   89,  101,   20,
 /*   740 */    20,  109,   14,   13,  107,   97,  108,   79,  100,  101,
 /*   750 */    20,   83,   79,   85,  113,  107,   83,   89,   85,   86,
 /*   760 */   112,   88,   89,   34,   13,   92,   10,   98,    2,  101,
 /*   770 */    97,   20,   20,  100,  101,  107,   94,   94,  103,   49,
 /*   780 */   107,   81,   92,  106,  118,  112,  118,  118,  118,  118,
 /*   790 */   111,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   800 */    49,  118,  118,  118,  118,  118,  118,  118,  118,  118,
 /*   810 */   118,  118,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   820 */    69,  118,  118,   79,  118,  118,  118,   83,   79,   85,
 /*   830 */    86,  118,   83,   89,   85,   86,  118,   88,   89,  118,
 /*   840 */   118,   97,  118,  118,  100,  101,   97,  118,  118,  100,
 /*   850 */   101,  107,  118,  118,  118,  118,  107,  118,  118,  115,
 /*   860 */   116,  112,  118,  118,  118,   79,  118,  118,  118,   83,
 /*   870 */   118,   85,   86,  118,   88,   89,  118,  118,   79,  118,
 /*   880 */   118,  118,   83,   97,   85,  118,  100,  101,   89,  118,
 /*   890 */   118,  118,  118,  107,  118,   79,   97,  118,  112,   83,
 /*   900 */   101,   85,   86,  118,   88,   89,  107,  118,  118,  118,
 /*   910 */   118,  118,  118,   97,  118,   79,  100,  101,  118,   83,
 /*   920 */   118,   85,   86,  107,   88,   89,  118,  118,  112,  118,
 /*   930 */   118,  118,  118,   97,  118,  118,  100,  101,  118,  118,
 /*   940 */    79,  118,  118,  107,   83,  118,   85,   86,  112,   88,
 /*   950 */    89,  118,  118,  118,  118,  118,  118,  118,   97,  118,
 /*   960 */   118,  100,  101,  118,  118,  118,   79,  118,  107,  118,
 /*   970 */    83,  118,   85,  112,  118,   79,   89,  118,  118,   83,
 /*   980 */   118,   85,   86,  118,   88,   89,  118,  118,  101,  118,
 /*   990 */   118,  118,  118,   97,  107,   79,  100,  101,  118,   83,
 /*  1000 */   118,   85,   86,  107,   88,   89,  118,  118,  112,  118,
 /*  1010 */   118,   35,  118,   97,  118,  118,  100,  101,  118,  118,
 /*  1020 */   118,  118,  118,  107,  118,   49,  118,  118,  112,  118,
 /*  1030 */   118,  118,  118,  118,  118,  118,  118,   61,   62,   63,
 /*  1040 */    64,   65,   66,   67,   68,   69,  118,  118,   79,  118,
 /*  1050 */   118,  118,   83,  118,   85,   86,  118,   88,   89,  118,
 /*  1060 */   118,  118,  118,  118,  118,  118,   97,  118,   79,  100,
 /*  1070 */   101,  118,   83,   79,   85,  118,  107,   83,   89,   85,
 /*  1080 */    86,  112,   88,   89,  118,  118,  118,  118,  118,  118,
 /*  1090 */   101,   97,  118,   79,  100,  101,  107,   83,  118,   85,
 /*  1100 */    86,  107,   88,   89,  118,  118,  112,  118,  118,  118,
 /*  1110 */   118,   97,  118,  118,  100,  101,  118,  118,   79,  118,
 /*  1120 */   118,  107,   83,  118,   85,   86,  112,   88,   89,   35,
 /*  1130 */   118,  118,  118,  118,  118,  118,   97,  118,  118,  100,
 /*  1140 */   101,  118,  118,   49,  118,  118,  107,  118,  118,  118,
 /*  1150 */   118,  112,  118,  118,  118,   61,   62,   63,   64,   65,
 /*  1160 */    66,   67,   68,   69,  118,  118,  118,  118,  118,  118,
 /*  1170 */   118,   79,  118,  118,  118,   83,  118,   85,   86,  118,
 /*  1180 */    88,   89,  118,  118,  118,  118,  118,  118,  118,   97,
 /*  1190 */   118,   79,  100,  101,  118,   83,  118,   85,   86,  107,
 /*  1200 */    88,   89,  118,  118,  112,  118,  118,  118,  118,   97,
 /*  1210 */   118,  118,  100,  101,  118,  118,   79,  118,  118,  107,
 /*  1220 */    83,  118,   85,   86,  112,  118,   89,  118,  118,  118,
 /*  1230 */   118,  118,  118,  118,   97,  118,  118,  100,  101,   79,
 /*  1240 */   118,  118,  118,   83,  107,   85,   86,   87,  118,   89,
 /*  1250 */   118,  118,  118,  116,  118,  118,  118,   97,   79,  118,
 /*  1260 */   100,  101,   83,  118,   85,   86,   87,  107,   89,  118,
 /*  1270 */   118,   79,  118,  118,  118,   83,   97,   85,   86,  100,
 /*  1280 */   101,   89,  118,  118,   79,  118,  107,  118,   83,   97,
 /*  1290 */    85,   86,  100,  101,   89,  118,  104,  118,  118,  107,
 /*  1300 */   118,  118,   97,   49,   79,  100,  101,  118,   83,  104,
 /*  1310 */    85,  118,  107,  118,   89,   61,   62,   63,   64,   65,
 /*  1320 */    66,   67,   68,   69,   79,  118,  101,  118,   83,   79,
 /*  1330 */    85,   86,  107,   83,   89,   85,   86,  118,  118,   89,
 /*  1340 */   118,  118,   97,  118,  118,  100,  101,   97,  118,  104,
 /*  1350 */   100,  101,  107,  118,  104,   79,  118,  107,  118,   83,
 /*  1360 */    79,   85,   86,  118,   83,   89,   85,   86,  118,  118,
 /*  1370 */    89,  118,  118,   97,  118,  118,  100,  101,   97,  118,
 /*  1380 */   118,  100,  101,  107,  118,   79,  118,  118,  107,   83,
 /*  1390 */   118,   85,   86,  118,  118,   89,  118,  118,   79,  118,
 /*  1400 */   118,  118,   83,   97,   85,   86,  100,  101,   89,  118,
 /*  1410 */   118,   79,  118,  107,  118,   83,   97,   85,   86,  100,
 /*  1420 */   101,   89,  118,  118,  118,  118,  107,  118,  118,   97,
 /*  1430 */    79,  118,  100,  101,   83,  118,   85,   86,  118,  107,
 /*  1440 */    89,  118,  118,  118,  118,  118,  118,  118,   97,  118,
 /*  1450 */    79,  100,  101,  118,   83,  118,   85,   86,  107,  118,
 /*  1460 */    89,  118,  118,   79,  118,  118,  118,   83,   97,   85,
 /*  1470 */    86,  100,  101,   89,  118,  118,  118,  118,  107,  118,
 /*  1480 */   118,   97,   79,  118,  100,  101,   83,  118,   85,   86,
 /*  1490 */   118,  107,   89,  118,  118,   79,  118,  118,  118,   83,
 /*  1500 */    97,   85,   86,  100,  101,   89,  118,  118,  118,  118,
 /*  1510 */   107,  118,  118,   97,   79,  118,  100,  101,   83,  118,
 /*  1520 */    85,   86,  118,  107,   89,  118,  118,  118,  118,  118,
 /*  1530 */   118,  118,   97,  118,   79,  100,  101,  118,   83,  118,
 /*  1540 */    85,   86,  107,   79,   89,  118,  118,   83,  118,   85,
 /*  1550 */    86,  118,   97,   89,  118,  100,  101,  118,  118,  118,
 /*  1560 */   118,   97,  107,  118,  100,  101,   79,  118,  118,  118,
 /*  1570 */    83,  107,   85,   86,  118,   79,   89,  118,  118,   83,
 /*  1580 */   118,   85,   86,  118,   97,   89,  118,  100,  101,  118,
 /*  1590 */   118,  118,  118,   97,  107,  118,  100,  101,   79,  118,
 /*  1600 */   118,  118,   83,  107,   85,   86,  118,  118,   89,  118,
 /*  1610 */   118,  118,  118,  118,  118,  118,   97,  118,   79,  100,
 /*  1620 */   101,  118,   83,   79,   85,   86,  107,   83,   89,   85,
 /*  1630 */   118,  118,  118,   89,  118,  118,   97,  118,  118,  100,
 /*  1640 */   101,   97,  118,  118,  100,  101,  107,  118,  118,  118,
 /*  1650 */    79,  107,  118,   79,   83,  118,   85,   83,  118,   85,
 /*  1660 */    89,  118,  118,   89,  118,  118,  118,  118,   97,  118,
 /*  1670 */   118,  100,  101,   79,  118,  101,  118,   83,  107,   85,
 /*  1680 */   118,  107,  118,   89,  118,  118,  118,  118,  118,  118,
 /*  1690 */   118,  118,  118,  118,  118,  101,  118,  118,  118,  118,
 /*  1700 */   118,  107,
);
    const YY_SHIFT_USE_DFLT = -13;
    const YY_SHIFT_MAX = 249;
    static public $yy_shift_ofst = array(
 /*     0 */   402,  254,  292,  330,  330,  140,  140,  140,  140,  140,
 /*    10 */   140,  140,  140,  140,  140,  140,  102,  140,  140,  -12,
 /*    20 */   -12,   64,   64,   64,   64,  102,   64,   64,   64,   64,
 /*    30 */    64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
 /*    40 */    64,   64,   64,   26,  178,  178,  216,  383,  543,  383,
 /*    50 */   383,  383,  383,  598,  383,  259,  491,  491,  437,  730,
 /*    60 */   402,   46,  145,  231,  266,  114,   14,  355,  456,  456,
 /*    70 */   456,    8,   39,   80,  182,  296,  270,  190,  340,  340,
 /*    80 */   548,  340,  340,  564,  462,  340,  340,  564,  340,  325,
 /*    90 */   340,  541,  719,  719,  719,  433,  719,  728,  720,  433,
 /*   100 */   433,  546,  331,  384,  413,  464,  438,  597,  597,  597,
 /*   110 */   597,  597,  597,  597,  597,  597,  751, 1094,  976, 1254,
 /*   120 */   111,  175,  189,  144,  264,  126,   75,  108,  227,  345,
 /*   130 */   147,  311,  337,  349,  613,  136,  517,  512,  136,  467,
 /*   140 */   511,  520,  547,  272,  611,  602,  117,  594,  272,  272,
 /*   150 */   352,  313,  272,  461,  272,  432,  440,  242,  756,  433,
 /*   160 */   728,  527,  527,  752,  433,  527,  752,  527,  766,  729,
 /*   170 */   527,  527,  527,  433,  527,  527,  433,  -13,  -13,  -13,
 /*   180 */   -13,  -13,  -13,  -13,  -13,  650,  221,   67,   74,   38,
 /*   190 */    18,  302,  257,  237,  -11,  346,  -11,  343,  197,  -11,
 /*   200 */   245,  255,  -11,   63,  100,  576,  703,  595,  644,  645,
 /*   210 */   667,  672,  664,  661,  665,  674,  656,  573,  577,  584,
 /*   220 */   631,  678,  680,  676,  684,  698,  691,  710,  708,  699,
 /*   230 */   687,  696,  658,  662,  695,  574,  262,  697,  692,  568,
 /*   240 */   262,  191,  162,  248,  405,  415,  407,  118,  449,  156,
);
    const YY_REDUCE_USE_DFLT = -105;
    const YY_REDUCE_MAX = 184;
    static public $yy_reduce_ofst = array(
 /*     0 */   -65,  617,  673,  648,  587, 1014,  786, 1092,  836,  816,
 /*    10 */   861,  896,  916, 1039,  749,  969,  744, 1112,  994, 1179,
 /*    20 */  1160, 1192, 1205, 1250, 1245, 1137, 1416, 1403, 1435, 1455,
 /*    30 */  1464, 1384, 1371, 1306, 1281, 1496, 1276, 1319, 1332, 1351,
 /*    40 */  1487, 1539, 1519, 1544, 1571,  600,  799, 1574, 1594,  989,
 /*    50 */   887,  668, 1225,  486,  637,  120,  226,  188,   51,  279,
 /*    60 */   269,  -60,  209,   13,   77,  -63, -104,  101,  127,  149,
 /*    70 */   316,  -40,  314,  208,  284,  348,  208,  348,  516,  499,
 /*    80 */   455,  483,  443,  418,  360,  321,  500,  321,  228,  323,
 /*    90 */   417,  321,  360,  362,  507,  323,  559,  386,  561,  532,
 /*   100 */   524,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
 /*   110 */   -90,  -90,  -90,  -90,  -90,  -90,  641,  641,  641,  641,
 /*   120 */   669,  -25,  632,  632,  632,  632,  632,  -25,  632,  633,
 /*   130 */   633,  633,  633,  633,  633,  -25,  633,  633,  -25,  633,
 /*   140 */   633,  633,  633,  638,  633,  633,  677,  633,  638,  638,
 /*   150 */   -25,  675,  638,  633,  638,  633,  633,  -25,  700,  419,
 /*   160 */   690,  -25,  -25,  683,  419,  -25,  682,  -25,  679,  551,
 /*   170 */   -25,  -25,  -25,  419,  -25,  -25,  419,  460,  475,  401,
 /*   180 */   476,  308,  -98,   56,  -25,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 12, 29, ),
        /* 1 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 2 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 3 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 4 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 5 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 6 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 7 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 8 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 9 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 10 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 11 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 12 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 13 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 14 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 15 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 16 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 17 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 18 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 19 */ array(12, 14, 15, 17, 19, 21, 22, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 20 */ array(12, 14, 15, 17, 19, 21, 22, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 21 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 22 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 23 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 24 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 25 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 26 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 27 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 28 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 29 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 30 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 31 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 32 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 33 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 34 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 35 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 36 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 37 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 38 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 39 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 40 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 41 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 42 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 43 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, 48, ),
        /* 44 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 45 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 46 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, 47, ),
        /* 47 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 48 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 49 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 50 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 51 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 52 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 53 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 54 */ array(12, 14, 15, 21, 29, 30, 34, 37, 38, 40, 41, 42, 43, 46, ),
        /* 55 */ array(12, 14, 15, 46, ),
        /* 56 */ array(20, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 57 */ array(20, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 58 */ array(13, 20, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 59 */ array(13, 20, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 60 */ array(3, 4, 5, 6, 7, 8, 9, 12, 29, ),
        /* 61 */ array(8, 12, 29, 43, 73, 74, ),
        /* 62 */ array(1, 13, 18, 20, 34, 44, ),
        /* 63 */ array(1, 13, 18, 20, ),
        /* 64 */ array(14, 15, 46, ),
        /* 65 */ array(1, 13, 20, ),
        /* 66 */ array(18, 39, 47, ),
        /* 67 */ array(1, 20, ),
        /* 68 */ array(2, 20, ),
        /* 69 */ array(2, 20, ),
        /* 70 */ array(2, 20, ),
        /* 71 */ array(8, 12, 29, 43, 73, 74, ),
        /* 72 */ array(4, 5, 6, 9, 10, 11, ),
        /* 73 */ array(12, 15, 16, 45, ),
        /* 74 */ array(12, 15, 16, 24, ),
        /* 75 */ array(13, 20, 24, ),
        /* 76 */ array(12, 15, 45, ),
        /* 77 */ array(13, 20, 24, ),
        /* 78 */ array(12, 15, ),
        /* 79 */ array(12, 15, ),
        /* 80 */ array(20, 26, ),
        /* 81 */ array(12, 15, ),
        /* 82 */ array(12, 15, ),
        /* 83 */ array(12, 15, ),
        /* 84 */ array(13, 20, ),
        /* 85 */ array(12, 15, ),
        /* 86 */ array(12, 15, ),
        /* 87 */ array(12, 15, ),
        /* 88 */ array(12, 15, ),
        /* 89 */ array(16, 18, ),
        /* 90 */ array(12, 15, ),
        /* 91 */ array(12, 15, ),
        /* 92 */ array(20, ),
        /* 93 */ array(20, ),
        /* 94 */ array(20, ),
        /* 95 */ array(18, ),
        /* 96 */ array(20, ),
        /* 97 */ array(14, ),
        /* 98 */ array(20, ),
        /* 99 */ array(18, ),
        /* 100 */ array(18, ),
        /* 101 */ array(13, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 102 */ array(23, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 103 */ array(35, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 104 */ array(35, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 105 */ array(13, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 106 */ array(35, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 107 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 108 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 109 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 110 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 111 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 112 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 113 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 114 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 115 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 116 */ array(13, 20, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 117 */ array(35, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 118 */ array(35, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 119 */ array(49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 120 */ array(15, 17, 19, 22, ),
        /* 121 */ array(1, 13, 20, 60, ),
        /* 122 */ array(12, 13, 15, 28, ),
        /* 123 */ array(12, 13, 15, 28, ),
        /* 124 */ array(12, 13, 15, ),
        /* 125 */ array(12, 15, 45, ),
        /* 126 */ array(12, 15, 16, ),
        /* 127 */ array(1, 13, 60, ),
        /* 128 */ array(12, 13, 15, ),
        /* 129 */ array(13, 20, ),
        /* 130 */ array(13, 20, ),
        /* 131 */ array(13, 20, ),
        /* 132 */ array(13, 20, ),
        /* 133 */ array(13, 20, ),
        /* 134 */ array(13, 20, ),
        /* 135 */ array(1, 60, ),
        /* 136 */ array(13, 20, ),
        /* 137 */ array(13, 20, ),
        /* 138 */ array(1, 60, ),
        /* 139 */ array(13, 20, ),
        /* 140 */ array(13, 20, ),
        /* 141 */ array(13, 20, ),
        /* 142 */ array(13, 20, ),
        /* 143 */ array(39, 47, ),
        /* 144 */ array(13, 20, ),
        /* 145 */ array(13, 20, ),
        /* 146 */ array(12, 34, ),
        /* 147 */ array(13, 20, ),
        /* 148 */ array(39, 47, ),
        /* 149 */ array(39, 47, ),
        /* 150 */ array(1, 27, ),
        /* 151 */ array(14, 15, ),
        /* 152 */ array(39, 47, ),
        /* 153 */ array(13, 20, ),
        /* 154 */ array(39, 47, ),
        /* 155 */ array(13, 20, ),
        /* 156 */ array(13, 20, ),
        /* 157 */ array(1, 28, ),
        /* 158 */ array(10, ),
        /* 159 */ array(18, ),
        /* 160 */ array(14, ),
        /* 161 */ array(1, ),
        /* 162 */ array(1, ),
        /* 163 */ array(20, ),
        /* 164 */ array(18, ),
        /* 165 */ array(1, ),
        /* 166 */ array(20, ),
        /* 167 */ array(1, ),
        /* 168 */ array(2, ),
        /* 169 */ array(34, ),
        /* 170 */ array(1, ),
        /* 171 */ array(1, ),
        /* 172 */ array(1, ),
        /* 173 */ array(18, ),
        /* 174 */ array(1, ),
        /* 175 */ array(1, ),
        /* 176 */ array(18, ),
        /* 177 */ array(),
        /* 178 */ array(),
        /* 179 */ array(),
        /* 180 */ array(),
        /* 181 */ array(),
        /* 182 */ array(),
        /* 183 */ array(),
        /* 184 */ array(),
        /* 185 */ array(12, 14, 15, 30, 40, 41, ),
        /* 186 */ array(13, 20, 34, 44, ),
        /* 187 */ array(13, 21, 32, 33, ),
        /* 188 */ array(34, 39, 44, 48, ),
        /* 189 */ array(21, 32, 33, 48, ),
        /* 190 */ array(28, 34, 44, ),
        /* 191 */ array(16, 34, 44, ),
        /* 192 */ array(21, 32, 33, ),
        /* 193 */ array(15, 30, ),
        /* 194 */ array(34, 44, ),
        /* 195 */ array(15, 45, ),
        /* 196 */ array(34, 44, ),
        /* 197 */ array(23, 31, ),
        /* 198 */ array(16, 39, ),
        /* 199 */ array(34, 44, ),
        /* 200 */ array(2, 16, ),
        /* 201 */ array(31, 48, ),
        /* 202 */ array(34, 44, ),
        /* 203 */ array(20, 21, ),
        /* 204 */ array(24, 73, ),
        /* 205 */ array(14, ),
        /* 206 */ array(27, ),
        /* 207 */ array(25, ),
        /* 208 */ array(15, ),
        /* 209 */ array(16, ),
        /* 210 */ array(14, ),
        /* 211 */ array(14, ),
        /* 212 */ array(13, ),
        /* 213 */ array(2, ),
        /* 214 */ array(13, ),
        /* 215 */ array(35, ),
        /* 216 */ array(15, ),
        /* 217 */ array(48, ),
        /* 218 */ array(46, ),
        /* 219 */ array(46, ),
        /* 220 */ array(15, ),
        /* 221 */ array(14, ),
        /* 222 */ array(15, ),
        /* 223 */ array(39, ),
        /* 224 */ array(35, ),
        /* 225 */ array(15, ),
        /* 226 */ array(30, ),
        /* 227 */ array(15, ),
        /* 228 */ array(15, ),
        /* 229 */ array(13, ),
        /* 230 */ array(24, ),
        /* 231 */ array(2, ),
        /* 232 */ array(35, ),
        /* 233 */ array(20, ),
        /* 234 */ array(13, ),
        /* 235 */ array(14, ),
        /* 236 */ array(36, ),
        /* 237 */ array(13, ),
        /* 238 */ array(36, ),
        /* 239 */ array(2, ),
        /* 240 */ array(36, ),
        /* 241 */ array(31, ),
        /* 242 */ array(13, ),
        /* 243 */ array(16, ),
        /* 244 */ array(13, ),
        /* 245 */ array(34, ),
        /* 246 */ array(15, ),
        /* 247 */ array(35, ),
        /* 248 */ array(13, ),
        /* 249 */ array(73, ),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
);
    static public $yy_default = array(
 /*     0 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    10 */   588,  588,  588,  588,  588,  588,  573,  588,  588,  588,
 /*    20 */   588,  531,  531,  531,  531,  588,  588,  588,  588,  588,
 /*    30 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    40 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    50 */   588,  588,  588,  588,  588,  588,  452,  452,  541,  541,
 /*    60 */   391,  588,  588,  588,  588,  466,  492,  452,  452,  452,
 /*    70 */   452,  588,  588,  503,  588,  473,  503,  473,  588,  588,
 /*    80 */   452,  588,  588,  588,  588,  588,  588,  588,  588,  496,
 /*    90 */   588,  588,  452,  452,  452,  496,  452,  588,  452,  487,
 /*   100 */   488,  588,  588,  588,  588,  588,  588,  545,  455,  554,
 /*   110 */   539,  555,  547,  546,  551,  550,  541,  541,  541,  541,
 /*   120 */   588,  466,  588,  588,  588,  504,  588,  466,  588,  588,
 /*   130 */   588,  588,  588,  588,  588,  466,  588,  588,  466,  588,
 /*   140 */   588,  588,  588,  522,  588,  588,  503,  588,  525,  524,
 /*   150 */   588,  588,  523,  588,  501,  588,  588,  466,  405,  519,
 /*   160 */   588,  467,  469,  587,  489,  557,  587,  474,  495,  503,
 /*   170 */   476,  475,  544,  490,  466,  468,  493,  535,  535,  503,
 /*   180 */   503,  535,  503,  535,  536,  588,  463,  588,  588,  588,
 /*   190 */   463,  458,  464,  588,  588,  588,  463,  588,  478,  537,
 /*   200 */   517,  588,  556,  588,  473,  588,  588,  460,  588,  588,
 /*   210 */   588,  588,  588,  517,  588,  588,  588,  588,  588,  588,
 /*   220 */   588,  588,  588,  478,  588,  588,  588,  588,  588,  588,
 /*   230 */   473,  588,  588,  588,  588,  588,  588,  588,  483,  588,
 /*   240 */   540,  530,  588,  458,  588,  491,  588,  588,  588,  588,
 /*   250 */   434,  433,  506,  512,  514,  528,  511,  513,  509,  510,
 /*   260 */   526,  449,  457,  392,  446,  445,  443,  444,  508,  507,
 /*   270 */   485,  577,  437,  436,  586,  461,  579,  580,  578,  518,
 /*   280 */   486,  585,  581,  584,  435,  569,  497,  520,  502,  505,
 /*   290 */   516,  521,  482,  533,  532,  479,  480,  481,  517,  484,
 /*   300 */   515,  465,  470,  494,  498,  416,  415,  413,  582,  414,
 /*   310 */   583,  477,  534,  400,  399,  401,  402,  403,  398,  397,
 /*   320 */   393,  394,  395,  396,  404,  406,  442,  450,  447,  448,
 /*   330 */   451,  412,  411,  407,  408,  409,  410,  499,  500,  421,
 /*   340 */   472,  422,  423,  424,  471,  420,  552,  549,  553,  567,
 /*   350 */   568,  426,  427,  459,  441,  430,  432,  462,  440,  439,
 /*   360 */   429,  428,  425,  438,  548,  540,  571,  576,  417,  418,
 /*   370 */   542,  572,  570,  527,  529,  575,  574,  543,  558,  566,
 /*   380 */   565,  419,  483,  538,  564,  563,  559,  560,  561,  562,
 /*   390 */   431,
);
    const YYNOCODE = 119;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 391;
    const YYNRULE = 197;
    const YYERRORSYMBOL = 75;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'OTHER',         'LITERALSTART',  'LITERALEND',    'LITERAL',     
  'LDEL',          'RDEL',          'DOLLAR',        'ID',          
  'EQUAL',         'FOREACH',       'PTR',           'IF',          
  'SPACE',         'UNIMATH',       'FOR',           'SEMICOLON',   
  'INCDEC',        'TO',            'STEP',          'AS',          
  'APTR',          'LDELSLASH',     'INTEGER',       'COMMA',       
  'MATH',          'ANDSYM',        'OPENP',         'CLOSEP',      
  'QMARK',         'NOT',           'TYPECAST',      'DOT',         
  'BOOLEAN',       'NULL',          'SINGLEQUOTESTRING',  'QUOTE',       
  'DOUBLECOLON',   'AT',            'HATCH',         'OPENB',       
  'CLOSEB',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',         
  'LXOR',          'BACKTICK',      'DOLLARID',      'error',       
  'start',         'template',      'template_element',  'smartytag',   
  'literal',       'literal_elements',  'literal_element',  'value',       
  'attributes',    'variable',      'expr',          'ternary',     
  'ifexprs',       'varindexed',    'modifier',      'modparameters',
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'specialclose',  'attribute',   
  'exprs',         'function',      'doublequoted',  'method',      
  'params',        'objectchain',   'arrayindex',    'object',      
  'indexdef',      'varvarele',     'objectelement',  'modparameter',
  'ifexpr',        'ifcond',        'lop',           'arrayelements',
  'arrayelement',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG",
 /*   7 */ "template_element ::= PHPENDTAG",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "template_element ::= XMLTAG",
 /*  10 */ "template_element ::= OTHER",
 /*  11 */ "literal ::= LITERALSTART LITERALEND",
 /*  12 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  13 */ "literal_elements ::= literal_elements literal_element",
 /*  14 */ "literal_elements ::=",
 /*  15 */ "literal_element ::= literal",
 /*  16 */ "literal_element ::= LITERAL",
 /*  17 */ "literal_element ::= PHPSTARTTAG",
 /*  18 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  19 */ "literal_element ::= PHPENDTAG",
 /*  20 */ "smartytag ::= LDEL value RDEL",
 /*  21 */ "smartytag ::= LDEL value attributes RDEL",
 /*  22 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  23 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  24 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  26 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  27 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  28 */ "smartytag ::= LDEL DOLLAR ID EQUAL ifexprs attributes RDEL",
 /*  29 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  30 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  31 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  32 */ "smartytag ::= LDEL varindexed EQUAL ifexprs attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  34 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  35 */ "smartytag ::= LDEL ID RDEL",
 /*  36 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  39 */ "smartytag ::= LDEL IF SPACE ifexprs RDEL",
 /*  40 */ "smartytag ::= LDEL IF UNIMATH ifexprs RDEL",
 /*  41 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  42 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexprs SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  43 */ "foraction ::= EQUAL expr",
 /*  44 */ "foraction ::= INCDEC",
 /*  45 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  46 */ "smartytag ::= LDEL FOR SPACE statement TO expr STEP expr RDEL",
 /*  47 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  48 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  49 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  50 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  51 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  52 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  53 */ "specialclose ::= IF",
 /*  54 */ "specialclose ::= FOR",
 /*  55 */ "specialclose ::= FOREACH",
 /*  56 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  57 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  59 */ "attributes ::= attributes attribute",
 /*  60 */ "attributes ::= attribute",
 /*  61 */ "attributes ::=",
 /*  62 */ "attribute ::= SPACE ID EQUAL ID",
 /*  63 */ "attribute ::= SPACE ID EQUAL expr",
 /*  64 */ "attribute ::= SPACE ID EQUAL ifexprs",
 /*  65 */ "attribute ::= SPACE ID EQUAL value",
 /*  66 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  69 */ "statements ::= statement",
 /*  70 */ "statements ::= statements COMMA statement",
 /*  71 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  72 */ "expr ::= ID",
 /*  73 */ "expr ::= exprs",
 /*  74 */ "expr ::= DOLLAR ID COLON ID",
 /*  75 */ "exprs ::= value",
 /*  76 */ "exprs ::= exprs MATH value",
 /*  77 */ "exprs ::= exprs UNIMATH value",
 /*  78 */ "exprs ::= exprs ANDSYM value",
 /*  79 */ "exprs ::= array",
 /*  80 */ "ternary ::= OPENP ifexprs CLOSEP QMARK expr COLON expr",
 /*  81 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  82 */ "value ::= variable",
 /*  83 */ "value ::= UNIMATH value",
 /*  84 */ "value ::= NOT value",
 /*  85 */ "value ::= TYPECAST value",
 /*  86 */ "value ::= variable INCDEC",
 /*  87 */ "value ::= INTEGER",
 /*  88 */ "value ::= INTEGER DOT INTEGER",
 /*  89 */ "value ::= BOOLEAN",
 /*  90 */ "value ::= NULL",
 /*  91 */ "value ::= function",
 /*  92 */ "value ::= OPENP expr CLOSEP",
 /*  93 */ "value ::= SINGLEQUOTESTRING",
 /*  94 */ "value ::= QUOTE doublequoted QUOTE",
 /*  95 */ "value ::= QUOTE QUOTE",
 /*  96 */ "value ::= ID DOUBLECOLON method",
 /*  97 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /*  98 */ "value ::= ID DOUBLECOLON method objectchain",
 /*  99 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /* 100 */ "value ::= ID DOUBLECOLON ID",
 /* 101 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /* 102 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 103 */ "value ::= smartytag",
 /* 104 */ "value ::= value modifier modparameters",
 /* 105 */ "variable ::= varindexed",
 /* 106 */ "variable ::= DOLLAR varvar AT ID",
 /* 107 */ "variable ::= object",
 /* 108 */ "variable ::= HATCH ID HATCH",
 /* 109 */ "variable ::= HATCH variable HATCH",
 /* 110 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 111 */ "arrayindex ::= arrayindex indexdef",
 /* 112 */ "arrayindex ::=",
 /* 113 */ "indexdef ::= DOT DOLLAR varvar",
 /* 114 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 115 */ "indexdef ::= DOT ID",
 /* 116 */ "indexdef ::= DOT BOOLEAN",
 /* 117 */ "indexdef ::= DOT NULL",
 /* 118 */ "indexdef ::= DOT INTEGER",
 /* 119 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 120 */ "indexdef ::= OPENB ID CLOSEB",
 /* 121 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 122 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 123 */ "indexdef ::= OPENB CLOSEB",
 /* 124 */ "varvar ::= varvarele",
 /* 125 */ "varvar ::= varvar varvarele",
 /* 126 */ "varvarele ::= ID",
 /* 127 */ "varvarele ::= LDEL expr RDEL",
 /* 128 */ "object ::= varindexed objectchain",
 /* 129 */ "objectchain ::= objectelement",
 /* 130 */ "objectchain ::= objectchain objectelement",
 /* 131 */ "objectelement ::= PTR ID arrayindex",
 /* 132 */ "objectelement ::= PTR variable arrayindex",
 /* 133 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 134 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 135 */ "objectelement ::= PTR method",
 /* 136 */ "function ::= ID OPENP params CLOSEP",
 /* 137 */ "method ::= ID OPENP params CLOSEP",
 /* 138 */ "params ::= expr COMMA params",
 /* 139 */ "params ::= expr",
 /* 140 */ "params ::=",
 /* 141 */ "modifier ::= VERT AT ID",
 /* 142 */ "modifier ::= VERT ID",
 /* 143 */ "modparameters ::= modparameters modparameter",
 /* 144 */ "modparameters ::=",
 /* 145 */ "modparameter ::= COLON value",
 /* 146 */ "modparameter ::= COLON ID",
 /* 147 */ "ifexprs ::= ifexpr",
 /* 148 */ "ifexprs ::= NOT ifexprs",
 /* 149 */ "ifexprs ::= OPENP ifexprs CLOSEP",
 /* 150 */ "ifexpr ::= expr",
 /* 151 */ "ifexpr ::= expr ifcond expr",
 /* 152 */ "ifexpr ::= expr ISIN array",
 /* 153 */ "ifexpr ::= expr ISIN value",
 /* 154 */ "ifexpr ::= ifexprs lop ifexprs",
 /* 155 */ "ifexpr ::= ifexprs ISDIVBY ifexprs",
 /* 156 */ "ifexpr ::= ifexprs ISNOTDIVBY ifexprs",
 /* 157 */ "ifexpr ::= ifexprs ISEVEN",
 /* 158 */ "ifexpr ::= ifexprs ISNOTEVEN",
 /* 159 */ "ifexpr ::= ifexprs ISEVENBY ifexprs",
 /* 160 */ "ifexpr ::= ifexprs ISNOTEVENBY ifexprs",
 /* 161 */ "ifexpr ::= ifexprs ISODD",
 /* 162 */ "ifexpr ::= ifexprs ISNOTODD",
 /* 163 */ "ifexpr ::= ifexprs ISODDBY ifexprs",
 /* 164 */ "ifexpr ::= ifexprs ISNOTODDBY ifexprs",
 /* 165 */ "ifexpr ::= value INSTANCEOF ID",
 /* 166 */ "ifexpr ::= value INSTANCEOF value",
 /* 167 */ "ifcond ::= EQUALS",
 /* 168 */ "ifcond ::= NOTEQUALS",
 /* 169 */ "ifcond ::= GREATERTHAN",
 /* 170 */ "ifcond ::= LESSTHAN",
 /* 171 */ "ifcond ::= GREATEREQUAL",
 /* 172 */ "ifcond ::= LESSEQUAL",
 /* 173 */ "ifcond ::= IDENTITY",
 /* 174 */ "ifcond ::= NONEIDENTITY",
 /* 175 */ "ifcond ::= MOD",
 /* 176 */ "lop ::= LAND",
 /* 177 */ "lop ::= LOR",
 /* 178 */ "lop ::= LXOR",
 /* 179 */ "array ::= OPENB arrayelements CLOSEB",
 /* 180 */ "arrayelements ::= arrayelement",
 /* 181 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 182 */ "arrayelements ::=",
 /* 183 */ "arrayelement ::= value APTR expr",
 /* 184 */ "arrayelement ::= ID APTR expr",
 /* 185 */ "arrayelement ::= expr",
 /* 186 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 187 */ "doublequoted ::= doublequotedcontent",
 /* 188 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 189 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 190 */ "doublequotedcontent ::= DOLLARID",
 /* 191 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 192 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 193 */ "doublequotedcontent ::= smartytag",
 /* 194 */ "doublequotedcontent ::= OTHER",
 /* 195 */ "optspace ::= SPACE",
 /* 196 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 0 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 13 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 9 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 11 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 11 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 8 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 6 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        15 => 0,
        16 => 0,
        53 => 0,
        54 => 0,
        55 => 0,
        75 => 0,
        82 => 0,
        87 => 0,
        89 => 0,
        90 => 0,
        91 => 0,
        93 => 0,
        107 => 0,
        180 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        14 => 11,
        12 => 12,
        13 => 13,
        83 => 13,
        85 => 13,
        86 => 13,
        17 => 17,
        18 => 17,
        19 => 19,
        20 => 20,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 27,
        29 => 27,
        30 => 30,
        31 => 30,
        32 => 30,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        41 => 39,
        40 => 40,
        42 => 42,
        43 => 43,
        44 => 44,
        60 => 44,
        139 => 44,
        185 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 51,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 63,
        65 => 63,
        66 => 63,
        68 => 63,
        67 => 67,
        69 => 69,
        70 => 70,
        71 => 71,
        72 => 72,
        73 => 73,
        79 => 73,
        124 => 73,
        147 => 73,
        187 => 73,
        194 => 73,
        195 => 73,
        74 => 74,
        76 => 76,
        77 => 76,
        78 => 76,
        80 => 80,
        81 => 80,
        84 => 84,
        88 => 88,
        92 => 92,
        94 => 94,
        95 => 95,
        96 => 96,
        97 => 97,
        98 => 98,
        99 => 99,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        186 => 111,
        112 => 112,
        144 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        116 => 115,
        117 => 115,
        118 => 118,
        119 => 119,
        122 => 119,
        120 => 120,
        121 => 121,
        123 => 123,
        196 => 123,
        125 => 125,
        126 => 126,
        127 => 127,
        149 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        140 => 140,
        141 => 141,
        142 => 141,
        143 => 143,
        145 => 145,
        146 => 146,
        148 => 148,
        150 => 150,
        151 => 151,
        154 => 151,
        165 => 151,
        152 => 152,
        153 => 153,
        155 => 155,
        156 => 156,
        157 => 157,
        162 => 157,
        158 => 158,
        161 => 158,
        159 => 159,
        164 => 159,
        160 => 160,
        163 => 160,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        188 => 188,
        189 => 189,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 193,
    );
#line 84 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1979 "smarty_internal_templateparser.php"
#line 90 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1988 "smarty_internal_templateparser.php"
#line 98 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1998 "smarty_internal_templateparser.php"
#line 111 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('Smarty tags are not allowed inside &lt;?php ?> tags');
                                          }
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 2008 "smarty_internal_templateparser.php"
#line 121 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 2011 "smarty_internal_templateparser.php"
#line 127 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('&lt;?php ?> tags can not be nested');
                                       }
				                               $this->allowed_php = true;
                                       $this->_retvalue = $this->compiler->processNocacheCode($this->yystack[$this->yyidx + 0]->minor, true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2028 "smarty_internal_templateparser.php"
#line 143 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
				                               $this->allowed_php = false;
                                       $this->_retvalue = $this->compiler->processNocacheCode('?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2042 "smarty_internal_templateparser.php"
#line 156 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2050 "smarty_internal_templateparser.php"
#line 165 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->compiler->tag_nocache = true; $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true) . substr($this->yystack[$this->yyidx + 0]->minor,5,strlen($this->yystack[$this->yyidx + 0]->minor)-7) . $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true);    }
#line 2053 "smarty_internal_templateparser.php"
#line 168 "smarty_internal_templateparser.y"
    function yy_r10(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2061 "smarty_internal_templateparser.php"
#line 179 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = '';     }
#line 2064 "smarty_internal_templateparser.php"
#line 180 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2067 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r13(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2070 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2073 "smarty_internal_templateparser.php"
#line 189 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2076 "smarty_internal_templateparser.php"
#line 197 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2079 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2082 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2085 "smarty_internal_templateparser.php"
#line 211 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2088 "smarty_internal_templateparser.php"
#line 214 "smarty_internal_templateparser.y"
    function yy_r30(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2091 "smarty_internal_templateparser.php"
#line 218 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2094 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2097 "smarty_internal_templateparser.php"
#line 222 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2100 "smarty_internal_templateparser.php"
#line 224 "smarty_internal_templateparser.y"
    function yy_r37(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2105 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r38(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2110 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2113 "smarty_internal_templateparser.php"
#line 233 "smarty_internal_templateparser.y"
    function yy_r40(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2116 "smarty_internal_templateparser.php"
#line 236 "smarty_internal_templateparser.y"
    function yy_r42(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2120 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r43(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2123 "smarty_internal_templateparser.php"
#line 239 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2126 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2129 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -7]->minor,array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2132 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r47(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2136 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r48(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2140 "smarty_internal_templateparser.php"
#line 247 "smarty_internal_templateparser.y"
    function yy_r49(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2144 "smarty_internal_templateparser.php"
#line 249 "smarty_internal_templateparser.y"
    function yy_r50(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2148 "smarty_internal_templateparser.php"
#line 253 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2151 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2154 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r57(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2159 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r58(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2162 "smarty_internal_templateparser.php"
#line 270 "smarty_internal_templateparser.y"
    function yy_r59(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2165 "smarty_internal_templateparser.php"
#line 274 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array();    }
#line 2168 "smarty_internal_templateparser.php"
#line 277 "smarty_internal_templateparser.y"
    function yy_r62(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2171 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2174 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2177 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r69(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2180 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2183 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2186 "smarty_internal_templateparser.php"
#line 298 "smarty_internal_templateparser.y"
    function yy_r72(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2189 "smarty_internal_templateparser.php"
#line 299 "smarty_internal_templateparser.y"
    function yy_r73(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2192 "smarty_internal_templateparser.php"
#line 301 "smarty_internal_templateparser.y"
    function yy_r74(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2195 "smarty_internal_templateparser.php"
#line 307 "smarty_internal_templateparser.y"
    function yy_r76(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2198 "smarty_internal_templateparser.php"
#line 320 "smarty_internal_templateparser.y"
    function yy_r80(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2201 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r84(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2204 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r88(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2207 "smarty_internal_templateparser.php"
#line 344 "smarty_internal_templateparser.y"
    function yy_r92(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2210 "smarty_internal_templateparser.php"
#line 348 "smarty_internal_templateparser.y"
    function yy_r94(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2219 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = "''";     }
#line 2222 "smarty_internal_templateparser.php"
#line 357 "smarty_internal_templateparser.y"
    function yy_r96(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2225 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2228 "smarty_internal_templateparser.php"
#line 360 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2231 "smarty_internal_templateparser.php"
#line 361 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2234 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2237 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2240 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2243 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2246 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r104(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2249 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r105(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2253 "smarty_internal_templateparser.php"
#line 382 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2256 "smarty_internal_templateparser.php"
#line 386 "smarty_internal_templateparser.y"
    function yy_r108(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2259 "smarty_internal_templateparser.php"
#line 387 "smarty_internal_templateparser.y"
    function yy_r109(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2262 "smarty_internal_templateparser.php"
#line 390 "smarty_internal_templateparser.y"
    function yy_r110(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2265 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r111(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2268 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r112(){return;    }
#line 2271 "smarty_internal_templateparser.php"
#line 402 "smarty_internal_templateparser.y"
    function yy_r113(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2274 "smarty_internal_templateparser.php"
#line 403 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2277 "smarty_internal_templateparser.php"
#line 406 "smarty_internal_templateparser.y"
    function yy_r115(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2280 "smarty_internal_templateparser.php"
#line 410 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2283 "smarty_internal_templateparser.php"
#line 411 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2286 "smarty_internal_templateparser.php"
#line 413 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2289 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2292 "smarty_internal_templateparser.php"
#line 418 "smarty_internal_templateparser.y"
    function yy_r123(){$this->_retvalue = '';    }
#line 2295 "smarty_internal_templateparser.php"
#line 426 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2298 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2301 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2304 "smarty_internal_templateparser.php"
#line 436 "smarty_internal_templateparser.y"
    function yy_r128(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2308 "smarty_internal_templateparser.php"
#line 439 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2311 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2314 "smarty_internal_templateparser.php"
#line 443 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2317 "smarty_internal_templateparser.php"
#line 444 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2320 "smarty_internal_templateparser.php"
#line 445 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2323 "smarty_internal_templateparser.php"
#line 446 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2326 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2329 "smarty_internal_templateparser.php"
#line 454 "smarty_internal_templateparser.y"
    function yy_r136(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2338 "smarty_internal_templateparser.php"
#line 465 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2341 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2344 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r140(){ return;    }
#line 2347 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2350 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2353 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r145(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2356 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r146(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2359 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r148(){$this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2362 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r150(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2365 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2368 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2371 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r153(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2374 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2377 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2380 "smarty_internal_templateparser.php"
#line 516 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2383 "smarty_internal_templateparser.php"
#line 517 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2386 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2389 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2392 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r166(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2395 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '==';    }
#line 2398 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '!=';    }
#line 2401 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '>';    }
#line 2404 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '<';    }
#line 2407 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '>=';    }
#line 2410 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '<=';    }
#line 2413 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '===';    }
#line 2416 "smarty_internal_templateparser.php"
#line 534 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '!==';    }
#line 2419 "smarty_internal_templateparser.php"
#line 535 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '%';    }
#line 2422 "smarty_internal_templateparser.php"
#line 537 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '&&';    }
#line 2425 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '||';    }
#line 2428 "smarty_internal_templateparser.php"
#line 539 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = ' XOR ';    }
#line 2431 "smarty_internal_templateparser.php"
#line 544 "smarty_internal_templateparser.y"
    function yy_r179(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2434 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2437 "smarty_internal_templateparser.php"
#line 547 "smarty_internal_templateparser.y"
    function yy_r182(){ return;     }
#line 2440 "smarty_internal_templateparser.php"
#line 548 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2443 "smarty_internal_templateparser.php"
#line 549 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2446 "smarty_internal_templateparser.php"
#line 558 "smarty_internal_templateparser.y"
    function yy_r188(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'' || substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '@') {
                                                                 		     $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                	      } else {
                                                                         $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                        }
                                                                       $this->compiler->has_variable_string = true;
                                                                           }
#line 2455 "smarty_internal_templateparser.php"
#line 565 "smarty_internal_templateparser.y"
    function yy_r189(){$this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;    }
#line 2458 "smarty_internal_templateparser.php"
#line 566 "smarty_internal_templateparser.y"
    function yy_r190(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2461 "smarty_internal_templateparser.php"
#line 567 "smarty_internal_templateparser.y"
    function yy_r191(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                }
                                                                $this->compiler->has_variable_string = true;
                                                                   }
#line 2470 "smarty_internal_templateparser.php"
#line 574 "smarty_internal_templateparser.y"
    function yy_r192(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2473 "smarty_internal_templateparser.php"
#line 575 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2476 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 72 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2539 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 64 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2557 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>