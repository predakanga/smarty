<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 126 "smarty_internal_templateparser.php"

    const TP_COMMENT                        =  1;
    const TP_PHPSTARTTAG                    =  2;
    const TP_OTHER                          =  3;
    const TP_PHPENDTAG                      =  4;
    const TP_FAKEPHPSTARTTAG                =  5;
    const TP_LITERALSTART                   =  6;
    const TP_LITERALEND                     =  7;
    const TP_LITERAL                        =  8;
    const TP_LDEL                           =  9;
    const TP_RDEL                           = 10;
    const TP_DOLLAR                         = 11;
    const TP_ID                             = 12;
    const TP_EQUAL                          = 13;
    const TP_FOREACH                        = 14;
    const TP_PTR                            = 15;
    const TP_IF                             = 16;
    const TP_SPACE                          = 17;
    const TP_UNIMATH                        = 18;
    const TP_FOR                            = 19;
    const TP_SEMICOLON                      = 20;
    const TP_INCDEC                         = 21;
    const TP_TO                             = 22;
    const TP_AS                             = 23;
    const TP_APTR                           = 24;
    const TP_LDELSLASH                      = 25;
    const TP_INTEGER                        = 26;
    const TP_COMMA                          = 27;
    const TP_COLON                          = 28;
    const TP_MATH                           = 29;
    const TP_ANDSYM                         = 30;
    const TP_OPENP                          = 31;
    const TP_CLOSEP                         = 32;
    const TP_QMARK                          = 33;
    const TP_NOT                            = 34;
    const TP_TYPECAST                       = 35;
    const TP_DOT                            = 36;
    const TP_BOOLEAN                        = 37;
    const TP_NULL                           = 38;
    const TP_SINGLEQUOTESTRING              = 39;
    const TP_QUOTE                          = 40;
    const TP_DOUBLECOLON                    = 41;
    const TP_AT                             = 42;
    const TP_HATCH                          = 43;
    const TP_OPENB                          = 44;
    const TP_CLOSEB                         = 45;
    const TP_VERT                           = 46;
    const TP_ISIN                           = 47;
    const TP_ISDIVBY                        = 48;
    const TP_ISNOTDIVBY                     = 49;
    const TP_ISEVEN                         = 50;
    const TP_ISNOTEVEN                      = 51;
    const TP_ISEVENBY                       = 52;
    const TP_ISNOTEVENBY                    = 53;
    const TP_ISODD                          = 54;
    const TP_ISNOTODD                       = 55;
    const TP_ISODDBY                        = 56;
    const TP_ISNOTODDBY                     = 57;
    const TP_INSTANCEOF                     = 58;
    const TP_EQUALS                         = 59;
    const TP_NOTEQUALS                      = 60;
    const TP_GREATERTHAN                    = 61;
    const TP_LESSTHAN                       = 62;
    const TP_GREATEREQUAL                   = 63;
    const TP_LESSEQUAL                      = 64;
    const TP_IDENTITY                       = 65;
    const TP_NONEIDENTITY                   = 66;
    const TP_MOD                            = 67;
    const TP_LAND                           = 68;
    const TP_LOR                            = 69;
    const TP_LXOR                           = 70;
    const TP_BACKTICK                       = 71;
    const TP_DOLLARID                       = 72;
    const YY_NO_ACTION = 561;
    const YY_ACCEPT_ACTION = 560;
    const YY_ERROR_ACTION = 559;

    const YY_SZ_ACTTAB = 1246;
static public $yy_action = array(
 /*     0 */     4,   11,   83,   53,  247,   99,  220,  180,  345,   43,
 /*    10 */   231,  131,   47,    7,  363,  244,  103,  191,  254,  253,
 /*    20 */   263,  185,   15,   49,   45,   42,   63,  226,  326,  323,
 /*    30 */   292,   52,  184,   95,   60,    2,  560,   51,  257,  253,
 /*    40 */   263,  184,   40,   17,   16,  352,  353,   24,   28,  360,
 /*    50 */   361,   25,   34,  269,  268,  265,  266,  267,  273,  274,
 /*    60 */   280,  281,  282,  279,  278,   18,  169,  301,  310,   98,
 /*    70 */   289,  217,   47,  233,  101,   23,   98,  185,   31,  209,
 /*    80 */   208,  349,   11,   49,   45,  291,  260,    8,   72,   50,
 /*    90 */   300,  322,  131,   18,  331,  251,  310,  300,  200,  275,
 /*   100 */    13,  184,   40,   17,   16,  352,  353,   24,   28,  360,
 /*   110 */   361,   25,   34,  269,  268,  265,  266,  267,  273,  274,
 /*   120 */   280,  281,  282,  279,  278,    4,   18,   87,  172,  310,
 /*   130 */    26,  184,   18,  329,   43,  310,   18,  184,  340,  310,
 /*   140 */    27,  103,  191,  132,  246,  229,  235,   19,  236,   54,
 /*   150 */    42,   63,    4,  326,  323,  292,   52,  304,  288,   60,
 /*   160 */     2,  264,  237,    4,  185,   84,  176,  185,  103,  201,
 /*   170 */   239,  365,   43,  369,  366,   54,  344,  334,   39,  103,
 /*   180 */   191,   18,  333,   18,  310,   19,  310,   27,   42,   63,
 /*   190 */    11,  326,  323,  292,   52,   73,  204,   60,    2,    4,
 /*   200 */   131,   87,  187,  118,  328,  350,  364,  243,   43,  196,
 /*   210 */   227,  185,  185,  185,  155,  103,  191,  307,  288,  317,
 /*   220 */    30,   19,   87,  137,   42,   63,   11,  326,  323,  292,
 /*   230 */    52,  166,  293,   60,    2,    4,  131,   84,  176,  349,
 /*   240 */   184,  184,  321,   56,   43,  255,   18,  259,  427,  310,
 /*   250 */   258,  103,  191,  121,   60,  185,  184,   15,  168,  349,
 /*   260 */    42,   63,   32,  326,  323,  292,   52,  135,  288,   60,
 /*   270 */     2,    4,  166,   87,  178,   38,  230,   86,  252,  201,
 /*   280 */    43,  165,  288,   18,  330,  190,  310,  103,  191,  241,
 /*   290 */    50,  309,  245,   19,    9,   21,   42,   63,  202,  326,
 /*   300 */   323,  292,   52,  249,  248,   60,    2,    4,  296,   84,
 /*   310 */   174,  171,   11,  184,  362,   47,   43,  184,  295,   37,
 /*   320 */   341,  185,  131,  103,  191,  185,   49,   45,  315,   19,
 /*   330 */    11,   98,   42,   63,  116,  326,  323,  292,   52,  166,
 /*   340 */   131,   60,    2,  294,  365,  437,  369,  366,   54,  288,
 /*   350 */   334,  164,  300,  184,  184,  218,  269,  268,  265,  266,
 /*   360 */   267,  273,  274,  280,  281,  282,  279,  278,    4,  210,
 /*   370 */    90,  176,  286,  111,   36,  305,  130,   43,  170,  185,
 /*   380 */   348,  166,   87,  232,  103,  191,   14,  184,  288,  250,
 /*   390 */    19,  288,  184,   42,   63,  109,  326,  323,  292,   52,
 /*   400 */   166,  194,   60,    2,    4,  193,   84,  175,  184,   87,
 /*   410 */   288,   22,  234,   43,   60,   98,  123,  332,  338,   55,
 /*   420 */   103,  191,  113,  332,  219,   55,   15,  167,  349,   42,
 /*   430 */    63,  288,  326,  323,  292,   52,  300,  288,   60,    2,
 /*   440 */     4,   60,   87,  173,  335,  293,  298,  303,  134,   43,
 /*   450 */    64,  185,   18,  185,  185,  310,  103,  183,  197,  214,
 /*   460 */   302,   18,   19,  288,  181,   42,   63,  185,  326,  323,
 /*   470 */   292,   52,   10,  284,   60,    2,    4,  293,   87,  177,
 /*   480 */   185,  354,  430,   46,   44,   43,    1,    5,  185,  430,
 /*   490 */   357,  301,  103,  191,  145,  318,  287,  233,   19,  317,
 /*   500 */    98,   42,   63,  185,  326,  323,  292,   52,   41,  291,
 /*   510 */    60,    4,   70,   87,  187,  322,  149,  290,  343,  106,
 /*   520 */    43,  300,  337,  157,  185,  185,  171,  103,  191,  185,
 /*   530 */   133,  285,  239,   19,   37,  320,   42,   63,  185,  326,
 /*   540 */   323,  292,   52,  301,   12,   60,  185,  216,  336,  233,
 /*   550 */   150,  367,   98,  301,  105,  185,  203,  318,  185,  233,
 /*   560 */   112,  291,   98,   18,   72,   59,  195,  322,   75,  276,
 /*   570 */   320,  291,   50,  300,   72,  184,  128,  322,  182,  359,
 /*   580 */   224,   78,  301,  300,  320,  156,   88,   68,   76,   67,
 /*   590 */    94,   81,  301,  115,  207,  179,  217,  320,  233,  101,
 /*   600 */   291,   98,  312,   72,  222,   65,  322,  108,  288,  138,
 /*   610 */   291,  301,  300,   72,   66,  228,  322,  233,   57,   92,
 /*   620 */    98,  301,  300,  320,  288,  318,  126,  233,  112,  291,
 /*   630 */    98,  129,   72,  277,  309,  322,  297,  223,  139,  291,
 /*   640 */   301,  300,   72,  104,  217,  322,  233,  100,  212,   98,
 /*   650 */    13,  300,  211,  288,  110,   79,  301,  120,  291,  320,
 /*   660 */   318,   72,  233,  112,  322,   98,  270,  301,  311,  288,
 /*   670 */   300,  271,  288,  233,  291,  198,   98,   72,   74,  161,
 /*   680 */   322,  301,  107,  215,  317,  186,  300,  233,  141,  256,
 /*   690 */    98,  322,  308,   35,  320,   91,  143,  300,  320,  291,
 /*   700 */   301,  317,   72,  346,  318,  322,  233,   62,   93,   98,
 /*   710 */   301,  300,  339,  102,  318,  213,  233,  112,  291,   98,
 /*   720 */    33,   72,   85,  206,  322,   89,   96,  327,  291,  320,
 /*   730 */   300,   72,  190,  221,  322,  306,  325,  299,  301,   32,
 /*   740 */   300,  262,   88,  347,   77,   58,   94,   81,  301,  160,
 /*   750 */   319,  162,  216,  192,  233,  150,  291,   98,   20,   72,
 /*   760 */     9,   48,  322,   80,  261,  194,  291,  301,  300,   72,
 /*   770 */   351,  217,  322,  233,  101,  307,   98,   97,  300,  225,
 /*   780 */    82,  136,  189,  301,  358,  291,  309,  318,   72,  233,
 /*   790 */   163,  322,   98,  185,  342,  305,  301,  300,   39,    6,
 /*   800 */   318,  291,  233,  158,   72,   98,  305,  322,  293,  305,
 /*   810 */   305,  305,  301,  300,  291,  305,  318,   72,  233,  114,
 /*   820 */   322,   98,  305,  305,  305,  301,  300,  305,  305,  318,
 /*   830 */   291,  188,  125,   72,   98,  305,  322,  305,  305,  305,
 /*   840 */   305,  305,  300,  291,  301,  305,   72,  305,  318,  322,
 /*   850 */   233,  119,  301,   98,  305,  300,  318,  305,  233,  124,
 /*   860 */   305,   98,  291,  301,  305,   72,  305,  318,  322,  233,
 /*   870 */   291,  305,   98,   72,  300,  305,  322,  305,  305,  301,
 /*   880 */   305,  291,  300,  318,   71,  233,  153,  322,   98,  305,
 /*   890 */   305,  305,  301,  300,  305,  305,  318,  291,  233,  152,
 /*   900 */    72,   98,  305,  322,  305,  305,  305,  305,  301,  300,
 /*   910 */   291,  305,  318,   72,  233,  140,  322,   98,  305,  305,
 /*   920 */   305,  301,  300,  305,  305,  318,  291,  233,  159,   72,
 /*   930 */    98,  305,  322,  305,  305,  305,  305,  301,  300,  291,
 /*   940 */   305,  318,   72,  233,  147,  322,   98,  240,  305,  305,
 /*   950 */   240,  300,  305,    3,  305,  291,    3,  305,   72,  305,
 /*   960 */   305,  322,  305,  305,  301,  305,  305,  300,  318,  103,
 /*   970 */   233,  154,  103,   98,  301,  305,  305,  305,  318,  305,
 /*   980 */   233,  122,  291,   98,  242,   72,  305,  370,  322,  305,
 /*   990 */   305,  305,  291,  301,  300,   72,  305,  318,  322,  233,
 /*  1000 */   117,  305,   98,  301,  300,  305,  305,  318,  305,  233,
 /*  1010 */   144,  291,   98,  305,   72,   29,  238,  322,   29,  238,
 /*  1020 */   305,  291,  301,  300,   72,  305,  318,  322,  233,  151,
 /*  1030 */   305,   98,  305,  300,  305,  305,  305,  305,  305,  305,
 /*  1040 */   291,  305,  305,   72,  305,  305,  322,  305,  305,  301,
 /*  1050 */   305,  305,  300,  318,  305,  233,   61,  305,   98,  301,
 /*  1060 */   305,  305,  305,  318,  305,  233,  127,  291,   98,  305,
 /*  1070 */    72,  305,  305,  322,  305,  305,  305,  291,  301,  300,
 /*  1080 */    72,  305,  318,  322,  233,  142,  305,   98,  301,  300,
 /*  1090 */   305,  305,  318,  305,  233,  146,  291,   98,  305,   72,
 /*  1100 */   305,  305,  322,  305,  305,  305,  291,  301,  300,   72,
 /*  1110 */   305,  318,  322,  233,  148,  305,   98,  305,  300,  305,
 /*  1120 */   305,  305,  305,  305,  305,  291,  305,  305,   72,  305,
 /*  1130 */   301,  322,  305,  305,  318,  305,  233,  300,  305,   98,
 /*  1140 */   305,  301,  305,  305,  305,  355,  305,  233,  291,  305,
 /*  1150 */    98,   69,  305,  305,  322,  305,  305,  301,  301,  356,
 /*  1160 */   300,  205,  368,  233,  233,  322,   98,   98,  305,  305,
 /*  1170 */   301,  300,  305,  305,  324,  199,  233,  305,  305,   98,
 /*  1180 */   301,  322,  322,  305,  316,  305,  233,  300,  300,   98,
 /*  1190 */   305,  305,  301,  305,  322,  305,  272,  305,  233,  305,
 /*  1200 */   300,   98,  305,  301,  322,  305,  305,  314,  305,  233,
 /*  1210 */   300,  305,   98,  305,  301,  301,  322,  305,  313,  283,
 /*  1220 */   233,  233,  300,   98,   98,  305,  305,  322,  305,  305,
 /*  1230 */   305,  305,  305,  300,  305,  305,  305,  305,  322,  322,
 /*  1240 */   305,  305,  305,  305,  300,  300,
    );
    static public $yy_lookahead = array(
 /*     0 */     9,   31,   11,   12,   10,   14,   36,   16,   10,   18,
 /*    10 */    19,   41,   18,   27,   10,   45,   25,   26,   76,   77,
 /*    20 */    78,   17,   31,   29,   30,   34,   35,   32,   37,   38,
 /*    30 */    39,   40,   46,   17,   43,   44,   74,   75,   76,   77,
 /*    40 */    78,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*    50 */    55,   56,   57,   59,   60,   61,   62,   63,   64,   65,
 /*    60 */    66,   67,   68,   69,   70,    9,   83,   77,   12,   86,
 /*    70 */    10,   81,   18,   83,   84,   24,   86,   17,    9,   89,
 /*    80 */    90,   21,   31,   29,   30,   95,  103,   13,   98,   15,
 /*    90 */   107,  101,   41,    9,   10,   10,   12,  107,   42,   45,
 /*   100 */    31,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   110 */    55,   56,   57,   59,   60,   61,   62,   63,   64,   65,
 /*   120 */    66,   67,   68,   69,   70,    9,    9,   11,   12,   12,
 /*   130 */    13,   46,    9,   10,   18,   12,    9,   46,   21,   12,
 /*   140 */    13,   25,   26,   82,    1,    2,    3,   31,    5,    6,
 /*   150 */    34,   35,    9,   37,   38,   39,   40,   10,   97,   43,
 /*   160 */    44,   45,   71,    9,   17,   11,   12,   17,   25,   42,
 /*   170 */    77,    2,   18,    4,    5,    6,    7,    8,   28,   25,
 /*   180 */    26,    9,   10,    9,   12,   31,   12,   13,   34,   35,
 /*   190 */    31,   37,   38,   39,   40,  102,   24,   43,   44,    9,
 /*   200 */    41,   11,   12,   82,   10,   10,   10,  114,   18,   15,
 /*   210 */    15,   17,   17,   17,  105,   25,   26,  108,   97,  110,
 /*   220 */     9,   31,   11,   12,   34,   35,   31,   37,   38,   39,
 /*   230 */    40,   87,  111,   43,   44,    9,   41,   11,   12,   21,
 /*   240 */    46,   46,   32,   12,   18,   14,    9,   16,   10,   12,
 /*   250 */    19,   25,   26,   82,   43,   17,   46,   31,   87,   21,
 /*   260 */    34,   35,   13,   37,   38,   39,   40,   82,   97,   43,
 /*   270 */    44,    9,   87,   11,   12,    9,   94,   11,   12,   42,
 /*   280 */    18,   10,   97,    9,   10,   36,   12,   25,   26,   71,
 /*   290 */    15,  109,   26,   31,   13,   28,   34,   35,   24,   37,
 /*   300 */    38,   39,   40,   37,   38,   43,   44,    9,   43,   11,
 /*   310 */    12,   36,   31,   46,   10,   18,   18,   46,   10,   44,
 /*   320 */    17,   17,   41,   25,   26,   17,   29,   30,   83,   31,
 /*   330 */    31,   86,   34,   35,   82,   37,   38,   39,   40,   87,
 /*   340 */    41,   43,   44,   10,    2,   46,    4,    5,    6,   97,
 /*   350 */     8,   10,  107,   46,   46,   12,   59,   60,   61,   62,
 /*   360 */    63,   64,   65,   66,   67,   68,   69,   70,    9,   26,
 /*   370 */    11,   12,   10,   82,   28,   12,   82,   18,   87,   17,
 /*   380 */    10,   87,   11,   12,   25,   26,   13,   46,   97,   32,
 /*   390 */    31,   97,   46,   34,   35,   82,   37,   38,   39,   40,
 /*   400 */    87,   28,   43,   44,    9,   42,   11,   12,   46,   11,
 /*   410 */    97,   33,   83,   18,   43,   86,   82,   78,   79,   80,
 /*   420 */    25,   26,   82,   78,   79,   80,   31,   87,   21,   34,
 /*   430 */    35,   97,   37,   38,   39,   40,  107,   97,   43,   44,
 /*   440 */     9,   43,   11,   12,   10,  111,   10,   10,   82,   18,
 /*   450 */    12,   17,    9,   17,   17,   12,   25,   26,   11,   12,
 /*   460 */    10,    9,   31,   97,   12,   34,   35,   17,   37,   38,
 /*   470 */    39,   40,   27,   10,   43,   44,    9,  111,   11,   12,
 /*   480 */    17,   10,   10,   99,  100,   18,   17,   18,   17,   17,
 /*   490 */    45,   77,   25,   26,  105,   81,   10,   83,   31,  110,
 /*   500 */    86,   34,   35,   17,   37,   38,   39,   40,   17,   95,
 /*   510 */    43,    9,   98,   11,   12,  101,   20,   10,   10,   93,
 /*   520 */    18,  107,   10,   27,   17,   17,   36,   25,   26,   17,
 /*   530 */   106,   10,   77,   31,   44,  109,   34,   35,   17,   37,
 /*   540 */    38,   39,   40,   77,   31,   43,   17,   81,   10,   83,
 /*   550 */    84,   10,   86,   77,   93,   17,    3,   81,   17,   83,
 /*   560 */    84,   95,   86,    9,   98,  106,   12,  101,   93,  114,
 /*   570 */   109,   95,   15,  107,   98,   46,  106,  101,  112,  113,
 /*   580 */   104,   93,   77,  107,  109,   88,   81,   88,   83,   84,
 /*   590 */    85,   86,   77,   82,   90,   91,   81,  109,   83,   84,
 /*   600 */    95,   86,  110,   98,   89,   88,  101,   93,   97,   82,
 /*   610 */    95,   77,  107,   98,   88,   81,  101,   83,   84,   85,
 /*   620 */    86,   77,  107,  109,   97,   81,  106,   83,   84,   95,
 /*   630 */    86,  106,   98,   45,  109,  101,   43,   92,   82,   95,
 /*   640 */    77,  107,   98,   93,   81,  101,   83,   84,  104,   86,
 /*   650 */    31,  107,   89,   97,   82,   11,   77,   82,   95,  109,
 /*   660 */    81,   98,   83,   84,  101,   86,    4,   77,   12,   97,
 /*   670 */   107,   81,   97,   83,   95,   23,   86,   98,   93,  105,
 /*   680 */   101,   77,   93,  104,  110,   81,  107,   83,   84,   85,
 /*   690 */    86,  101,   12,   33,  109,   11,  105,  107,  109,   95,
 /*   700 */    77,  110,   98,   10,   81,  101,   83,   84,   85,   86,
 /*   710 */    77,  107,   10,   93,   81,   32,   83,   84,   95,   86,
 /*   720 */    22,   98,   11,   23,  101,   11,   32,   32,   95,  109,
 /*   730 */   107,   98,   36,   12,  101,   12,   26,  104,   77,   13,
 /*   740 */   107,   10,   81,    7,   83,   84,   85,   86,   77,   20,
 /*   750 */    12,   12,   81,   12,   83,   84,   95,   86,   24,   98,
 /*   760 */    13,   58,  101,   11,   10,   28,   95,   77,  107,   98,
 /*   770 */    97,   81,  101,   83,   84,  108,   86,  103,  107,   89,
 /*   780 */    11,  106,   96,   77,  113,   95,  109,   81,   98,   83,
 /*   790 */    84,  101,   86,   17,   90,  115,   77,  107,   28,   92,
 /*   800 */    81,   95,   83,   84,   98,   86,  115,  101,  111,  115,
 /*   810 */   115,  115,   77,  107,   95,  115,   81,   98,   83,   84,
 /*   820 */   101,   86,  115,  115,  115,   77,  107,  115,  115,   81,
 /*   830 */    95,   83,   84,   98,   86,  115,  101,  115,  115,  115,
 /*   840 */   115,  115,  107,   95,   77,  115,   98,  115,   81,  101,
 /*   850 */    83,   84,   77,   86,  115,  107,   81,  115,   83,   84,
 /*   860 */   115,   86,   95,   77,  115,   98,  115,   81,  101,   83,
 /*   870 */    95,  115,   86,   98,  107,  115,  101,  115,  115,   77,
 /*   880 */   115,   95,  107,   81,   98,   83,   84,  101,   86,  115,
 /*   890 */   115,  115,   77,  107,  115,  115,   81,   95,   83,   84,
 /*   900 */    98,   86,  115,  101,  115,  115,  115,  115,   77,  107,
 /*   910 */    95,  115,   81,   98,   83,   84,  101,   86,  115,  115,
 /*   920 */   115,   77,  107,  115,  115,   81,   95,   83,   84,   98,
 /*   930 */    86,  115,  101,  115,  115,  115,  115,   77,  107,   95,
 /*   940 */   115,   81,   98,   83,   84,  101,   86,    3,  115,  115,
 /*   950 */     3,  107,  115,    9,  115,   95,    9,  115,   98,  115,
 /*   960 */   115,  101,  115,  115,   77,  115,  115,  107,   81,   25,
 /*   970 */    83,   84,   25,   86,   77,  115,  115,  115,   81,  115,
 /*   980 */    83,   84,   95,   86,   40,   98,  115,   40,  101,  115,
 /*   990 */   115,  115,   95,   77,  107,   98,  115,   81,  101,   83,
 /*  1000 */    84,  115,   86,   77,  107,  115,  115,   81,  115,   83,
 /*  1010 */    84,   95,   86,  115,   98,   71,   72,  101,   71,   72,
 /*  1020 */   115,   95,   77,  107,   98,  115,   81,  101,   83,   84,
 /*  1030 */   115,   86,  115,  107,  115,  115,  115,  115,  115,  115,
 /*  1040 */    95,  115,  115,   98,  115,  115,  101,  115,  115,   77,
 /*  1050 */   115,  115,  107,   81,  115,   83,   84,  115,   86,   77,
 /*  1060 */   115,  115,  115,   81,  115,   83,   84,   95,   86,  115,
 /*  1070 */    98,  115,  115,  101,  115,  115,  115,   95,   77,  107,
 /*  1080 */    98,  115,   81,  101,   83,   84,  115,   86,   77,  107,
 /*  1090 */   115,  115,   81,  115,   83,   84,   95,   86,  115,   98,
 /*  1100 */   115,  115,  101,  115,  115,  115,   95,   77,  107,   98,
 /*  1110 */   115,   81,  101,   83,   84,  115,   86,  115,  107,  115,
 /*  1120 */   115,  115,  115,  115,  115,   95,  115,  115,   98,  115,
 /*  1130 */    77,  101,  115,  115,   81,  115,   83,  107,  115,   86,
 /*  1140 */   115,   77,  115,  115,  115,   81,  115,   83,   95,  115,
 /*  1150 */    86,   98,  115,  115,  101,  115,  115,   77,   77,   95,
 /*  1160 */   107,   81,   81,   83,   83,  101,   86,   86,  115,  115,
 /*  1170 */    77,  107,  115,  115,   81,   95,   83,  115,  115,   86,
 /*  1180 */    77,  101,  101,  115,   81,  115,   83,  107,  107,   86,
 /*  1190 */   115,  115,   77,  115,  101,  115,   81,  115,   83,  115,
 /*  1200 */   107,   86,  115,   77,  101,  115,  115,   81,  115,   83,
 /*  1210 */   107,  115,   86,  115,   77,   77,  101,  115,   81,   81,
 /*  1220 */    83,   83,  107,   86,   86,  115,  115,  101,  115,  115,
 /*  1230 */   115,  115,  115,  107,  115,  115,  115,  115,  101,  101,
 /*  1240 */   115,  115,  115,  115,  107,  107,
);
    const YY_SHIFT_USE_DFLT = -31;
    const YY_SHIFT_MAX = 234;
    static public $yy_shift_ofst = array(
 /*     0 */   143,  359,  298,   -9,   -9,  154,  154,  154,  226,  395,
 /*    10 */   298,  154,  154,  154,  226,  154,  154,  154,  154,  154,
 /*    20 */   154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
 /*    30 */   154,  154,  154,  154,  154,  154,  154,  116,  190,  262,
 /*    40 */   190,  431,  502,  502,  502,  502,  502,  502,  467,  502,
 /*    50 */   211,  143,  944,  195,  169,  342,  194,  308,  362,  275,
 /*    60 */   371,  529,  529,  398,  529,  150,  150,  529,  150,   54,
 /*    70 */    -6,  297,  297,  947,  127,  117,  238,   60,  237,  443,
 /*    80 */   443,   74,  443,  452,  554,  443,  443,  443,  541,  443,
 /*    90 */   554,  443,  776,  776,  776,  769,  557,  557,  557,  491,
 /*   100 */    -5,   55,  274,  231,  172,   84,  174,  123,   56,  450,
 /*   110 */   437,  436,  -14,  463,  346,  471,  304,   85,  147,  267,
 /*   120 */     4,  196,  341,  434,  271,   91,  490,  210,  490,  490,
 /*   130 */   508,  447,  512,  490,  538,  521,  490,   69,  507,  486,
 /*   140 */   307,  307,  307,  557,  307,  557,  307,  307,  307,  303,
 /*   150 */   307,  307,  307,  307,  307,  557,  770,  769,  307,  307,
 /*   160 */   303,  557,  513,  307,  -31,  -31,  -31,  -31,  -31,  -31,
 /*   170 */   -31,  266,  -30,  281,   51,  299,  159,  159,  159,  496,
 /*   180 */   469,  373,  445,  249,  363,  343,  472,  159,  218,  731,
 /*   190 */   710,  696,  754,  723,  738,  737,  741,  739,  714,  652,
 /*   200 */   680,  656,  644,  662,  684,  700,  711,  698,  693,  702,
 /*   210 */   726,  683,  694,  660,  619,  695,  734,  703,  747,  736,
 /*   220 */   721,  588,  729,  752,  357,  370,  378,  438,  333,  553,
 /*   230 */    -2,   16,  265,  407,  593,
);
    const YY_REDUCE_USE_DFLT = -59;
    const YY_REDUCE_MAX = 170;
    static public $yy_reduce_ofst = array(
 /*     0 */   -38,  -10,  466,  661,  505,  690,  515,  633,  623,  604,
 /*    10 */   671,  579,  544,  476,  534,  563, 1030,  945,  916,  982,
 /*    20 */  1001,  887,  767,  802,  860,  831,  719,  844,  815,  748,
 /*    30 */   775,  897, 1011,  972,  926,  735,  706, 1053,  414,  786,
 /*    40 */  1064, 1080, 1126, 1137, 1115, 1138,  590, 1093, 1081, 1103,
 /*    50 */   -17,  -58,   93,  171,  345,  339,  291,  313,  185,  109,
 /*    60 */   329,  294,  252,  245,  340,  366,  334,  185,  121,  384,
 /*    70 */   384,  384,  384,  455,  525,  182,  527,  527,  525,  461,
 /*    80 */   475,  389,  426,  488,  488,  550,  514,  488,  511,  620,
 /*    90 */   585,  589,  572,  575,  556,  504,  591,  574,  389,   61,
 /*   100 */   144,  144,  677,  686,  677,  677,  677,  677,  677,  673,
 /*   110 */   673,  673,  144,  673,  144,  673,  673,  144,  673,  144,
 /*   120 */   673,  673,  144,  673,  144,  144,  667,  144,  667,  667,
 /*   130 */   673,  674,  673,  667,  673,  673,  667,  675,  673,  673,
 /*   140 */   144,  144,  144,  492,  144,  492,  144,  144,  144,  707,
 /*   150 */   144,  144,  144,  144,  144,  492,  697,  704,  144,  144,
 /*   160 */   545,  492,  459,  144,  424,  470,  497,  526,  517,  520,
 /*   170 */   499,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(1, 2, 3, 5, 6, 9, 25, ),
        /* 1 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 2 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 3 */ array(9, 11, 12, 14, 16, 18, 19, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 4 */ array(9, 11, 12, 14, 16, 18, 19, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 5 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 6 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 7 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 8 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 9 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 10 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 11 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 12 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 13 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 14 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 15 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 16 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 17 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 18 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 19 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 20 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 21 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 22 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 23 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 24 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 25 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 26 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 27 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 28 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 29 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 30 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 31 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 32 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 33 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 34 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 35 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 36 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 37 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, 45, ),
        /* 38 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 39 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 40 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 41 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, 44, ),
        /* 42 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 43 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 44 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 45 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 46 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 47 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 48 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 49 */ array(9, 11, 12, 18, 25, 26, 31, 34, 35, 37, 38, 39, 40, 43, ),
        /* 50 */ array(9, 11, 12, 43, ),
        /* 51 */ array(1, 2, 3, 5, 6, 9, 25, ),
        /* 52 */ array(3, 9, 25, 40, 71, 72, ),
        /* 53 */ array(10, 15, 17, 31, 41, 46, ),
        /* 54 */ array(2, 4, 5, 6, 7, 8, ),
        /* 55 */ array(2, 4, 5, 6, 8, ),
        /* 56 */ array(10, 15, 17, 46, ),
        /* 57 */ array(10, 17, 46, ),
        /* 58 */ array(10, 17, 46, ),
        /* 59 */ array(15, 36, 44, ),
        /* 60 */ array(11, 12, 43, ),
        /* 61 */ array(17, 46, ),
        /* 62 */ array(17, 46, ),
        /* 63 */ array(11, 43, ),
        /* 64 */ array(17, 46, ),
        /* 65 */ array(17, 28, ),
        /* 66 */ array(17, 28, ),
        /* 67 */ array(17, 46, ),
        /* 68 */ array(17, 28, ),
        /* 69 */ array(18, 29, 30, 45, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, ),
        /* 70 */ array(10, 18, 29, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, ),
        /* 71 */ array(18, 29, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, ),
        /* 72 */ array(18, 29, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, ),
        /* 73 */ array(3, 9, 25, 40, 71, 72, ),
        /* 74 */ array(9, 12, 13, 42, ),
        /* 75 */ array(9, 12, 13, 21, ),
        /* 76 */ array(10, 17, 21, ),
        /* 77 */ array(10, 17, 21, ),
        /* 78 */ array(9, 12, 42, ),
        /* 79 */ array(9, 12, ),
        /* 80 */ array(9, 12, ),
        /* 81 */ array(13, 15, ),
        /* 82 */ array(9, 12, ),
        /* 83 */ array(9, 12, ),
        /* 84 */ array(9, 12, ),
        /* 85 */ array(9, 12, ),
        /* 86 */ array(9, 12, ),
        /* 87 */ array(9, 12, ),
        /* 88 */ array(10, 17, ),
        /* 89 */ array(9, 12, ),
        /* 90 */ array(9, 12, ),
        /* 91 */ array(9, 12, ),
        /* 92 */ array(17, ),
        /* 93 */ array(17, ),
        /* 94 */ array(17, ),
        /* 95 */ array(11, ),
        /* 96 */ array(15, ),
        /* 97 */ array(15, ),
        /* 98 */ array(15, ),
        /* 99 */ array(17, ),
        /* 100 */ array(32, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, ),
        /* 101 */ array(46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, ),
        /* 102 */ array(9, 10, 12, 24, ),
        /* 103 */ array(12, 14, 16, 19, ),
        /* 104 */ array(9, 10, 12, 24, ),
        /* 105 */ array(9, 10, 12, ),
        /* 106 */ array(9, 12, 13, ),
        /* 107 */ array(9, 10, 12, ),
        /* 108 */ array(9, 12, 42, ),
        /* 109 */ array(10, 17, ),
        /* 110 */ array(10, 17, ),
        /* 111 */ array(10, 17, ),
        /* 112 */ array(27, 46, ),
        /* 113 */ array(10, 17, ),
        /* 114 */ array(28, 46, ),
        /* 115 */ array(10, 17, ),
        /* 116 */ array(10, 17, ),
        /* 117 */ array(10, 46, ),
        /* 118 */ array(10, 17, ),
        /* 119 */ array(28, 46, ),
        /* 120 */ array(10, 17, ),
        /* 121 */ array(10, 17, ),
        /* 122 */ array(10, 46, ),
        /* 123 */ array(10, 17, ),
        /* 124 */ array(10, 46, ),
        /* 125 */ array(46, 71, ),
        /* 126 */ array(36, 44, ),
        /* 127 */ array(32, 46, ),
        /* 128 */ array(36, 44, ),
        /* 129 */ array(36, 44, ),
        /* 130 */ array(10, 17, ),
        /* 131 */ array(11, 12, ),
        /* 132 */ array(10, 17, ),
        /* 133 */ array(36, 44, ),
        /* 134 */ array(10, 17, ),
        /* 135 */ array(10, 17, ),
        /* 136 */ array(36, 44, ),
        /* 137 */ array(9, 31, ),
        /* 138 */ array(10, 17, ),
        /* 139 */ array(10, 17, ),
        /* 140 */ array(46, ),
        /* 141 */ array(46, ),
        /* 142 */ array(46, ),
        /* 143 */ array(15, ),
        /* 144 */ array(46, ),
        /* 145 */ array(15, ),
        /* 146 */ array(46, ),
        /* 147 */ array(46, ),
        /* 148 */ array(46, ),
        /* 149 */ array(17, ),
        /* 150 */ array(46, ),
        /* 151 */ array(46, ),
        /* 152 */ array(46, ),
        /* 153 */ array(46, ),
        /* 154 */ array(46, ),
        /* 155 */ array(15, ),
        /* 156 */ array(28, ),
        /* 157 */ array(11, ),
        /* 158 */ array(46, ),
        /* 159 */ array(46, ),
        /* 160 */ array(17, ),
        /* 161 */ array(15, ),
        /* 162 */ array(31, ),
        /* 163 */ array(46, ),
        /* 164 */ array(),
        /* 165 */ array(),
        /* 166 */ array(),
        /* 167 */ array(),
        /* 168 */ array(),
        /* 169 */ array(),
        /* 170 */ array(),
        /* 171 */ array(9, 11, 12, 26, 37, 38, ),
        /* 172 */ array(31, 36, 41, 45, ),
        /* 173 */ array(13, 31, 41, ),
        /* 174 */ array(24, 31, 41, ),
        /* 175 */ array(31, 41, 46, ),
        /* 176 */ array(31, 41, ),
        /* 177 */ array(31, 41, ),
        /* 178 */ array(31, 41, ),
        /* 179 */ array(20, 27, ),
        /* 180 */ array(17, 18, ),
        /* 181 */ array(13, 28, ),
        /* 182 */ array(27, 45, ),
        /* 183 */ array(13, 36, ),
        /* 184 */ array(12, 42, ),
        /* 185 */ array(12, 26, ),
        /* 186 */ array(10, 17, ),
        /* 187 */ array(31, 41, ),
        /* 188 */ array(21, 71, ),
        /* 189 */ array(10, ),
        /* 190 */ array(26, ),
        /* 191 */ array(36, ),
        /* 192 */ array(10, ),
        /* 193 */ array(12, ),
        /* 194 */ array(12, ),
        /* 195 */ array(28, ),
        /* 196 */ array(12, ),
        /* 197 */ array(12, ),
        /* 198 */ array(11, ),
        /* 199 */ array(23, ),
        /* 200 */ array(12, ),
        /* 201 */ array(12, ),
        /* 202 */ array(11, ),
        /* 203 */ array(4, ),
        /* 204 */ array(11, ),
        /* 205 */ array(23, ),
        /* 206 */ array(11, ),
        /* 207 */ array(22, ),
        /* 208 */ array(10, ),
        /* 209 */ array(10, ),
        /* 210 */ array(13, ),
        /* 211 */ array(32, ),
        /* 212 */ array(32, ),
        /* 213 */ array(33, ),
        /* 214 */ array(31, ),
        /* 215 */ array(32, ),
        /* 216 */ array(24, ),
        /* 217 */ array(58, ),
        /* 218 */ array(13, ),
        /* 219 */ array(7, ),
        /* 220 */ array(12, ),
        /* 221 */ array(45, ),
        /* 222 */ array(20, ),
        /* 223 */ array(11, ),
        /* 224 */ array(32, ),
        /* 225 */ array(10, ),
        /* 226 */ array(33, ),
        /* 227 */ array(12, ),
        /* 228 */ array(10, ),
        /* 229 */ array(3, ),
        /* 230 */ array(10, ),
        /* 231 */ array(17, ),
        /* 232 */ array(43, ),
        /* 233 */ array(21, ),
        /* 234 */ array(43, ),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
);
    static public $yy_default = array(
 /*     0 */   559,  559,  544,  559,  559,  559,  559,  507,  559,  559,
 /*    10 */   559,  507,  507,  507,  559,  559,  559,  559,  559,  559,
 /*    20 */   559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
 /*    30 */   559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
 /*    40 */   559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
 /*    50 */   559,  371,  559,  559,  559,  383,  559,  559,  559,  469,
 /*    60 */   559,  427,  427,  559,  427,  427,  427,  427,  427,  559,
 /*    70 */   559,  512,  438,  559,  479,  559,  450,  450,  479,  559,
 /*    80 */   559,  472,  559,  559,  559,  559,  559,  559,  441,  559,
 /*    90 */   559,  559,  427,  427,  427,  559,  465,  464,  472,  427,
 /*   100 */   559,  514,  559,  559,  559,  559,  559,  559,  480,  559,
 /*   110 */   559,  559,  506,  559,  559,  559,  559,  559,  559,  559,
 /*   120 */   559,  559,  559,  559,  559,  559,  499,  559,  500,  477,
 /*   130 */   559,  559,  559,  501,  559,  559,  498,  479,  559,  559,
 /*   140 */   525,  429,  545,  467,  526,  495,  433,  521,  518,  558,
 /*   150 */   547,  517,  522,  546,  449,  470,  440,  559,  410,  436,
 /*   160 */   558,  466,  479,  448,  479,  479,  511,  511,  511,  479,
 /*   170 */   511,  559,  559,  432,  437,  428,  437,  527,  513,  559,
 /*   180 */   559,  493,  559,  455,  559,  559,  441,  559,  450,  559,
 /*   190 */   559,  455,  559,  559,  559,  493,  559,  559,  559,  559,
 /*   200 */   559,  559,  559,  559,  559,  559,  559,  434,  559,  559,
 /*   210 */   559,  559,  559,  559,  468,  559,  441,  441,  432,  559,
 /*   220 */   559,  559,  559,  559,  559,  559,  460,  559,  441,  559,
 /*   230 */   559,  559,  559,  450,  559,  378,  379,  551,  552,  555,
 /*   240 */   556,  550,  463,  549,  487,  485,  375,  486,  484,  483,
 /*   250 */   504,  494,  482,  374,  373,  421,  431,  372,  420,  419,
 /*   260 */   502,  424,  418,  376,  490,  531,  532,  533,  530,  529,
 /*   270 */   377,  446,  447,  534,  535,  489,  548,  488,  540,  539,
 /*   280 */   536,  537,  538,  444,  403,  392,  554,  393,  426,  553,
 /*   290 */   391,  445,  461,  510,  394,  395,  475,  476,  422,  505,
 /*   300 */   474,  471,  396,  397,  423,  509,  508,  478,  481,  492,
 /*   310 */   493,  473,  497,  451,  452,  453,  442,  496,  441,  439,
 /*   320 */   491,  460,  459,  458,  443,  456,  457,  503,  417,  414,
 /*   330 */   415,  416,  384,  413,  385,  405,  404,  401,  382,  406,
 /*   340 */   411,  557,  435,  412,  380,  409,  408,  381,  407,  454,
 /*   350 */   402,  425,  519,  520,  390,  516,  515,  541,  543,  542,
 /*   360 */   523,  524,  398,  399,  400,  386,  387,  389,  528,  388,
 /*   370 */   462,
);
    const YYNOCODE = 116;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 371;
    const YYNRULE = 188;
    const YYERRORSYMBOL = 73;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'COMMENT',       'PHPSTARTTAG',   'OTHER',       
  'PHPENDTAG',     'FAKEPHPSTARTTAG',  'LITERALSTART',  'LITERALEND',  
  'LITERAL',       'LDEL',          'RDEL',          'DOLLAR',      
  'ID',            'EQUAL',         'FOREACH',       'PTR',         
  'IF',            'SPACE',         'UNIMATH',       'FOR',         
  'SEMICOLON',     'INCDEC',        'TO',            'AS',          
  'APTR',          'LDELSLASH',     'INTEGER',       'COMMA',       
  'COLON',         'MATH',          'ANDSYM',        'OPENP',       
  'CLOSEP',        'QMARK',         'NOT',           'TYPECAST',    
  'DOT',           'BOOLEAN',       'NULL',          'SINGLEQUOTESTRING',
  'QUOTE',         'DOUBLECOLON',   'AT',            'HATCH',       
  'OPENB',         'CLOSEB',        'VERT',          'ISIN',        
  'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',   
  'ISEVENBY',      'ISNOTEVENBY',   'ISODD',         'ISNOTODD',    
  'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',    'EQUALS',      
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',         
  'LAND',          'LOR',           'LXOR',          'BACKTICK',    
  'DOLLARID',      'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'value',         'attributes',    'variable',    
  'expr',          'ternary',       'varindexed',    'modifier',    
  'modparameters',  'ifexpr',        'statement',     'statements',  
  'optspace',      'varvar',        'foraction',     'array',       
  'specialclose',  'attribute',     'exprs',         'ifcond',      
  'lop',           'function',      'doublequoted',  'method',      
  'params',        'objectchain',   'arrayindex',    'object',      
  'indexdef',      'varvarele',     'objectelement',  'modparameter',
  'arrayelements',  'arrayelement',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG OTHER PHPENDTAG",
 /*   7 */ "template_element ::= OTHER",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "literal ::= LITERALSTART LITERALEND",
 /*  10 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  11 */ "literal_elements ::= literal_element literal_elements",
 /*  12 */ "literal_elements ::=",
 /*  13 */ "literal_element ::= literal",
 /*  14 */ "literal_element ::= LITERAL",
 /*  15 */ "literal_element ::= PHPSTARTTAG",
 /*  16 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  17 */ "literal_element ::= PHPENDTAG",
 /*  18 */ "smartytag ::= LDEL value RDEL",
 /*  19 */ "smartytag ::= LDEL value attributes RDEL",
 /*  20 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  21 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  22 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  23 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  24 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  26 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  27 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  28 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  29 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  30 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  31 */ "smartytag ::= LDEL ID RDEL",
 /*  32 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  34 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  35 */ "smartytag ::= LDEL IF SPACE ifexpr RDEL",
 /*  36 */ "smartytag ::= LDEL IF UNIMATH ifexpr RDEL",
 /*  37 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  38 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexpr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  39 */ "foraction ::= EQUAL expr",
 /*  40 */ "foraction ::= INCDEC",
 /*  41 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  42 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  43 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  44 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  45 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  46 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  47 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  48 */ "specialclose ::= IF",
 /*  49 */ "specialclose ::= FOR",
 /*  50 */ "specialclose ::= FOREACH",
 /*  51 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  52 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  53 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  54 */ "attributes ::= attributes attribute",
 /*  55 */ "attributes ::= attribute",
 /*  56 */ "attributes ::=",
 /*  57 */ "attribute ::= SPACE ID EQUAL ID",
 /*  58 */ "attribute ::= SPACE ID EQUAL expr",
 /*  59 */ "attribute ::= SPACE ID EQUAL value",
 /*  60 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  61 */ "attribute ::= SPACE ID",
 /*  62 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  63 */ "statements ::= statement",
 /*  64 */ "statements ::= statements COMMA statement",
 /*  65 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  66 */ "expr ::= ID",
 /*  67 */ "expr ::= exprs",
 /*  68 */ "expr ::= DOLLAR ID COLON ID",
 /*  69 */ "expr ::= expr modifier modparameters",
 /*  70 */ "exprs ::= value",
 /*  71 */ "exprs ::= exprs MATH value",
 /*  72 */ "exprs ::= exprs UNIMATH value",
 /*  73 */ "exprs ::= exprs ANDSYM value",
 /*  74 */ "exprs ::= array",
 /*  75 */ "exprs ::= exprs ifcond value",
 /*  76 */ "exprs ::= exprs lop value",
 /*  77 */ "ternary ::= OPENP ifexpr CLOSEP QMARK expr COLON expr",
 /*  78 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  79 */ "value ::= variable",
 /*  80 */ "value ::= UNIMATH value",
 /*  81 */ "value ::= NOT value",
 /*  82 */ "value ::= TYPECAST variable",
 /*  83 */ "value ::= variable INCDEC",
 /*  84 */ "value ::= INTEGER",
 /*  85 */ "value ::= INTEGER DOT INTEGER",
 /*  86 */ "value ::= BOOLEAN",
 /*  87 */ "value ::= NULL",
 /*  88 */ "value ::= function",
 /*  89 */ "value ::= OPENP expr CLOSEP",
 /*  90 */ "value ::= SINGLEQUOTESTRING",
 /*  91 */ "value ::= QUOTE doublequoted QUOTE",
 /*  92 */ "value ::= QUOTE QUOTE",
 /*  93 */ "value ::= ID DOUBLECOLON method",
 /*  94 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /*  95 */ "value ::= ID DOUBLECOLON method objectchain",
 /*  96 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /*  97 */ "value ::= ID DOUBLECOLON ID",
 /*  98 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /*  99 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 100 */ "value ::= smartytag",
 /* 101 */ "variable ::= varindexed",
 /* 102 */ "variable ::= DOLLAR varvar AT ID",
 /* 103 */ "variable ::= object",
 /* 104 */ "variable ::= HATCH ID HATCH",
 /* 105 */ "variable ::= HATCH variable HATCH",
 /* 106 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 107 */ "arrayindex ::= arrayindex indexdef",
 /* 108 */ "arrayindex ::=",
 /* 109 */ "indexdef ::= DOT DOLLAR varvar",
 /* 110 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 111 */ "indexdef ::= DOT ID",
 /* 112 */ "indexdef ::= DOT BOOLEAN",
 /* 113 */ "indexdef ::= DOT NULL",
 /* 114 */ "indexdef ::= DOT INTEGER",
 /* 115 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 116 */ "indexdef ::= OPENB ID CLOSEB",
 /* 117 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 118 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 119 */ "indexdef ::= OPENB CLOSEB",
 /* 120 */ "varvar ::= varvarele",
 /* 121 */ "varvar ::= varvar varvarele",
 /* 122 */ "varvarele ::= ID",
 /* 123 */ "varvarele ::= LDEL expr RDEL",
 /* 124 */ "object ::= varindexed objectchain",
 /* 125 */ "objectchain ::= objectelement",
 /* 126 */ "objectchain ::= objectchain objectelement",
 /* 127 */ "objectelement ::= PTR ID arrayindex",
 /* 128 */ "objectelement ::= PTR variable arrayindex",
 /* 129 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 130 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 131 */ "objectelement ::= PTR method",
 /* 132 */ "function ::= ID OPENP params CLOSEP",
 /* 133 */ "method ::= ID OPENP params CLOSEP",
 /* 134 */ "params ::= expr COMMA params",
 /* 135 */ "params ::= expr",
 /* 136 */ "params ::=",
 /* 137 */ "modifier ::= VERT AT ID",
 /* 138 */ "modifier ::= VERT ID",
 /* 139 */ "modparameters ::= modparameters modparameter",
 /* 140 */ "modparameters ::=",
 /* 141 */ "modparameter ::= COLON exprs",
 /* 142 */ "modparameter ::= COLON ID",
 /* 143 */ "ifexpr ::= expr",
 /* 144 */ "ifexpr ::= expr ISIN array",
 /* 145 */ "ifexpr ::= expr ISIN value",
 /* 146 */ "ifexpr ::= expr ISDIVBY expr",
 /* 147 */ "ifexpr ::= expr ISNOTDIVBY expr",
 /* 148 */ "ifexpr ::= expr ISEVEN",
 /* 149 */ "ifexpr ::= expr ISNOTEVEN",
 /* 150 */ "ifexpr ::= expr ISEVENBY expr",
 /* 151 */ "ifexpr ::= expr ISNOTEVENBY expr",
 /* 152 */ "ifexpr ::= expr ISODD",
 /* 153 */ "ifexpr ::= expr ISNOTODD",
 /* 154 */ "ifexpr ::= expr ISODDBY expr",
 /* 155 */ "ifexpr ::= expr ISNOTODDBY expr",
 /* 156 */ "ifexpr ::= value INSTANCEOF ID",
 /* 157 */ "ifexpr ::= value INSTANCEOF value",
 /* 158 */ "ifcond ::= EQUALS",
 /* 159 */ "ifcond ::= NOTEQUALS",
 /* 160 */ "ifcond ::= GREATERTHAN",
 /* 161 */ "ifcond ::= LESSTHAN",
 /* 162 */ "ifcond ::= GREATEREQUAL",
 /* 163 */ "ifcond ::= LESSEQUAL",
 /* 164 */ "ifcond ::= IDENTITY",
 /* 165 */ "ifcond ::= NONEIDENTITY",
 /* 166 */ "ifcond ::= MOD",
 /* 167 */ "lop ::= LAND",
 /* 168 */ "lop ::= LOR",
 /* 169 */ "lop ::= LXOR",
 /* 170 */ "array ::= OPENB arrayelements CLOSEB",
 /* 171 */ "arrayelements ::= arrayelement",
 /* 172 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 173 */ "arrayelements ::=",
 /* 174 */ "arrayelement ::= value APTR expr",
 /* 175 */ "arrayelement ::= ID APTR expr",
 /* 176 */ "arrayelement ::= expr",
 /* 177 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 178 */ "doublequoted ::= doublequotedcontent",
 /* 179 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 180 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 181 */ "doublequotedcontent ::= DOLLARID",
 /* 182 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 183 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 184 */ "doublequotedcontent ::= smartytag",
 /* 185 */ "doublequotedcontent ::= OTHER",
 /* 186 */ "optspace ::= SPACE",
 /* 187 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 3 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 13 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 7 ),
  array( 'lhs' => 85, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 8 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 6 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 0 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 0 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        13 => 0,
        14 => 0,
        48 => 0,
        49 => 0,
        50 => 0,
        70 => 0,
        79 => 0,
        84 => 0,
        86 => 0,
        87 => 0,
        88 => 0,
        90 => 0,
        103 => 0,
        171 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        12 => 9,
        10 => 10,
        11 => 11,
        80 => 11,
        82 => 11,
        83 => 11,
        15 => 15,
        16 => 15,
        17 => 17,
        18 => 18,
        19 => 19,
        20 => 19,
        21 => 19,
        22 => 19,
        23 => 23,
        24 => 23,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 27,
        29 => 29,
        30 => 29,
        31 => 31,
        32 => 32,
        33 => 33,
        34 => 34,
        35 => 35,
        37 => 35,
        36 => 36,
        38 => 38,
        39 => 39,
        40 => 40,
        55 => 40,
        135 => 40,
        176 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 46,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 58,
        60 => 58,
        62 => 58,
        61 => 61,
        63 => 63,
        64 => 64,
        65 => 65,
        66 => 66,
        67 => 67,
        74 => 67,
        120 => 67,
        178 => 67,
        185 => 67,
        186 => 67,
        68 => 68,
        69 => 69,
        71 => 71,
        72 => 71,
        73 => 71,
        75 => 75,
        76 => 75,
        156 => 75,
        77 => 77,
        78 => 77,
        81 => 81,
        85 => 85,
        89 => 89,
        91 => 91,
        92 => 92,
        93 => 93,
        94 => 94,
        95 => 95,
        96 => 96,
        97 => 97,
        98 => 98,
        99 => 99,
        100 => 100,
        101 => 101,
        102 => 102,
        104 => 104,
        105 => 105,
        106 => 106,
        107 => 107,
        177 => 107,
        108 => 108,
        140 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 111,
        113 => 111,
        114 => 114,
        115 => 115,
        118 => 115,
        116 => 116,
        117 => 117,
        119 => 119,
        187 => 119,
        121 => 121,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        136 => 136,
        137 => 137,
        138 => 137,
        139 => 139,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        153 => 148,
        149 => 149,
        152 => 149,
        150 => 150,
        155 => 150,
        151 => 151,
        154 => 151,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        179 => 179,
        182 => 179,
        180 => 180,
        181 => 181,
        183 => 183,
        184 => 184,
    );
#line 81 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1832 "smarty_internal_templateparser.php"
#line 87 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1841 "smarty_internal_templateparser.php"
#line 95 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1851 "smarty_internal_templateparser.php"
#line 108 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 1858 "smarty_internal_templateparser.php"
#line 115 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1861 "smarty_internal_templateparser.php"
#line 121 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + -2]->minor) . $this->yystack[$this->yyidx + -1]->minor . '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'?>', ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php'.$this->yystack[$this->yyidx + -1]->minor.'?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 1874 "smarty_internal_templateparser.php"
#line 135 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 1882 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 1890 "smarty_internal_templateparser.php"
#line 148 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->_retvalue = '';     }
#line 1893 "smarty_internal_templateparser.php"
#line 149 "smarty_internal_templateparser.y"
    function yy_r10(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 1896 "smarty_internal_templateparser.php"
#line 151 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 1899 "smarty_internal_templateparser.php"
#line 156 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 1902 "smarty_internal_templateparser.php"
#line 158 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 1905 "smarty_internal_templateparser.php"
#line 166 "smarty_internal_templateparser.y"
    function yy_r18(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1908 "smarty_internal_templateparser.php"
#line 167 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 1911 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 1914 "smarty_internal_templateparser.php"
#line 180 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 1917 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 1920 "smarty_internal_templateparser.php"
#line 185 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 1923 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r31(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 1926 "smarty_internal_templateparser.php"
#line 189 "smarty_internal_templateparser.y"
    function yy_r32(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 1929 "smarty_internal_templateparser.php"
#line 191 "smarty_internal_templateparser.y"
    function yy_r33(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 1934 "smarty_internal_templateparser.php"
#line 195 "smarty_internal_templateparser.y"
    function yy_r34(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 1939 "smarty_internal_templateparser.php"
#line 199 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1942 "smarty_internal_templateparser.php"
#line 200 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 1945 "smarty_internal_templateparser.php"
#line 203 "smarty_internal_templateparser.y"
    function yy_r38(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1949 "smarty_internal_templateparser.php"
#line 205 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 1952 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r40(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 1955 "smarty_internal_templateparser.php"
#line 207 "smarty_internal_templateparser.y"
    function yy_r41(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 1958 "smarty_internal_templateparser.php"
#line 210 "smarty_internal_templateparser.y"
    function yy_r42(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1962 "smarty_internal_templateparser.php"
#line 212 "smarty_internal_templateparser.y"
    function yy_r43(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 1966 "smarty_internal_templateparser.php"
#line 214 "smarty_internal_templateparser.y"
    function yy_r44(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1970 "smarty_internal_templateparser.php"
#line 216 "smarty_internal_templateparser.y"
    function yy_r45(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 1974 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 1977 "smarty_internal_templateparser.php"
#line 225 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 1980 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r52(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 1985 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r53(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 1988 "smarty_internal_templateparser.php"
#line 237 "smarty_internal_templateparser.y"
    function yy_r54(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 1991 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = array();    }
#line 1994 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r57(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 1997 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r58(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2000 "smarty_internal_templateparser.php"
#line 248 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2003 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2006 "smarty_internal_templateparser.php"
#line 256 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2009 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2012 "smarty_internal_templateparser.php"
#line 264 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2015 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r67(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2018 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r68(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2021 "smarty_internal_templateparser.php"
#line 268 "smarty_internal_templateparser.y"
    function yy_r69(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2024 "smarty_internal_templateparser.php"
#line 277 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2027 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r75(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2030 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r77(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2033 "smarty_internal_templateparser.php"
#line 298 "smarty_internal_templateparser.y"
    function yy_r81(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2036 "smarty_internal_templateparser.php"
#line 303 "smarty_internal_templateparser.y"
    function yy_r85(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2039 "smarty_internal_templateparser.php"
#line 313 "smarty_internal_templateparser.y"
    function yy_r89(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2042 "smarty_internal_templateparser.php"
#line 317 "smarty_internal_templateparser.y"
    function yy_r91(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2051 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r92(){ $this->_retvalue = "''";     }
#line 2054 "smarty_internal_templateparser.php"
#line 326 "smarty_internal_templateparser.y"
    function yy_r93(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2057 "smarty_internal_templateparser.php"
#line 327 "smarty_internal_templateparser.y"
    function yy_r94(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2060 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2063 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r96(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2066 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2069 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2072 "smarty_internal_templateparser.php"
#line 336 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2075 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2078 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r101(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2082 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2085 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r104(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2088 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r105(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2091 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r106(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2094 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r107(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2097 "smarty_internal_templateparser.php"
#line 366 "smarty_internal_templateparser.y"
    function yy_r108(){return;    }
#line 2100 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r109(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2103 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r110(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2106 "smarty_internal_templateparser.php"
#line 374 "smarty_internal_templateparser.y"
    function yy_r111(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2109 "smarty_internal_templateparser.php"
#line 378 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2112 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r115(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2115 "smarty_internal_templateparser.php"
#line 381 "smarty_internal_templateparser.y"
    function yy_r116(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2118 "smarty_internal_templateparser.php"
#line 382 "smarty_internal_templateparser.y"
    function yy_r117(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2121 "smarty_internal_templateparser.php"
#line 386 "smarty_internal_templateparser.y"
    function yy_r119(){$this->_retvalue = '';    }
#line 2124 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r121(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2127 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r122(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2130 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r123(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2133 "smarty_internal_templateparser.php"
#line 404 "smarty_internal_templateparser.y"
    function yy_r124(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2137 "smarty_internal_templateparser.php"
#line 407 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2140 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2143 "smarty_internal_templateparser.php"
#line 411 "smarty_internal_templateparser.y"
    function yy_r127(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2146 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r128(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2149 "smarty_internal_templateparser.php"
#line 413 "smarty_internal_templateparser.y"
    function yy_r129(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2152 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r130(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2155 "smarty_internal_templateparser.php"
#line 416 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2158 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r132(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2167 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2170 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2173 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r136(){ return;    }
#line 2176 "smarty_internal_templateparser.php"
#line 446 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2179 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2182 "smarty_internal_templateparser.php"
#line 463 "smarty_internal_templateparser.y"
    function yy_r141(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2185 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r142(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2188 "smarty_internal_templateparser.php"
#line 468 "smarty_internal_templateparser.y"
    function yy_r143(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2191 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r144(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2194 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r145(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2197 "smarty_internal_templateparser.php"
#line 471 "smarty_internal_templateparser.y"
    function yy_r146(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2200 "smarty_internal_templateparser.php"
#line 472 "smarty_internal_templateparser.y"
    function yy_r147(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2203 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r148(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2206 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r149(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2209 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r150(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2212 "smarty_internal_templateparser.php"
#line 476 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2215 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r157(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2218 "smarty_internal_templateparser.php"
#line 484 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '==';    }
#line 2221 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '!=';    }
#line 2224 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '>';    }
#line 2227 "smarty_internal_templateparser.php"
#line 487 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '<';    }
#line 2230 "smarty_internal_templateparser.php"
#line 488 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = '>=';    }
#line 2233 "smarty_internal_templateparser.php"
#line 489 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = '<=';    }
#line 2236 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = '===';    }
#line 2239 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r165(){$this->_retvalue = '!==';    }
#line 2242 "smarty_internal_templateparser.php"
#line 492 "smarty_internal_templateparser.y"
    function yy_r166(){$this->_retvalue = '%';    }
#line 2245 "smarty_internal_templateparser.php"
#line 494 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '&&';    }
#line 2248 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '||';    }
#line 2251 "smarty_internal_templateparser.php"
#line 496 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = ' XOR ';    }
#line 2254 "smarty_internal_templateparser.php"
#line 501 "smarty_internal_templateparser.y"
    function yy_r170(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2257 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r172(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2260 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r173(){ return;     }
#line 2263 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r174(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2266 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r175(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2269 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."'; $this->compiler->has_variable_string = true;    }
#line 2272 "smarty_internal_templateparser.php"
#line 516 "smarty_internal_templateparser.y"
    function yy_r180(){$this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2275 "smarty_internal_templateparser.php"
#line 517 "smarty_internal_templateparser.y"
    function yy_r181(){$this->_retvalue = '".'.'$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value'.'."'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2278 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2281 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '".$_tmp'.$this->prefix_number.'."'; $this->compiler->has_variable_string = true;    }
#line 2284 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 71 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2347 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 63 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2365 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>
