<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 126 "smarty_internal_templateparser.php"

    const TP_IFEXP                          =  1;
    const TP_UNIMATH                        =  2;
    const TP_VERT                           =  3;
    const TP_COLON                          =  4;
    const TP_EXP                            =  5;
    const TP_COMMENT                        =  6;
    const TP_PHPSTARTTAG                    =  7;
    const TP_PHPENDTAG                      =  8;
    const TP_OTHER                          =  9;
    const TP_FAKEPHPSTARTTAG                = 10;
    const TP_PHP_CODE                       = 11;
    const TP_PHP_CODE_START_DOUBLEQUOTE     = 12;
    const TP_PHP_CODE_DOUBLEQUOTE           = 13;
    const TP_PHP_HEREDOC_START              = 14;
    const TP_PHP_HEREDOC_END                = 15;
    const TP_PHP_NOWDOC_START               = 16;
    const TP_PHP_NOWDOC_END                 = 17;
    const TP_PHP_DQ_CONTENT                 = 18;
    const TP_PHP_DQ_EMBED_START             = 19;
    const TP_PHP_DQ_EMBED_END               = 20;
    const TP_LITERALSTART                   = 21;
    const TP_LITERALEND                     = 22;
    const TP_LITERAL                        = 23;
    const TP_LDEL                           = 24;
    const TP_RDEL                           = 25;
    const TP_DOLLAR                         = 26;
    const TP_ID                             = 27;
    const TP_EQUAL                          = 28;
    const TP_FOREACH                        = 29;
    const TP_PTR                            = 30;
    const TP_IF                             = 31;
    const TP_SPACE                          = 32;
    const TP_FOR                            = 33;
    const TP_SEMICOLON                      = 34;
    const TP_INCDEC                         = 35;
    const TP_TO                             = 36;
    const TP_AS                             = 37;
    const TP_APTR                           = 38;
    const TP_LDELSLASH                      = 39;
    const TP_INTEGER                        = 40;
    const TP_COMMA                          = 41;
    const TP_MATH                           = 42;
    const TP_ANDSYM                         = 43;
    const TP_OPENP                          = 44;
    const TP_CLOSEP                         = 45;
    const TP_QMARK                          = 46;
    const TP_VAL                            = 47;
    const TP_NOT                            = 48;
    const TP_TYPECAST                       = 49;
    const TP_DOT                            = 50;
    const TP_BOOLEAN                        = 51;
    const TP_NULL                           = 52;
    const TP_SINGLEQUOTESTRING              = 53;
    const TP_QUOTE                          = 54;
    const TP_DOUBLECOLON                    = 55;
    const TP_MOD                            = 56;
    const TP_AT                             = 57;
    const TP_HATCH                          = 58;
    const TP_OPENB                          = 59;
    const TP_CLOSEB                         = 60;
    const TP_ISIN                           = 61;
    const TP_ISDIVBY                        = 62;
    const TP_ISNOTDIVBY                     = 63;
    const TP_ISEVEN                         = 64;
    const TP_ISNOTEVEN                      = 65;
    const TP_ISEVENBY                       = 66;
    const TP_ISNOTEVENBY                    = 67;
    const TP_ISODD                          = 68;
    const TP_ISNOTODD                       = 69;
    const TP_ISODDBY                        = 70;
    const TP_ISNOTODDBY                     = 71;
    const TP_INSTANCEOF                     = 72;
    const TP_EQUALS                         = 73;
    const TP_NOTEQUALS                      = 74;
    const TP_GREATERTHAN                    = 75;
    const TP_LESSTHAN                       = 76;
    const TP_GREATEREQUAL                   = 77;
    const TP_LESSEQUAL                      = 78;
    const TP_IDENTITY                       = 79;
    const TP_NONEIDENTITY                   = 80;
    const TP_LAND                           = 81;
    const TP_LOR                            = 82;
    const TP_LXOR                           = 83;
    const TP_BACKTICK                       = 84;
    const TP_DOLLARID                       = 85;
    const YY_NO_ACTION = 589;
    const YY_ACCEPT_ACTION = 588;
    const YY_ERROR_ACTION = 587;

    const YY_SZ_ACTTAB = 1447;
static public $yy_action = array(
 /*     0 */    50,   43,   19,   20,  381,  364,   18,   30,  347,  348,
 /*    10 */    35,   33,  314,   97,  185,   92,   39,   87,   93,  250,
 /*    20 */    17,  362,    3,  305,   84,   54,  366,  100,  373,  181,
 /*    30 */    48,  200,  249,  288,  122,  180,  235,  109,  193,  105,
 /*    40 */    50,  367,   14,  251,  243,  366,   47,   49,  208,  290,
 /*    50 */   291,  301,   55,  146,  298,  235,   58,    2,  105,  171,
 /*    60 */   365,  143,    3,  217,   86,  172,  161,  379,   37,    8,
 /*    70 */    45,   44,  232,  298,  374,  209,  297,  109,  193,  365,
 /*    80 */   130,  180,   24,   46,  277,  245,   47,   49,  244,  290,
 /*    90 */   291,  301,   55,   48,   86,  229,   58,    2,  247,   50,
 /*   100 */   353,  269,  275,  276,  282,  283,  284,  281,  280,  278,
 /*   110 */   279,  265,  266,  344,  326,  329,  248,  328,   22,   17,
 /*   120 */   180,    3,  305,   96,  184,  455,   58,    4,   53,  335,
 /*   130 */   327,  340,  180,   45,   44,  287,  109,  193,  180,   48,
 /*   140 */    17,   24,  109,  305,   23,   47,   49,  277,  290,  291,
 /*   150 */   301,   55,  202,   50,    5,   58,    2,  267,  588,   52,
 /*   160 */   258,  321,  323,  336,  269,  275,  276,  282,  283,  284,
 /*   170 */   281,  280,  278,  279,  265,    3,   15,   86,  182,   45,
 /*   180 */    44,  144,  326,  329,  309,  328,  307,   36,  271,  185,
 /*   190 */   109,  193,  129,  277,  343,   24,   53,  158,  327,   47,
 /*   200 */    49,  180,  290,  291,  301,   55,    1,  297,  185,   58,
 /*   210 */   269,  275,  276,  282,  283,  284,  281,  280,  278,  279,
 /*   220 */   265,   50,   25,   57,   29,  255,   38,  260,  366,  259,
 /*   230 */   341,  320,  321,  323,  369,  194,   60,  180,   79,  106,
 /*   240 */   103,   83,   12,    3,   17,   86,  176,  305,   34,    8,
 /*   250 */   370,  270,  215,   67,  180,  388,  298,  342,  109,  193,
 /*   260 */   130,   50,  365,   24,  180,  211,  366,   47,   49,  188,
 /*   270 */   290,  291,  301,   55,  164,  185,  235,   58,    2,  105,
 /*   280 */    71,   17,  359,    3,  305,   86,  177,   26,  370,   86,
 /*   290 */   132,   69,  268,  185,  298,  204,  324,  294,  109,  193,
 /*   300 */   365,   50,  231,   24,  180,  375,  366,   47,   49,  134,
 /*   310 */   290,  291,  301,   55,  164,  458,  235,   58,    2,  105,
 /*   320 */   312,   58,  458,    3,  297,   86,  174,  180,  370,   17,
 /*   330 */   124,   66,  305,   23,  298,  165,  366,  153,  109,  178,
 /*   340 */   365,   50,  307,   24,  157,  297,  235,   47,   49,  105,
 /*   350 */   290,  291,  301,   55,  240,  187,  159,   58,    2,  105,
 /*   360 */   185,  366,  202,    3,  298,   96,  184,  119,   21,  160,
 /*   370 */   365,  235,   17,  361,  105,  305,  254,    7,  109,  193,
 /*   380 */   365,   50,  297,   14,  137,  138,  192,   47,   49,  298,
 /*   390 */   290,  291,  301,   55,  206,  365,  293,   58,    2,  297,
 /*   400 */   297,  366,  125,    3,  368,   96,  173,  135,  325,  149,
 /*   410 */   331,  235,   16,  293,  105,  230,   56,  297,  109,  193,
 /*   420 */   331,   50,  297,   24,   51,  332,   56,   47,   49,  298,
 /*   430 */   290,  291,  301,   55,  198,  365,  293,   58,    2,   17,
 /*   440 */   360,  366,  305,    3,  171,   96,  179,  151,  339,  166,
 /*   450 */   302,  235,  307,   37,  105,  180,  188,  180,  109,  193,
 /*   460 */   287,   50,    6,   14,   51,  185,    7,   47,   49,  298,
 /*   470 */   290,  291,  301,   55,  154,  365,  123,   58,    2,  307,
 /*   480 */    11,  168,    8,    3,  185,   90,  184,  330,   45,   44,
 /*   490 */     9,  297,  239,  130,  180,  105,  287,   17,  109,  193,
 /*   500 */   305,  165,  277,   24,    8,  148,  338,   47,   49,  385,
 /*   510 */   290,  291,  301,   55,   50,  130,  365,   58,    2,  269,
 /*   520 */   275,  276,  282,  283,  284,  281,  280,  278,  279,  265,
 /*   530 */   205,   27,  270,  295,  366,  127,    3,    8,   86,  176,
 /*   540 */   180,   77,  167,  117,  235,  273,  303,  105,  130,  140,
 /*   550 */   297,  109,  193,  180,  223,  234,   24,  371,  227,  366,
 /*   560 */    47,   49,  298,  290,  291,  301,   55,  155,  365,  235,
 /*   570 */    58,  121,  105,  272,   43,   19,   20,  381,  364,   18,
 /*   580 */    30,  347,  348,   35,   33,  150,  297,  298,  296,  366,
 /*   590 */    61,  241,  156,  365,  351,  180,  350,  128,  180,  235,
 /*   600 */   170,  180,  105,  180,  263,  220,  214,   17,  366,   17,
 /*   610 */   183,  370,  305,  300,   67,  337,  118,  298,  235,  387,
 /*   620 */   180,  105,  180,  365,  372,  304,  139,  366,  274,  116,
 /*   630 */   370,  180,  180,   67,  113,  164,  298,  235,  218,   94,
 /*   640 */   105,  297,  365,  315,   89,  371,  264,  186,  383,  370,
 /*   650 */   371,  287,   67,  262,  366,  298,  322,   73,  376,  333,
 /*   660 */   334,  365,   60,  292,   78,   85,  103,   83,   76,   17,
 /*   670 */   366,   53,  189,  185,    3,  114,  370,   12,  118,   67,
 /*   680 */   235,  387,  298,  105,  371,  316,   74,  198,  365,  109,
 /*   690 */    82,  371,  370,   41,   40,   67,  190,   89,  298,  318,
 /*   700 */    75,   16,  180,   32,  365,  366,  213,   75,  197,  366,
 /*   710 */   386,  136,   91,  128,  266,  235,  170,  128,  105,  235,
 /*   720 */   169,  221,  105,  306,   95,  226,  297,  370,  308,    4,
 /*   730 */    67,  370,  131,  298,   67,  306,   72,  298,  366,  365,
 /*   740 */   147,  210,   75,  365,  109,  366,  128,  310,  235,  170,
 /*   750 */   319,  105,  371,  164,  195,  235,  218,  207,  105,  285,
 /*   760 */   370,  115,  203,   67,  261,  133,  298,  370,  120,  145,
 /*   770 */    67,  162,  365,  298,  366,  246,  196,  371,  110,  365,
 /*   780 */   297,  163,  141,  297,  235,   80,   98,  105,  225,   36,
 /*   790 */   271,  212,   89,  355,  371,  253,  370,  199,   89,   67,
 /*   800 */   111,  366,  298,  354,  357,   63,  108,  289,  365,  112,
 /*   810 */    31,  235,  256,  257,  105,  317,  371,  104,  313,   28,
 /*   820 */    81,  311,   64,  370,  107,  142,   67,  233,  366,  298,
 /*   830 */   252,  309,   10,  185,   51,  365,  164,  299,  235,  218,
 /*   840 */    88,  105,  180,   42,  366,  237,   62,  306,   13,  126,
 /*   850 */   370,  242,  164,   67,  235,  218,  298,  105,   38,  228,
 /*   860 */    59,  293,  365,  332,  332,  332,  370,  332,  332,   67,
 /*   870 */   332,  332,  298,  366,  332,  216,  332,  332,  365,  332,
 /*   880 */   332,  164,  332,  235,  102,  101,  105,  332,  332,  332,
 /*   890 */   332,  332,  366,  332,  332,  370,  332,  332,   67,  332,
 /*   900 */   164,  298,  235,  219,  332,  105,  332,  365,  332,  332,
 /*   910 */   332,  332,  332,  332,  370,  332,  332,   67,  332,  366,
 /*   920 */   298,  332,  332,  332,  332,  332,  365,  164,  332,  235,
 /*   930 */   236,  332,  105,  332,  332,  366,  332,  332,  332,  332,
 /*   940 */   332,  370,  332,  164,   67,  235,  352,  298,  105,  332,
 /*   950 */   332,  332,  332,  365,  332,  332,  332,  370,  332,  332,
 /*   960 */    67,  332,  332,  298,  366,  332,  332,  332,  332,  365,
 /*   970 */   332,  332,  164,  332,  235,  201,  332,  105,  332,  332,
 /*   980 */   332,  332,  332,  366,  332,  332,  370,  332,  332,   67,
 /*   990 */   332,  164,  298,  235,  377,  332,  105,  332,  365,  332,
 /*  1000 */   332,  332,  332,  332,  332,  370,  332,  332,   67,  332,
 /*  1010 */   366,  298,  332,  332,  332,  332,  332,  365,  164,  332,
 /*  1020 */   175,  191,  332,  105,  332,  332,  366,  332,  332,  332,
 /*  1030 */   332,  332,  370,  332,  164,   67,  235,   99,  298,  105,
 /*  1040 */   332,  332,  332,  332,  365,  332,  332,  332,  370,  332,
 /*  1050 */   332,   67,  332,  332,  298,  366,  332,  332,  332,  332,
 /*  1060 */   365,  332,  332,  164,  332,  235,  222,  332,  105,  332,
 /*  1070 */   332,  332,  332,  332,  366,  332,  332,  370,  332,  332,
 /*  1080 */    67,  332,  164,  298,  235,  238,  332,  105,  332,  365,
 /*  1090 */   332,  332,  332,  332,  332,  332,  370,  332,  332,   67,
 /*  1100 */   332,  366,  298,  332,  332,  332,  332,  332,  365,  164,
 /*  1110 */   332,  235,  358,  332,  105,  332,  332,  366,  332,  332,
 /*  1120 */   332,  332,  332,  370,  332,  164,   67,  235,  363,  298,
 /*  1130 */   105,  332,  332,  332,  332,  365,  332,  332,  332,  370,
 /*  1140 */   332,  332,   67,  332,  332,  298,  366,  332,  332,  332,
 /*  1150 */   332,  365,  332,  332,  164,  332,  235,  380,  332,  105,
 /*  1160 */   332,  332,  332,  332,  332,  366,  332,  332,  370,  332,
 /*  1170 */   332,   67,  332,  164,  298,  235,  286,  332,  105,  332,
 /*  1180 */   365,  332,  332,  332,  332,  332,  332,  370,  332,  332,
 /*  1190 */    67,  332,  366,  298,  332,  332,  332,  332,  332,  365,
 /*  1200 */   164,  332,  235,  384,  332,  105,  332,  332,  366,  332,
 /*  1210 */   332,  332,  332,  332,  370,  332,  164,   67,  235,  224,
 /*  1220 */   298,  105,  332,  332,  332,  332,  365,  332,  332,  332,
 /*  1230 */   370,  332,  332,   67,  332,  332,  298,  366,  332,  332,
 /*  1240 */   332,  332,  365,  332,  332,  164,  332,  235,  378,  332,
 /*  1250 */   105,  332,  332,  332,  332,  332,  366,  332,  332,  370,
 /*  1260 */   332,  332,   67,  332,  164,  298,  235,  356,  332,  105,
 /*  1270 */   332,  365,  332,  332,  332,  332,  332,  332,  370,  332,
 /*  1280 */   332,   67,  332,  366,  298,  332,  332,  332,  332,  332,
 /*  1290 */   365,  164,  332,  235,  349,  332,  105,  332,  332,  366,
 /*  1300 */   332,  332,  332,  332,  332,  370,  332,  164,   67,  235,
 /*  1310 */   382,  298,  105,  332,  332,  332,  332,  365,  332,  332,
 /*  1320 */   332,  370,  332,  332,   67,  332,  332,  298,  366,  332,
 /*  1330 */   332,  332,  332,  365,  332,  332,  164,  332,  235,  345,
 /*  1340 */   332,  105,  332,  332,  332,  332,  332,  366,  332,  332,
 /*  1350 */   370,  332,  332,   67,  332,  164,  298,  235,  346,  332,
 /*  1360 */   105,  332,  365,  332,  332,  332,  332,  332,  332,  370,
 /*  1370 */   332,  332,   67,  332,  366,  298,  332,  332,  332,  332,
 /*  1380 */   332,  365,  164,  332,  235,  366,  332,  105,  332,  332,
 /*  1390 */   332,  332,  332,  164,  332,  235,  370,  332,  105,   65,
 /*  1400 */   332,  366,  298,  332,  332,  332,  332,  370,  365,  164,
 /*  1410 */    68,  235,  366,  298,  105,  332,  332,  332,  332,  365,
 /*  1420 */   152,  332,  235,  370,  332,  105,   70,  332,  332,  298,
 /*  1430 */   332,  332,  332,  332,  332,  365,  332,  332,  332,  332,
 /*  1440 */   298,  332,  332,  332,  332,  332,  365,
    );
    static public $yy_lookahead = array(
 /*     0 */     2,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*    10 */    70,   71,   11,   12,    3,   14,   24,   16,   26,   27,
 /*    20 */    24,   25,   24,   27,   26,   27,   90,   29,   25,   31,
 /*    30 */     2,   33,   40,   27,   98,   32,  100,   39,   40,  103,
 /*    40 */     2,   58,   44,   51,   52,   90,   48,   49,  112,   51,
 /*    50 */    52,   53,   54,   98,  118,  100,   58,   59,  103,   50,
 /*    60 */   124,   99,   24,   57,   26,   27,  104,  112,   59,   44,
 /*    70 */    42,   43,   27,  118,   25,   50,  114,   39,   40,  124,
 /*    80 */    55,   32,   44,   72,   56,   60,   48,   49,   60,   51,
 /*    90 */    52,   53,   54,    2,   26,   27,   58,   59,   60,    2,
 /*   100 */    25,   73,   74,   75,   76,   77,   78,   79,   80,   81,
 /*   110 */    82,   83,    9,   25,    7,    8,   25,   10,   36,   24,
 /*   120 */    32,   24,   27,   26,   27,   25,   58,   24,   21,   22,
 /*   130 */    23,   25,   32,   42,   43,   35,   39,   40,   32,    2,
 /*   140 */    24,   44,   39,   27,   28,   48,   49,   56,   51,   52,
 /*   150 */    53,   54,   57,    2,   41,   58,   59,   54,   87,   88,
 /*   160 */    89,   90,   91,   22,   73,   74,   75,   76,   77,   78,
 /*   170 */    79,   80,   81,   82,   83,   24,    2,   26,   27,   42,
 /*   180 */    43,  122,    7,    8,  125,   10,  127,   84,   85,    3,
 /*   190 */    39,   40,   99,   56,   25,   44,   21,  104,   23,   48,
 /*   200 */    49,   32,   51,   52,   53,   54,   32,  114,    3,   58,
 /*   210 */    73,   74,   75,   76,   77,   78,   79,   80,   81,   82,
 /*   220 */    83,    2,   24,   27,   38,   29,    4,   31,   90,   33,
 /*   230 */    25,   89,   90,   91,   45,   30,   98,   32,  100,  101,
 /*   240 */   102,  103,   44,   24,   24,   26,   27,   27,   28,   44,
 /*   250 */   112,   90,   27,  115,   32,   35,  118,   25,   39,   40,
 /*   260 */    55,    2,  124,   44,   32,   40,   90,   48,   49,    4,
 /*   270 */    51,   52,   53,   54,   98,    3,  100,   58,   59,  103,
 /*   280 */   119,   24,   25,   24,   27,   26,   27,   24,  112,   26,
 /*   290 */    27,  115,  131,    3,  118,   38,   17,   25,   39,   40,
 /*   300 */   124,    2,   30,   44,   32,   27,   90,   48,   49,   99,
 /*   310 */    51,   52,   53,   54,   98,   25,  100,   58,   59,  103,
 /*   320 */    25,   58,   32,   24,  114,   26,   27,   32,  112,   24,
 /*   330 */    99,  115,   27,   28,  118,  104,   90,  122,   39,   40,
 /*   340 */   124,    2,  127,   44,   98,  114,  100,   48,   49,  103,
 /*   350 */    51,   52,   53,   54,  107,  108,  100,   58,   59,  103,
 /*   360 */     3,   90,   57,   24,  118,   26,   27,   99,   46,   98,
 /*   370 */   124,  100,   24,   25,  103,   27,  120,   28,   39,   40,
 /*   380 */   124,    2,  114,   44,   99,   99,   38,   48,   49,  118,
 /*   390 */    51,   52,   53,   54,   37,  124,  128,   58,   59,  114,
 /*   400 */   114,   90,   99,   24,   58,   26,   27,   99,   20,   98,
 /*   410 */    91,  100,   28,  128,  103,   96,   97,  114,   39,   40,
 /*   420 */    91,    2,  114,   44,   30,   96,   97,   48,   49,  118,
 /*   430 */    51,   52,   53,   54,   50,  124,  128,   58,   59,   24,
 /*   440 */    25,   90,   27,   24,   50,   26,   27,  122,   25,   98,
 /*   450 */    25,  100,  127,   59,  103,   32,    4,   32,   39,   40,
 /*   460 */    35,    2,   28,   44,   30,    3,   28,   48,   49,  118,
 /*   470 */    51,   52,   53,   54,  122,  124,   99,   58,   59,  127,
 /*   480 */    28,  104,   44,   24,    3,   26,   27,   25,   42,   43,
 /*   490 */    41,  114,  100,   55,   32,  103,   35,   24,   39,   40,
 /*   500 */    27,  104,   56,   44,   44,  105,   25,   48,   49,   60,
 /*   510 */    51,   52,   53,   54,    2,   55,  124,   58,   59,   73,
 /*   520 */    74,   75,   76,   77,   78,   79,   80,   81,   82,   83,
 /*   530 */    57,   38,   90,   25,   90,   99,   24,   44,   26,   27,
 /*   540 */    32,  110,   98,  123,  100,   84,   25,  103,   55,  123,
 /*   550 */   114,   39,   40,   32,   26,   27,   44,  126,   45,   90,
 /*   560 */    48,   49,  118,   51,   52,   53,   54,   98,  124,  100,
 /*   570 */    58,   99,  103,  131,   61,   62,   63,   64,   65,   66,
 /*   580 */    67,   68,   69,   70,   71,   34,  114,  118,   25,   90,
 /*   590 */   105,   25,   41,  124,   25,   32,   25,   98,   32,  100,
 /*   600 */   101,   32,  103,   32,   25,  106,  107,   24,   90,   24,
 /*   610 */    27,  112,   27,   25,  115,   25,   98,  118,  100,  101,
 /*   620 */    32,  103,   32,  124,   25,   25,   99,   90,   84,  110,
 /*   630 */   112,   32,   32,  115,  110,   98,  118,  100,  101,   26,
 /*   640 */   103,  114,  124,   94,   95,  126,   25,  129,  130,  112,
 /*   650 */   126,   35,  115,   25,   90,  118,    6,    7,  121,    9,
 /*   660 */    10,  124,   98,   27,  100,  101,  102,  103,  110,   24,
 /*   670 */    90,   21,   27,    3,   24,  110,  112,   44,   98,  115,
 /*   680 */   100,  101,  118,  103,  126,   18,   19,   50,  124,   39,
 /*   690 */    26,  126,  112,  116,  117,  115,   94,   95,  118,   92,
 /*   700 */    93,   28,   32,    4,  124,   90,   92,   93,  111,   90,
 /*   710 */   130,   99,   26,   98,    9,  100,  101,   98,  103,  100,
 /*   720 */   101,  106,  103,  126,   26,  106,  114,  112,   27,   24,
 /*   730 */   115,  112,  123,  118,  115,  126,  110,  118,   90,  124,
 /*   740 */    27,   92,   93,  124,   39,   90,   98,   27,  100,  101,
 /*   750 */     8,  103,  126,   98,  106,  100,  101,   27,  103,   54,
 /*   760 */   112,  110,   37,  115,   45,   99,  118,  112,   99,   34,
 /*   770 */   115,   25,  124,  118,   90,   60,  121,  126,  110,  124,
 /*   780 */   114,   25,   98,  114,  100,  101,  102,  103,   45,   84,
 /*   790 */    85,   94,   95,   25,  126,   45,  112,   94,   95,  115,
 /*   800 */   110,   90,  118,   25,   25,  105,   45,   40,  124,   98,
 /*   810 */     4,  100,  101,  102,  103,   15,  126,   32,   13,   46,
 /*   820 */    26,  114,   27,  112,  120,  123,  115,  109,   90,  118,
 /*   830 */    32,  125,   44,    3,   30,  124,   98,  127,  100,  101,
 /*   840 */    26,  103,   32,   32,   90,  113,  105,  126,  109,  123,
 /*   850 */   112,  107,   98,  115,  100,  101,  118,  103,    4,  121,
 /*   860 */   123,  128,  124,  132,  132,  132,  112,  132,  132,  115,
 /*   870 */   132,  132,  118,   90,  132,  121,  132,  132,  124,  132,
 /*   880 */   132,   98,  132,  100,  101,  102,  103,  132,  132,  132,
 /*   890 */   132,  132,   90,  132,  132,  112,  132,  132,  115,  132,
 /*   900 */    98,  118,  100,  101,  132,  103,  132,  124,  132,  132,
 /*   910 */   132,  132,  132,  132,  112,  132,  132,  115,  132,   90,
 /*   920 */   118,  132,  132,  132,  132,  132,  124,   98,  132,  100,
 /*   930 */   101,  132,  103,  132,  132,   90,  132,  132,  132,  132,
 /*   940 */   132,  112,  132,   98,  115,  100,  101,  118,  103,  132,
 /*   950 */   132,  132,  132,  124,  132,  132,  132,  112,  132,  132,
 /*   960 */   115,  132,  132,  118,   90,  132,  132,  132,  132,  124,
 /*   970 */   132,  132,   98,  132,  100,  101,  132,  103,  132,  132,
 /*   980 */   132,  132,  132,   90,  132,  132,  112,  132,  132,  115,
 /*   990 */   132,   98,  118,  100,  101,  132,  103,  132,  124,  132,
 /*  1000 */   132,  132,  132,  132,  132,  112,  132,  132,  115,  132,
 /*  1010 */    90,  118,  132,  132,  132,  132,  132,  124,   98,  132,
 /*  1020 */   100,  101,  132,  103,  132,  132,   90,  132,  132,  132,
 /*  1030 */   132,  132,  112,  132,   98,  115,  100,  101,  118,  103,
 /*  1040 */   132,  132,  132,  132,  124,  132,  132,  132,  112,  132,
 /*  1050 */   132,  115,  132,  132,  118,   90,  132,  132,  132,  132,
 /*  1060 */   124,  132,  132,   98,  132,  100,  101,  132,  103,  132,
 /*  1070 */   132,  132,  132,  132,   90,  132,  132,  112,  132,  132,
 /*  1080 */   115,  132,   98,  118,  100,  101,  132,  103,  132,  124,
 /*  1090 */   132,  132,  132,  132,  132,  132,  112,  132,  132,  115,
 /*  1100 */   132,   90,  118,  132,  132,  132,  132,  132,  124,   98,
 /*  1110 */   132,  100,  101,  132,  103,  132,  132,   90,  132,  132,
 /*  1120 */   132,  132,  132,  112,  132,   98,  115,  100,  101,  118,
 /*  1130 */   103,  132,  132,  132,  132,  124,  132,  132,  132,  112,
 /*  1140 */   132,  132,  115,  132,  132,  118,   90,  132,  132,  132,
 /*  1150 */   132,  124,  132,  132,   98,  132,  100,  101,  132,  103,
 /*  1160 */   132,  132,  132,  132,  132,   90,  132,  132,  112,  132,
 /*  1170 */   132,  115,  132,   98,  118,  100,  101,  132,  103,  132,
 /*  1180 */   124,  132,  132,  132,  132,  132,  132,  112,  132,  132,
 /*  1190 */   115,  132,   90,  118,  132,  132,  132,  132,  132,  124,
 /*  1200 */    98,  132,  100,  101,  132,  103,  132,  132,   90,  132,
 /*  1210 */   132,  132,  132,  132,  112,  132,   98,  115,  100,  101,
 /*  1220 */   118,  103,  132,  132,  132,  132,  124,  132,  132,  132,
 /*  1230 */   112,  132,  132,  115,  132,  132,  118,   90,  132,  132,
 /*  1240 */   132,  132,  124,  132,  132,   98,  132,  100,  101,  132,
 /*  1250 */   103,  132,  132,  132,  132,  132,   90,  132,  132,  112,
 /*  1260 */   132,  132,  115,  132,   98,  118,  100,  101,  132,  103,
 /*  1270 */   132,  124,  132,  132,  132,  132,  132,  132,  112,  132,
 /*  1280 */   132,  115,  132,   90,  118,  132,  132,  132,  132,  132,
 /*  1290 */   124,   98,  132,  100,  101,  132,  103,  132,  132,   90,
 /*  1300 */   132,  132,  132,  132,  132,  112,  132,   98,  115,  100,
 /*  1310 */   101,  118,  103,  132,  132,  132,  132,  124,  132,  132,
 /*  1320 */   132,  112,  132,  132,  115,  132,  132,  118,   90,  132,
 /*  1330 */   132,  132,  132,  124,  132,  132,   98,  132,  100,  101,
 /*  1340 */   132,  103,  132,  132,  132,  132,  132,   90,  132,  132,
 /*  1350 */   112,  132,  132,  115,  132,   98,  118,  100,  101,  132,
 /*  1360 */   103,  132,  124,  132,  132,  132,  132,  132,  132,  112,
 /*  1370 */   132,  132,  115,  132,   90,  118,  132,  132,  132,  132,
 /*  1380 */   132,  124,   98,  132,  100,   90,  132,  103,  132,  132,
 /*  1390 */   132,  132,  132,   98,  132,  100,  112,  132,  103,  115,
 /*  1400 */   132,   90,  118,  132,  132,  132,  132,  112,  124,   98,
 /*  1410 */   115,  100,   90,  118,  103,  132,  132,  132,  132,  124,
 /*  1420 */    98,  132,  100,  112,  132,  103,  115,  132,  132,  118,
 /*  1430 */   132,  132,  132,  132,  132,  124,  132,  132,  132,  132,
 /*  1440 */   118,  132,  132,  132,  132,  132,  124,
);
    const YY_SHIFT_USE_DFLT = -61;
    const YY_SHIFT_MAX = 240;
    static public $yy_shift_ofst = array(
 /*     0 */   650,  459,  379,   -2,   -2,   97,  339,  419,   97,  379,
 /*    10 */    97,  339,   97,   97,   97,   97,   97,   97,   97,   97,
 /*    20 */    97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
 /*    30 */    97,   97,   97,   97,   97,   97,   97,   38,  259,  219,
 /*    40 */   219,  219,  299,  219,  512,  512,  151,  512,  512,  512,
 /*    50 */   512,  263,  650,  107,  205,  103,  175,  272,   68,  394,
 /*    60 */   462,  222,  222,  222,  670,   91,   28,  137,  137,  446,
 /*    70 */   446,  705,  220,    1,    1,    1,  305,   95,  425,  100,
 /*    80 */   599,  585,  585,  434,  583,  600,  585,  667,  585,  667,
 /*    90 */   645,  585,  667,  585,  585,  585,  645,  667,  810,  810,
 /*   100 */   811,  810,  810,  810,  814,  804,  810,  804,  804,  196,
 /*   110 */   257,  348,  290,   -4,  116,  473,  415,    9,  186,  169,
 /*   120 */    49,    3,  357,  232,  295,   88,    9,  106,   11,  423,
 /*   130 */   528,    9,  198,  566,  521,  563,  569,  571,  590,  588,
 /*   140 */     9,  481,    9,  508,  804,  798,  830,  788,  854,  830,
 /*   150 */   798,  804,  830,  804,  804,  830,  814,  830,  -61,  -61,
 /*   160 */   -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  513,
 /*   170 */   -60,   -8,   25,  493,  438,  461,  460,  460,  384,  460,
 /*   180 */   225,  174,  460,  452,  460,    6,  449,  551,  278,  265,
 /*   190 */   279,  544,  794,  637,  795,  778,  750,  768,  767,  800,
 /*   200 */   785,  756,  701,  686,  664,  720,  698,  715,  725,  730,
 /*   210 */   742,  673,  805,  388,   75,  349,  761,  636,  113,  746,
 /*   220 */   779,  735,  699,  713,  806,  773,  743,  322,  189,  -17,
 /*   230 */   141,   45,  628,  613,  633,  616,  719,  579,  621,  346,
 /*   240 */    82,
);
    const YY_REDUCE_USE_DFLT = -65;
    const YY_REDUCE_MAX = 168;
    static public $yy_reduce_ofst = array(
 /*     0 */    71,  499,  518,  138,  564,  537,  783,  711,  738,  580,
 /*    10 */   754,  684,  655,  615,  619,  648, 1011,  984, 1027, 1056,
 /*    20 */  1075,  965,  936,  845,  829,  874,  802,  893, 1118, 1102,
 /*    30 */  1257, 1209, 1147, 1238, 1166, 1193,  920,  216, 1295, 1284,
 /*    40 */  1311,  176,  -64,  -45,  444,  351,  311, 1322,  271,  469,
 /*    50 */   246,  256,  142,  319,   93,  161,  329,  -38,  392,   59,
 /*    60 */   231,  268,  285,  308,  377,  577,  577,  577,  577,  577,
 /*    70 */   577,  442,  597,  649,  614,  607,  609,  609,  527,  527,
 /*    80 */   472,  524,  519,  215,  431,  210,  431,  602,  565,  549,
 /*    90 */   558,  690,  703,  651,  626,  668,  431,  697,  669,  666,
 /*   100 */   612,  436,  303,  286,  247,  215,  210,  352,  325,  732,
 /*   110 */   721,  721,  397,  721,  721,  721,  721,  706,  397,  707,
 /*   120 */   707,  707,  397,  707,  707,  707,  706,  707,  397,  707,
 /*   130 */   704,  706,  702,  707,  707,  707,  707,  707,  707,  707,
 /*   140 */   706,  397,  706,  707,  710,  718,  397,  737,  733,  397,
 /*   150 */   739,  710,  397,  710,  710,  397,  744,  397,  741,  726,
 /*   160 */   397,  700,  420,  426,  397,  400,  397,  397,  485,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(6, 7, 9, 10, 21, 24, 39, ),
        /* 1 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 2 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 3 */ array(2, 24, 26, 27, 29, 31, 33, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 4 */ array(2, 24, 26, 27, 29, 31, 33, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 5 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 6 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 7 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 8 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 9 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 10 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 11 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 12 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 13 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 14 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 15 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 16 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 17 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 18 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 19 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 20 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 21 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 22 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 23 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 24 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 25 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 26 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 27 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 28 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 29 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 30 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 31 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 32 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 33 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 34 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 35 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 36 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 37 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, 60, ),
        /* 38 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 39 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 40 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 41 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 42 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 43 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, 59, ),
        /* 44 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 45 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 46 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 47 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 48 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 49 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 50 */ array(2, 24, 26, 27, 39, 40, 44, 48, 49, 51, 52, 53, 54, 58, ),
        /* 51 */ array(24, 26, 27, 58, ),
        /* 52 */ array(6, 7, 9, 10, 21, 24, 39, ),
        /* 53 */ array(7, 8, 10, 21, 22, 23, ),
        /* 54 */ array(3, 25, 30, 32, 44, 55, ),
        /* 55 */ array(9, 24, 39, 54, 84, 85, ),
        /* 56 */ array(7, 8, 10, 21, 23, ),
        /* 57 */ array(3, 25, 30, 32, ),
        /* 58 */ array(26, 27, 58, ),
        /* 59 */ array(30, 50, 59, ),
        /* 60 */ array(3, 25, 32, ),
        /* 61 */ array(4, 32, ),
        /* 62 */ array(4, 32, ),
        /* 63 */ array(4, 32, ),
        /* 64 */ array(3, 32, ),
        /* 65 */ array(2, 25, 42, 43, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 66 */ array(2, 42, 43, 56, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 67 */ array(2, 42, 43, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 68 */ array(2, 42, 43, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 69 */ array(42, 43, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 70 */ array(42, 43, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, ),
        /* 71 */ array(9, 24, 39, 54, 84, 85, ),
        /* 72 */ array(24, 27, 28, 35, ),
        /* 73 */ array(11, 12, 14, 16, ),
        /* 74 */ array(11, 12, 14, 16, ),
        /* 75 */ array(11, 12, 14, 16, ),
        /* 76 */ array(24, 27, 28, 57, ),
        /* 77 */ array(24, 27, 57, ),
        /* 78 */ array(25, 32, 35, ),
        /* 79 */ array(25, 32, 35, ),
        /* 80 */ array(25, 32, ),
        /* 81 */ array(24, 27, ),
        /* 82 */ array(24, 27, ),
        /* 83 */ array(28, 30, ),
        /* 84 */ array(24, 27, ),
        /* 85 */ array(25, 32, ),
        /* 86 */ array(24, 27, ),
        /* 87 */ array(18, 19, ),
        /* 88 */ array(24, 27, ),
        /* 89 */ array(18, 19, ),
        /* 90 */ array(24, 27, ),
        /* 91 */ array(24, 27, ),
        /* 92 */ array(18, 19, ),
        /* 93 */ array(24, 27, ),
        /* 94 */ array(24, 27, ),
        /* 95 */ array(24, 27, ),
        /* 96 */ array(24, 27, ),
        /* 97 */ array(18, 19, ),
        /* 98 */ array(32, ),
        /* 99 */ array(32, ),
        /* 100 */ array(32, ),
        /* 101 */ array(32, ),
        /* 102 */ array(32, ),
        /* 103 */ array(32, ),
        /* 104 */ array(26, ),
        /* 105 */ array(30, ),
        /* 106 */ array(32, ),
        /* 107 */ array(30, ),
        /* 108 */ array(30, ),
        /* 109 */ array(27, 29, 31, 33, ),
        /* 110 */ array(24, 25, 27, 38, ),
        /* 111 */ array(24, 25, 27, 38, ),
        /* 112 */ array(3, 25, 32, ),
        /* 113 */ array(24, 25, 27, ),
        /* 114 */ array(24, 27, 28, ),
        /* 115 */ array(24, 27, 57, ),
        /* 116 */ array(24, 25, 27, ),
        /* 117 */ array(50, 59, ),
        /* 118 */ array(3, 38, ),
        /* 119 */ array(25, 32, ),
        /* 120 */ array(25, 32, ),
        /* 121 */ array(25, 32, ),
        /* 122 */ array(3, 37, ),
        /* 123 */ array(25, 32, ),
        /* 124 */ array(25, 32, ),
        /* 125 */ array(25, 32, ),
        /* 126 */ array(50, 59, ),
        /* 127 */ array(25, 32, ),
        /* 128 */ array(3, 72, ),
        /* 129 */ array(25, 32, ),
        /* 130 */ array(26, 27, ),
        /* 131 */ array(50, 59, ),
        /* 132 */ array(24, 44, ),
        /* 133 */ array(25, 32, ),
        /* 134 */ array(25, 32, ),
        /* 135 */ array(25, 32, ),
        /* 136 */ array(25, 32, ),
        /* 137 */ array(25, 32, ),
        /* 138 */ array(25, 32, ),
        /* 139 */ array(25, 32, ),
        /* 140 */ array(50, 59, ),
        /* 141 */ array(3, 25, ),
        /* 142 */ array(50, 59, ),
        /* 143 */ array(25, 32, ),
        /* 144 */ array(30, ),
        /* 145 */ array(32, ),
        /* 146 */ array(3, ),
        /* 147 */ array(44, ),
        /* 148 */ array(4, ),
        /* 149 */ array(3, ),
        /* 150 */ array(32, ),
        /* 151 */ array(30, ),
        /* 152 */ array(3, ),
        /* 153 */ array(30, ),
        /* 154 */ array(30, ),
        /* 155 */ array(3, ),
        /* 156 */ array(26, ),
        /* 157 */ array(3, ),
        /* 158 */ array(),
        /* 159 */ array(),
        /* 160 */ array(),
        /* 161 */ array(),
        /* 162 */ array(),
        /* 163 */ array(),
        /* 164 */ array(),
        /* 165 */ array(),
        /* 166 */ array(),
        /* 167 */ array(),
        /* 168 */ array(),
        /* 169 */ array(45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 170 */ array(61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 171 */ array(24, 26, 27, 40, 51, 52, ),
        /* 172 */ array(44, 50, 55, 60, ),
        /* 173 */ array(38, 44, 55, ),
        /* 174 */ array(28, 44, 55, ),
        /* 175 */ array(35, 84, ),
        /* 176 */ array(44, 55, ),
        /* 177 */ array(44, 55, ),
        /* 178 */ array(28, 50, ),
        /* 179 */ array(44, 55, ),
        /* 180 */ array(27, 40, ),
        /* 181 */ array(2, 32, ),
        /* 182 */ array(44, 55, ),
        /* 183 */ array(4, 28, ),
        /* 184 */ array(44, 55, ),
        /* 185 */ array(27, 57, ),
        /* 186 */ array(41, 60, ),
        /* 187 */ array(34, 41, ),
        /* 188 */ array(27, ),
        /* 189 */ array(4, ),
        /* 190 */ array(17, ),
        /* 191 */ array(84, ),
        /* 192 */ array(26, ),
        /* 193 */ array(50, ),
        /* 194 */ array(27, ),
        /* 195 */ array(25, ),
        /* 196 */ array(45, ),
        /* 197 */ array(25, ),
        /* 198 */ array(40, ),
        /* 199 */ array(15, ),
        /* 200 */ array(32, ),
        /* 201 */ array(25, ),
        /* 202 */ array(27, ),
        /* 203 */ array(26, ),
        /* 204 */ array(26, ),
        /* 205 */ array(27, ),
        /* 206 */ array(26, ),
        /* 207 */ array(60, ),
        /* 208 */ array(37, ),
        /* 209 */ array(27, ),
        /* 210 */ array(8, ),
        /* 211 */ array(28, ),
        /* 212 */ array(13, ),
        /* 213 */ array(20, ),
        /* 214 */ array(25, ),
        /* 215 */ array(28, ),
        /* 216 */ array(45, ),
        /* 217 */ array(27, ),
        /* 218 */ array(41, ),
        /* 219 */ array(25, ),
        /* 220 */ array(25, ),
        /* 221 */ array(34, ),
        /* 222 */ array(4, ),
        /* 223 */ array(27, ),
        /* 224 */ array(4, ),
        /* 225 */ array(46, ),
        /* 226 */ array(45, ),
        /* 227 */ array(46, ),
        /* 228 */ array(45, ),
        /* 229 */ array(58, ),
        /* 230 */ array(22, ),
        /* 231 */ array(27, ),
        /* 232 */ array(25, ),
        /* 233 */ array(26, ),
        /* 234 */ array(44, ),
        /* 235 */ array(35, ),
        /* 236 */ array(45, ),
        /* 237 */ array(25, ),
        /* 238 */ array(25, ),
        /* 239 */ array(58, ),
        /* 240 */ array(36, ),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
);
    static public $yy_default = array(
 /*     0 */   587,  587,  572,  587,  587,  535,  587,  587,  535,  587,
 /*    10 */   535,  587,  535,  587,  587,  587,  587,  587,  587,  587,
 /*    20 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    30 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    40 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*    50 */   587,  587,  389,  587,  587,  587,  411,  587,  587,  496,
 /*    60 */   468,  455,  455,  455,  455,  587,  587,  466,  540,  473,
 /*    70 */   474,  587,  587,  399,  399,  399,  507,  507,  477,  477,
 /*    80 */   587,  587,  587,  500,  587,  587,  587,  405,  587,  405,
 /*    90 */   587,  587,  405,  587,  587,  587,  587,  405,  455,  455,
 /*   100 */   455,  455,  455,  455,  587,  500,  455,  491,  492,  587,
 /*   110 */   587,  587,  468,  587,  587,  508,  587,  528,  468,  587,
 /*   120 */   587,  587,  587,  587,  587,  587,  527,  587,  468,  587,
 /*   130 */   587,  505,  507,  587,  587,  587,  587,  587,  587,  587,
 /*   140 */   529,  468,  526,  587,  497,  586,  544,  507,  499,  556,
 /*   150 */   586,  494,  479,  523,  493,  480,  587,  478,  539,  507,
 /*   160 */   470,  539,  507,  507,  468,  539,  469,  471,  539,  587,
 /*   170 */   542,  587,  587,  465,  460,  477,  587,  541,  482,  456,
 /*   180 */   587,  587,  555,  521,  465,  587,  587,  587,  587,  521,
 /*   190 */   587,  587,  587,  482,  587,  587,  587,  587,  587,  587,
 /*   200 */   587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
 /*   210 */   587,  587,  587,  587,  587,  460,  587,  587,  534,  587,
 /*   220 */   587,  587,  587,  587,  587,  587,  587,  487,  587,  587,
 /*   230 */   587,  587,  587,  587,  495,  477,  587,  587,  587,  587,
 /*   240 */   462,  440,  463,  512,  517,  515,  516,  518,  514,  513,
 /*   250 */   510,  511,  585,  532,  530,  449,  457,  459,  390,  448,
 /*   260 */   447,  487,  452,  446,  522,  568,  584,  490,  577,  557,
 /*   270 */   583,  580,  576,  578,  579,  558,  559,  565,  566,  567,
 /*   280 */   564,  563,  560,  561,  562,  489,  546,  481,  537,  483,
 /*   290 */   484,  485,  536,  538,  445,  450,  451,  454,  486,  525,
 /*   300 */   419,  488,  581,  420,  582,  521,  520,  524,  501,  506,
 /*   310 */   509,  453,  418,  401,  400,  404,  406,  402,  398,  395,
 /*   320 */   391,  392,  393,  394,  403,  407,  414,  413,  415,  416,
 /*   330 */   417,  412,  410,  396,  397,  408,  409,  421,  422,  428,
 /*   340 */   427,  430,  431,  433,  426,  554,  550,  551,  552,  553,
 /*   350 */   432,  429,  464,  436,  435,  437,  438,  434,  461,  441,
 /*   360 */   442,  443,  444,  549,  548,  502,  498,  503,  504,  531,
 /*   370 */   472,  519,  423,  424,  425,  467,  533,  574,  476,  543,
 /*   380 */   545,  547,  475,  570,  573,  569,  571,  575,  439,
);
    const YYNOCODE = 133;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 389;
    const YYNRULE = 198;
    const YYERRORSYMBOL = 86;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'IFEXP',         'UNIMATH',       'VERT',        
  'COLON',         'EXP',           'COMMENT',       'PHPSTARTTAG', 
  'PHPENDTAG',     'OTHER',         'FAKEPHPSTARTTAG',  'PHP_CODE',    
  'PHP_CODE_START_DOUBLEQUOTE',  'PHP_CODE_DOUBLEQUOTE',  'PHP_HEREDOC_START',  'PHP_HEREDOC_END',
  'PHP_NOWDOC_START',  'PHP_NOWDOC_END',  'PHP_DQ_CONTENT',  'PHP_DQ_EMBED_START',
  'PHP_DQ_EMBED_END',  'LITERALSTART',  'LITERALEND',    'LITERAL',     
  'LDEL',          'RDEL',          'DOLLAR',        'ID',          
  'EQUAL',         'FOREACH',       'PTR',           'IF',          
  'SPACE',         'FOR',           'SEMICOLON',     'INCDEC',      
  'TO',            'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'MATH',          'ANDSYM',      
  'OPENP',         'CLOSEP',        'QMARK',         'VAL',         
  'NOT',           'TYPECAST',      'DOT',           'BOOLEAN',     
  'NULL',          'SINGLEQUOTESTRING',  'QUOTE',         'DOUBLECOLON', 
  'MOD',           'AT',            'HATCH',         'OPENB',       
  'CLOSEB',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'LAND',          'LOR',           'LXOR',        
  'BACKTICK',      'DOLLARID',      'error',         'start',       
  'template',      'template_element',  'smartytag',     'literal',     
  'php_code',      'php_code_element',  'php_dq_contents',  'php_dq_content',
  'literal_elements',  'literal_element',  'value',         'attributes',  
  'variable',      'expr',          'ternary',       'varindexed',  
  'modifier',      'modparameters',  'ifexpr',        'statement',   
  'statements',    'optspace',      'varvar',        'foraction',   
  'array',         'specialclose',  'attribute',     'exprs',       
  'ifcond',        'lop',           'function',      'doublequoted',
  'method',        'params',        'objectchain',   'arrayindex',  
  'object',        'indexdef',      'varvarele',     'objectelement',
  'modparameter',  'arrayelements',  'arrayelement',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG php_code PHPENDTAG",
 /*   7 */ "template_element ::= OTHER",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "php_code ::= php_code_element php_code",
 /*  10 */ "php_code ::=",
 /*  11 */ "php_code_element ::= PHP_CODE",
 /*  12 */ "php_code_element ::= PHP_CODE_START_DOUBLEQUOTE php_dq_contents PHP_CODE_DOUBLEQUOTE",
 /*  13 */ "php_code_element ::= PHP_HEREDOC_START php_dq_contents PHP_HEREDOC_END",
 /*  14 */ "php_code_element ::= PHP_NOWDOC_START php_dq_contents PHP_NOWDOC_END",
 /*  15 */ "php_dq_contents ::= php_dq_content php_dq_contents",
 /*  16 */ "php_dq_contents ::=",
 /*  17 */ "php_dq_content ::= PHP_DQ_CONTENT",
 /*  18 */ "php_dq_content ::= PHP_DQ_EMBED_START php_code PHP_DQ_EMBED_END",
 /*  19 */ "literal ::= LITERALSTART LITERALEND",
 /*  20 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  21 */ "literal_elements ::= literal_element literal_elements",
 /*  22 */ "literal_elements ::=",
 /*  23 */ "literal_element ::= literal",
 /*  24 */ "literal_element ::= LITERAL",
 /*  25 */ "literal_element ::= PHPSTARTTAG",
 /*  26 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  27 */ "literal_element ::= PHPENDTAG",
 /*  28 */ "smartytag ::= LDEL value RDEL",
 /*  29 */ "smartytag ::= LDEL value attributes RDEL",
 /*  30 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  32 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  37 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  38 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID RDEL",
 /*  42 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  43 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  44 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  45 */ "smartytag ::= LDEL IF SPACE ifexpr RDEL",
 /*  46 */ "smartytag ::= LDEL IF UNIMATH ifexpr RDEL",
 /*  47 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  48 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexpr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  49 */ "foraction ::= EQUAL expr",
 /*  50 */ "foraction ::= INCDEC",
 /*  51 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  52 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  53 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  54 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  55 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  56 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  57 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  58 */ "specialclose ::= IF",
 /*  59 */ "specialclose ::= FOR",
 /*  60 */ "specialclose ::= FOREACH",
 /*  61 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  62 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  63 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  64 */ "attributes ::= attributes attribute",
 /*  65 */ "attributes ::= attribute",
 /*  66 */ "attributes ::=",
 /*  67 */ "attribute ::= SPACE ID EQUAL ID",
 /*  68 */ "attribute ::= SPACE ID EQUAL expr",
 /*  69 */ "attribute ::= SPACE ID EQUAL value",
 /*  70 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  71 */ "attribute ::= SPACE ID",
 /*  72 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  73 */ "statements ::= statement",
 /*  74 */ "statements ::= statements COMMA statement",
 /*  75 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  76 */ "expr ::= ID",
 /*  77 */ "expr ::= exprs",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "exprs ::= value",
 /*  80 */ "exprs ::= exprs MATH value",
 /*  81 */ "exprs ::= exprs UNIMATH value",
 /*  82 */ "exprs ::= exprs ANDSYM value",
 /*  83 */ "exprs ::= array",
 /*  84 */ "exprs ::= exprs ifcond exprs",
 /*  85 */ "exprs ::= exprs lop exprs",
 /*  86 */ "ternary ::= OPENP ifexpr CLOSEP QMARK expr COLON expr",
 /*  87 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  88 */ "value ::= variable",
 /*  89 */ "value ::= UNIMATH value",
 /*  90 */ "value ::= NOT value",
 /*  91 */ "value ::= TYPECAST value",
 /*  92 */ "value ::= variable INCDEC",
 /*  93 */ "value ::= INTEGER",
 /*  94 */ "value ::= INTEGER DOT INTEGER",
 /*  95 */ "value ::= BOOLEAN",
 /*  96 */ "value ::= NULL",
 /*  97 */ "value ::= function",
 /*  98 */ "value ::= OPENP expr CLOSEP",
 /*  99 */ "value ::= SINGLEQUOTESTRING",
 /* 100 */ "value ::= QUOTE doublequoted QUOTE",
 /* 101 */ "value ::= QUOTE QUOTE",
 /* 102 */ "value ::= ID DOUBLECOLON method",
 /* 103 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /* 104 */ "value ::= ID DOUBLECOLON method objectchain",
 /* 105 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /* 106 */ "value ::= ID DOUBLECOLON ID",
 /* 107 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /* 108 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 109 */ "value ::= smartytag",
 /* 110 */ "value ::= value modifier modparameters",
 /* 111 */ "variable ::= varindexed",
 /* 112 */ "variable ::= DOLLAR varvar AT ID",
 /* 113 */ "variable ::= object",
 /* 114 */ "variable ::= HATCH ID HATCH",
 /* 115 */ "variable ::= HATCH variable HATCH",
 /* 116 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 117 */ "arrayindex ::= arrayindex indexdef",
 /* 118 */ "arrayindex ::=",
 /* 119 */ "indexdef ::= DOT DOLLAR varvar",
 /* 120 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 121 */ "indexdef ::= DOT ID",
 /* 122 */ "indexdef ::= DOT BOOLEAN",
 /* 123 */ "indexdef ::= DOT NULL",
 /* 124 */ "indexdef ::= DOT INTEGER",
 /* 125 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 126 */ "indexdef ::= OPENB ID CLOSEB",
 /* 127 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 128 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 129 */ "indexdef ::= OPENB CLOSEB",
 /* 130 */ "varvar ::= varvarele",
 /* 131 */ "varvar ::= varvar varvarele",
 /* 132 */ "varvarele ::= ID",
 /* 133 */ "varvarele ::= LDEL expr RDEL",
 /* 134 */ "object ::= varindexed objectchain",
 /* 135 */ "objectchain ::= objectelement",
 /* 136 */ "objectchain ::= objectchain objectelement",
 /* 137 */ "objectelement ::= PTR ID arrayindex",
 /* 138 */ "objectelement ::= PTR variable arrayindex",
 /* 139 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 140 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 141 */ "objectelement ::= PTR method",
 /* 142 */ "function ::= ID OPENP params CLOSEP",
 /* 143 */ "method ::= ID OPENP params CLOSEP",
 /* 144 */ "params ::= expr COMMA params",
 /* 145 */ "params ::= expr",
 /* 146 */ "params ::=",
 /* 147 */ "modifier ::= VERT AT ID",
 /* 148 */ "modifier ::= VERT ID",
 /* 149 */ "modparameters ::= modparameters modparameter",
 /* 150 */ "modparameters ::=",
 /* 151 */ "modparameter ::= COLON exprs",
 /* 152 */ "modparameter ::= COLON ID",
 /* 153 */ "ifexpr ::= expr",
 /* 154 */ "ifexpr ::= expr ISIN array",
 /* 155 */ "ifexpr ::= expr ISIN value",
 /* 156 */ "ifexpr ::= expr ISDIVBY expr",
 /* 157 */ "ifexpr ::= expr ISNOTDIVBY expr",
 /* 158 */ "ifexpr ::= expr ISEVEN",
 /* 159 */ "ifexpr ::= expr ISNOTEVEN",
 /* 160 */ "ifexpr ::= expr ISEVENBY expr",
 /* 161 */ "ifexpr ::= expr ISNOTEVENBY expr",
 /* 162 */ "ifexpr ::= expr ISODD",
 /* 163 */ "ifexpr ::= expr ISNOTODD",
 /* 164 */ "ifexpr ::= expr ISODDBY expr",
 /* 165 */ "ifexpr ::= expr ISNOTODDBY expr",
 /* 166 */ "ifexpr ::= value INSTANCEOF ID",
 /* 167 */ "ifexpr ::= value INSTANCEOF value",
 /* 168 */ "ifcond ::= EQUALS",
 /* 169 */ "ifcond ::= NOTEQUALS",
 /* 170 */ "ifcond ::= GREATERTHAN",
 /* 171 */ "ifcond ::= LESSTHAN",
 /* 172 */ "ifcond ::= GREATEREQUAL",
 /* 173 */ "ifcond ::= LESSEQUAL",
 /* 174 */ "ifcond ::= IDENTITY",
 /* 175 */ "ifcond ::= NONEIDENTITY",
 /* 176 */ "ifcond ::= MOD",
 /* 177 */ "lop ::= LAND",
 /* 178 */ "lop ::= LOR",
 /* 179 */ "lop ::= LXOR",
 /* 180 */ "array ::= OPENB arrayelements CLOSEB",
 /* 181 */ "arrayelements ::= arrayelement",
 /* 182 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 183 */ "arrayelements ::=",
 /* 184 */ "arrayelement ::= value APTR expr",
 /* 185 */ "arrayelement ::= ID APTR expr",
 /* 186 */ "arrayelement ::= expr",
 /* 187 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 188 */ "doublequoted ::= doublequotedcontent",
 /* 189 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 190 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 191 */ "doublequotedcontent ::= DOLLARID",
 /* 192 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 193 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 194 */ "doublequotedcontent ::= smartytag",
 /* 195 */ "doublequotedcontent ::= OTHER",
 /* 196 */ "optspace ::= SPACE",
 /* 197 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 0 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 0 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 7 ),
  array( 'lhs' => 90, 'rhs' => 7 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 8 ),
  array( 'lhs' => 90, 'rhs' => 5 ),
  array( 'lhs' => 90, 'rhs' => 5 ),
  array( 'lhs' => 90, 'rhs' => 5 ),
  array( 'lhs' => 90, 'rhs' => 13 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 8 ),
  array( 'lhs' => 90, 'rhs' => 8 ),
  array( 'lhs' => 90, 'rhs' => 11 ),
  array( 'lhs' => 90, 'rhs' => 8 ),
  array( 'lhs' => 90, 'rhs' => 11 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 5 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 7 ),
  array( 'lhs' => 102, 'rhs' => 7 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 7 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 8 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 5 ),
  array( 'lhs' => 98, 'rhs' => 6 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 2 ),
  array( 'lhs' => 123, 'rhs' => 0 ),
  array( 'lhs' => 125, 'rhs' => 3 ),
  array( 'lhs' => 125, 'rhs' => 5 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 125, 'rhs' => 4 ),
  array( 'lhs' => 125, 'rhs' => 3 ),
  array( 'lhs' => 125, 'rhs' => 5 ),
  array( 'lhs' => 125, 'rhs' => 3 ),
  array( 'lhs' => 125, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 126, 'rhs' => 1 ),
  array( 'lhs' => 126, 'rhs' => 3 ),
  array( 'lhs' => 124, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 5 ),
  array( 'lhs' => 127, 'rhs' => 6 ),
  array( 'lhs' => 127, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 4 ),
  array( 'lhs' => 120, 'rhs' => 4 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 0 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 0 ),
  array( 'lhs' => 128, 'rhs' => 2 ),
  array( 'lhs' => 128, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 129, 'rhs' => 1 ),
  array( 'lhs' => 129, 'rhs' => 3 ),
  array( 'lhs' => 129, 'rhs' => 0 ),
  array( 'lhs' => 130, 'rhs' => 3 ),
  array( 'lhs' => 130, 'rhs' => 3 ),
  array( 'lhs' => 130, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 1 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 1 ),
  array( 'lhs' => 131, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        11 => 0,
        17 => 0,
        23 => 0,
        24 => 0,
        58 => 0,
        59 => 0,
        60 => 0,
        79 => 0,
        88 => 0,
        93 => 0,
        95 => 0,
        96 => 0,
        97 => 0,
        99 => 0,
        113 => 0,
        181 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        15 => 9,
        21 => 9,
        89 => 9,
        91 => 9,
        92 => 9,
        10 => 10,
        16 => 10,
        19 => 10,
        22 => 10,
        12 => 12,
        13 => 12,
        14 => 12,
        18 => 12,
        20 => 20,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 29,
        31 => 29,
        32 => 29,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 35,
        37 => 37,
        38 => 37,
        39 => 39,
        40 => 39,
        41 => 41,
        42 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        47 => 45,
        46 => 46,
        48 => 48,
        49 => 49,
        50 => 50,
        65 => 50,
        145 => 50,
        186 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 56,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 64,
        66 => 66,
        67 => 67,
        68 => 68,
        69 => 68,
        70 => 68,
        72 => 68,
        71 => 71,
        73 => 73,
        74 => 74,
        75 => 75,
        76 => 76,
        77 => 77,
        83 => 77,
        130 => 77,
        188 => 77,
        195 => 77,
        196 => 77,
        78 => 78,
        80 => 80,
        81 => 80,
        82 => 80,
        84 => 84,
        85 => 84,
        166 => 84,
        86 => 86,
        87 => 86,
        90 => 90,
        94 => 94,
        98 => 98,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        187 => 117,
        118 => 118,
        150 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 121,
        123 => 121,
        124 => 124,
        125 => 125,
        128 => 125,
        126 => 126,
        127 => 127,
        129 => 129,
        197 => 129,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        146 => 146,
        147 => 147,
        148 => 147,
        149 => 149,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        163 => 158,
        159 => 159,
        162 => 159,
        160 => 160,
        165 => 160,
        161 => 161,
        164 => 161,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        189 => 189,
        190 => 189,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
    );
#line 88 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1938 "smarty_internal_templateparser.php"
#line 94 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1947 "smarty_internal_templateparser.php"
#line 102 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1957 "smarty_internal_templateparser.php"
#line 115 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 1964 "smarty_internal_templateparser.php"
#line 122 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1967 "smarty_internal_templateparser.php"
#line 128 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + -2]->minor) . $this->yystack[$this->yyidx + -1]->minor . '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'?>', ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php'.$this->yystack[$this->yyidx + -1]->minor.'?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 1980 "smarty_internal_templateparser.php"
#line 142 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 1988 "smarty_internal_templateparser.php"
#line 148 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 1996 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 1999 "smarty_internal_templateparser.php"
#line 158 "smarty_internal_templateparser.y"
    function yy_r10(){ $this->_retvalue = '';     }
#line 2002 "smarty_internal_templateparser.php"
#line 161 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2005 "smarty_internal_templateparser.php"
#line 174 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2008 "smarty_internal_templateparser.php"
#line 181 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2011 "smarty_internal_templateparser.php"
#line 183 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2014 "smarty_internal_templateparser.php"
#line 191 "smarty_internal_templateparser.y"
    function yy_r28(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2017 "smarty_internal_templateparser.php"
#line 192 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2020 "smarty_internal_templateparser.php"
#line 203 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2023 "smarty_internal_templateparser.php"
#line 205 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2026 "smarty_internal_templateparser.php"
#line 207 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2029 "smarty_internal_templateparser.php"
#line 210 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2032 "smarty_internal_templateparser.php"
#line 212 "smarty_internal_templateparser.y"
    function yy_r41(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2035 "smarty_internal_templateparser.php"
#line 214 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2038 "smarty_internal_templateparser.php"
#line 216 "smarty_internal_templateparser.y"
    function yy_r43(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2043 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r44(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2048 "smarty_internal_templateparser.php"
#line 224 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2051 "smarty_internal_templateparser.php"
#line 225 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2054 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r48(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2058 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2061 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2064 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2067 "smarty_internal_templateparser.php"
#line 235 "smarty_internal_templateparser.y"
    function yy_r52(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2071 "smarty_internal_templateparser.php"
#line 237 "smarty_internal_templateparser.y"
    function yy_r53(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2075 "smarty_internal_templateparser.php"
#line 239 "smarty_internal_templateparser.y"
    function yy_r54(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2079 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r55(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2083 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2086 "smarty_internal_templateparser.php"
#line 250 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2089 "smarty_internal_templateparser.php"
#line 251 "smarty_internal_templateparser.y"
    function yy_r62(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2094 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r63(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2097 "smarty_internal_templateparser.php"
#line 262 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2100 "smarty_internal_templateparser.php"
#line 266 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = array();    }
#line 2103 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2106 "smarty_internal_templateparser.php"
#line 270 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2109 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2112 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r73(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2115 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r74(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2118 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r75(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2121 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r76(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2124 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r77(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2127 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2130 "smarty_internal_templateparser.php"
#line 304 "smarty_internal_templateparser.y"
    function yy_r80(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2133 "smarty_internal_templateparser.php"
#line 310 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2136 "smarty_internal_templateparser.php"
#line 316 "smarty_internal_templateparser.y"
    function yy_r86(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2139 "smarty_internal_templateparser.php"
#line 325 "smarty_internal_templateparser.y"
    function yy_r90(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2142 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r94(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2145 "smarty_internal_templateparser.php"
#line 340 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2148 "smarty_internal_templateparser.php"
#line 344 "smarty_internal_templateparser.y"
    function yy_r100(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2157 "smarty_internal_templateparser.php"
#line 351 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = "''";     }
#line 2160 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2163 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2166 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2169 "smarty_internal_templateparser.php"
#line 357 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2172 "smarty_internal_templateparser.php"
#line 359 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2175 "smarty_internal_templateparser.php"
#line 361 "smarty_internal_templateparser.y"
    function yy_r107(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2178 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r108(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2181 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r109(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2184 "smarty_internal_templateparser.php"
#line 366 "smarty_internal_templateparser.y"
    function yy_r110(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2187 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r111(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2191 "smarty_internal_templateparser.php"
#line 378 "smarty_internal_templateparser.y"
    function yy_r112(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2194 "smarty_internal_templateparser.php"
#line 382 "smarty_internal_templateparser.y"
    function yy_r114(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2197 "smarty_internal_templateparser.php"
#line 383 "smarty_internal_templateparser.y"
    function yy_r115(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2200 "smarty_internal_templateparser.php"
#line 386 "smarty_internal_templateparser.y"
    function yy_r116(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2203 "smarty_internal_templateparser.php"
#line 392 "smarty_internal_templateparser.y"
    function yy_r117(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2206 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r118(){return;    }
#line 2209 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2212 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2215 "smarty_internal_templateparser.php"
#line 402 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2218 "smarty_internal_templateparser.php"
#line 406 "smarty_internal_templateparser.y"
    function yy_r124(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2221 "smarty_internal_templateparser.php"
#line 407 "smarty_internal_templateparser.y"
    function yy_r125(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2224 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r126(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2227 "smarty_internal_templateparser.php"
#line 410 "smarty_internal_templateparser.y"
    function yy_r127(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2230 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue = '';    }
#line 2233 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r131(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2236 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r132(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2239 "smarty_internal_templateparser.php"
#line 427 "smarty_internal_templateparser.y"
    function yy_r133(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2242 "smarty_internal_templateparser.php"
#line 432 "smarty_internal_templateparser.y"
    function yy_r134(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2246 "smarty_internal_templateparser.php"
#line 435 "smarty_internal_templateparser.y"
    function yy_r135(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2249 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r136(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2252 "smarty_internal_templateparser.php"
#line 439 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2255 "smarty_internal_templateparser.php"
#line 440 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2258 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2261 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2264 "smarty_internal_templateparser.php"
#line 444 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2267 "smarty_internal_templateparser.php"
#line 450 "smarty_internal_templateparser.y"
    function yy_r142(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2276 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2279 "smarty_internal_templateparser.php"
#line 465 "smarty_internal_templateparser.y"
    function yy_r144(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2282 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r146(){ return;    }
#line 2285 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r147(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2288 "smarty_internal_templateparser.php"
#line 487 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2291 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2294 "smarty_internal_templateparser.php"
#line 492 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2297 "smarty_internal_templateparser.php"
#line 496 "smarty_internal_templateparser.y"
    function yy_r153(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2300 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2303 "smarty_internal_templateparser.php"
#line 498 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2306 "smarty_internal_templateparser.php"
#line 499 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2309 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2312 "smarty_internal_templateparser.php"
#line 501 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2315 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2318 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2321 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2324 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r167(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2327 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '==';    }
#line 2330 "smarty_internal_templateparser.php"
#line 513 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '!=';    }
#line 2333 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '>';    }
#line 2336 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '<';    }
#line 2339 "smarty_internal_templateparser.php"
#line 516 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '>=';    }
#line 2342 "smarty_internal_templateparser.php"
#line 517 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '<=';    }
#line 2345 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '===';    }
#line 2348 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '!==';    }
#line 2351 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '%';    }
#line 2354 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '&&';    }
#line 2357 "smarty_internal_templateparser.php"
#line 523 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = '||';    }
#line 2360 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = ' XOR ';    }
#line 2363 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r180(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2366 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2369 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r183(){ return;     }
#line 2372 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2375 "smarty_internal_templateparser.php"
#line 534 "smarty_internal_templateparser.y"
    function yy_r185(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2378 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r189(){$this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;    }
#line 2381 "smarty_internal_templateparser.php"
#line 545 "smarty_internal_templateparser.y"
    function yy_r191(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2384 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r192(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."'; $this->compiler->has_variable_string = true;
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;
                                                                }
                                                                   }
#line 2392 "smarty_internal_templateparser.php"
#line 552 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2395 "smarty_internal_templateparser.php"
#line 553 "smarty_internal_templateparser.y"
    function yy_r194(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2398 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 71 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2461 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 63 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2479 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>
