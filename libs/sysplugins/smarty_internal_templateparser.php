<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->allowed_php = false;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 127 "smarty_internal_templateparser.php"

    const TP_COMMENT                        =  1;
    const TP_PHPSTARTTAG                    =  2;
    const TP_PHPENDTAG                      =  3;
    const TP_OTHER                          =  4;
    const TP_FAKEPHPSTARTTAG                =  5;
    const TP_LITERALSTART                   =  6;
    const TP_LITERALEND                     =  7;
    const TP_LITERAL                        =  8;
    const TP_LDEL                           =  9;
    const TP_RDEL                           = 10;
    const TP_DOLLAR                         = 11;
    const TP_ID                             = 12;
    const TP_EQUAL                          = 13;
    const TP_FOREACH                        = 14;
    const TP_PTR                            = 15;
    const TP_IF                             = 16;
    const TP_SPACE                          = 17;
    const TP_UNIMATH                        = 18;
    const TP_FOR                            = 19;
    const TP_SEMICOLON                      = 20;
    const TP_INCDEC                         = 21;
    const TP_TO                             = 22;
    const TP_STEP                           = 23;
    const TP_AS                             = 24;
    const TP_APTR                           = 25;
    const TP_LDELSLASH                      = 26;
    const TP_INTEGER                        = 27;
    const TP_COMMA                          = 28;
    const TP_COLON                          = 29;
    const TP_MATH                           = 30;
    const TP_ANDSYM                         = 31;
    const TP_OPENP                          = 32;
    const TP_CLOSEP                         = 33;
    const TP_QMARK                          = 34;
    const TP_NOT                            = 35;
    const TP_TYPECAST                       = 36;
    const TP_DOT                            = 37;
    const TP_BOOLEAN                        = 38;
    const TP_NULL                           = 39;
    const TP_SINGLEQUOTESTRING              = 40;
    const TP_QUOTE                          = 41;
    const TP_DOUBLECOLON                    = 42;
    const TP_AT                             = 43;
    const TP_HATCH                          = 44;
    const TP_OPENB                          = 45;
    const TP_CLOSEB                         = 46;
    const TP_VERT                           = 47;
    const TP_ISIN                           = 48;
    const TP_ISDIVBY                        = 49;
    const TP_ISNOTDIVBY                     = 50;
    const TP_ISEVEN                         = 51;
    const TP_ISNOTEVEN                      = 52;
    const TP_ISEVENBY                       = 53;
    const TP_ISNOTEVENBY                    = 54;
    const TP_ISODD                          = 55;
    const TP_ISNOTODD                       = 56;
    const TP_ISODDBY                        = 57;
    const TP_ISNOTODDBY                     = 58;
    const TP_INSTANCEOF                     = 59;
    const TP_EQUALS                         = 60;
    const TP_NOTEQUALS                      = 61;
    const TP_GREATERTHAN                    = 62;
    const TP_LESSTHAN                       = 63;
    const TP_GREATEREQUAL                   = 64;
    const TP_LESSEQUAL                      = 65;
    const TP_IDENTITY                       = 66;
    const TP_NONEIDENTITY                   = 67;
    const TP_MOD                            = 68;
    const TP_LAND                           = 69;
    const TP_LOR                            = 70;
    const TP_LXOR                           = 71;
    const TP_BACKTICK                       = 72;
    const TP_DOLLARID                       = 73;
    const YY_NO_ACTION = 588;
    const YY_ACCEPT_ACTION = 587;
    const YY_ERROR_ACTION = 586;

    const YY_SZ_ACTTAB = 1619;
static public $yy_action = array(
 /*     0 */    20,  163,   85,   61,  290,  101,  288,  200,  154,   50,
 /*    10 */   210,  587,   60,  259,  321,  323,  185,  122,  248,  152,
 /*    20 */    99,   38,  207,   10,  307,   40,   54,   48,   31,  292,
 /*    30 */   291,  309,   62,  279,  260,   65,   17,   20,  374,   94,
 /*    40 */   188,   38,  352,  373,  307,   38,   50,  219,  307,  214,
 /*    50 */    94,  243,  203,   99,  122,  248,   27,  216,   94,  156,
 /*    60 */    30,  223,  133,   54,   48,  287,  292,  291,  309,   62,
 /*    70 */    23,  374,   65,   17,  278,  233,   20,  329,   93,  201,
 /*    80 */   146,  157,  373,   65,  271,   50,  386,  181,  214,  330,
 /*    90 */   327,   65,   99,  122,  248,  227,  329,  207,    2,   30,
 /*   100 */   385,  203,   54,   48,  287,  292,  291,  309,   62,  283,
 /*   110 */   374,   65,   17,   20,  232,   93,  195,   38,  151,  373,
 /*   120 */   307,   41,   50,  269,  237,  214,  253,  203,   99,   99,
 /*   130 */   122,  248,   38,  354,   38,  307,   30,  307,   41,   54,
 /*   140 */    48,  287,  292,  291,  309,   62,  374,  374,   65,   17,
 /*   150 */    20,  230,   93,  201,   45,   71,   90,  257,   51,   50,
 /*   160 */   333,  335,  270,  334,  168,  316,  325,  122,  248,  263,
 /*   170 */    52,   49,  282,   13,   19,   38,   18,   48,  307,  292,
 /*   180 */   291,  309,   62,  267,  280,   65,   17,   20,  245,   94,
 /*   190 */   197,  122,    4,  359,   38,  353,   50,  307,  217,  203,
 /*   200 */   207,  320,  321,  323,  122,  248,  284,  212,  224,  246,
 /*   210 */    30,   23,  187,   54,   48,   23,  292,  291,  309,   62,
 /*   220 */    43,  146,   65,   17,   20,  146,   94,  202,   38,  357,
 /*   230 */   203,  307,   63,   50,  254,  266,  255,   34,  250,  251,
 /*   240 */    37,  122,  248,  263,  218,  451,   57,   30,   19,  375,
 /*   250 */    54,   48,  451,  292,  291,  309,   62,   26,   78,   65,
 /*   260 */    17,   20,   23,   94,  196,  122,  222,   23,  187,   53,
 /*   270 */    50,  182,  146,  258,  275,  203,   43,  146,  122,  199,
 /*   280 */   265,  215,   51,   38,   30,   28,  307,   54,   48,  297,
 /*   290 */   292,  291,  309,   62,   52,   49,   65,   17,   20,  136,
 /*   300 */    93,  201,  454,   35,   22,  181,  302,   50,  203,  454,
 /*   310 */    23,   34,  250,  207,  329,  122,  248,  230,  178,   51,
 /*   320 */   146,    6,  366,  288,   18,   48,  128,  292,  291,  309,
 /*   330 */    62,   52,   49,   65,   17,   20,   42,   86,  201,  134,
 /*   340 */   142,  329,  131,  203,   50,  181,  181,  268,  180,    1,
 /*   350 */    14,   53,  122,  248,  329,  329,   16,  329,   13,   83,
 /*   360 */   245,   18,   48,  300,  292,  291,  309,   62,   33,   33,
 /*   370 */    65,   17,   20,  338,   93,  189,  130,  149,  132,  361,
 /*   380 */   377,   50,  183,  186,   29,  141,  207,  207,  172,  122,
 /*   390 */   248,  329,  329,  329,  235,    6,  171,  261,   18,   48,
 /*   400 */   329,  292,  291,  309,   62,  330,  389,   65,   17,   20,
 /*   410 */   144,   94,  202,  450,  272,   16,  362,  324,   50,  317,
 /*   420 */   207,  207,  306,  207,  294,  329,  122,  248,  298,  207,
 /*   430 */   294,  304,   30,  294,  203,   54,   48,  330,  292,  291,
 /*   440 */   309,   62,   39,  247,   65,   12,    5,  348,  349,    7,
 /*   450 */     8,  345,  344,    9,   11,  350,  174,  203,   47,   36,
 /*   460 */   203,  341,  207,  242,  204,  285,  340,  339,  207,  155,
 /*   470 */   387,  388,  384,  383,  379,  378,  380,  381,  382,  244,
 /*   480 */    53,  256,   21,  161,  329,   12,    5,  348,  349,    7,
 /*   490 */     8,  345,  344,    9,   11,   12,    5,  348,  349,    7,
 /*   500 */     8,  345,  344,    9,   11,  285,  340,  339,    3,   20,
 /*   510 */    57,   94,  208,  343,  351,  285,  340,  339,   50,  363,
 /*   520 */   207,  207,  184,  360,  310,   38,  122,  248,  231,  347,
 /*   530 */   207,  207,   30,  203,  266,   54,   48,  165,  292,  291,
 /*   540 */   309,   62,  288,  207,   65,   12,    5,  348,  349,    7,
 /*   550 */     8,  345,  344,    9,   11,  305,  328,  342,  181,  203,
 /*   560 */   240,  121,  207,  207,  207,  285,  340,  339,  207,   24,
 /*   570 */   181,  355,  264,  203,  207,  338,   12,    5,  348,  349,
 /*   580 */     7,    8,  345,  344,    9,   11,   44,  364,  203,  203,
 /*   590 */   229,  276,  332,   33,  207,   15,  285,  340,  339,  207,
 /*   600 */    12,    5,  348,  349,    7,    8,  345,  344,    9,   11,
 /*   610 */    12,    5,  348,  349,    7,    8,  345,  344,    9,   11,
 /*   620 */   285,  340,  339,  150,   38,   57,  299,  206,  286,   69,
 /*   630 */   285,  340,  339,   12,    5,  348,  349,    7,    8,  345,
 /*   640 */   344,    9,   11,  452,  303,  221,  125,  220,  203,   47,
 /*   650 */   452,  207,  450,  285,  340,  339,   95,   96,  299,  207,
 /*   660 */   338,  387,  388,  384,  383,  379,  378,  380,  381,  382,
 /*   670 */   326,  336,  358,  126,   79,  273,  148,  207,  207,  207,
 /*   680 */   203,   47,    4,   72,   88,  356,  252,  338,  338,  203,
 /*   690 */    47,  329,  228,  387,  388,  384,  383,  379,  378,  380,
 /*   700 */   381,  382,  387,  388,  384,  383,  379,  378,  380,  381,
 /*   710 */   382,  376,  102,  373,   21,   42,   16,  193,  207,  214,
 /*   720 */    73,  262,  111,   99,  363,  322,  319,  318,  314,  313,
 /*   730 */   168,  372,  160,   20,  192,  287,  274,  368,  203,   47,
 /*   740 */   173,  374,  294,  234,  301,  288,  346,  329,  203,   47,
 /*   750 */   122,  387,  388,  384,  383,  379,  378,  380,  381,  382,
 /*   760 */   120,  387,  388,  384,  383,  379,  378,  380,  381,  382,
 /*   770 */   170,  124,  373,   80,  338,  123,  205,  371,  214,   56,
 /*   780 */   100,   59,   99,  337,  232,  338,  104,  338,  277,  338,
 /*   790 */   372,  225,  373,  192,  287,   87,  311,  373,  214,  289,
 /*   800 */   374,  241,   99,  214,   76,  346,  108,   99,  129,  138,
 /*   810 */   211,  139,   84,   32,  287,  372,  207,   70,  192,  287,
 /*   820 */   374,  281,   91,  329,  329,  374,  329,  373,  299,   46,
 /*   830 */   346,  241,  331,  214,   55,   98,   58,   99,  103,  213,
 /*   840 */   158,   25,   44,   67,  290,  372,  315,  373,  192,  287,
 /*   850 */   330,  241,   77,  214,   76,  374,  119,   99,  315,  315,
 /*   860 */   346,  315,  315,  315,  315,  372,  315,  315,  192,  287,
 /*   870 */   315,  315,  373,  315,  315,  374,  241,  315,  214,   76,
 /*   880 */   346,  115,   99,  315,  315,  373,  315,  315,  315,  239,
 /*   890 */   372,  214,  176,  192,  287,   99,  315,  315,  315,  315,
 /*   900 */   374,  315,  315,  372,  315,  346,  192,  287,  315,  315,
 /*   910 */   373,  315,  315,  374,  241,  315,  214,   76,  315,  118,
 /*   920 */    99,  209,  367,  315,  315,  315,  315,  315,  372,  315,
 /*   930 */   373,  192,  287,  315,  241,  315,  214,   76,  374,  105,
 /*   940 */    99,  315,  315,  346,  315,  315,  315,  315,  372,  315,
 /*   950 */   315,  192,  287,  315,  315,  373,  315,  315,  374,  236,
 /*   960 */   315,  214,   76,  346,  117,   99,  315,  315,  373,  315,
 /*   970 */   315,  315,  293,  372,  214,  315,  192,  287,   99,  315,
 /*   980 */   315,  315,  315,  374,  315,  373,  315,  315,  346,  241,
 /*   990 */   287,  214,   76,  315,  112,   99,  374,  315,  315,  315,
 /*  1000 */   315,  315,  315,  372,  315,  315,  192,  287,  315,  315,
 /*  1010 */   373,  315,  315,  374,  241,  315,  214,   74,  346,  110,
 /*  1020 */    99,  315,  315,  315,  315,  315,  315,  315,  372,  315,
 /*  1030 */   373,  192,  287,  315,  241,  315,  214,   76,  374,  113,
 /*  1040 */    99,  315,  315,  346,  315,  315,  315,  315,  372,  315,
 /*  1050 */   315,  192,  287,  315,  315,  373,  315,  315,  374,  241,
 /*  1060 */   315,  214,   76,  346,  106,   99,  315,  315,  373,  315,
 /*  1070 */   315,  315,  369,  372,  214,  315,  192,  287,   99,  315,
 /*  1080 */   315,  315,  315,  374,  315,  373,  315,  315,  346,  241,
 /*  1090 */   287,  214,   75,  315,  107,   99,  374,  315,  315,  315,
 /*  1100 */   315,  315,  315,  372,  315,  315,  192,  287,  315,  315,
 /*  1110 */   373,  315,  315,  374,  241,  315,  214,   75,  346,  109,
 /*  1120 */    99,  315,  315,  315,  315,  315,  315,  315,  372,  315,
 /*  1130 */   373,  192,  287,  315,  241,  315,  214,   76,  374,  116,
 /*  1140 */    99,  315,  315,  346,  315,  315,  315,  315,  372,  315,
 /*  1150 */   315,  192,  287,  315,  315,  373,  315,  315,  374,  241,
 /*  1160 */   315,  214,   76,  346,  114,   99,  315,  315,  315,  315,
 /*  1170 */   315,  315,  315,  372,  373,  315,  192,  287,   89,  315,
 /*  1180 */    82,   64,   97,  374,   92,  315,  315,  315,  346,  315,
 /*  1190 */   315,  315,  372,  373,  315,  192,  287,  312,  315,  214,
 /*  1200 */   145,  315,  374,   99,  315,  315,  315,  315,  315,  315,
 /*  1210 */   315,  372,  315,  373,  192,  287,  315,  312,  238,  214,
 /*  1220 */   145,  374,  373,   99,  315,  315,  312,  315,  214,  145,
 /*  1230 */   315,  372,   99,  315,  192,  287,  315,  315,  226,  315,
 /*  1240 */   372,  374,  373,  192,  287,  315,  239,  370,  214,  176,
 /*  1250 */   374,  315,   99,  315,  315,  373,  315,  315,  315,  312,
 /*  1260 */   372,  214,  145,  192,  287,   99,  315,  315,  315,  315,
 /*  1270 */   374,  315,  315,  372,  315,  315,  192,  287,  373,  365,
 /*  1280 */   249,  315,   89,  374,   81,   68,   97,  315,   92,  315,
 /*  1290 */   315,  315,  315,  315,  315,  315,  372,  373,  315,  192,
 /*  1300 */   287,  312,  315,  214,  147,  315,  374,   99,  315,  315,
 /*  1310 */   373,  315,  315,  315,  312,  372,  214,  166,  192,  287,
 /*  1320 */    99,  315,  315,  373,  315,  374,  315,  312,  372,  214,
 /*  1330 */   167,  192,  287,   99,  315,  315,  315,  315,  374,  315,
 /*  1340 */   315,  372,  373,  315,  192,  287,  312,  315,  214,   66,
 /*  1350 */   315,  374,   99,  315,  315,  373,  315,  315,  315,  312,
 /*  1360 */   372,  214,  143,  192,  287,   99,  315,  315,  315,  315,
 /*  1370 */   374,  315,  315,  372,  315,  373,  192,  287,  315,  312,
 /*  1380 */   373,  214,  175,  374,  312,   99,  214,  179,  315,  315,
 /*  1390 */    99,  315,  315,  372,  315,  315,  192,  287,  372,  315,
 /*  1400 */   315,  192,  287,  374,  315,  315,  373,  315,  374,  315,
 /*  1410 */   312,  373,  214,  137,  315,  312,   99,  214,  159,  315,
 /*  1420 */   315,   99,  315,  315,  372,  315,  315,  192,  287,  372,
 /*  1430 */   315,  373,  192,  287,  374,  312,  315,  214,  162,  374,
 /*  1440 */   373,   99,  315,  315,  312,  315,  214,  140,  315,  372,
 /*  1450 */    99,  315,  192,  287,  315,  315,  315,  315,  372,  374,
 /*  1460 */   373,  192,  287,  315,  312,  373,  214,  135,  374,  312,
 /*  1470 */    99,  214,  153,  315,  315,   99,  315,  315,  372,  315,
 /*  1480 */   315,  192,  287,  372,  315,  373,  192,  287,  374,  312,
 /*  1490 */   373,  214,  164,  374,  312,   99,  198,  127,  315,  315,
 /*  1500 */    99,  315,  315,  372,  315,  315,  192,  287,  372,  315,
 /*  1510 */   373,  192,  287,  374,  312,  315,  214,  177,  374,  373,
 /*  1520 */    99,  315,  315,  312,  315,  214,  169,  315,  372,   99,
 /*  1530 */   315,  192,  287,  315,  315,  315,  315,  372,  374,  373,
 /*  1540 */   192,  287,  315,  312,  373,  214,  315,  374,  312,   99,
 /*  1550 */   214,  315,  315,  315,   99,  315,  315,  372,  315,  315,
 /*  1560 */   191,  287,  372,  315,  373,  190,  287,  374,  312,  373,
 /*  1570 */   214,  315,  374,  296,   99,  214,  315,  315,  315,   99,
 /*  1580 */   315,  315,  372,  315,  315,  194,  287,  315,  315,  373,
 /*  1590 */   373,  287,  374,  295,  308,  214,  214,  374,  315,   99,
 /*  1600 */    99,  315,  315,  315,  315,  315,  315,  315,  315,  315,
 /*  1610 */   315,  287,  287,  315,  315,  315,  315,  374,  374,
    );
    static public $yy_lookahead = array(
 /*     0 */     9,  104,   11,   12,  107,   14,  109,   16,  105,   18,
 /*    10 */    19,   75,   76,   77,   78,   79,   84,   26,   27,  105,
 /*    20 */    88,    9,   17,   32,   12,   13,   35,   36,   23,   38,
 /*    30 */    39,   40,   41,   21,  102,   44,   45,    9,  106,   11,
 /*    40 */    12,    9,   10,   78,   12,    9,   18,   82,   12,   84,
 /*    50 */    11,   12,   47,   88,   26,   27,    9,   25,   11,   12,
 /*    60 */    32,   96,   83,   35,   36,  100,   38,   39,   40,   41,
 /*    70 */    32,  106,   44,   45,   46,   37,    9,   98,   11,   12,
 /*    80 */    42,   83,   78,   44,   46,   18,   82,   89,   84,  110,
 /*    90 */    10,   44,   88,   26,   27,   15,   98,   17,   13,   32,
 /*   100 */    96,   47,   35,   36,  100,   38,   39,   40,   41,   33,
 /*   110 */   106,   44,   45,    9,   29,   11,   12,    9,  105,   78,
 /*   120 */    12,   13,   18,   82,   84,   84,   72,   47,   88,   88,
 /*   130 */    26,   27,    9,   10,    9,   12,   32,   12,   13,   35,
 /*   140 */    36,  100,   38,   39,   40,   41,  106,  106,   44,   45,
 /*   150 */     9,   43,   11,   12,    9,   90,   11,   12,   18,   18,
 /*   160 */     2,    3,   10,    5,    6,    7,    8,   26,   27,    4,
 /*   170 */    30,   31,   27,   32,    9,    9,   35,   36,   12,   38,
 /*   180 */    39,   40,   41,   38,   39,   44,   45,    9,   37,   11,
 /*   190 */    12,   26,   13,   10,    9,   10,   18,   12,   15,   47,
 /*   200 */    17,   77,   78,   79,   26,   27,   41,   11,   12,   43,
 /*   210 */    32,   32,   37,   35,   36,   32,   38,   39,   40,   41,
 /*   220 */    45,   42,   44,   45,    9,   42,   11,   12,    9,   10,
 /*   230 */    47,   12,   12,   18,   14,   78,   16,   72,   73,   19,
 /*   240 */    22,   26,   27,    4,   25,   10,   15,   32,    9,   44,
 /*   250 */    35,   36,   17,   38,   39,   40,   41,   29,  101,   44,
 /*   260 */    45,    9,   32,   11,   12,   26,   12,   32,   37,   59,
 /*   270 */    18,   10,   42,  116,   10,   47,   45,   42,   26,   27,
 /*   280 */    41,   27,   18,    9,   32,   34,   12,   35,   36,   27,
 /*   290 */    38,   39,   40,   41,   30,   31,   44,   45,    9,   83,
 /*   300 */    11,   12,   10,   25,   28,   89,   10,   18,   47,   17,
 /*   310 */    32,   72,   73,   17,   98,   26,   27,   43,  104,   18,
 /*   320 */    42,   32,   46,  109,   35,   36,   83,   38,   39,   40,
 /*   330 */    41,   30,   31,   44,   45,    9,   13,   11,   12,   83,
 /*   340 */    83,   98,   83,   47,   18,   89,   89,   46,   89,   17,
 /*   350 */    18,   59,   26,   27,   98,   98,  113,   98,   32,   94,
 /*   360 */    37,   35,   36,   12,   38,   39,   40,   41,  112,  112,
 /*   370 */    44,   45,    9,  108,   11,   12,   83,   83,   83,   10,
 /*   380 */    10,   18,   89,   89,   34,   83,   17,   17,   20,   26,
 /*   390 */    27,   98,   98,   98,   43,   32,   28,   10,   35,   36,
 /*   400 */    98,   38,   39,   40,   41,  110,   10,   44,   45,    9,
 /*   410 */    83,   11,   12,   10,   10,  113,   10,   79,   18,   81,
 /*   420 */    17,   17,   10,   17,   21,   98,   26,   27,   12,   17,
 /*   430 */    21,   10,   32,   21,   47,   35,   36,  110,   38,   39,
 /*   440 */    40,   41,   29,   33,   44,   49,   50,   51,   52,   53,
 /*   450 */    54,   55,   56,   57,   58,   10,   20,   47,   48,    9,
 /*   460 */    47,   10,   17,   91,   92,   69,   70,   71,   17,   83,
 /*   470 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   33,
 /*   480 */    59,   72,   32,   90,   98,   49,   50,   51,   52,   53,
 /*   490 */    54,   55,   56,   57,   58,   49,   50,   51,   52,   53,
 /*   500 */    54,   55,   56,   57,   58,   69,   70,   71,   13,    9,
 /*   510 */    15,   11,   12,   10,   10,   69,   70,   71,   18,   33,
 /*   520 */    17,   17,   10,   10,   10,    9,   26,   27,   12,   33,
 /*   530 */    17,   17,   32,   47,   78,   35,   36,  104,   38,   39,
 /*   540 */    40,   41,  109,   17,   44,   49,   50,   51,   52,   53,
 /*   550 */    54,   55,   56,   57,   58,   10,   10,   10,   89,   47,
 /*   560 */    33,   94,   17,   17,   17,   69,   70,   71,   17,   28,
 /*   570 */    89,   10,  116,   47,   17,  108,   49,   50,   51,   52,
 /*   580 */    53,   54,   55,   56,   57,   58,   29,   10,   47,   47,
 /*   590 */    93,   17,   10,  112,   17,   93,   69,   70,   71,   17,
 /*   600 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   610 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   620 */    69,   70,   71,  105,    9,   15,  108,   12,  109,   90,
 /*   630 */    69,   70,   71,   49,   50,   51,   52,   53,   54,   55,
 /*   640 */    56,   57,   58,   10,   10,   95,   94,   24,   47,   48,
 /*   650 */    17,   17,   10,   69,   70,   71,   11,   11,  108,   17,
 /*   660 */   108,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   670 */    10,   10,   10,   94,   94,   10,   83,   17,   17,   17,
 /*   680 */    47,   48,   13,   12,   11,   10,   10,  108,  108,   47,
 /*   690 */    48,   98,   24,   60,   61,   62,   63,   64,   65,   66,
 /*   700 */    67,   68,   60,   61,   62,   63,   64,   65,   66,   67,
 /*   710 */    68,   10,   17,   78,   32,   13,  113,   82,   17,   84,
 /*   720 */    85,   86,   87,   88,   33,    1,    2,    3,    4,    5,
 /*   730 */     6,   96,   83,    9,   99,  100,   46,   33,   47,   48,
 /*   740 */   104,  106,   21,   12,   12,  109,  111,   98,   47,   48,
 /*   750 */    26,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   760 */    94,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   770 */    12,   94,   78,   94,  108,   94,   82,   44,   84,   85,
 /*   780 */    86,   87,   88,   12,   29,  108,   33,  108,   10,  108,
 /*   790 */    96,   12,   78,   99,  100,   11,   82,   78,   84,   12,
 /*   800 */   106,   82,   88,   84,   85,  111,   87,   88,   83,   83,
 /*   810 */    91,   83,   11,   25,  100,   96,   17,   90,   99,  100,
 /*   820 */   106,   91,   11,   98,   98,  106,   98,   78,  108,   17,
 /*   830 */   111,   82,   98,   84,   85,   86,   87,   88,  102,   97,
 /*   840 */   105,   32,   29,  105,  107,   96,    7,   78,   99,  100,
 /*   850 */   110,   82,   80,   84,   85,  106,   87,   88,  117,  117,
 /*   860 */   111,  117,  117,  117,  117,   96,  117,  117,   99,  100,
 /*   870 */   117,  117,   78,  117,  117,  106,   82,  117,   84,   85,
 /*   880 */   111,   87,   88,  117,  117,   78,  117,  117,  117,   82,
 /*   890 */    96,   84,   85,   99,  100,   88,  117,  117,  117,  117,
 /*   900 */   106,  117,  117,   96,  117,  111,   99,  100,  117,  117,
 /*   910 */    78,  117,  117,  106,   82,  117,   84,   85,  117,   87,
 /*   920 */    88,  114,  115,  117,  117,  117,  117,  117,   96,  117,
 /*   930 */    78,   99,  100,  117,   82,  117,   84,   85,  106,   87,
 /*   940 */    88,  117,  117,  111,  117,  117,  117,  117,   96,  117,
 /*   950 */   117,   99,  100,  117,  117,   78,  117,  117,  106,   82,
 /*   960 */   117,   84,   85,  111,   87,   88,  117,  117,   78,  117,
 /*   970 */   117,  117,   82,   96,   84,  117,   99,  100,   88,  117,
 /*   980 */   117,  117,  117,  106,  117,   78,  117,  117,  111,   82,
 /*   990 */   100,   84,   85,  117,   87,   88,  106,  117,  117,  117,
 /*  1000 */   117,  117,  117,   96,  117,  117,   99,  100,  117,  117,
 /*  1010 */    78,  117,  117,  106,   82,  117,   84,   85,  111,   87,
 /*  1020 */    88,  117,  117,  117,  117,  117,  117,  117,   96,  117,
 /*  1030 */    78,   99,  100,  117,   82,  117,   84,   85,  106,   87,
 /*  1040 */    88,  117,  117,  111,  117,  117,  117,  117,   96,  117,
 /*  1050 */   117,   99,  100,  117,  117,   78,  117,  117,  106,   82,
 /*  1060 */   117,   84,   85,  111,   87,   88,  117,  117,   78,  117,
 /*  1070 */   117,  117,   82,   96,   84,  117,   99,  100,   88,  117,
 /*  1080 */   117,  117,  117,  106,  117,   78,  117,  117,  111,   82,
 /*  1090 */   100,   84,   85,  117,   87,   88,  106,  117,  117,  117,
 /*  1100 */   117,  117,  117,   96,  117,  117,   99,  100,  117,  117,
 /*  1110 */    78,  117,  117,  106,   82,  117,   84,   85,  111,   87,
 /*  1120 */    88,  117,  117,  117,  117,  117,  117,  117,   96,  117,
 /*  1130 */    78,   99,  100,  117,   82,  117,   84,   85,  106,   87,
 /*  1140 */    88,  117,  117,  111,  117,  117,  117,  117,   96,  117,
 /*  1150 */   117,   99,  100,  117,  117,   78,  117,  117,  106,   82,
 /*  1160 */   117,   84,   85,  111,   87,   88,  117,  117,  117,  117,
 /*  1170 */   117,  117,  117,   96,   78,  117,   99,  100,   82,  117,
 /*  1180 */    84,   85,   86,  106,   88,  117,  117,  117,  111,  117,
 /*  1190 */   117,  117,   96,   78,  117,   99,  100,   82,  117,   84,
 /*  1200 */    85,  117,  106,   88,  117,  117,  117,  117,  117,  117,
 /*  1210 */   117,   96,  117,   78,   99,  100,  117,   82,  103,   84,
 /*  1220 */    85,  106,   78,   88,  117,  117,   82,  117,   84,   85,
 /*  1230 */   117,   96,   88,  117,   99,  100,  117,  117,  103,  117,
 /*  1240 */    96,  106,   78,   99,  100,  117,   82,  103,   84,   85,
 /*  1250 */   106,  117,   88,  117,  117,   78,  117,  117,  117,   82,
 /*  1260 */    96,   84,   85,   99,  100,   88,  117,  117,  117,  117,
 /*  1270 */   106,  117,  117,   96,  117,  117,   99,  100,   78,  115,
 /*  1280 */   103,  117,   82,  106,   84,   85,   86,  117,   88,  117,
 /*  1290 */   117,  117,  117,  117,  117,  117,   96,   78,  117,   99,
 /*  1300 */   100,   82,  117,   84,   85,  117,  106,   88,  117,  117,
 /*  1310 */    78,  117,  117,  117,   82,   96,   84,   85,   99,  100,
 /*  1320 */    88,  117,  117,   78,  117,  106,  117,   82,   96,   84,
 /*  1330 */    85,   99,  100,   88,  117,  117,  117,  117,  106,  117,
 /*  1340 */   117,   96,   78,  117,   99,  100,   82,  117,   84,   85,
 /*  1350 */   117,  106,   88,  117,  117,   78,  117,  117,  117,   82,
 /*  1360 */    96,   84,   85,   99,  100,   88,  117,  117,  117,  117,
 /*  1370 */   106,  117,  117,   96,  117,   78,   99,  100,  117,   82,
 /*  1380 */    78,   84,   85,  106,   82,   88,   84,   85,  117,  117,
 /*  1390 */    88,  117,  117,   96,  117,  117,   99,  100,   96,  117,
 /*  1400 */   117,   99,  100,  106,  117,  117,   78,  117,  106,  117,
 /*  1410 */    82,   78,   84,   85,  117,   82,   88,   84,   85,  117,
 /*  1420 */   117,   88,  117,  117,   96,  117,  117,   99,  100,   96,
 /*  1430 */   117,   78,   99,  100,  106,   82,  117,   84,   85,  106,
 /*  1440 */    78,   88,  117,  117,   82,  117,   84,   85,  117,   96,
 /*  1450 */    88,  117,   99,  100,  117,  117,  117,  117,   96,  106,
 /*  1460 */    78,   99,  100,  117,   82,   78,   84,   85,  106,   82,
 /*  1470 */    88,   84,   85,  117,  117,   88,  117,  117,   96,  117,
 /*  1480 */   117,   99,  100,   96,  117,   78,   99,  100,  106,   82,
 /*  1490 */    78,   84,   85,  106,   82,   88,   84,   85,  117,  117,
 /*  1500 */    88,  117,  117,   96,  117,  117,   99,  100,   96,  117,
 /*  1510 */    78,   99,  100,  106,   82,  117,   84,   85,  106,   78,
 /*  1520 */    88,  117,  117,   82,  117,   84,   85,  117,   96,   88,
 /*  1530 */   117,   99,  100,  117,  117,  117,  117,   96,  106,   78,
 /*  1540 */    99,  100,  117,   82,   78,   84,  117,  106,   82,   88,
 /*  1550 */    84,  117,  117,  117,   88,  117,  117,   96,  117,  117,
 /*  1560 */    99,  100,   96,  117,   78,   99,  100,  106,   82,   78,
 /*  1570 */    84,  117,  106,   82,   88,   84,  117,  117,  117,   88,
 /*  1580 */   117,  117,   96,  117,  117,   99,  100,  117,  117,   78,
 /*  1590 */    78,  100,  106,   82,   82,   84,   84,  106,  117,   88,
 /*  1600 */    88,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  1610 */   117,  100,  100,  117,  117,  117,  117,  106,  106,
);
    const YY_SHIFT_USE_DFLT = -10;
    const YY_SHIFT_MAX = 249;
    static public $yy_shift_ofst = array(
 /*     0 */   724,  326,  289,  289,  363,  141,  141,  141,  141,  141,
 /*    10 */   141,  141,  141,  141,  141,  141,  141,  104,  141,   -9,
 /*    20 */    -9,   67,  104,   67,   67,   67,   67,   67,   67,   67,
 /*    30 */    67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
 /*    40 */    67,   67,   67,   28,  178,  215,  252,  215,  400,  400,
 /*    50 */   400,  400,  400,  500,  400,  642,  701,   47,  551,  551,
 /*    60 */   724,  183,  239,   80,  296,   39,    5,  231,  526,  557,
 /*    70 */   557,  557,  526,  633,  691,  410,  601,  158,  165,  108,
 /*    80 */    12,  403,  412,  274,   36,  615,  516,   36,   36,  661,
 /*    90 */    36,   36,  495,  516,   36,   36,   36,  799,  799,  610,
 /*   100 */   799,  812,  811,  610,  610,  396,  436,  446,  561,  527,
 /*   110 */   496,  584,  584,  584,  584,  584,  584,  584,  584,  584,
 /*   120 */    32,  219,  220,  166,  125,  185,  123,   54,  445,  503,
 /*   130 */   504,  513,  406,  369,  370,  228,  404,  152,  451,  662,
 /*   140 */   413,  577,  547,  387,  546,  541,  196,  512,  582,  660,
 /*   150 */   175,  175,  175,  486,  175,  634,  450,  545,  175,  261,
 /*   160 */   514,  813,  542,  610,  542,  610,  542,  542,  839,  542,
 /*   170 */   809,  811,  574,  610,  574,  542,  542,  542,  610,  542,
 /*   180 */   -10,  -10,  -10,  -10,  -10,  -10,  -10,  145,   38,  235,
 /*   190 */   264,  301,  140,  292,  140,  278,  179,  230,  409,  323,
 /*   200 */   332,  230,  230,  351,  368,  421,   85,  254,  230,  276,
 /*   210 */   695,  675,  758,  676,  721,  702,  673,  671,  645,  623,
 /*   220 */   646,  665,  669,  668,  682,  778,  753,  779,  784,  801,
 /*   230 */   787,  755,  771,  731,  690,  732,  210,  733,  704,  788,
 /*   240 */   251,  210,  218,  205,  251,  262,  416,  350,  151,   76,
);
    const YY_REDUCE_USE_DFLT = -104;
    const YY_REDUCE_MAX = 186;
    static public $yy_reduce_ofst = array(
 /*     0 */   -64,  719,  694,  749,  635,  832, 1007,  769, 1052, 1077,
 /*    10 */  1032,  794,  907,  932,  852,  977,  952,  807,  877, 1096,
 /*    20 */  1200, 1177, 1164, 1115, 1144, 1135, 1353, 1333, 1362, 1382,
 /*    30 */  1387, 1328, 1302, 1245, 1412, 1232, 1219, 1264, 1277, 1297,
 /*    40 */  1407, 1441, 1432, 1461, 1486, 1466,  -35,    4, 1491,   41,
 /*    50 */   890, 1512,  714,  990, 1511,  257,  256,  -68,  243,  302,
 /*    60 */   124,  293,  157,  294,   -2,   40,  216, -103,   -2,  -21,
 /*    70 */   327,  295,  259,  481,  481,  481,  481,  338,  456,  518,
 /*    80 */   550,  649,  649,  518,  679,  265,  580,  666,  579,  593,
 /*    90 */   681,  677,  214,  265,  265,  552,  467,  386,  725,  214,
 /*   100 */   726,  728,  372,  636,  433,  603,  603,  603,  603,  603,
 /*   110 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*   120 */   720,  720,  742,  720,  720,  720,  720,  469,  734,  734,
 /*   130 */   734,  734,  734,  734,  734,  469,  734,  469,  734,  734,
 /*   140 */   469,  734,  734,  469,  734,  469,  736,  469,  734,  734,
 /*   150 */   737,  737,  737,  469,  737,  734,  735,  734,  737,  469,
 /*   160 */   734,  740,  469,  519,  469,  519,  469,  469,  772,  469,
 /*   170 */   738,  730,  502,  519,  497,  469,  469,  469,  519,  469,
 /*   180 */   539,  393,  -97,   65,   13,  -86,  727,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(1, 2, 3, 4, 5, 6, 9, 26, ),
        /* 1 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 2 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 3 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 4 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 5 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 6 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 7 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 8 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 9 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 10 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 11 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 12 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 13 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 14 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 15 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 16 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 17 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 18 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 19 */ array(9, 11, 12, 14, 16, 18, 19, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 20 */ array(9, 11, 12, 14, 16, 18, 19, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 21 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 22 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 23 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 24 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 25 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 26 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 27 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 28 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 29 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 30 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 31 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 32 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 33 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 34 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 35 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 36 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 37 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 38 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 39 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 40 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 41 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 42 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 43 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, 46, ),
        /* 44 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 45 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 46 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 47 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, 45, ),
        /* 48 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 49 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 50 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 51 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 52 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 53 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 54 */ array(9, 11, 12, 18, 26, 27, 32, 35, 36, 38, 39, 40, 41, 44, ),
        /* 55 */ array(10, 17, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 56 */ array(10, 17, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 57 */ array(9, 11, 12, 44, ),
        /* 58 */ array(17, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 59 */ array(17, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 60 */ array(1, 2, 3, 4, 5, 6, 9, 26, ),
        /* 61 */ array(10, 15, 17, 32, 42, 47, ),
        /* 62 */ array(4, 9, 26, 41, 72, 73, ),
        /* 63 */ array(10, 15, 17, 47, ),
        /* 64 */ array(10, 17, 47, ),
        /* 65 */ array(11, 12, 44, ),
        /* 66 */ array(17, 23, 47, ),
        /* 67 */ array(15, 37, 45, ),
        /* 68 */ array(17, 47, ),
        /* 69 */ array(17, 29, ),
        /* 70 */ array(17, 29, ),
        /* 71 */ array(17, 29, ),
        /* 72 */ array(17, 47, ),
        /* 73 */ array(10, 17, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 74 */ array(33, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 75 */ array(33, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 76 */ array(47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, ),
        /* 77 */ array(2, 3, 5, 6, 7, 8, ),
        /* 78 */ array(4, 9, 26, 41, 72, 73, ),
        /* 79 */ array(9, 12, 13, 43, ),
        /* 80 */ array(9, 12, 13, 21, ),
        /* 81 */ array(10, 17, 21, ),
        /* 82 */ array(10, 17, 21, ),
        /* 83 */ array(9, 12, 43, ),
        /* 84 */ array(9, 12, ),
        /* 85 */ array(9, 12, ),
        /* 86 */ array(9, 12, ),
        /* 87 */ array(9, 12, ),
        /* 88 */ array(9, 12, ),
        /* 89 */ array(10, 17, ),
        /* 90 */ array(9, 12, ),
        /* 91 */ array(9, 12, ),
        /* 92 */ array(13, 15, ),
        /* 93 */ array(9, 12, ),
        /* 94 */ array(9, 12, ),
        /* 95 */ array(9, 12, ),
        /* 96 */ array(9, 12, ),
        /* 97 */ array(17, ),
        /* 98 */ array(17, ),
        /* 99 */ array(15, ),
        /* 100 */ array(17, ),
        /* 101 */ array(17, ),
        /* 102 */ array(11, ),
        /* 103 */ array(15, ),
        /* 104 */ array(15, ),
        /* 105 */ array(10, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 106 */ array(20, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 107 */ array(33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 108 */ array(10, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 109 */ array(33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 110 */ array(33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 111 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 112 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 113 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 114 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 115 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 116 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 117 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 118 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 119 */ array(49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, ),
        /* 120 */ array(9, 10, 12, 25, ),
        /* 121 */ array(9, 10, 12, 25, ),
        /* 122 */ array(12, 14, 16, 19, ),
        /* 123 */ array(9, 12, 43, ),
        /* 124 */ array(9, 12, 13, ),
        /* 125 */ array(9, 10, 12, ),
        /* 126 */ array(9, 10, 12, ),
        /* 127 */ array(47, 72, ),
        /* 128 */ array(10, 17, ),
        /* 129 */ array(10, 17, ),
        /* 130 */ array(10, 17, ),
        /* 131 */ array(10, 17, ),
        /* 132 */ array(10, 17, ),
        /* 133 */ array(10, 17, ),
        /* 134 */ array(10, 17, ),
        /* 135 */ array(29, 47, ),
        /* 136 */ array(10, 17, ),
        /* 137 */ array(10, 47, ),
        /* 138 */ array(10, 17, ),
        /* 139 */ array(10, 17, ),
        /* 140 */ array(29, 47, ),
        /* 141 */ array(10, 17, ),
        /* 142 */ array(10, 17, ),
        /* 143 */ array(10, 47, ),
        /* 144 */ array(10, 17, ),
        /* 145 */ array(28, 47, ),
        /* 146 */ array(11, 12, ),
        /* 147 */ array(10, 47, ),
        /* 148 */ array(10, 17, ),
        /* 149 */ array(10, 17, ),
        /* 150 */ array(37, 45, ),
        /* 151 */ array(37, 45, ),
        /* 152 */ array(37, 45, ),
        /* 153 */ array(33, 47, ),
        /* 154 */ array(37, 45, ),
        /* 155 */ array(10, 17, ),
        /* 156 */ array(9, 32, ),
        /* 157 */ array(10, 17, ),
        /* 158 */ array(37, 45, ),
        /* 159 */ array(10, 47, ),
        /* 160 */ array(10, 17, ),
        /* 161 */ array(29, ),
        /* 162 */ array(47, ),
        /* 163 */ array(15, ),
        /* 164 */ array(47, ),
        /* 165 */ array(15, ),
        /* 166 */ array(47, ),
        /* 167 */ array(47, ),
        /* 168 */ array(7, ),
        /* 169 */ array(47, ),
        /* 170 */ array(32, ),
        /* 171 */ array(11, ),
        /* 172 */ array(17, ),
        /* 173 */ array(15, ),
        /* 174 */ array(17, ),
        /* 175 */ array(47, ),
        /* 176 */ array(47, ),
        /* 177 */ array(47, ),
        /* 178 */ array(15, ),
        /* 179 */ array(47, ),
        /* 180 */ array(),
        /* 181 */ array(),
        /* 182 */ array(),
        /* 183 */ array(),
        /* 184 */ array(),
        /* 185 */ array(),
        /* 186 */ array(),
        /* 187 */ array(9, 11, 12, 27, 38, 39, ),
        /* 188 */ array(32, 37, 42, 46, ),
        /* 189 */ array(10, 17, 32, 42, ),
        /* 190 */ array(10, 18, 30, 31, ),
        /* 191 */ array(18, 30, 31, 46, ),
        /* 192 */ array(18, 30, 31, ),
        /* 193 */ array(10, 17, 59, ),
        /* 194 */ array(18, 30, 31, ),
        /* 195 */ array(25, 32, 42, ),
        /* 196 */ array(13, 32, 42, ),
        /* 197 */ array(32, 42, ),
        /* 198 */ array(21, 72, ),
        /* 199 */ array(13, 37, ),
        /* 200 */ array(17, 18, ),
        /* 201 */ array(32, 42, ),
        /* 202 */ array(32, 42, ),
        /* 203 */ array(12, 43, ),
        /* 204 */ array(20, 28, ),
        /* 205 */ array(10, 59, ),
        /* 206 */ array(13, 29, ),
        /* 207 */ array(12, 27, ),
        /* 208 */ array(32, 42, ),
        /* 209 */ array(28, 46, ),
        /* 210 */ array(17, ),
        /* 211 */ array(10, ),
        /* 212 */ array(12, ),
        /* 213 */ array(10, ),
        /* 214 */ array(21, ),
        /* 215 */ array(13, ),
        /* 216 */ array(11, ),
        /* 217 */ array(12, ),
        /* 218 */ array(11, ),
        /* 219 */ array(24, ),
        /* 220 */ array(11, ),
        /* 221 */ array(10, ),
        /* 222 */ array(13, ),
        /* 223 */ array(24, ),
        /* 224 */ array(32, ),
        /* 225 */ array(10, ),
        /* 226 */ array(33, ),
        /* 227 */ array(12, ),
        /* 228 */ array(11, ),
        /* 229 */ array(11, ),
        /* 230 */ array(12, ),
        /* 231 */ array(29, ),
        /* 232 */ array(12, ),
        /* 233 */ array(12, ),
        /* 234 */ array(46, ),
        /* 235 */ array(12, ),
        /* 236 */ array(59, ),
        /* 237 */ array(44, ),
        /* 238 */ array(33, ),
        /* 239 */ array(25, ),
        /* 240 */ array(34, ),
        /* 241 */ array(59, ),
        /* 242 */ array(22, ),
        /* 243 */ array(44, ),
        /* 244 */ array(34, ),
        /* 245 */ array(27, ),
        /* 246 */ array(12, ),
        /* 247 */ array(34, ),
        /* 248 */ array(37, ),
        /* 249 */ array(33, ),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
);
    static public $yy_default = array(
 /*     0 */   586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
 /*    10 */   586,  586,  586,  586,  586,  586,  586,  571,  586,  586,
 /*    20 */   586,  529,  586,  529,  529,  529,  586,  586,  586,  586,
 /*    30 */   586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
 /*    40 */   586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
 /*    50 */   586,  586,  586,  586,  586,  539,  539,  586,  450,  450,
 /*    60 */   390,  586,  586,  586,  586,  586,  450,  491,  450,  450,
 /*    70 */   450,  450,  450,  539,  539,  539,  539,  586,  586,  501,
 /*    80 */   586,  472,  472,  501,  586,  586,  586,  586,  586,  465,
 /*    90 */   586,  586,  494,  586,  586,  586,  586,  450,  450,  494,
 /*   100 */   450,  450,  586,  486,  487,  586,  586,  586,  586,  586,
 /*   110 */   586,  453,  544,  543,  552,  553,  549,  537,  545,  548,
 /*   120 */   586,  586,  586,  502,  586,  586,  586,  586,  586,  586,
 /*   130 */   586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
 /*   140 */   586,  586,  586,  586,  586,  528,  586,  586,  586,  586,
 /*   150 */   499,  523,  521,  586,  522,  586,  501,  586,  520,  586,
 /*   160 */   586,  464,  471,  492,  432,  489,  573,  540,  403,  460,
 /*   170 */   501,  586,  585,  488,  585,  470,  574,  457,  517,  572,
 /*   180 */   533,  533,  501,  533,  501,  501,  533,  586,  586,  461,
 /*   190 */   586,  586,  462,  465,  534,  461,  456,  535,  472,  477,
 /*   200 */   586,  461,  586,  586,  586,  465,  515,  586,  554,  586,
 /*   210 */   586,  586,  586,  586,  472,  586,  586,  586,  586,  586,
 /*   220 */   586,  586,  456,  586,  490,  586,  586,  586,  586,  586,
 /*   230 */   586,  515,  586,  586,  586,  586,  465,  586,  586,  465,
 /*   240 */   586,  465,  458,  586,  538,  586,  586,  482,  477,  586,
 /*   250 */   579,  443,  441,  578,  444,  442,  577,  504,  576,  391,
 /*   260 */   524,  516,  455,  583,  575,  485,  582,  505,  511,  468,
 /*   270 */   435,  509,  434,  431,  510,  508,  584,  447,  512,  433,
 /*   280 */   506,  459,  507,  526,  484,  565,  519,  481,  518,  495,
 /*   290 */   500,  480,  479,  473,  476,  474,  475,  478,  503,  514,
 /*   300 */   531,  530,  581,  413,  414,  412,  580,  515,  467,  483,
 /*   310 */   411,  466,  465,  399,  398,  400,  401,  402,  397,  396,
 /*   320 */   392,  393,  394,  395,  404,  405,  445,  440,  446,  449,
 /*   330 */   532,  448,  410,  406,  407,  408,  409,  463,  513,  567,
 /*   340 */   566,  418,  419,  420,  551,  550,  536,  538,  546,  547,
 /*   350 */   421,  422,  438,  437,  439,  428,  430,  436,  423,  424,
 /*   360 */   425,  427,  426,  482,  417,  570,  568,  569,  525,  555,
 /*   370 */   527,  498,  469,  493,  496,  497,  415,  416,  561,  560,
 /*   380 */   562,  563,  564,  559,  558,  541,  542,  556,  557,  429,
);
    const YYNOCODE = 118;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 390;
    const YYNRULE = 196;
    const YYERRORSYMBOL = 74;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'OTHER',         'FAKEPHPSTARTTAG',  'LITERALSTART',  'LITERALEND',  
  'LITERAL',       'LDEL',          'RDEL',          'DOLLAR',      
  'ID',            'EQUAL',         'FOREACH',       'PTR',         
  'IF',            'SPACE',         'UNIMATH',       'FOR',         
  'SEMICOLON',     'INCDEC',        'TO',            'STEP',        
  'AS',            'APTR',          'LDELSLASH',     'INTEGER',     
  'COMMA',         'COLON',         'MATH',          'ANDSYM',      
  'OPENP',         'CLOSEP',        'QMARK',         'NOT',         
  'TYPECAST',      'DOT',           'BOOLEAN',       'NULL',        
  'SINGLEQUOTESTRING',  'QUOTE',         'DOUBLECOLON',   'AT',          
  'HATCH',         'OPENB',         'CLOSEB',        'VERT',        
  'ISIN',          'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',      
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',       
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',  
  'EQUALS',        'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',    
  'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',
  'MOD',           'LAND',          'LOR',           'LXOR',        
  'BACKTICK',      'DOLLARID',      'error',         'start',       
  'template',      'template_element',  'smartytag',     'literal',     
  'literal_elements',  'literal_element',  'value',         'attributes',  
  'variable',      'expr',          'ternary',       'ifexprs',     
  'varindexed',    'modifier',      'modparameters',  'statement',   
  'statements',    'optspace',      'varvar',        'foraction',   
  'array',         'specialclose',  'attribute',     'exprs',       
  'function',      'doublequoted',  'method',        'params',      
  'objectchain',   'arrayindex',    'object',        'indexdef',    
  'varvarele',     'objectelement',  'modparameter',  'ifexpr',      
  'ifcond',        'lop',           'arrayelements',  'arrayelement',
  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG",
 /*   7 */ "template_element ::= PHPENDTAG",
 /*   8 */ "template_element ::= OTHER",
 /*   9 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  10 */ "literal ::= LITERALSTART LITERALEND",
 /*  11 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  12 */ "literal_elements ::= literal_elements literal_element",
 /*  13 */ "literal_elements ::=",
 /*  14 */ "literal_element ::= literal",
 /*  15 */ "literal_element ::= LITERAL",
 /*  16 */ "literal_element ::= PHPSTARTTAG",
 /*  17 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  18 */ "literal_element ::= PHPENDTAG",
 /*  19 */ "smartytag ::= LDEL value RDEL",
 /*  20 */ "smartytag ::= LDEL value attributes RDEL",
 /*  21 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  22 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  23 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  24 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  26 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  27 */ "smartytag ::= LDEL DOLLAR ID EQUAL ifexprs attributes RDEL",
 /*  28 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  30 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  31 */ "smartytag ::= LDEL varindexed EQUAL ifexprs attributes RDEL",
 /*  32 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  33 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  34 */ "smartytag ::= LDEL ID RDEL",
 /*  35 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  38 */ "smartytag ::= LDEL IF SPACE ifexprs RDEL",
 /*  39 */ "smartytag ::= LDEL IF UNIMATH ifexprs RDEL",
 /*  40 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  41 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexprs SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  42 */ "foraction ::= EQUAL expr",
 /*  43 */ "foraction ::= INCDEC",
 /*  44 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  45 */ "smartytag ::= LDEL FOR SPACE statement TO expr STEP expr RDEL",
 /*  46 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  47 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  48 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  49 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  50 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  51 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  52 */ "specialclose ::= IF",
 /*  53 */ "specialclose ::= FOR",
 /*  54 */ "specialclose ::= FOREACH",
 /*  55 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  56 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  57 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  58 */ "attributes ::= attributes attribute",
 /*  59 */ "attributes ::= attribute",
 /*  60 */ "attributes ::=",
 /*  61 */ "attribute ::= SPACE ID EQUAL ID",
 /*  62 */ "attribute ::= SPACE ID EQUAL expr",
 /*  63 */ "attribute ::= SPACE ID EQUAL ifexprs",
 /*  64 */ "attribute ::= SPACE ID EQUAL value",
 /*  65 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  66 */ "attribute ::= SPACE ID",
 /*  67 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  68 */ "statements ::= statement",
 /*  69 */ "statements ::= statements COMMA statement",
 /*  70 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  71 */ "expr ::= ID",
 /*  72 */ "expr ::= exprs",
 /*  73 */ "expr ::= DOLLAR ID COLON ID",
 /*  74 */ "expr ::= expr modifier modparameters",
 /*  75 */ "exprs ::= value",
 /*  76 */ "exprs ::= exprs MATH value",
 /*  77 */ "exprs ::= exprs UNIMATH value",
 /*  78 */ "exprs ::= exprs ANDSYM value",
 /*  79 */ "exprs ::= array",
 /*  80 */ "ternary ::= OPENP ifexprs CLOSEP QMARK expr COLON expr",
 /*  81 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  82 */ "value ::= variable",
 /*  83 */ "value ::= UNIMATH value",
 /*  84 */ "value ::= NOT value",
 /*  85 */ "value ::= TYPECAST value",
 /*  86 */ "value ::= variable INCDEC",
 /*  87 */ "value ::= INTEGER",
 /*  88 */ "value ::= INTEGER DOT INTEGER",
 /*  89 */ "value ::= BOOLEAN",
 /*  90 */ "value ::= NULL",
 /*  91 */ "value ::= function",
 /*  92 */ "value ::= OPENP expr CLOSEP",
 /*  93 */ "value ::= SINGLEQUOTESTRING",
 /*  94 */ "value ::= QUOTE doublequoted QUOTE",
 /*  95 */ "value ::= QUOTE QUOTE",
 /*  96 */ "value ::= ID DOUBLECOLON method",
 /*  97 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /*  98 */ "value ::= ID DOUBLECOLON method objectchain",
 /*  99 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /* 100 */ "value ::= ID DOUBLECOLON ID",
 /* 101 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /* 102 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 103 */ "value ::= smartytag",
 /* 104 */ "variable ::= varindexed",
 /* 105 */ "variable ::= DOLLAR varvar AT ID",
 /* 106 */ "variable ::= object",
 /* 107 */ "variable ::= HATCH ID HATCH",
 /* 108 */ "variable ::= HATCH variable HATCH",
 /* 109 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 110 */ "arrayindex ::= arrayindex indexdef",
 /* 111 */ "arrayindex ::=",
 /* 112 */ "indexdef ::= DOT DOLLAR varvar",
 /* 113 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 114 */ "indexdef ::= DOT ID",
 /* 115 */ "indexdef ::= DOT BOOLEAN",
 /* 116 */ "indexdef ::= DOT NULL",
 /* 117 */ "indexdef ::= DOT INTEGER",
 /* 118 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 119 */ "indexdef ::= OPENB ID CLOSEB",
 /* 120 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 121 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 122 */ "indexdef ::= OPENB CLOSEB",
 /* 123 */ "varvar ::= varvarele",
 /* 124 */ "varvar ::= varvar varvarele",
 /* 125 */ "varvarele ::= ID",
 /* 126 */ "varvarele ::= LDEL expr RDEL",
 /* 127 */ "object ::= varindexed objectchain",
 /* 128 */ "objectchain ::= objectelement",
 /* 129 */ "objectchain ::= objectchain objectelement",
 /* 130 */ "objectelement ::= PTR ID arrayindex",
 /* 131 */ "objectelement ::= PTR variable arrayindex",
 /* 132 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 133 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 134 */ "objectelement ::= PTR method",
 /* 135 */ "function ::= ID OPENP params CLOSEP",
 /* 136 */ "method ::= ID OPENP params CLOSEP",
 /* 137 */ "params ::= expr COMMA params",
 /* 138 */ "params ::= expr",
 /* 139 */ "params ::=",
 /* 140 */ "modifier ::= VERT AT ID",
 /* 141 */ "modifier ::= VERT ID",
 /* 142 */ "modparameters ::= modparameters modparameter",
 /* 143 */ "modparameters ::=",
 /* 144 */ "modparameter ::= COLON exprs",
 /* 145 */ "modparameter ::= COLON ID",
 /* 146 */ "ifexprs ::= ifexpr",
 /* 147 */ "ifexprs ::= NOT ifexprs",
 /* 148 */ "ifexprs ::= OPENP ifexprs CLOSEP",
 /* 149 */ "ifexpr ::= expr",
 /* 150 */ "ifexpr ::= expr ifcond expr",
 /* 151 */ "ifexpr ::= expr ISIN array",
 /* 152 */ "ifexpr ::= expr ISIN value",
 /* 153 */ "ifexpr ::= ifexprs lop ifexprs",
 /* 154 */ "ifexpr ::= ifexprs ISDIVBY ifexprs",
 /* 155 */ "ifexpr ::= ifexprs ISNOTDIVBY ifexprs",
 /* 156 */ "ifexpr ::= ifexprs ISEVEN",
 /* 157 */ "ifexpr ::= ifexprs ISNOTEVEN",
 /* 158 */ "ifexpr ::= ifexprs ISEVENBY ifexprs",
 /* 159 */ "ifexpr ::= ifexprs ISNOTEVENBY ifexprs",
 /* 160 */ "ifexpr ::= ifexprs ISODD",
 /* 161 */ "ifexpr ::= ifexprs ISNOTODD",
 /* 162 */ "ifexpr ::= ifexprs ISODDBY ifexprs",
 /* 163 */ "ifexpr ::= ifexprs ISNOTODDBY ifexprs",
 /* 164 */ "ifexpr ::= value INSTANCEOF ID",
 /* 165 */ "ifexpr ::= value INSTANCEOF value",
 /* 166 */ "ifcond ::= EQUALS",
 /* 167 */ "ifcond ::= NOTEQUALS",
 /* 168 */ "ifcond ::= GREATERTHAN",
 /* 169 */ "ifcond ::= LESSTHAN",
 /* 170 */ "ifcond ::= GREATEREQUAL",
 /* 171 */ "ifcond ::= LESSEQUAL",
 /* 172 */ "ifcond ::= IDENTITY",
 /* 173 */ "ifcond ::= NONEIDENTITY",
 /* 174 */ "ifcond ::= MOD",
 /* 175 */ "lop ::= LAND",
 /* 176 */ "lop ::= LOR",
 /* 177 */ "lop ::= LXOR",
 /* 178 */ "array ::= OPENB arrayelements CLOSEB",
 /* 179 */ "arrayelements ::= arrayelement",
 /* 180 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 181 */ "arrayelements ::=",
 /* 182 */ "arrayelement ::= value APTR expr",
 /* 183 */ "arrayelement ::= ID APTR expr",
 /* 184 */ "arrayelement ::= expr",
 /* 185 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 186 */ "doublequoted ::= doublequotedcontent",
 /* 187 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 188 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 189 */ "doublequotedcontent ::= DOLLARID",
 /* 190 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 191 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 192 */ "doublequotedcontent ::= smartytag",
 /* 193 */ "doublequotedcontent ::= OTHER",
 /* 194 */ "optspace ::= SPACE",
 /* 195 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 0 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 8 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 13 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 8 ),
  array( 'lhs' => 78, 'rhs' => 9 ),
  array( 'lhs' => 78, 'rhs' => 8 ),
  array( 'lhs' => 78, 'rhs' => 11 ),
  array( 'lhs' => 78, 'rhs' => 8 ),
  array( 'lhs' => 78, 'rhs' => 11 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 0 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 4 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 8 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 0 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 5 ),
  array( 'lhs' => 109, 'rhs' => 6 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 0 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        14 => 0,
        15 => 0,
        52 => 0,
        53 => 0,
        54 => 0,
        75 => 0,
        82 => 0,
        87 => 0,
        89 => 0,
        90 => 0,
        91 => 0,
        93 => 0,
        106 => 0,
        179 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        13 => 10,
        11 => 11,
        12 => 12,
        83 => 12,
        85 => 12,
        86 => 12,
        16 => 16,
        17 => 16,
        18 => 18,
        19 => 19,
        20 => 20,
        21 => 20,
        22 => 20,
        23 => 20,
        24 => 24,
        25 => 24,
        26 => 26,
        27 => 26,
        28 => 26,
        29 => 29,
        30 => 29,
        31 => 29,
        32 => 32,
        33 => 32,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        40 => 38,
        39 => 39,
        41 => 41,
        42 => 42,
        43 => 43,
        59 => 43,
        138 => 43,
        184 => 43,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 50,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        60 => 60,
        61 => 61,
        62 => 62,
        63 => 62,
        64 => 62,
        65 => 62,
        67 => 62,
        66 => 66,
        68 => 68,
        69 => 69,
        70 => 70,
        71 => 71,
        72 => 72,
        79 => 72,
        123 => 72,
        146 => 72,
        186 => 72,
        193 => 72,
        194 => 72,
        73 => 73,
        74 => 74,
        76 => 76,
        77 => 76,
        78 => 76,
        80 => 80,
        81 => 80,
        84 => 84,
        88 => 88,
        92 => 92,
        94 => 94,
        95 => 95,
        96 => 96,
        97 => 97,
        98 => 98,
        99 => 99,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        185 => 110,
        111 => 111,
        143 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        115 => 114,
        116 => 114,
        117 => 117,
        118 => 118,
        121 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        195 => 122,
        124 => 124,
        125 => 125,
        126 => 126,
        148 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        139 => 139,
        140 => 140,
        141 => 140,
        142 => 142,
        144 => 144,
        145 => 145,
        147 => 147,
        149 => 149,
        150 => 150,
        153 => 150,
        164 => 150,
        151 => 151,
        152 => 152,
        154 => 154,
        155 => 155,
        156 => 156,
        161 => 156,
        157 => 157,
        160 => 157,
        158 => 158,
        163 => 158,
        159 => 159,
        162 => 159,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        187 => 187,
        188 => 187,
        189 => 189,
        190 => 190,
        191 => 191,
        192 => 192,
    );
#line 82 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1955 "smarty_internal_templateparser.php"
#line 88 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1964 "smarty_internal_templateparser.php"
#line 96 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1974 "smarty_internal_templateparser.php"
#line 109 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('Smarty tags are not allowed inside &lt;?php ?> tags');
                                          }
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 1984 "smarty_internal_templateparser.php"
#line 119 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1987 "smarty_internal_templateparser.php"
#line 125 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('&lt;?php ?> tags can not be nested');
                                       }
				                               $this->allowed_php = true;
                                       $this->_retvalue = $this->compiler->processNocacheCode($this->yystack[$this->yyidx + 0]->minor, true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2004 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
				                               $this->allowed_php = false;
                                       $this->_retvalue = $this->compiler->processNocacheCode('?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2018 "smarty_internal_templateparser.php"
#line 156 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2026 "smarty_internal_templateparser.php"
#line 162 "smarty_internal_templateparser.y"
    function yy_r9(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2034 "smarty_internal_templateparser.php"
#line 174 "smarty_internal_templateparser.y"
    function yy_r10(){ $this->_retvalue = '';     }
#line 2037 "smarty_internal_templateparser.php"
#line 175 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2040 "smarty_internal_templateparser.php"
#line 177 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2043 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r16(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2046 "smarty_internal_templateparser.php"
#line 184 "smarty_internal_templateparser.y"
    function yy_r18(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2049 "smarty_internal_templateparser.php"
#line 192 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2052 "smarty_internal_templateparser.php"
#line 193 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2055 "smarty_internal_templateparser.php"
#line 204 "smarty_internal_templateparser.y"
    function yy_r24(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2058 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r26(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2061 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2064 "smarty_internal_templateparser.php"
#line 213 "smarty_internal_templateparser.y"
    function yy_r32(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2067 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2070 "smarty_internal_templateparser.php"
#line 217 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2073 "smarty_internal_templateparser.php"
#line 219 "smarty_internal_templateparser.y"
    function yy_r36(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2078 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r37(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2083 "smarty_internal_templateparser.php"
#line 227 "smarty_internal_templateparser.y"
    function yy_r38(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2086 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2089 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r41(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2093 "smarty_internal_templateparser.php"
#line 233 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2096 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r43(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2099 "smarty_internal_templateparser.php"
#line 235 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2102 "smarty_internal_templateparser.php"
#line 236 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -7]->minor,array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2105 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r46(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2109 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r47(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2113 "smarty_internal_templateparser.php"
#line 242 "smarty_internal_templateparser.y"
    function yy_r48(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2117 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r49(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2121 "smarty_internal_templateparser.php"
#line 248 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2124 "smarty_internal_templateparser.php"
#line 253 "smarty_internal_templateparser.y"
    function yy_r55(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2127 "smarty_internal_templateparser.php"
#line 254 "smarty_internal_templateparser.y"
    function yy_r56(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2132 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r57(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2135 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r58(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2138 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r60(){ $this->_retvalue = array();    }
#line 2141 "smarty_internal_templateparser.php"
#line 272 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2144 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r62(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2147 "smarty_internal_templateparser.php"
#line 277 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2150 "smarty_internal_templateparser.php"
#line 284 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2153 "smarty_internal_templateparser.php"
#line 285 "smarty_internal_templateparser.y"
    function yy_r69(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2156 "smarty_internal_templateparser.php"
#line 287 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2159 "smarty_internal_templateparser.php"
#line 293 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2162 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r72(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2165 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r73(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2168 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r74(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2171 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r76(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2174 "smarty_internal_templateparser.php"
#line 315 "smarty_internal_templateparser.y"
    function yy_r80(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2177 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r84(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2180 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r88(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2183 "smarty_internal_templateparser.php"
#line 339 "smarty_internal_templateparser.y"
    function yy_r92(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2186 "smarty_internal_templateparser.php"
#line 343 "smarty_internal_templateparser.y"
    function yy_r94(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2195 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = "''";     }
#line 2198 "smarty_internal_templateparser.php"
#line 352 "smarty_internal_templateparser.y"
    function yy_r96(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2201 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2204 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2207 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2210 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2213 "smarty_internal_templateparser.php"
#line 360 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2216 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2219 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2222 "smarty_internal_templateparser.php"
#line 373 "smarty_internal_templateparser.y"
    function yy_r104(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2226 "smarty_internal_templateparser.php"
#line 376 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2229 "smarty_internal_templateparser.php"
#line 380 "smarty_internal_templateparser.y"
    function yy_r107(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2232 "smarty_internal_templateparser.php"
#line 381 "smarty_internal_templateparser.y"
    function yy_r108(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2235 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r109(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2238 "smarty_internal_templateparser.php"
#line 390 "smarty_internal_templateparser.y"
    function yy_r110(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2241 "smarty_internal_templateparser.php"
#line 392 "smarty_internal_templateparser.y"
    function yy_r111(){return;    }
#line 2244 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r112(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2247 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r113(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2250 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2253 "smarty_internal_templateparser.php"
#line 404 "smarty_internal_templateparser.y"
    function yy_r117(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2256 "smarty_internal_templateparser.php"
#line 405 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2259 "smarty_internal_templateparser.php"
#line 407 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2262 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2265 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r122(){$this->_retvalue = '';    }
#line 2268 "smarty_internal_templateparser.php"
#line 420 "smarty_internal_templateparser.y"
    function yy_r124(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2271 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2274 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2277 "smarty_internal_templateparser.php"
#line 430 "smarty_internal_templateparser.y"
    function yy_r127(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2281 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r128(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2284 "smarty_internal_templateparser.php"
#line 435 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2287 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r130(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2290 "smarty_internal_templateparser.php"
#line 438 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2293 "smarty_internal_templateparser.php"
#line 439 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2296 "smarty_internal_templateparser.php"
#line 440 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2299 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2302 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r135(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2311 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r136(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2314 "smarty_internal_templateparser.php"
#line 463 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2317 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r139(){ return;    }
#line 2320 "smarty_internal_templateparser.php"
#line 472 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2323 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r142(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2326 "smarty_internal_templateparser.php"
#line 489 "smarty_internal_templateparser.y"
    function yy_r144(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2329 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r145(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2332 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r147(){$this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2335 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r149(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2338 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r150(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2341 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2344 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2347 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2350 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2353 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2356 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2359 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2362 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2365 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r165(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2368 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r166(){$this->_retvalue = '==';    }
#line 2371 "smarty_internal_templateparser.php"
#line 521 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '!=';    }
#line 2374 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '>';    }
#line 2377 "smarty_internal_templateparser.php"
#line 523 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '<';    }
#line 2380 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '>=';    }
#line 2383 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '<=';    }
#line 2386 "smarty_internal_templateparser.php"
#line 526 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '===';    }
#line 2389 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '!==';    }
#line 2392 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '%';    }
#line 2395 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '&&';    }
#line 2398 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '||';    }
#line 2401 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = ' XOR ';    }
#line 2404 "smarty_internal_templateparser.php"
#line 537 "smarty_internal_templateparser.y"
    function yy_r178(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2407 "smarty_internal_templateparser.php"
#line 539 "smarty_internal_templateparser.y"
    function yy_r180(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2410 "smarty_internal_templateparser.php"
#line 540 "smarty_internal_templateparser.y"
    function yy_r181(){ return;     }
#line 2413 "smarty_internal_templateparser.php"
#line 541 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2416 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2419 "smarty_internal_templateparser.php"
#line 551 "smarty_internal_templateparser.y"
    function yy_r187(){$this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;    }
#line 2422 "smarty_internal_templateparser.php"
#line 553 "smarty_internal_templateparser.y"
    function yy_r189(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2425 "smarty_internal_templateparser.php"
#line 554 "smarty_internal_templateparser.y"
    function yy_r190(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."'; $this->compiler->has_variable_string = true;
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;
                                                                }
                                                                   }
#line 2433 "smarty_internal_templateparser.php"
#line 560 "smarty_internal_templateparser.y"
    function yy_r191(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2436 "smarty_internal_templateparser.php"
#line 561 "smarty_internal_templateparser.y"
    function yy_r192(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2439 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 72 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2502 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 64 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2520 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>
