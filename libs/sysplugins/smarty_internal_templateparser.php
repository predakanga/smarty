<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->block_nesting_level = 0;
				$this->is_xml = false;
				$this->asp_tags = (ini_get('asp_tags') != '0');
				$this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 130 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_SPACE                          = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_INCDEC                         = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_LDELSLASH                      = 31;
    const TP_INTEGER                        = 32;
    const TP_COMMA                          = 33;
    const TP_MATH                           = 34;
    const TP_UNIMATH                        = 35;
    const TP_ANDSYM                         = 36;
    const TP_ISIN                           = 37;
    const TP_ISDIVBY                        = 38;
    const TP_ISNOTDIVBY                     = 39;
    const TP_ISEVEN                         = 40;
    const TP_ISNOTEVEN                      = 41;
    const TP_ISEVENBY                       = 42;
    const TP_ISNOTEVENBY                    = 43;
    const TP_ISODD                          = 44;
    const TP_ISNOTODD                       = 45;
    const TP_ISODDBY                        = 46;
    const TP_ISNOTODDBY                     = 47;
    const TP_INSTANCEOF                     = 48;
    const TP_OPENP                          = 49;
    const TP_CLOSEP                         = 50;
    const TP_QMARK                          = 51;
    const TP_NOT                            = 52;
    const TP_TYPECAST                       = 53;
    const TP_HEX                            = 54;
    const TP_DOT                            = 55;
    const TP_SINGLEQUOTESTRING              = 56;
    const TP_DOUBLECOLON                    = 57;
    const TP_AT                             = 58;
    const TP_HATCH                          = 59;
    const TP_OPENB                          = 60;
    const TP_CLOSEB                         = 61;
    const TP_EQUALS                         = 62;
    const TP_NOTEQUALS                      = 63;
    const TP_GREATERTHAN                    = 64;
    const TP_LESSTHAN                       = 65;
    const TP_GREATEREQUAL                   = 66;
    const TP_LESSEQUAL                      = 67;
    const TP_IDENTITY                       = 68;
    const TP_NONEIDENTITY                   = 69;
    const TP_MOD                            = 70;
    const TP_LAND                           = 71;
    const TP_LOR                            = 72;
    const TP_LXOR                           = 73;
    const TP_QUOTE                          = 74;
    const TP_BACKTICK                       = 75;
    const TP_DOLLARID                       = 76;
    const YY_NO_ACTION = 560;
    const YY_ACCEPT_ACTION = 559;
    const YY_ERROR_ACTION = 558;

    const YY_SZ_ACTTAB = 2127;
static public $yy_action = array(
 /*     0 */   184,   22,  258,  151,  302,  299,  298,  294,  293,  295,
 /*    10 */   296,  297,  304,  156,  165,  321,    6,  269,  163,  338,
 /*    20 */     8,  183,  207,  171,  209,  173,   25,   27,  107,  123,
 /*    30 */    13,  270,  193,   42,   47,   46,   39,   26,   30,  345,
 /*    40 */   346,   18,   15,  347,  354,   19,   17,  311,  306,    9,
 /*    50 */    20,  310,  427,  273,   29,  156,  312,  315,  427,  470,
 /*    60 */   236,  355,  362,  363,  364,  365,  361,  360,  356,  357,
 /*    70 */   358,  359,  342,  184,  266,  300,  301,  303,  222,    8,
 /*    80 */   196,   52,  140,  122,  105,    8,  136,  107,  319,  165,
 /*    90 */   341,  133,  147,  107,  183,  320,  350,  344,  171,  325,
 /*   100 */   269,   25,   27,  167,  210,  269,   42,   47,   46,   39,
 /*   110 */    26,   30,  345,  346,   18,   15,  347,  354,   19,   17,
 /*   120 */   559,   85,  244,  301,  303,    8,   20,   48,   20,  273,
 /*   130 */    37,  273,   37,  107,  355,  362,  363,  364,  365,  361,
 /*   140 */   360,  356,  357,  358,  359,  342,  184,  184,  266,  154,
 /*   150 */    20,  275,  187,  273,  196,   51,  352,  124,  105,   11,
 /*   160 */   132,  167,  340,  269,  341,  194,  213,  183,  183,  226,
 /*   170 */   350,  344,   31,  325,   20,  276,  138,  273,  277,   42,
 /*   180 */    47,   46,   39,   26,   30,  345,  346,   18,   15,  347,
 /*   190 */   354,   19,   17,  184,   34,    8,  220,  103,   20,  115,
 /*   200 */   274,  273,   21,  107,  104,  284,  183,  355,  362,  363,
 /*   210 */   364,  365,  361,  360,  356,  357,  358,  359,  342,  316,
 /*   220 */    20,  237,  280,  273,  166,  338,   42,   47,   46,   39,
 /*   230 */    26,   30,  345,  346,   18,   15,  347,  354,   19,   17,
 /*   240 */   184,  227,    2,  328,   33,   20,  118,  155,  273,  183,
 /*   250 */   106,  198,  271,  134,  355,  362,  363,  364,  365,  361,
 /*   260 */   360,  356,  357,  358,  359,  342,  307,  269,  271,  142,
 /*   270 */   232,  277,  183,   42,   47,   46,   39,   26,   30,  345,
 /*   280 */   346,   18,   15,  347,  354,   19,   17,  184,  226,  339,
 /*   290 */   426,  327,   89,  111,  184,  183,  183,  183,   48,  271,
 /*   300 */   132,  355,  362,  363,  364,  365,  361,  360,  356,  357,
 /*   310 */   358,  359,  342,  322,  366,  183,  159,  338,  259,  183,
 /*   320 */    42,   47,   46,   39,   26,   30,  345,  346,   18,   15,
 /*   330 */   347,  354,   19,   17,  184,  173,  190,  331,  318,  329,
 /*   340 */    13,   92,  217,  183,  183,  183,  119,  224,  355,  362,
 /*   350 */   363,  364,  365,  361,  360,  356,  357,  358,  359,  342,
 /*   360 */   314,  325,  313,  290,    4,   16,   10,   42,   47,   46,
 /*   370 */    39,   26,   30,  345,  346,   18,   15,  347,  354,   19,
 /*   380 */    17,    8,  324,   48,  429,  183,  335,  218,  183,  107,
 /*   390 */   429,  233,  183,  257,  261,  355,  362,  363,  364,  365,
 /*   400 */   361,  360,  356,  357,  358,  359,  342,  184,  266,  215,
 /*   410 */   223,  137,  177,  330,  196,   68,   48,  243,  105,  183,
 /*   420 */   148,   28,  248,  165,  341,  269,  202,   94,  230,  157,
 /*   430 */   350,  344,  171,  325,  269,   25,   27,  251,  160,  277,
 /*   440 */    42,   47,   46,   39,   26,   30,  345,  346,   18,   15,
 /*   450 */   347,  354,   19,   17,  216,  323,   20,  199,   23,  273,
 /*   460 */   308,  183,  132,  158,  233,   84,  183,  351,  355,  362,
 /*   470 */   363,  364,  365,  361,  360,  356,  357,  358,  359,  342,
 /*   480 */   184,  266,   41,  268,  152,   99,  121,  102,   53,  183,
 /*   490 */   120,   98,   12,  145,  247,  262,   88,  341,  269,  103,
 /*   500 */   183,  334,  183,  350,  344,  171,  325,  269,   25,   27,
 /*   510 */   203,  180,  271,   42,   47,   46,   39,   26,   30,  345,
 /*   520 */   346,   18,   15,  347,  354,   19,   17,  184,  286,  109,
 /*   530 */   337,  267,  336,  224,  113,  125,  183,  183,  183,  206,
 /*   540 */   127,  355,  362,  363,  364,  365,  361,  360,  356,  357,
 /*   550 */   358,  359,  342,  205,  283,   20,   20,  285,  225,  191,
 /*   560 */    42,   47,   46,   39,   26,   30,  345,  346,   18,   15,
 /*   570 */   347,  354,   19,   17,   20,  343,  264,  185,   35,  199,
 /*   580 */    48,  253,  125,   12,  291,  289,  116,  256,  355,  362,
 /*   590 */   363,  364,  365,  361,  360,  356,  357,  358,  359,  342,
 /*   600 */   184,  266,  281,  164,  126,   99,  128,  101,   50,   28,
 /*   610 */   120,   98,    9,  153,    7,   32,  165,  341,  283,  245,
 /*   620 */   283,  183,  192,  350,  344,  171,  325,  269,   25,   27,
 /*   630 */    87,  239,  282,   42,   47,   46,   39,   26,   30,  345,
 /*   640 */   346,   18,   15,  347,  354,   19,   17,  184,  260,    5,
 /*   650 */    41,  280,  132,  277,  309,   40,  161,  254,  112,  149,
 /*   660 */   130,  355,  362,  363,  364,  365,  361,  360,  356,  357,
 /*   670 */   358,  359,  342,  269,  283,  241,  208,  270,  195,  242,
 /*   680 */    42,   47,   46,   39,   26,   30,  345,  346,   18,   15,
 /*   690 */   347,  354,   19,   17,  326,  167,  184,  305,   90,   95,
 /*   700 */    14,  146,  312,  312,  312,  312,  312,  252,  355,  362,
 /*   710 */   363,  364,  365,  361,  360,  356,  357,  358,  359,  342,
 /*   720 */   184,  266,  312,   20,  238,  222,  273,  196,   66,  312,
 /*   730 */   312,  105,  204,  139,  131,  170,   91,  341,  197,  312,
 /*   740 */   312,  312,  312,  350,  344,  171,  325,  269,  283,  312,
 /*   750 */   312,  312,  312,   42,   47,   46,   39,   26,   30,  345,
 /*   760 */   346,   18,   15,  347,  354,   19,   17,  312,  312,  312,
 /*   770 */   312,  312,  312,  312,  312,  312,  312,  312,  312,  312,
 /*   780 */   312,  355,  362,  363,  364,  365,  361,  360,  356,  357,
 /*   790 */   358,  359,  342,  184,  266,  312,  312,  312,  222,  266,
 /*   800 */   196,   72,  312,  222,  105,  196,   59,  312,  168,  105,
 /*   810 */   341,  144,  312,  312,   93,  341,  350,  344,  312,  325,
 /*   820 */   312,  350,  344,  171,  325,  269,   42,   47,   46,   39,
 /*   830 */    26,   30,  345,  346,   18,   15,  347,  354,   19,   17,
 /*   840 */   312,  312,  312,  312,  312,  312,  312,  312,  312,  312,
 /*   850 */   312,  312,  312,  312,  355,  362,  363,  364,  365,  361,
 /*   860 */   360,  356,  357,  358,  359,  342,  184,  266,  312,  312,
 /*   870 */   312,  222,  266,  196,   76,  312,  222,  105,  196,   54,
 /*   880 */   312,  240,  105,  341,  100,  312,  312,  312,  341,  350,
 /*   890 */   344,  312,  325,  312,  350,  344,  312,  325,  283,   42,
 /*   900 */    47,   46,   39,   26,   30,  345,  346,   18,   15,  347,
 /*   910 */   354,   19,   17,  312,  312,  312,  312,  312,  312,  312,
 /*   920 */   312,  312,  312,  312,  312,  312,  312,  355,  362,  363,
 /*   930 */   364,  365,  361,  360,  356,  357,  358,  359,  342,  184,
 /*   940 */   184,  266,  150,  312,  312,  222,  312,  196,   65,  312,
 /*   950 */   184,  105,  312,   96,  169,  272,  269,  341,  312,  221,
 /*   960 */   312,  183,  162,  350,  344,  426,  325,  283,  312,  312,
 /*   970 */   312,  183,   42,   47,   46,   39,   26,   30,  345,  346,
 /*   980 */    18,   15,  347,  354,   19,   17,  312,  312,  312,  312,
 /*   990 */   312,  312,  312,  312,  312,  312,  312,  312,  312,  312,
 /*  1000 */   355,  362,  363,  364,  365,  361,  360,  356,  357,  358,
 /*  1010 */   359,  342,  184,  266,  312,  312,  141,  222,  266,  196,
 /*  1020 */    55,  312,  222,  105,  196,   75,  312,  292,  105,  341,
 /*  1030 */   269,  312,  312,  312,  341,  350,  344,  312,  325,  312,
 /*  1040 */   350,  344,  312,  325,  312,   42,   47,   46,   39,   26,
 /*  1050 */    30,  345,  346,   18,   15,  347,  354,   19,   17,  184,
 /*  1060 */   312,  312,  312,  312,  312,  312,  312,  312,  312,  312,
 /*  1070 */   312,  129,  110,  355,  362,  363,  364,  365,  361,  360,
 /*  1080 */   356,  357,  358,  359,  342,  283,  283,  312,  312,  312,
 /*  1090 */   312,  312,   42,   47,   46,   39,   26,   30,  345,  346,
 /*  1100 */    18,   15,  347,  354,   19,   17,  312,  312,  312,  312,
 /*  1110 */   312,  312,  312,  312,  312,  312,  312,  312,  312,  312,
 /*  1120 */   355,  362,  363,  364,  365,  361,  360,  356,  357,  358,
 /*  1130 */   359,  342,  143,  135,   97,  312,    6,  312,  114,  175,
 /*  1140 */   312,  312,  207,  312,  209,  167,  269,  269,  283,  123,
 /*  1150 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1160 */   312,  312,  266,  312,  312,  312,  182,  312,  196,   82,
 /*  1170 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1180 */    89,    1,  263,  312,  350,  344,    6,  325,  114,  178,
 /*  1190 */   312,  312,  207,  312,  209,   86,  188,  265,  312,  123,
 /*  1200 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1210 */   312,  312,  266,  312,  312,  312,  182,  312,  196,   82,
 /*  1220 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1230 */    89,    1,  312,  312,  350,  344,    6,  325,  106,  178,
 /*  1240 */   312,  312,  207,  312,  209,   86,  231,  229,  312,  123,
 /*  1250 */   231,    3,  193,  200,  312,    3,   44,  207,  312,  209,
 /*  1260 */   312,  207,  312,  209,  123,  312,  312,  193,  123,  312,
 /*  1270 */    24,  193,  312,   43,   45,  288,  211,  348,  312,  312,
 /*  1280 */    89,    1,  312,  312,  312,  312,    6,  312,  106,  174,
 /*  1290 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1300 */   312,  312,  193,  186,  312,  312,   44,  312,  312,  312,
 /*  1310 */   332,   36,  228,  312,  333,   36,  228,  312,  312,  312,
 /*  1320 */    24,  312,  312,   43,   45,  288,  211,  348,  312,  312,
 /*  1330 */    89,    1,  312,  312,  312,  312,    6,  312,  114,  176,
 /*  1340 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1350 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1360 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   81,
 /*  1370 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1380 */    89,    1,  312,  312,  350,  344,    6,  325,  117,   83,
 /*  1390 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1400 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1410 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   61,
 /*  1420 */    38,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1430 */    89,    1,  312,  312,  350,  344,    6,  325,  114,  178,
 /*  1440 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1450 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1460 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   73,
 /*  1470 */    38,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1480 */    89,    1,  312,  312,  350,  344,    6,  325,  108,  178,
 /*  1490 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1500 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1510 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   74,
 /*  1520 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1530 */    89,    1,  312,  312,  350,  344,    6,  325,  114,  172,
 /*  1540 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1550 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1560 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   58,
 /*  1570 */    38,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1580 */    89,    1,  312,  312,  350,  344,    6,  325,  106,  178,
 /*  1590 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1600 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1610 */   312,  312,  266,  312,  312,  312,  222,  312,  181,   60,
 /*  1620 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1630 */    89,  312,  312,  312,  350,  344,    6,  325,  106,  179,
 /*  1640 */   312,  312,  207,  312,  209,   86,  312,  312,  312,  123,
 /*  1650 */   312,  312,  193,  200,  312,  312,   44,  312,  312,  312,
 /*  1660 */   312,  312,  266,  312,  312,  312,  222,  312,  196,   64,
 /*  1670 */    24,  312,  105,   43,   45,  288,  211,  348,  341,  312,
 /*  1680 */    89,  312,  312,  312,  350,  344,  312,  325,  312,  312,
 /*  1690 */   312,  312,  312,  312,  189,   86,  312,  312,  312,  312,
 /*  1700 */   266,  312,  312,  312,  222,  266,  196,   49,  312,  222,
 /*  1710 */   105,  196,   64,  312,  312,  105,  341,  312,  312,  312,
 /*  1720 */   312,  341,  350,  344,  312,  325,  312,  350,  344,  312,
 /*  1730 */   325,  312,  312,  312,  266,  312,  312,  255,  222,  312,
 /*  1740 */   196,   64,  312,  312,  105,  312,  312,  312,  266,  312,
 /*  1750 */   341,  312,  222,  312,  196,   64,  350,  344,  105,  325,
 /*  1760 */   312,  312,  312,  312,  341,  312,  212,  312,  312,  312,
 /*  1770 */   350,  344,  312,  325,  312,  312,  312,  266,  312,  312,
 /*  1780 */   219,  222,  266,  196,   63,  312,  222,  105,  196,   70,
 /*  1790 */   312,  312,  105,  341,  312,  312,  312,  312,  341,  350,
 /*  1800 */   344,  312,  325,  312,  350,  344,  312,  325,  312,  266,
 /*  1810 */   312,  312,  312,  222,  312,  196,   77,  312,  312,  105,
 /*  1820 */   266,  312,  312,  312,  222,  341,  196,   62,  312,  312,
 /*  1830 */   105,  350,  344,  312,  325,  312,  341,  312,  312,  312,
 /*  1840 */   266,  312,  350,  344,  222,  325,  196,   80,  266,  312,
 /*  1850 */   105,  312,  222,  312,  196,   78,  341,  312,  105,  312,
 /*  1860 */   312,  312,  350,  344,  341,  325,  312,  312,  266,  312,
 /*  1870 */   350,  344,  222,  325,  196,   69,  312,  312,  105,  312,
 /*  1880 */   312,  312,  266,  312,  341,  312,  222,  312,  196,   57,
 /*  1890 */   350,  344,  105,  325,  312,  312,  312,  312,  341,  312,
 /*  1900 */   312,  312,  266,  312,  350,  344,  222,  325,  196,   56,
 /*  1910 */   312,  312,  105,  266,  312,  312,  312,  222,  341,  196,
 /*  1920 */    71,  312,  312,  105,  350,  344,  312,  325,  312,  341,
 /*  1930 */   312,  312,  312,  312,  312,  350,  344,  266,  325,  312,
 /*  1940 */   312,  222,  312,  196,   79,  266,  312,  105,  312,  222,
 /*  1950 */   312,  196,   67,  341,  312,  105,  312,  312,  312,  350,
 /*  1960 */   344,  341,  325,  312,  312,  312,  312,  350,  344,  312,
 /*  1970 */   325,  266,  312,  312,  312,  250,  312,  196,  312,  312,
 /*  1980 */   312,  105,  312,  312,  312,  312,  312,  249,  312,  312,
 /*  1990 */   312,  266,  312,  350,  344,  349,  325,  196,  312,  266,
 /*  2000 */   312,  105,  312,  201,  312,  196,  312,  353,  312,  105,
 /*  2010 */   312,  312,  312,  350,  344,  214,  325,  312,  312,  266,
 /*  2020 */   312,  350,  344,  279,  325,  196,  266,  312,  312,  105,
 /*  2030 */   246,  312,  196,  266,  312,  312,  105,  287,  312,  196,
 /*  2040 */   312,  350,  344,  105,  325,  312,  312,  312,  350,  344,
 /*  2050 */   312,  325,  312,  266,  312,  350,  344,  234,  325,  196,
 /*  2060 */   312,  312,  312,  105,  312,  312,  312,  312,  312,  312,
 /*  2070 */   312,  312,  312,  266,  312,  350,  344,  278,  325,  196,
 /*  2080 */   312,  266,  312,  105,  312,  235,  312,  196,  312,  312,
 /*  2090 */   312,  105,  312,  312,  312,  350,  344,  312,  325,  312,
 /*  2100 */   312,  266,  312,  350,  344,  317,  325,  196,  312,  312,
 /*  2110 */   312,  105,  312,  312,  312,  312,  312,  312,  312,  312,
 /*  2120 */   312,  312,  312,  350,  344,  312,  325,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   30,   61,   86,    3,    4,    5,    6,    7,    8,
 /*    10 */     9,   10,   11,   12,   89,   16,   15,  100,  110,  111,
 /*    20 */    49,   22,   21,   98,   23,   55,  101,  102,   57,   28,
 /*    30 */    60,  114,   31,   34,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,    4,    5,   19,
 /*    50 */    15,    8,   16,   18,   19,   12,   13,   14,   22,   29,
 /*    60 */    25,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,    1,   81,   80,   81,   82,   85,   49,
 /*    80 */    87,   88,  107,   90,   91,   49,   86,   57,   16,   89,
 /*    90 */    97,   86,  107,   57,   22,   16,  103,  104,   98,  106,
 /*   100 */   100,  101,  102,   98,   29,  100,   34,   35,   36,   37,
 /*   110 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   120 */    78,   79,   80,   81,   82,   49,   15,   48,   15,   18,
 /*   130 */    19,   18,   19,   57,   62,   63,   64,   65,   66,   67,
 /*   140 */    68,   69,   70,   71,   72,   73,    1,    1,   81,   86,
 /*   150 */    15,   16,   85,   18,   87,   88,   18,   90,   91,   19,
 /*   160 */    20,   98,   16,  100,   97,   30,   20,   22,   22,   58,
 /*   170 */   103,  104,   27,  106,   15,   16,  107,   18,  109,   34,
 /*   180 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   190 */    45,   46,   47,    1,    2,   49,   58,   57,   15,   17,
 /*   200 */    16,   18,   15,   57,   17,   18,   22,   62,   63,   64,
 /*   210 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   32,
 /*   220 */    15,   16,  108,   18,  110,  111,   34,   35,   36,   37,
 /*   230 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   240 */     1,   58,   33,   16,   15,   15,   17,   18,   18,   22,
 /*   250 */    17,   18,   25,   86,   62,   63,   64,   65,   66,   67,
 /*   260 */    68,   69,   70,   71,   72,   73,   16,  100,   25,  107,
 /*   270 */    61,  109,   22,   34,   35,   36,   37,   38,   39,   40,
 /*   280 */    41,   42,   43,   44,   45,   46,   47,    1,   58,   16,
 /*   290 */    16,   16,   59,   17,    1,   22,   22,   22,   48,   25,
 /*   300 */    20,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   310 */    71,   72,   73,   16,   75,   22,  110,  111,   75,   22,
 /*   320 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   330 */    44,   45,   46,   47,    1,   55,   50,   16,   16,   16,
 /*   340 */    60,   99,   87,   22,   22,   22,   91,    2,   62,   63,
 /*   350 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   360 */    82,  106,   84,   32,   19,   30,   33,   34,   35,   36,
 /*   370 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   380 */    47,   49,   16,   48,   16,   22,   16,   55,   22,   57,
 /*   390 */    22,   81,   22,   61,   50,   62,   63,   64,   65,   66,
 /*   400 */    67,   68,   69,   70,   71,   72,   73,    1,   81,   17,
 /*   410 */    18,   86,   85,   16,   87,   88,   48,   90,   91,   22,
 /*   420 */    86,   19,   16,   89,   97,  100,   96,  117,  118,   24,
 /*   430 */   103,  104,   98,  106,  100,  101,  102,   59,   33,  109,
 /*   440 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   450 */    44,   45,   46,   47,   18,   16,   15,   55,   15,   18,
 /*   460 */    16,   22,   20,   99,   81,   18,   22,   18,   62,   63,
 /*   470 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   480 */     1,   81,    2,   16,   86,   85,   22,   87,   88,   22,
 /*   490 */    90,   91,   49,   86,   16,   16,   89,   97,  100,   57,
 /*   500 */    22,  118,   22,  103,  104,   98,  106,  100,  101,  102,
 /*   510 */    92,   93,   25,   34,   35,   36,   37,   38,   39,   40,
 /*   520 */    41,   42,   43,   44,   45,   46,   47,    1,  105,   17,
 /*   530 */    16,   16,   16,    2,   17,  112,   22,   22,   22,   18,
 /*   540 */    95,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   550 */    71,   72,   73,   32,  109,   15,   15,   18,   18,   18,
 /*   560 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   570 */    44,   45,   46,   47,   15,  105,   50,   18,   26,   55,
 /*   580 */    48,   59,  112,   49,   16,   32,   17,   50,   62,   63,
 /*   590 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   600 */     1,   81,   18,   18,   95,   85,   95,   87,   88,   19,
 /*   610 */    90,   91,   19,   86,   22,   51,   89,   97,  109,   16,
 /*   620 */   109,   22,   18,  103,  104,   98,  106,  100,  101,  102,
 /*   630 */    18,   16,   18,   34,   35,   36,   37,   38,   39,   40,
 /*   640 */    41,   42,   43,   44,   45,   46,   47,    1,   50,   49,
 /*   650 */     2,  108,   20,  109,  100,   22,   99,  112,   17,   86,
 /*   660 */    95,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   670 */    71,   72,   73,  100,  109,   22,   94,  114,   29,   92,
 /*   680 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   690 */    44,   45,   46,   47,  111,   98,    1,   13,  107,   83,
 /*   700 */    94,  107,  119,  119,  119,  119,  119,   61,   62,   63,
 /*   710 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   720 */     1,   81,  119,   15,   16,   85,   18,   87,   88,  119,
 /*   730 */   119,   91,   92,   86,   95,   16,   89,   97,   30,  119,
 /*   740 */   119,  119,  119,  103,  104,   98,  106,  100,  109,  119,
 /*   750 */   119,  119,  119,   34,   35,   36,   37,   38,   39,   40,
 /*   760 */    41,   42,   43,   44,   45,   46,   47,  119,  119,  119,
 /*   770 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*   780 */   119,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   790 */    71,   72,   73,    1,   81,  119,  119,  119,   85,   81,
 /*   800 */    87,   88,  119,   85,   91,   87,   88,  119,   16,   91,
 /*   810 */    97,   86,  119,  119,   89,   97,  103,  104,  119,  106,
 /*   820 */   119,  103,  104,   98,  106,  100,   34,   35,   36,   37,
 /*   830 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   840 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*   850 */   119,  119,  119,  119,   62,   63,   64,   65,   66,   67,
 /*   860 */    68,   69,   70,   71,   72,   73,    1,   81,  119,  119,
 /*   870 */   119,   85,   81,   87,   88,  119,   85,   91,   87,   88,
 /*   880 */   119,   16,   91,   97,   95,  119,  119,  119,   97,  103,
 /*   890 */   104,  119,  106,  119,  103,  104,  119,  106,  109,   34,
 /*   900 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   910 */    45,   46,   47,  119,  119,  119,  119,  119,  119,  119,
 /*   920 */   119,  119,  119,  119,  119,  119,  119,   62,   63,   64,
 /*   930 */    65,   66,   67,   68,   69,   70,   71,   72,   73,    1,
 /*   940 */     1,   81,   86,  119,  119,   85,  119,   87,   88,  119,
 /*   950 */     1,   91,  119,   95,   98,   16,  100,   97,  119,   20,
 /*   960 */   119,   22,   24,  103,  104,   16,  106,  109,  119,  119,
 /*   970 */   119,   22,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   980 */    42,   43,   44,   45,   46,   47,  119,  119,  119,  119,
 /*   990 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  1000 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*  1010 */    72,   73,    1,   81,  119,  119,   86,   85,   81,   87,
 /*  1020 */    88,  119,   85,   91,   87,   88,  119,   16,   91,   97,
 /*  1030 */   100,  119,  119,  119,   97,  103,  104,  119,  106,  119,
 /*  1040 */   103,  104,  119,  106,  119,   34,   35,   36,   37,   38,
 /*  1050 */    39,   40,   41,   42,   43,   44,   45,   46,   47,    1,
 /*  1060 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  1070 */   119,   95,   95,   62,   63,   64,   65,   66,   67,   68,
 /*  1080 */    69,   70,   71,   72,   73,  109,  109,  119,  119,  119,
 /*  1090 */   119,  119,   34,   35,   36,   37,   38,   39,   40,   41,
 /*  1100 */    42,   43,   44,   45,   46,   47,  119,  119,  119,  119,
 /*  1110 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  1120 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*  1130 */    72,   73,   86,   86,   95,  119,   15,  119,   17,   18,
 /*  1140 */   119,  119,   21,  119,   23,   98,  100,  100,  109,   28,
 /*  1150 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1160 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1170 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1180 */    59,   60,   61,  119,  103,  104,   15,  106,   17,   18,
 /*  1190 */   119,  119,   21,  119,   23,   74,  115,  116,  119,   28,
 /*  1200 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1210 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1220 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1230 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1240 */   119,  119,   21,  119,   23,   74,   10,  116,  119,   28,
 /*  1250 */    10,   15,   31,   32,  119,   15,   35,   21,  119,   23,
 /*  1260 */   119,   21,  119,   23,   28,  119,  119,   31,   28,  119,
 /*  1270 */    49,   31,  119,   52,   53,   54,   55,   56,  119,  119,
 /*  1280 */    59,   60,  119,  119,  119,  119,   15,  119,   17,   18,
 /*  1290 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1300 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1310 */    74,   75,   76,  119,   74,   75,   76,  119,  119,  119,
 /*  1320 */    49,  119,  119,   52,   53,   54,   55,   56,  119,  119,
 /*  1330 */    59,   60,  119,  119,  119,  119,   15,  119,   17,   18,
 /*  1340 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1350 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1360 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1370 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1380 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1390 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1400 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1410 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1420 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1430 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1440 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1450 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1460 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1470 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1480 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1490 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1500 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1510 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1520 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1530 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1540 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1550 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1560 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1570 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1580 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1590 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1600 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1610 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1620 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1630 */    59,  119,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1640 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1650 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1660 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1670 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1680 */    59,  119,  119,  119,  103,  104,  119,  106,  119,  119,
 /*  1690 */   119,  119,  119,  119,  113,   74,  119,  119,  119,  119,
 /*  1700 */    81,  119,  119,  119,   85,   81,   87,   88,  119,   85,
 /*  1710 */    91,   87,   88,  119,  119,   91,   97,  119,  119,  119,
 /*  1720 */   119,   97,  103,  104,  119,  106,  119,  103,  104,  119,
 /*  1730 */   106,  119,  119,  119,   81,  119,  119,  113,   85,  119,
 /*  1740 */    87,   88,  119,  119,   91,  119,  119,  119,   81,  119,
 /*  1750 */    97,  119,   85,  119,   87,   88,  103,  104,   91,  106,
 /*  1760 */   119,  119,  119,  119,   97,  119,  113,  119,  119,  119,
 /*  1770 */   103,  104,  119,  106,  119,  119,  119,   81,  119,  119,
 /*  1780 */   113,   85,   81,   87,   88,  119,   85,   91,   87,   88,
 /*  1790 */   119,  119,   91,   97,  119,  119,  119,  119,   97,  103,
 /*  1800 */   104,  119,  106,  119,  103,  104,  119,  106,  119,   81,
 /*  1810 */   119,  119,  119,   85,  119,   87,   88,  119,  119,   91,
 /*  1820 */    81,  119,  119,  119,   85,   97,   87,   88,  119,  119,
 /*  1830 */    91,  103,  104,  119,  106,  119,   97,  119,  119,  119,
 /*  1840 */    81,  119,  103,  104,   85,  106,   87,   88,   81,  119,
 /*  1850 */    91,  119,   85,  119,   87,   88,   97,  119,   91,  119,
 /*  1860 */   119,  119,  103,  104,   97,  106,  119,  119,   81,  119,
 /*  1870 */   103,  104,   85,  106,   87,   88,  119,  119,   91,  119,
 /*  1880 */   119,  119,   81,  119,   97,  119,   85,  119,   87,   88,
 /*  1890 */   103,  104,   91,  106,  119,  119,  119,  119,   97,  119,
 /*  1900 */   119,  119,   81,  119,  103,  104,   85,  106,   87,   88,
 /*  1910 */   119,  119,   91,   81,  119,  119,  119,   85,   97,   87,
 /*  1920 */    88,  119,  119,   91,  103,  104,  119,  106,  119,   97,
 /*  1930 */   119,  119,  119,  119,  119,  103,  104,   81,  106,  119,
 /*  1940 */   119,   85,  119,   87,   88,   81,  119,   91,  119,   85,
 /*  1950 */   119,   87,   88,   97,  119,   91,  119,  119,  119,  103,
 /*  1960 */   104,   97,  106,  119,  119,  119,  119,  103,  104,  119,
 /*  1970 */   106,   81,  119,  119,  119,   85,  119,   87,  119,  119,
 /*  1980 */   119,   91,  119,  119,  119,  119,  119,   97,  119,  119,
 /*  1990 */   119,   81,  119,  103,  104,   85,  106,   87,  119,   81,
 /*  2000 */   119,   91,  119,   85,  119,   87,  119,   97,  119,   91,
 /*  2010 */   119,  119,  119,  103,  104,   97,  106,  119,  119,   81,
 /*  2020 */   119,  103,  104,   85,  106,   87,   81,  119,  119,   91,
 /*  2030 */    85,  119,   87,   81,  119,  119,   91,   85,  119,   87,
 /*  2040 */   119,  103,  104,   91,  106,  119,  119,  119,  103,  104,
 /*  2050 */   119,  106,  119,   81,  119,  103,  104,   85,  106,   87,
 /*  2060 */   119,  119,  119,   91,  119,  119,  119,  119,  119,  119,
 /*  2070 */   119,  119,  119,   81,  119,  103,  104,   85,  106,   87,
 /*  2080 */   119,   81,  119,   91,  119,   85,  119,   87,  119,  119,
 /*  2090 */   119,   91,  119,  119,  119,  103,  104,  119,  106,  119,
 /*  2100 */   119,   81,  119,  103,  104,   85,  106,   87,  119,  119,
 /*  2110 */   119,   91,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  2120 */   119,  119,  119,  103,  104,  119,  106,
);
    const YY_SHIFT_USE_DFLT = -60;
    const YY_SHIFT_MAX = 227;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1321, 1321, 1371, 1421, 1171, 1371, 1471, 1171, 1521,
 /*    10 */  1171, 1421, 1171, 1121, 1171, 1171, 1171, 1171, 1171, 1171,
 /*    20 */  1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
 /*    30 */  1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1221,
 /*    40 */  1271, 1221, 1571, 1571, 1571, 1571, 1571, 1571, 1621,  145,
 /*    50 */    72,   -1,  599,  599,  646,  526,  792,  865,  938,  406,
 /*    60 */   239,  192,  286,  479,  333,  719, 1011, 1058, 1058, 1058,
 /*    70 */  1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
 /*    80 */  1058, 1058, 1058,  146,  293,    1, 1236,  939,  949,  233,
 /*    90 */   280,  293,  480,  293, 1240,   43,  111,   35,  140,  250,
 /*   100 */   230,  227,  274,  392,  441,  442,  441,  392,  540,  441,
 /*   110 */   441,  441,  441,  441,  540,  441,  441,  559,  541,  632,
 /*   120 */   363,  641,  363,  633,  363,  632,  135,  708,  183,  159,
 /*   130 */   113,  205,  229,  321,  323,  370,  297,  184,  -30,  273,
 /*   140 */   -30,  275,  -30,  322,  516,  439,  -30,  -30,  397,  444,
 /*   150 */   467,  515,  514,  478,  366,  443,  684,  653,  648,  632,
 /*   160 */   641,  648,  653,  632,  600,  695,  632,  -60,  -60,  -60,
 /*   170 */   -60,  -60,   36,  187,   30,  332,  -29,  368,   76,   76,
 /*   180 */   405,  243,  335,  521,  138,  345,  402,   79,  209,  537,
 /*   190 */   564,  600,  615,  612,  569,  517,  487,  512,  522,  553,
 /*   200 */   524,  649,  568,  552,  603,  590,  593,  592,  182,  464,
 /*   210 */   276,  331,  344,  447,   75,  585,  -59,  378,  436,  598,
 /*   220 */   449,  604,  532,  534,  539,  531,  584,  614,
);
    const YY_REDUCE_USE_DFLT = -93;
    const YY_REDUCE_MAX = 171;
    static public $yy_reduce_ofst = array(
 /*     0 */    42, 1081, 1131,  520,   67, 1581,  400,  640, 1653,  327,
 /*    10 */  1624,   -7, 1667,  791, 1481, 1856, 1759, 1832, 1728, 1767,
 /*    20 */  1801, 1696,  713,  860,  932, 1864,  937, 1281, 1381, 1431,
 /*    30 */   786,  718, 1331, 1821, 1787, 1619, 1531, 1701, 1739, 1910,
 /*    40 */  1918, 1890, 1945, 1938, 1992, 1952, 2020, 2000, 1972,  527,
 /*    50 */   407,    0,  334,  407,  -75,  -75,  -75,  -75,  -75,  -75,
 /*    60 */   -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
 /*    70 */   -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
 /*    80 */   -75,  -75,  -75,  647,  725,   -5,  310,  856,   63,  255,
 /*    90 */   114,    5,  -83, 1047,  383,  278,  162,  330,  206,  573,
 /*   100 */   162,  930,  930,  470,  511,  206,  789,  423,  858,  639,
 /*   110 */    69,  445,  565,  509,  789, 1039,  976,  789,  977,  206,
 /*   120 */  1046,  418,  398,  325,  167,  -92,  544,  544,  544,  544,
 /*   130 */   544,  544,  545,  554,  554,  554,  554,  554,  543,  554,
 /*   140 */   543,  554,  543,  554,  554,  554,  543,  543,  554,  554,
 /*   150 */   554,  554,  554,  554,  554,  594,  616,  606,  563,  583,
 /*   160 */   587,  563,  582,  583,  591,  597,  583,  557,  -15,  242,
 /*   170 */   -25,  364,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, ),
        /* 1 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 2 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 3 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 4 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 5 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 6 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 7 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 8 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 9 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 10 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 11 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 12 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 13 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 61, 74, ),
        /* 14 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 15 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 16 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 17 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 18 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 19 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 20 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 21 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 22 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 23 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 24 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 25 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 26 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 27 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 28 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 29 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 30 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 31 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 32 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 33 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 34 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 35 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 36 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 37 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 38 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 39 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 40 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 41 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 42 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 43 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 44 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 45 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 46 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 47 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 48 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 49 */ array(1, 22, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 50 */ array(1, 16, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 51 */ array(1, 16, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 52 */ array(1, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 53 */ array(1, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 54 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 55 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 56 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 57 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 58 */ array(1, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 59 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 60 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, ),
        /* 61 */ array(1, 2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 62 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 63 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 64 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 65 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 66 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 67 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 68 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 69 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 70 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 71 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 72 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 73 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 74 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 75 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 76 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 77 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 78 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 79 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 80 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 81 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 82 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 83 */ array(1, 16, 20, 22, 49, 57, ),
        /* 84 */ array(1, 22, ),
        /* 85 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, ),
        /* 86 */ array(10, 15, 21, 23, 28, 31, 74, 75, 76, ),
        /* 87 */ array(1, 16, 20, 22, ),
        /* 88 */ array(1, 16, 22, ),
        /* 89 */ array(17, 18, 59, ),
        /* 90 */ array(20, 55, 60, ),
        /* 91 */ array(1, 22, ),
        /* 92 */ array(2, 22, ),
        /* 93 */ array(1, 22, ),
        /* 94 */ array(10, 15, 21, 23, 28, 31, 74, 75, 76, ),
        /* 95 */ array(4, 5, 8, 12, 13, 14, ),
        /* 96 */ array(15, 18, 19, 58, ),
        /* 97 */ array(15, 18, 19, 25, ),
        /* 98 */ array(19, 20, 57, ),
        /* 99 */ array(16, 22, 48, ),
        /* 100 */ array(15, 18, 58, ),
        /* 101 */ array(16, 22, 25, ),
        /* 102 */ array(16, 22, 25, ),
        /* 103 */ array(17, 18, ),
        /* 104 */ array(15, 18, ),
        /* 105 */ array(20, 57, ),
        /* 106 */ array(15, 18, ),
        /* 107 */ array(17, 18, ),
        /* 108 */ array(15, 18, ),
        /* 109 */ array(15, 18, ),
        /* 110 */ array(15, 18, ),
        /* 111 */ array(15, 18, ),
        /* 112 */ array(15, 18, ),
        /* 113 */ array(15, 18, ),
        /* 114 */ array(15, 18, ),
        /* 115 */ array(15, 18, ),
        /* 116 */ array(15, 18, ),
        /* 117 */ array(15, 18, ),
        /* 118 */ array(15, 18, ),
        /* 119 */ array(20, ),
        /* 120 */ array(22, ),
        /* 121 */ array(17, ),
        /* 122 */ array(22, ),
        /* 123 */ array(22, ),
        /* 124 */ array(22, ),
        /* 125 */ array(20, ),
        /* 126 */ array(15, 16, 18, 30, ),
        /* 127 */ array(15, 16, 18, 30, ),
        /* 128 */ array(15, 18, 58, ),
        /* 129 */ array(15, 16, 18, ),
        /* 130 */ array(15, 18, 19, ),
        /* 131 */ array(15, 16, 18, ),
        /* 132 */ array(15, 17, 18, ),
        /* 133 */ array(16, 22, ),
        /* 134 */ array(16, 22, ),
        /* 135 */ array(16, 22, ),
        /* 136 */ array(16, 22, ),
        /* 137 */ array(16, 22, ),
        /* 138 */ array(55, 60, ),
        /* 139 */ array(16, 22, ),
        /* 140 */ array(55, 60, ),
        /* 141 */ array(16, 22, ),
        /* 142 */ array(55, 60, ),
        /* 143 */ array(16, 22, ),
        /* 144 */ array(16, 22, ),
        /* 145 */ array(16, 22, ),
        /* 146 */ array(55, 60, ),
        /* 147 */ array(55, 60, ),
        /* 148 */ array(16, 22, ),
        /* 149 */ array(16, 22, ),
        /* 150 */ array(16, 22, ),
        /* 151 */ array(16, 22, ),
        /* 152 */ array(16, 22, ),
        /* 153 */ array(16, 22, ),
        /* 154 */ array(16, 22, ),
        /* 155 */ array(15, 49, ),
        /* 156 */ array(13, ),
        /* 157 */ array(22, ),
        /* 158 */ array(2, ),
        /* 159 */ array(20, ),
        /* 160 */ array(17, ),
        /* 161 */ array(2, ),
        /* 162 */ array(22, ),
        /* 163 */ array(20, ),
        /* 164 */ array(49, ),
        /* 165 */ array(1, ),
        /* 166 */ array(20, ),
        /* 167 */ array(),
        /* 168 */ array(),
        /* 169 */ array(),
        /* 170 */ array(),
        /* 171 */ array(),
        /* 172 */ array(16, 22, 49, 57, ),
        /* 173 */ array(15, 17, 18, 32, ),
        /* 174 */ array(19, 29, 49, 57, ),
        /* 175 */ array(49, 55, 57, 61, ),
        /* 176 */ array(30, 49, 57, ),
        /* 177 */ array(16, 22, 48, ),
        /* 178 */ array(49, 57, ),
        /* 179 */ array(49, 57, ),
        /* 180 */ array(24, 33, ),
        /* 181 */ array(25, 75, ),
        /* 182 */ array(30, 48, ),
        /* 183 */ array(18, 32, ),
        /* 184 */ array(18, 58, ),
        /* 185 */ array(2, 19, ),
        /* 186 */ array(19, 55, ),
        /* 187 */ array(16, 48, ),
        /* 188 */ array(33, 61, ),
        /* 189 */ array(50, ),
        /* 190 */ array(51, ),
        /* 191 */ array(49, ),
        /* 192 */ array(16, ),
        /* 193 */ array(18, ),
        /* 194 */ array(17, ),
        /* 195 */ array(17, ),
        /* 196 */ array(25, ),
        /* 197 */ array(17, ),
        /* 198 */ array(59, ),
        /* 199 */ array(32, ),
        /* 200 */ array(55, ),
        /* 201 */ array(29, ),
        /* 202 */ array(16, ),
        /* 203 */ array(26, ),
        /* 204 */ array(16, ),
        /* 205 */ array(19, ),
        /* 206 */ array(19, ),
        /* 207 */ array(22, ),
        /* 208 */ array(17, ),
        /* 209 */ array(22, ),
        /* 210 */ array(17, ),
        /* 211 */ array(32, ),
        /* 212 */ array(50, ),
        /* 213 */ array(18, ),
        /* 214 */ array(29, ),
        /* 215 */ array(18, ),
        /* 216 */ array(61, ),
        /* 217 */ array(59, ),
        /* 218 */ array(18, ),
        /* 219 */ array(50, ),
        /* 220 */ array(18, ),
        /* 221 */ array(18, ),
        /* 222 */ array(48, ),
        /* 223 */ array(49, ),
        /* 224 */ array(18, ),
        /* 225 */ array(2, ),
        /* 226 */ array(18, ),
        /* 227 */ array(18, ),
        /* 228 */ array(),
        /* 229 */ array(),
        /* 230 */ array(),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
);
    static public $yy_default = array(
 /*     0 */   370,  541,  558,  558,  558,  512,  558,  558,  512,  558,
 /*    10 */   512,  558,  512,  558,  558,  558,  558,  558,  558,  558,
 /*    20 */   558,  558,  558,  558,  558,  558,  558,  558,  558,  558,
 /*    30 */   558,  558,  558,  558,  558,  558,  558,  558,  558,  558,
 /*    40 */   558,  558,  558,  558,  558,  558,  558,  558,  558,  426,
 /*    50 */   558,  558,  426,  426,  558,  558,  558,  558,  558,  558,
 /*    60 */   558,  558,  558,  558,  511,  558,  558,  443,  428,  459,
 /*    70 */   435,  456,  543,  432,  411,  447,  448,  451,  455,  452,
 /*    80 */   542,  446,  544,  470,  426,  367,  558,  558,  442,  558,
 /*    90 */   524,  426,  426,  426,  558,  558,  485,  558,  478,  436,
 /*   100 */   485,  460,  460,  558,  558,  478,  558,  558,  558,  558,
 /*   110 */   485,  558,  558,  558,  558,  558,  558,  558,  558,  478,
 /*   120 */   426,  558,  426,  426,  426,  521,  558,  558,  486,  558,
 /*   130 */   558,  558,  558,  558,  558,  558,  558,  558,  503,  558,
 /*   140 */   505,  558,  483,  558,  558,  558,  502,  504,  558,  558,
 /*   150 */   558,  558,  558,  558,  558,  485,  385,  557,  514,  499,
 /*   160 */   558,  513,  557,  522,  485,  442,  525,  518,  485,  518,
 /*   170 */   485,  518,  470,  558,  431,  470,  470,  436,  470,  457,
 /*   180 */   558,  460,  436,  558,  558,  497,  466,  436,  558,  558,
 /*   190 */   472,  497,  558,  558,  558,  558,  460,  558,  558,  468,
 /*   200 */   466,  558,  558,  433,  558,  558,  431,  558,  558,  558,
 /*   210 */   558,  558,  558,  558,  558,  558,  558,  558,  558,  558,
 /*   220 */   558,  558,  436,  523,  558,  497,  558,  558,  551,  540,
 /*   230 */   548,  555,  538,  554,  458,  439,  412,  419,  418,  423,
 /*   240 */   498,  556,  434,  430,  368,  409,  438,  413,  414,  520,
 /*   250 */   519,  482,  493,  481,  506,  510,  509,  491,  492,  549,
 /*   260 */   508,  507,  490,  494,  472,  539,  477,  422,  421,  425,
 /*   270 */   517,  464,  420,  497,  415,  416,  417,  496,  461,  462,
 /*   280 */   484,  479,  487,  495,  488,  437,  475,  463,  465,  467,
 /*   290 */   469,  410,  408,  377,  376,  378,  379,  380,  375,  374,
 /*   300 */   369,  371,  372,  373,  381,  382,  390,  391,  392,  424,
 /*   310 */   389,  388,  383,  384,  386,  387,  489,  440,  396,  553,
 /*   320 */   397,  398,  399,  395,  394,  480,  501,  393,  552,  400,
 /*   330 */   401,  406,  545,  546,  547,  407,  405,  402,  500,  403,
 /*   340 */   404,  441,  537,  476,  474,  449,  450,  453,  473,  445,
 /*   350 */   471,  515,  516,  444,  454,  526,  533,  534,  535,  536,
 /*   360 */   532,  531,  527,  528,  529,  530,  550,
);
    const YYNOCODE = 120;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 367;
    const YYNRULE = 191;
    const YYERRORSYMBOL = 77;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',   
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',   
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',        
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',       
  'PTR',           'LDELIF',        'SPACE',         'LDELFOR',     
  'SEMICOLON',     'INCDEC',        'TO',            'STEP',        
  'LDELFOREACH',   'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'MATH',          'UNIMATH',     
  'ANDSYM',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'OPENP',         'CLOSEP',        'QMARK',       
  'NOT',           'TYPECAST',      'HEX',           'DOT',         
  'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',            'HATCH',       
  'OPENB',         'CLOSEB',        'EQUALS',        'NOTEQUALS',   
  'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',   
  'IDENTITY',      'NONEIDENTITY',  'MOD',           'LAND',        
  'LOR',           'LXOR',          'QUOTE',         'BACKTICK',    
  'DOLLARID',      'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'value',         'attributes',    'variable',    
  'expr',          'modifierlist',  'ternary',       'varindexed',  
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'modifier',      'modparameters',
  'attribute',     'ifcond',        'lop',           'function',    
  'doublequoted_with_quotes',  'static_class_access',  'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "smartytag ::= LDEL value RDEL",
 /*  25 */ "smartytag ::= LDEL value attributes RDEL",
 /*  26 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  27 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  28 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  29 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  30 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  31 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  32 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  34 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  35 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID RDEL",
 /*  38 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDELIF SPACE expr RDEL",
 /*  42 */ "smartytag ::= LDELIF SPACE statement RDEL",
 /*  43 */ "smartytag ::= LDELFOR SPACE statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  44 */ "foraction ::= EQUAL expr",
 /*  45 */ "foraction ::= INCDEC",
 /*  46 */ "smartytag ::= LDELFOR SPACE statement TO expr attributes RDEL",
 /*  47 */ "smartytag ::= LDELFOR SPACE statement TO expr STEP expr RDEL",
 /*  48 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  53 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  54 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  55 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  56 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  57 */ "attributes ::= attributes attribute",
 /*  58 */ "attributes ::= attribute",
 /*  59 */ "attributes ::=",
 /*  60 */ "attribute ::= SPACE ID EQUAL ID",
 /*  61 */ "attribute ::= SPACE ID EQUAL expr",
 /*  62 */ "attribute ::= SPACE ID EQUAL value",
 /*  63 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  64 */ "attribute ::= SPACE ID",
 /*  65 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  66 */ "statements ::= statement",
 /*  67 */ "statements ::= statements COMMA statement",
 /*  68 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  69 */ "expr ::= value",
 /*  70 */ "expr ::= DOLLAR ID COLON ID",
 /*  71 */ "expr ::= expr MATH value",
 /*  72 */ "expr ::= expr UNIMATH value",
 /*  73 */ "expr ::= expr ANDSYM value",
 /*  74 */ "expr ::= array",
 /*  75 */ "expr ::= expr modifierlist",
 /*  76 */ "expr ::= expr ifcond expr",
 /*  77 */ "expr ::= expr ISIN array",
 /*  78 */ "expr ::= expr ISIN value",
 /*  79 */ "expr ::= expr lop expr",
 /*  80 */ "expr ::= expr ISDIVBY expr",
 /*  81 */ "expr ::= expr ISNOTDIVBY expr",
 /*  82 */ "expr ::= expr ISEVEN",
 /*  83 */ "expr ::= expr ISNOTEVEN",
 /*  84 */ "expr ::= expr ISEVENBY expr",
 /*  85 */ "expr ::= expr ISNOTEVENBY expr",
 /*  86 */ "expr ::= expr ISODD",
 /*  87 */ "expr ::= expr ISNOTODD",
 /*  88 */ "expr ::= expr ISODDBY expr",
 /*  89 */ "expr ::= expr ISNOTODDBY expr",
 /*  90 */ "expr ::= value INSTANCEOF ID",
 /*  91 */ "expr ::= value INSTANCEOF value",
 /*  92 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  93 */ "value ::= variable",
 /*  94 */ "value ::= UNIMATH value",
 /*  95 */ "value ::= NOT value",
 /*  96 */ "value ::= TYPECAST value",
 /*  97 */ "value ::= variable INCDEC",
 /*  98 */ "value ::= HEX",
 /*  99 */ "value ::= INTEGER",
 /* 100 */ "value ::= INTEGER DOT INTEGER",
 /* 101 */ "value ::= INTEGER DOT",
 /* 102 */ "value ::= DOT INTEGER",
 /* 103 */ "value ::= ID",
 /* 104 */ "value ::= function",
 /* 105 */ "value ::= OPENP expr CLOSEP",
 /* 106 */ "value ::= SINGLEQUOTESTRING",
 /* 107 */ "value ::= doublequoted_with_quotes",
 /* 108 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 109 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 110 */ "value ::= smartytag",
 /* 111 */ "variable ::= varindexed",
 /* 112 */ "variable ::= DOLLAR varvar AT ID",
 /* 113 */ "variable ::= object",
 /* 114 */ "variable ::= HATCH ID HATCH",
 /* 115 */ "variable ::= HATCH variable HATCH",
 /* 116 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 117 */ "arrayindex ::= arrayindex indexdef",
 /* 118 */ "arrayindex ::=",
 /* 119 */ "indexdef ::= DOT DOLLAR varvar",
 /* 120 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 121 */ "indexdef ::= DOT ID",
 /* 122 */ "indexdef ::= DOT INTEGER",
 /* 123 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 124 */ "indexdef ::= OPENB ID CLOSEB",
 /* 125 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 126 */ "indexdef ::= OPENB expr CLOSEB",
 /* 127 */ "indexdef ::= OPENB CLOSEB",
 /* 128 */ "varvar ::= varvarele",
 /* 129 */ "varvar ::= varvar varvarele",
 /* 130 */ "varvarele ::= ID",
 /* 131 */ "varvarele ::= LDEL expr RDEL",
 /* 132 */ "object ::= varindexed objectchain",
 /* 133 */ "objectchain ::= objectelement",
 /* 134 */ "objectchain ::= objectchain objectelement",
 /* 135 */ "objectelement ::= PTR ID arrayindex",
 /* 136 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 137 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 138 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 139 */ "objectelement ::= PTR method",
 /* 140 */ "function ::= ID OPENP params CLOSEP",
 /* 141 */ "method ::= ID OPENP params CLOSEP",
 /* 142 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 143 */ "params ::= expr COMMA params",
 /* 144 */ "params ::= expr",
 /* 145 */ "params ::=",
 /* 146 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 147 */ "modifierlist ::= modifier modparameters",
 /* 148 */ "modifier ::= VERT AT ID",
 /* 149 */ "modifier ::= VERT ID",
 /* 150 */ "modparameters ::= modparameters modparameter",
 /* 151 */ "modparameters ::=",
 /* 152 */ "modparameter ::= COLON value",
 /* 153 */ "modparameter ::= COLON array",
 /* 154 */ "static_class_access ::= method",
 /* 155 */ "static_class_access ::= method objectchain",
 /* 156 */ "static_class_access ::= ID",
 /* 157 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 158 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 159 */ "ifcond ::= EQUALS",
 /* 160 */ "ifcond ::= NOTEQUALS",
 /* 161 */ "ifcond ::= GREATERTHAN",
 /* 162 */ "ifcond ::= LESSTHAN",
 /* 163 */ "ifcond ::= GREATEREQUAL",
 /* 164 */ "ifcond ::= LESSEQUAL",
 /* 165 */ "ifcond ::= IDENTITY",
 /* 166 */ "ifcond ::= NONEIDENTITY",
 /* 167 */ "ifcond ::= MOD",
 /* 168 */ "lop ::= LAND",
 /* 169 */ "lop ::= LOR",
 /* 170 */ "lop ::= LXOR",
 /* 171 */ "array ::= OPENB arrayelements CLOSEB",
 /* 172 */ "arrayelements ::= arrayelement",
 /* 173 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 174 */ "arrayelements ::=",
 /* 175 */ "arrayelement ::= value APTR expr",
 /* 176 */ "arrayelement ::= ID APTR expr",
 /* 177 */ "arrayelement ::= expr",
 /* 178 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 179 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 180 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 181 */ "doublequoted ::= doublequotedcontent",
 /* 182 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 183 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 184 */ "doublequotedcontent ::= DOLLARID",
 /* 185 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 186 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 187 */ "doublequotedcontent ::= smartytag",
 /* 188 */ "doublequotedcontent ::= OTHER",
 /* 189 */ "optspace ::= SPACE",
 /* 190 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 82 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1619 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 12 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 8 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 10 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 10 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 7 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 6 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 5 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        16 => 16,
        17 => 17,
        94 => 17,
        96 => 17,
        97 => 17,
        155 => 17,
        19 => 19,
        20 => 19,
        69 => 19,
        93 => 19,
        98 => 19,
        99 => 19,
        104 => 19,
        106 => 19,
        107 => 19,
        113 => 19,
        154 => 19,
        172 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 25,
        28 => 25,
        29 => 25,
        27 => 27,
        30 => 30,
        31 => 30,
        32 => 32,
        33 => 32,
        34 => 34,
        35 => 34,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 41,
        43 => 43,
        44 => 44,
        45 => 45,
        58 => 45,
        144 => 45,
        148 => 45,
        156 => 45,
        177 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 61,
        63 => 61,
        64 => 64,
        65 => 65,
        66 => 66,
        67 => 67,
        68 => 68,
        70 => 70,
        71 => 71,
        72 => 71,
        73 => 71,
        74 => 74,
        128 => 74,
        189 => 74,
        75 => 75,
        76 => 76,
        79 => 76,
        90 => 76,
        77 => 77,
        78 => 78,
        80 => 80,
        81 => 81,
        82 => 82,
        87 => 82,
        83 => 83,
        86 => 83,
        84 => 84,
        89 => 84,
        85 => 85,
        88 => 85,
        91 => 91,
        92 => 92,
        95 => 95,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        105 => 105,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        123 => 123,
        126 => 123,
        124 => 124,
        125 => 125,
        127 => 127,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        145 => 145,
        146 => 146,
        147 => 147,
        149 => 149,
        150 => 150,
        151 => 151,
        190 => 151,
        152 => 152,
        153 => 152,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 182,
        185 => 182,
        184 => 184,
        186 => 186,
        187 => 187,
        188 => 188,
    );
#line 93 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->root_buffer->to_smarty_php();     }
#line 2027 "smarty_internal_templateparser.php"
#line 99 "smarty_internal_templateparser.y"
    function yy_r1(){ $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);     }
#line 2030 "smarty_internal_templateparser.php"
#line 111 "smarty_internal_templateparser.y"
    function yy_r4(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
                                         } else { 
                                           $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
                                         }  
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 2042 "smarty_internal_templateparser.php"
#line 123 "smarty_internal_templateparser.y"
    function yy_r5(){ $this->_retvalue = new _smarty_tag($this, '');    }
#line 2045 "smarty_internal_templateparser.php"
#line 126 "smarty_internal_templateparser.y"
    function yy_r6(){ $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2048 "smarty_internal_templateparser.php"
#line 129 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2061 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true; 
                                       $this->is_xml = true; 
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2077 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r9(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }
                                        }
#line 2098 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r10(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }
                                        }
#line 2119 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r11(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));	
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     }
                                        }
#line 2127 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));    }
#line 2130 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r13(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2138 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r14(){
                                     $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
                                       }
#line 2143 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = '';     }
#line 2146 "smarty_internal_templateparser.php"
#line 221 "smarty_internal_templateparser.y"
    function yy_r16(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2149 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2152 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2155 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2158 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2161 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r24(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2164 "smarty_internal_templateparser.php"
#line 239 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2167 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2170 "smarty_internal_templateparser.php"
#line 251 "smarty_internal_templateparser.y"
    function yy_r30(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2173 "smarty_internal_templateparser.php"
#line 253 "smarty_internal_templateparser.y"
    function yy_r32(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2176 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2179 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2182 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2185 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r38(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2188 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r39(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                     }
#line 2193 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r40(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                                }
#line 2198 "smarty_internal_templateparser.php"
#line 271 "smarty_internal_templateparser.y"
    function yy_r41(){ $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2201 "smarty_internal_templateparser.php"
#line 274 "smarty_internal_templateparser.y"
    function yy_r43(){
                                                             $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2205 "smarty_internal_templateparser.php"
#line 277 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2208 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2211 "smarty_internal_templateparser.php"
#line 279 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2214 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r47(){ $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2217 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2220 "smarty_internal_templateparser.php"
#line 284 "smarty_internal_templateparser.y"
    function yy_r49(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2224 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r50(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2228 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r51(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2232 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r52(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2236 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r53(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2239 "smarty_internal_templateparser.php"
#line 295 "smarty_internal_templateparser.y"
    function yy_r54(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2242 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r55(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2247 "smarty_internal_templateparser.php"
#line 300 "smarty_internal_templateparser.y"
    function yy_r56(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2250 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r57(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[key($this->yystack[$this->yyidx + 0]->minor)] = $this->yystack[$this->yyidx + 0]->minor[key($this->yystack[$this->yyidx + 0]->minor)];    }
#line 2253 "smarty_internal_templateparser.php"
#line 310 "smarty_internal_templateparser.y"
    function yy_r59(){ $this->_retvalue = array();    }
#line 2256 "smarty_internal_templateparser.php"
#line 313 "smarty_internal_templateparser.y"
    function yy_r60(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2266 "smarty_internal_templateparser.php"
#line 321 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2269 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2272 "smarty_internal_templateparser.php"
#line 325 "smarty_internal_templateparser.y"
    function yy_r65(){$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2275 "smarty_internal_templateparser.php"
#line 331 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2278 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2281 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2284 "smarty_internal_templateparser.php"
#line 343 "smarty_internal_templateparser.y"
    function yy_r70(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2287 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2290 "smarty_internal_templateparser.php"
#line 351 "smarty_internal_templateparser.y"
    function yy_r74(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2293 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r75(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));     }
#line 2296 "smarty_internal_templateparser.php"
#line 360 "smarty_internal_templateparser.y"
    function yy_r76(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2299 "smarty_internal_templateparser.php"
#line 361 "smarty_internal_templateparser.y"
    function yy_r77(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2302 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2305 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r80(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2308 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r81(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2311 "smarty_internal_templateparser.php"
#line 366 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2314 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r83(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2317 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2320 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r85(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2323 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r91(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2326 "smarty_internal_templateparser.php"
#line 381 "smarty_internal_templateparser.y"
    function yy_r92(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2329 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2332 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2335 "smarty_internal_templateparser.php"
#line 395 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';     }
#line 2338 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2341 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r103(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2351 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2354 "smarty_internal_templateparser.php"
#line 415 "smarty_internal_templateparser.y"
    function yy_r108(){if ((!$this->template->security || $this->smarty->security_handler->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                      																				   if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                                                                  $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
                      																				   } else {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
                                                                 } 
                                                                } else {
                                                                 $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
                                                                }
                                                                   }
#line 2366 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r109(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2370 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r110(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2373 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r111(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
                                      } else {
                                      if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + 0]->minor['var']])) {
                                          $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + 0]->minor['var'] .']->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         } else {
                                          $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         }
                                       $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2383 "smarty_internal_templateparser.php"
#line 446 "smarty_internal_templateparser.y"
    function yy_r112(){if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + -2]->minor])) {
                                                  $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 } else {
                                                  $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 }
                                                  $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2391 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r114(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2394 "smarty_internal_templateparser.php"
#line 456 "smarty_internal_templateparser.y"
    function yy_r115(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2397 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r116(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2400 "smarty_internal_templateparser.php"
#line 465 "smarty_internal_templateparser.y"
    function yy_r117(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2403 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r118(){return;    }
#line 2406 "smarty_internal_templateparser.php"
#line 471 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2409 "smarty_internal_templateparser.php"
#line 472 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2412 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2415 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r122(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2418 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r123(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2421 "smarty_internal_templateparser.php"
#line 477 "smarty_internal_templateparser.y"
    function yy_r124(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2424 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r125(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2427 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = '[]';    }
#line 2430 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2433 "smarty_internal_templateparser.php"
#line 492 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2436 "smarty_internal_templateparser.php"
#line 494 "smarty_internal_templateparser.y"
    function yy_r131(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2439 "smarty_internal_templateparser.php"
#line 499 "smarty_internal_templateparser.y"
    function yy_r132(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2443 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r133(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2446 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r134(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2449 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2452 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r136(){ $this->_retvalue = '->{$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor .')->value'.$this->yystack[$this->yyidx + 0]->minor.'}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor,"'"), null, true, false)->nocache;    }
#line 2455 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2458 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2461 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2464 "smarty_internal_templateparser.php"
#line 517 "smarty_internal_templateparser.y"
    function yy_r140(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2473 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2476 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r142(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2479 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2482 "smarty_internal_templateparser.php"
#line 537 "smarty_internal_templateparser.y"
    function yy_r145(){ return;    }
#line 2485 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r146(){$this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor));    }
#line 2488 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r147(){$this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor);    }
#line 2491 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2494 "smarty_internal_templateparser.php"
#line 551 "smarty_internal_templateparser.y"
    function yy_r150(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2497 "smarty_internal_templateparser.php"
#line 553 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = '';    }
#line 2500 "smarty_internal_templateparser.php"
#line 555 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = ':'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2503 "smarty_internal_templateparser.php"
#line 565 "smarty_internal_templateparser.y"
    function yy_r157(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2506 "smarty_internal_templateparser.php"
#line 567 "smarty_internal_templateparser.y"
    function yy_r158(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2509 "smarty_internal_templateparser.php"
#line 576 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '==';    }
#line 2512 "smarty_internal_templateparser.php"
#line 577 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '!=';    }
#line 2515 "smarty_internal_templateparser.php"
#line 578 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '>';    }
#line 2518 "smarty_internal_templateparser.php"
#line 579 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = '<';    }
#line 2521 "smarty_internal_templateparser.php"
#line 580 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = '>=';    }
#line 2524 "smarty_internal_templateparser.php"
#line 581 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = '<=';    }
#line 2527 "smarty_internal_templateparser.php"
#line 582 "smarty_internal_templateparser.y"
    function yy_r165(){$this->_retvalue = '===';    }
#line 2530 "smarty_internal_templateparser.php"
#line 583 "smarty_internal_templateparser.y"
    function yy_r166(){$this->_retvalue = '!==';    }
#line 2533 "smarty_internal_templateparser.php"
#line 584 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '%';    }
#line 2536 "smarty_internal_templateparser.php"
#line 586 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '&&';    }
#line 2539 "smarty_internal_templateparser.php"
#line 587 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '||';    }
#line 2542 "smarty_internal_templateparser.php"
#line 588 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = ' XOR ';    }
#line 2545 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r171(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2548 "smarty_internal_templateparser.php"
#line 595 "smarty_internal_templateparser.y"
    function yy_r173(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2551 "smarty_internal_templateparser.php"
#line 596 "smarty_internal_templateparser.y"
    function yy_r174(){ return;     }
#line 2554 "smarty_internal_templateparser.php"
#line 597 "smarty_internal_templateparser.y"
    function yy_r175(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2557 "smarty_internal_templateparser.php"
#line 598 "smarty_internal_templateparser.y"
    function yy_r176(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2560 "smarty_internal_templateparser.php"
#line 605 "smarty_internal_templateparser.y"
    function yy_r178(){ $this->_retvalue = "''";     }
#line 2563 "smarty_internal_templateparser.php"
#line 606 "smarty_internal_templateparser.y"
    function yy_r179(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2566 "smarty_internal_templateparser.php"
#line 608 "smarty_internal_templateparser.y"
    function yy_r180(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2569 "smarty_internal_templateparser.php"
#line 609 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2572 "smarty_internal_templateparser.php"
#line 611 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2575 "smarty_internal_templateparser.php"
#line 613 "smarty_internal_templateparser.y"
    function yy_r184(){if (isset($this->compiler->local_var["'".substr($this->yystack[$this->yyidx + 0]->minor,1)."'"])) {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
                                                      } else {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value');
                                                      }
                                                      $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache;
      }
#line 2584 "smarty_internal_templateparser.php"
#line 621 "smarty_internal_templateparser.y"
    function yy_r186(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2587 "smarty_internal_templateparser.php"
#line 622 "smarty_internal_templateparser.y"
    function yy_r187(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2592 "smarty_internal_templateparser.php"
#line 625 "smarty_internal_templateparser.y"
    function yy_r188(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2595 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 75 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2658 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 67 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2676 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>