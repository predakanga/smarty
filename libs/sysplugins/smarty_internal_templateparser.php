<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->block_nesting_level = 0;
				$this->is_xml = false;
				$this->asp_tags = (ini_get('asp_tags') != '0');
				$this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 130 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_SPACE                          = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_INCDEC                         = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_LDELSLASH                      = 31;
    const TP_INTEGER                        = 32;
    const TP_COMMA                          = 33;
    const TP_MATH                           = 34;
    const TP_UNIMATH                        = 35;
    const TP_ANDSYM                         = 36;
    const TP_ISIN                           = 37;
    const TP_ISDIVBY                        = 38;
    const TP_ISNOTDIVBY                     = 39;
    const TP_ISEVEN                         = 40;
    const TP_ISNOTEVEN                      = 41;
    const TP_ISEVENBY                       = 42;
    const TP_ISNOTEVENBY                    = 43;
    const TP_ISODD                          = 44;
    const TP_ISNOTODD                       = 45;
    const TP_ISODDBY                        = 46;
    const TP_ISNOTODDBY                     = 47;
    const TP_INSTANCEOF                     = 48;
    const TP_OPENP                          = 49;
    const TP_CLOSEP                         = 50;
    const TP_QMARK                          = 51;
    const TP_NOT                            = 52;
    const TP_TYPECAST                       = 53;
    const TP_HEX                            = 54;
    const TP_DOT                            = 55;
    const TP_SINGLEQUOTESTRING              = 56;
    const TP_DOUBLECOLON                    = 57;
    const TP_AT                             = 58;
    const TP_HATCH                          = 59;
    const TP_OPENB                          = 60;
    const TP_CLOSEB                         = 61;
    const TP_EQUALS                         = 62;
    const TP_NOTEQUALS                      = 63;
    const TP_GREATERTHAN                    = 64;
    const TP_LESSTHAN                       = 65;
    const TP_GREATEREQUAL                   = 66;
    const TP_LESSEQUAL                      = 67;
    const TP_IDENTITY                       = 68;
    const TP_NONEIDENTITY                   = 69;
    const TP_MOD                            = 70;
    const TP_LAND                           = 71;
    const TP_LOR                            = 72;
    const TP_LXOR                           = 73;
    const TP_QUOTE                          = 74;
    const TP_BACKTICK                       = 75;
    const TP_DOLLARID                       = 76;
    const YY_NO_ACTION = 570;
    const YY_ACCEPT_ACTION = 569;
    const YY_ERROR_ACTION = 568;

    const YY_SZ_ACTTAB = 2183;
static public $yy_action = array(
 /*     0 */   185,   38,  164,  313,  265,  270,  269,  281,  292,  290,
 /*    10 */   289,  233,  373,  167,    5,  133,    6,  367,  159,  306,
 /*    20 */    10,  192,  215,    4,  214,  192,   32,  173,  113,  124,
 /*    30 */    39,   36,  218,   48,   46,   45,   41,   27,   16,  342,
 /*    40 */   370,   14,   19,  360,  362,   24,   17,  354,  365,  336,
 /*    50 */   312,  371,  111,   96,  355,  167,  353,  343,  274,  279,
 /*    60 */   264,  335,  309,  314,  308,  301,  300,  302,  303,  304,
 /*    70 */   316,  317,  330,  185,  328,   28,  334,    8,  101,   10,
 /*    80 */   102,   50,  192,  122,  100,  211,  158,  113,  319,  159,
 /*    90 */   329,  248,  367,   44,  192,  162,  262,  285,  173,  331,
 /*   100 */   250,   39,   36,  169,  163,  340,   48,   46,   45,   41,
 /*   110 */    27,   16,  342,  370,   14,   19,  360,  362,   24,   17,
 /*   120 */   569,   87,  275,  279,  264,  249,  299,  436,   34,  364,
 /*   130 */   112,  140,  192,  436,  335,  309,  314,  308,  301,  300,
 /*   140 */   302,  303,  304,  316,  317,  330,  185,  328,  105,   26,
 /*   150 */   359,  180,  346,  217,   76,  165,  276,  120,   44,  157,
 /*   160 */    10,  347,  159,  329,  222,  227,    2,  192,  113,  262,
 /*   170 */   285,  173,  331,  250,   39,   36,  480,   93,  185,   48,
 /*   180 */    46,   45,   41,   27,   16,  342,  370,   14,   19,  360,
 /*   190 */   362,   24,   17,  352,  202,  183,   10,  196,   26,  192,
 /*   200 */   245,  346,   30,  282,  113,  166,  313,  335,  309,  314,
 /*   210 */   308,  301,  300,  302,  303,  304,  316,  317,  330,  185,
 /*   220 */   328,  230,  229,   10,  186,   26,  217,   51,  346,  125,
 /*   230 */   120,  113,  148,  333,  170,  159,  329,  142,  108,  192,
 /*   240 */    95,  221,  262,  285,  173,  331,  250,   39,   36,  173,
 /*   250 */   369,  250,   48,   46,   45,   41,   27,   16,  342,  370,
 /*   260 */    14,   19,  360,  362,   24,   17,  235,   26,  225,   26,
 /*   270 */   346,   18,  346,   30,  318,   26,  341,  296,  346,  220,
 /*   280 */   335,  309,  314,  308,  301,  300,  302,  303,  304,  316,
 /*   290 */   317,  330,  185,  328,  212,  435,    7,  219,  127,  217,
 /*   300 */    54,  192,  128,  120,  245,  155,   44,  171,   91,  329,
 /*   310 */   133,  160,  313,  331,   21,  262,  285,  173,  331,  250,
 /*   320 */    39,   36,  141,  195,  345,   48,   46,   45,   41,   27,
 /*   330 */    16,  342,  370,   14,   19,  360,  362,   24,   17,   35,
 /*   340 */   198,   26,  283,   26,  346,  178,  346,  178,   11,  151,
 /*   350 */    13,  345,   13,  335,  309,  314,  308,  301,  300,  302,
 /*   360 */   303,  304,  316,  317,  330,  185,  185,  328,  241,   26,
 /*   370 */   286,  101,  346,  104,   53,  207,  122,  100,  106,  143,
 /*   380 */   136,  311,   94,  329,  199,  209,  221,  192,  161,  262,
 /*   390 */   285,  173,  331,  250,  250,  185,  109,  110,   48,   46,
 /*   400 */    45,   41,   27,   16,  342,  370,   14,   19,  360,  362,
 /*   410 */    24,   17,  185,  344,   10,  337,  192,   26,  121,  213,
 /*   420 */   216,   33,  113,  114,  287,  144,  335,  309,  314,  308,
 /*   430 */   301,  300,  302,  303,  304,  316,  317,  330,  297,  250,
 /*   440 */    26,  223,  284,  346,    3,   48,   46,   45,   41,   27,
 /*   450 */    16,  342,  370,   14,   19,  360,  362,   24,   17,  185,
 /*   460 */    92,  322,  320,  307,   44,  207,  253,  192,  192,  192,
 /*   470 */   245,  137,  192,  335,  309,  314,  308,  301,  300,  302,
 /*   480 */   303,  304,  316,  317,  330,  250,   40,   26,   26,  293,
 /*   490 */   206,  193,   48,   46,   45,   41,   27,   16,  342,  370,
 /*   500 */    14,   19,  360,  362,   24,   17,  192,   89,  263,  267,
 /*   510 */   480,  321,  323,  325,  326,  192,  480,  192,  192,  192,
 /*   520 */   335,  309,  314,  308,  301,  300,  302,  303,  304,  316,
 /*   530 */   317,  330,  185,  372,  328,  150,  149,  277,  219,  205,
 /*   540 */   217,   58,  480,   10,  120,  201,  145,  266,  438,  250,
 /*   550 */   329,  113,  168,  200,  438,  363,  262,  285,  174,  331,
 /*   560 */   250,  192,  254,  259,   11,   48,   46,   45,   41,   27,
 /*   570 */    16,  342,  370,   14,   19,  360,  362,   24,   17,  245,
 /*   580 */    44,    2,  315,  351,  310,  361,  356,  220,  192,  192,
 /*   590 */   192,  192,  192,  335,  309,  314,  308,  301,  300,  302,
 /*   600 */   303,  304,  316,  317,  330,  185,  328,  273,  324,   98,
 /*   610 */   219,  328,  217,   57,  192,  219,  120,  217,   64,  232,
 /*   620 */   237,  120,  329,  288,   20,  133,  255,  329,  262,  285,
 /*   630 */   244,  331,  345,  262,  285,  272,  331,   31,   48,   46,
 /*   640 */    45,   41,   27,   16,  342,  370,   14,   19,  360,  362,
 /*   650 */    24,   17,  185,  349,  278,   26,   86,   22,  188,  126,
 /*   660 */   123,  123,  111,    9,  153,  146,  335,  309,  314,  308,
 /*   670 */   301,  300,  302,  303,  304,  316,  317,  330,  250,  250,
 /*   680 */   258,  348,  252,  204,  305,   48,   46,   45,   41,   27,
 /*   690 */    16,  342,  370,   14,   19,  360,  362,   24,   17,   35,
 /*   700 */   185,  282,  133,  154,  345,  174,  192,   42,  116,  242,
 /*   710 */   327,   23,  251,  335,  309,  314,  308,  301,  300,  302,
 /*   720 */   303,  304,  316,  317,  330,  185,  328,  259,  350,  135,
 /*   730 */   219,  328,  217,   81,  291,  219,  120,  217,   83,  147,
 /*   740 */    40,  120,  329,  288,  294,   97,  192,  329,  262,  285,
 /*   750 */   228,  331,  315,  262,  285,   90,  331,  315,   48,   46,
 /*   760 */    45,   41,   27,   16,  342,  370,   14,   19,  360,  362,
 /*   770 */    24,   17,  315,  315,  315,  315,  315,  315,  315,  315,
 /*   780 */   315,  315,  315,  315,  315,   99,  335,  309,  314,  308,
 /*   790 */   301,  300,  302,  303,  304,  316,  317,  330,  185,  288,
 /*   800 */   315,  328,  315,  315,  152,  219,  315,  217,   73,  368,
 /*   810 */   315,  120,  315,  247,   12,  315,  174,  329,  250,  315,
 /*   820 */   215,  315,  214,  262,  285,  315,  331,  124,  315,  315,
 /*   830 */   218,   48,   46,   45,   41,   27,   16,  342,  370,   14,
 /*   840 */    19,  360,  362,   24,   17,  185,   15,  315,  315,  315,
 /*   850 */   315,  315,  315,  315,  315,  315,  315,  134,  129,  335,
 /*   860 */   309,  314,  308,  301,  300,  302,  303,  304,  316,  317,
 /*   870 */   330,  288,  288,  358,   37,  366,  315,  315,   48,   46,
 /*   880 */    45,   41,   27,   16,  342,  370,   14,   19,  360,  362,
 /*   890 */    24,   17,  185,  315,  315,  315,  315,  315,  315,  315,
 /*   900 */   315,  315,  315,  315,  130,  103,  335,  309,  314,  308,
 /*   910 */   301,  300,  302,  303,  304,  316,  317,  330,  288,  288,
 /*   920 */   315,  315,  315,  315,  315,   48,   46,   45,   41,   27,
 /*   930 */    16,  342,  370,   14,   19,  360,  362,   24,   17,  315,
 /*   940 */   315,  208,  315,  315,  315,  315,  315,  315,  315,  315,
 /*   950 */   315,  315,  156,  335,  309,  314,  308,  301,  300,  302,
 /*   960 */   303,  304,  316,  317,  330,  185,  250,  315,  328,  315,
 /*   970 */   315,  139,  219,  315,  217,   69,  368,  315,  120,  315,
 /*   980 */   332,   12,  315,  172,  329,  250,  315,  215,  315,  214,
 /*   990 */   262,  285,  315,  331,  124,  315,  315,  218,   48,   46,
 /*  1000 */    45,   41,   27,   16,  342,  370,   14,   19,  360,  362,
 /*  1010 */    24,   17,  185,  315,  315,  315,  315,  315,  315,  315,
 /*  1020 */   315,  315,  315,  315,  132,  117,  335,  309,  314,  308,
 /*  1030 */   301,  300,  302,  303,  304,  316,  317,  330,  288,  288,
 /*  1040 */   357,   37,  366,  315,  315,   48,   46,   45,   41,   27,
 /*  1050 */    16,  342,  370,   14,   19,  360,  362,   24,   17,  185,
 /*  1060 */   315,  257,  315,  315,  315,  315,  315,  315,  315,  315,
 /*  1070 */   315,  131,  315,  335,  309,  314,  308,  301,  300,  302,
 /*  1080 */   303,  304,  316,  317,  330,  288,  315,  315,  315,  315,
 /*  1090 */   315,  315,   48,   46,   45,   41,   27,   16,  342,  370,
 /*  1100 */    14,   19,  360,  362,   24,   17,  315,  315,  315,  315,
 /*  1110 */   315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
 /*  1120 */   335,  309,  314,  308,  301,  300,  302,  303,  304,  316,
 /*  1130 */   317,  330,  315,  185,  315,  315,    6,  315,  118,  179,
 /*  1140 */   315,  315,  215,  138,  214,  315,  315,  315,  435,  124,
 /*  1150 */   315,  315,  218,  226,  192,  174,   49,  250,  315,  315,
 /*  1160 */   315,  315,  328,  315,  315,  315,  182,  315,  217,   71,
 /*  1170 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1180 */    92,    1,  260,  315,  262,  285,    6,  331,  118,  184,
 /*  1190 */   315,  315,  215,  315,  214,   88,  190,  339,  315,  124,
 /*  1200 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1210 */   315,  315,  328,  315,  315,  315,  182,  315,  217,   71,
 /*  1220 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1230 */    92,    1,  315,  315,  262,  285,    6,  331,  121,  177,
 /*  1240 */   315,  315,  215,  315,  214,   88,  315,  338,  315,  124,
 /*  1250 */   315,  315,  218,  189,  315,  315,   49,  315,  315,  315,
 /*  1260 */   315,  315,  328,  315,  315,  315,  219,  315,  191,   59,
 /*  1270 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1280 */    92,    1,  315,  315,  262,  285,    6,  331,  121,  184,
 /*  1290 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1300 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1310 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   79,
 /*  1320 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1330 */    92,    1,  315,  315,  262,  285,    6,  331,  118,  175,
 /*  1340 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1350 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1360 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   68,
 /*  1370 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1380 */    92,    1,  315,  315,  262,  285,    6,  331,  118,  181,
 /*  1390 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1400 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1410 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   78,
 /*  1420 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1430 */    92,    1,  315,  315,  262,  285,    6,  331,  118,  184,
 /*  1440 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1450 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1460 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   74,
 /*  1470 */    25,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1480 */    92,    1,  315,  315,  262,  285,    6,  331,  115,   85,
 /*  1490 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1500 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1510 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   60,
 /*  1520 */    25,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1530 */    92,    1,  315,  315,  262,  285,    6,  331,  119,  184,
 /*  1540 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1550 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1560 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   70,
 /*  1570 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1580 */    92,    1,  315,  315,  262,  285,    6,  331,  107,  184,
 /*  1590 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1600 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1610 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   72,
 /*  1620 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1630 */    92,    1,  315,  315,  262,  285,    6,  331,  118,  176,
 /*  1640 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1650 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1660 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   82,
 /*  1670 */    25,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1680 */    92,    1,  315,  315,  262,  285,    6,  331,  121,  184,
 /*  1690 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1700 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1710 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   55,
 /*  1720 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1730 */    92,  315,  315,  315,  262,  285,    6,  331,  121,  187,
 /*  1740 */   315,  315,  215,  315,  214,   88,  315,  315,  315,  124,
 /*  1750 */   315,  315,  218,  226,  315,  315,   49,  315,  315,  315,
 /*  1760 */   315,  315,  328,  315,  315,  315,  219,  315,  217,   66,
 /*  1770 */    29,  315,  120,   47,   43,  268,  231,  246,  329,  315,
 /*  1780 */    92,  315,  315,  315,  262,  285,  315,  331,  315,  315,
 /*  1790 */   315,  315,  315,  315,  197,   88,  315,  315,  315,  315,
 /*  1800 */   328,  315,  315,  315,  219,  328,  217,   56,  315,  219,
 /*  1810 */   120,  217,   66,  315,  315,  120,  329,  315,  315,  315,
 /*  1820 */   315,  329,  262,  285,  315,  331,  315,  262,  285,  315,
 /*  1830 */   331,  315,  315,  315,  328,  315,  315,  210,  219,  315,
 /*  1840 */   217,   66,  315,  315,  120,  315,  315,  315,  328,  315,
 /*  1850 */   329,  315,  219,  315,  217,   66,  262,  285,  120,  331,
 /*  1860 */   315,  315,  315,  315,  329,  315,  203,  315,  315,  315,
 /*  1870 */   262,  285,  315,  331,  315,  315,  315,  328,  315,  315,
 /*  1880 */   298,  219,  328,  217,   65,  315,  219,  120,  217,   52,
 /*  1890 */   315,  315,  120,  329,  315,  315,  315,  315,  329,  262,
 /*  1900 */   285,  315,  331,  315,  262,  285,  315,  331,  315,  328,
 /*  1910 */   315,  315,  315,  219,  315,  217,   61,  315,  315,  120,
 /*  1920 */   328,  315,  315,  315,  219,  329,  217,   63,  315,  315,
 /*  1930 */   120,  262,  285,  315,  331,  315,  329,  315,  315,  315,
 /*  1940 */   328,  315,  262,  285,  219,  331,  217,   62,  328,  315,
 /*  1950 */   120,  315,  219,  315,  217,   84,  329,  315,  120,  315,
 /*  1960 */   315,  315,  262,  285,  329,  331,  315,  315,  328,  315,
 /*  1970 */   262,  285,  219,  331,  217,   77,  315,  315,  120,  315,
 /*  1980 */   315,  315,  328,  315,  329,  315,  219,  315,  217,   75,
 /*  1990 */   262,  285,  120,  331,  315,  315,  315,  315,  329,  315,
 /*  2000 */   315,  315,  328,  315,  262,  285,  219,  331,  217,   67,
 /*  2010 */   315,  315,  120,  328,  315,  315,  315,  219,  329,  217,
 /*  2020 */    80,  315,  315,  120,  262,  285,  315,  331,  315,  329,
 /*  2030 */   315,  315,  315,  315,  315,  262,  285,  328,  331,  315,
 /*  2040 */   315,  224,  315,  217,  315,  328,  315,  120,  315,  238,
 /*  2050 */   315,  217,  315,  194,  315,  120,  315,  315,  315,  262,
 /*  2060 */   285,  240,  331,  315,  315,  315,  315,  262,  285,  315,
 /*  2070 */   331,  328,  315,  315,  315,  234,  315,  217,  315,  315,
 /*  2080 */   328,  120,  315,  315,  239,  315,  217,  256,  315,  315,
 /*  2090 */   120,  328,  315,  262,  285,  271,  331,  217,  315,  315,
 /*  2100 */   328,  120,  262,  285,  243,  331,  217,  315,  315,  315,
 /*  2110 */   120,  328,  315,  262,  285,  280,  331,  217,  315,  315,
 /*  2120 */   328,  120,  262,  285,  261,  331,  217,  315,  315,  315,
 /*  2130 */   120,  328,  315,  262,  285,  295,  331,  217,  315,  315,
 /*  2140 */   315,  120,  262,  285,  315,  331,  315,  315,  315,  315,
 /*  2150 */   315,  315,  315,  262,  285,  315,  331,  328,  315,  315,
 /*  2160 */   315,  236,  315,  217,  315,  315,  315,  120,  315,  315,
 /*  2170 */   315,  315,  315,  315,  315,  315,  315,  315,  315,  262,
 /*  2180 */   285,  315,  331,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   30,  110,  111,    3,    4,    5,    6,    7,    8,
 /*    10 */     9,   10,   11,   12,   19,   20,   15,   81,   89,   16,
 /*    20 */    49,   22,   21,   49,   23,   22,   27,   98,   57,   28,
 /*    30 */   101,  102,   31,   34,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,    4,    5,    6,
 /*    50 */     7,    8,   57,  117,  118,   12,   13,   14,   80,   81,
 /*    60 */    82,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,    1,   81,   30,   16,   33,   85,   49,
 /*    80 */    87,   88,   22,   90,   91,   55,   86,   57,   16,   89,
 /*    90 */    97,   61,   81,   48,   22,   24,  103,  104,   98,  106,
 /*   100 */   100,  101,  102,   99,   33,   61,   34,   35,   36,   37,
 /*   110 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   120 */    78,   79,   80,   81,   82,   18,   16,   16,   15,  118,
 /*   130 */    17,   18,   22,   22,   62,   63,   64,   65,   66,   67,
 /*   140 */    68,   69,   70,   71,   72,   73,    1,   81,   17,   15,
 /*   150 */    16,   85,   18,   87,   88,   99,   90,   91,   48,   86,
 /*   160 */    49,   16,   89,   97,   30,   58,   19,   22,   57,  103,
 /*   170 */   104,   98,  106,  100,  101,  102,   29,   99,    1,   34,
 /*   180 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   190 */    45,   46,   47,   16,   92,   93,   49,   20,   15,   22,
 /*   200 */    25,   18,   19,  108,   57,  110,  111,   62,   63,   64,
 /*   210 */    65,   66,   67,   68,   69,   70,   71,   72,   73,    1,
 /*   220 */    81,   17,   18,   49,   85,   15,   87,   88,   18,   90,
 /*   230 */    91,   57,   86,   16,   16,   89,   97,   86,   17,   22,
 /*   240 */    89,   58,  103,  104,   98,  106,  100,  101,  102,   98,
 /*   250 */    75,  100,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   260 */    42,   43,   44,   45,   46,   47,   50,   15,   58,   15,
 /*   270 */    18,   19,   18,   19,   16,   15,   16,   25,   18,    2,
 /*   280 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   290 */    72,   73,    1,   81,   87,   16,   19,   85,   91,   87,
 /*   300 */    88,   22,   90,   91,   25,   86,   48,   16,   89,   97,
 /*   310 */    20,  110,  111,  106,   15,  103,  104,   98,  106,  100,
 /*   320 */   101,  102,  107,   18,  109,   34,   35,   36,   37,   38,
 /*   330 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   19,
 /*   340 */    29,   15,   16,   15,   18,   55,   18,   55,   49,  107,
 /*   350 */    60,  109,   60,   62,   63,   64,   65,   66,   67,   68,
 /*   360 */    69,   70,   71,   72,   73,    1,    1,   81,   16,   15,
 /*   370 */    16,   85,   18,   87,   88,   55,   90,   91,   17,   86,
 /*   380 */    86,   16,   89,   97,   30,   20,   58,   22,   24,  103,
 /*   390 */   104,   98,  106,  100,  100,    1,   17,   17,   34,   35,
 /*   400 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   410 */    46,   47,    1,   82,   49,   84,   22,   15,   17,   18,
 /*   420 */    18,   15,   57,   17,   18,   86,   62,   63,   64,   65,
 /*   430 */    66,   67,   68,   69,   70,   71,   72,   73,   32,  100,
 /*   440 */    15,   29,   18,   18,   33,   34,   35,   36,   37,   38,
 /*   450 */    39,   40,   41,   42,   43,   44,   45,   46,   47,    1,
 /*   460 */    59,   16,   16,   16,   48,   55,   16,   22,   22,   22,
 /*   470 */    25,   86,   22,   62,   63,   64,   65,   66,   67,   68,
 /*   480 */    69,   70,   71,   72,   73,  100,    2,   15,   15,   18,
 /*   490 */    18,   18,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   500 */    42,   43,   44,   45,   46,   47,   22,   18,   18,   16,
 /*   510 */    16,   16,   16,   16,   16,   22,   22,   22,   22,   22,
 /*   520 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   530 */    72,   73,    1,   75,   81,   86,  107,   32,   85,   18,
 /*   540 */    87,   88,   48,   49,   91,   92,   86,   16,   16,  100,
 /*   550 */    97,   57,   18,   32,   22,   16,  103,  104,   98,  106,
 /*   560 */   100,   22,   18,  114,   49,   34,   35,   36,   37,   38,
 /*   570 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   25,
 /*   580 */    48,   19,   16,   16,   16,   16,   16,    2,   22,   22,
 /*   590 */    22,   22,   22,   62,   63,   64,   65,   66,   67,   68,
 /*   600 */    69,   70,   71,   72,   73,    1,   81,   32,   16,   95,
 /*   610 */    85,   81,   87,   88,   22,   85,   91,   87,   88,   96,
 /*   620 */    16,   91,   97,  109,    2,   20,   61,   97,  103,  104,
 /*   630 */    50,  106,  109,  103,  104,   16,  106,   26,   34,   35,
 /*   640 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   650 */    46,   47,    1,  105,  105,   15,   18,   51,   18,   22,
 /*   660 */   112,  112,   57,   22,   86,   86,   62,   63,   64,   65,
 /*   670 */    66,   67,   68,   69,   70,   71,   72,   73,  100,  100,
 /*   680 */    59,   50,   59,   18,  100,   34,   35,   36,   37,   38,
 /*   690 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   19,
 /*   700 */     1,  108,   20,  107,  109,   98,   22,   22,   17,  112,
 /*   710 */   111,   94,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   720 */    69,   70,   71,   72,   73,    1,   81,  114,   13,   95,
 /*   730 */    85,   81,   87,   88,   92,   85,   91,   87,   88,  107,
 /*   740 */     2,   91,   97,  109,   22,   83,   22,   97,  103,  104,
 /*   750 */    94,  106,  119,  103,  104,  107,  106,  119,   34,   35,
 /*   760 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   770 */    46,   47,  119,  119,  119,  119,  119,  119,  119,  119,
 /*   780 */   119,  119,  119,  119,  119,   95,   62,   63,   64,   65,
 /*   790 */    66,   67,   68,   69,   70,   71,   72,   73,    1,  109,
 /*   800 */   119,   81,  119,  119,   86,   85,  119,   87,   88,   10,
 /*   810 */   119,   91,  119,   16,   15,  119,   98,   97,  100,  119,
 /*   820 */    21,  119,   23,  103,  104,  119,  106,   28,  119,  119,
 /*   830 */    31,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*   840 */    43,   44,   45,   46,   47,    1,    2,  119,  119,  119,
 /*   850 */   119,  119,  119,  119,  119,  119,  119,   95,   95,   62,
 /*   860 */    63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
 /*   870 */    73,  109,  109,   74,   75,   76,  119,  119,   34,   35,
 /*   880 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   890 */    46,   47,    1,  119,  119,  119,  119,  119,  119,  119,
 /*   900 */   119,  119,  119,  119,   95,   95,   62,   63,   64,   65,
 /*   910 */    66,   67,   68,   69,   70,   71,   72,   73,  109,  109,
 /*   920 */   119,  119,  119,  119,  119,   34,   35,   36,   37,   38,
 /*   930 */    39,   40,   41,   42,   43,   44,   45,   46,   47,  119,
 /*   940 */   119,   50,  119,  119,  119,  119,  119,  119,  119,  119,
 /*   950 */   119,  119,   86,   62,   63,   64,   65,   66,   67,   68,
 /*   960 */    69,   70,   71,   72,   73,    1,  100,  119,   81,  119,
 /*   970 */   119,   86,   85,  119,   87,   88,   10,  119,   91,  119,
 /*   980 */    16,   15,  119,   98,   97,  100,  119,   21,  119,   23,
 /*   990 */   103,  104,  119,  106,   28,  119,  119,   31,   34,   35,
 /*  1000 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*  1010 */    46,   47,    1,  119,  119,  119,  119,  119,  119,  119,
 /*  1020 */   119,  119,  119,  119,   95,   95,   62,   63,   64,   65,
 /*  1030 */    66,   67,   68,   69,   70,   71,   72,   73,  109,  109,
 /*  1040 */    74,   75,   76,  119,  119,   34,   35,   36,   37,   38,
 /*  1050 */    39,   40,   41,   42,   43,   44,   45,   46,   47,    1,
 /*  1060 */   119,   50,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  1070 */   119,   95,  119,   62,   63,   64,   65,   66,   67,   68,
 /*  1080 */    69,   70,   71,   72,   73,  109,  119,  119,  119,  119,
 /*  1090 */   119,  119,   34,   35,   36,   37,   38,   39,   40,   41,
 /*  1100 */    42,   43,   44,   45,   46,   47,  119,  119,  119,  119,
 /*  1110 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
 /*  1120 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*  1130 */    72,   73,  119,    1,  119,  119,   15,  119,   17,   18,
 /*  1140 */   119,  119,   21,   86,   23,  119,  119,  119,   16,   28,
 /*  1150 */   119,  119,   31,   32,   22,   98,   35,  100,  119,  119,
 /*  1160 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1170 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1180 */    59,   60,   61,  119,  103,  104,   15,  106,   17,   18,
 /*  1190 */   119,  119,   21,  119,   23,   74,  115,  116,  119,   28,
 /*  1200 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1210 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1220 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1230 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1240 */   119,  119,   21,  119,   23,   74,  119,  116,  119,   28,
 /*  1250 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1260 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1270 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1280 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1290 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1300 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1310 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1320 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1330 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1340 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1350 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1360 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1370 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1380 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1390 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1400 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1410 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1420 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1430 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1440 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1450 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1460 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1470 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1480 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1490 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1500 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1510 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1520 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1530 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1540 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1550 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1560 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1570 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1580 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1590 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1600 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1610 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1620 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1630 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1640 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1650 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1660 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1670 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1680 */    59,   60,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1690 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1700 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1710 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1720 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1730 */    59,  119,  119,  119,  103,  104,   15,  106,   17,   18,
 /*  1740 */   119,  119,   21,  119,   23,   74,  119,  119,  119,   28,
 /*  1750 */   119,  119,   31,   32,  119,  119,   35,  119,  119,  119,
 /*  1760 */   119,  119,   81,  119,  119,  119,   85,  119,   87,   88,
 /*  1770 */    49,  119,   91,   52,   53,   54,   55,   56,   97,  119,
 /*  1780 */    59,  119,  119,  119,  103,  104,  119,  106,  119,  119,
 /*  1790 */   119,  119,  119,  119,  113,   74,  119,  119,  119,  119,
 /*  1800 */    81,  119,  119,  119,   85,   81,   87,   88,  119,   85,
 /*  1810 */    91,   87,   88,  119,  119,   91,   97,  119,  119,  119,
 /*  1820 */   119,   97,  103,  104,  119,  106,  119,  103,  104,  119,
 /*  1830 */   106,  119,  119,  119,   81,  119,  119,  113,   85,  119,
 /*  1840 */    87,   88,  119,  119,   91,  119,  119,  119,   81,  119,
 /*  1850 */    97,  119,   85,  119,   87,   88,  103,  104,   91,  106,
 /*  1860 */   119,  119,  119,  119,   97,  119,  113,  119,  119,  119,
 /*  1870 */   103,  104,  119,  106,  119,  119,  119,   81,  119,  119,
 /*  1880 */   113,   85,   81,   87,   88,  119,   85,   91,   87,   88,
 /*  1890 */   119,  119,   91,   97,  119,  119,  119,  119,   97,  103,
 /*  1900 */   104,  119,  106,  119,  103,  104,  119,  106,  119,   81,
 /*  1910 */   119,  119,  119,   85,  119,   87,   88,  119,  119,   91,
 /*  1920 */    81,  119,  119,  119,   85,   97,   87,   88,  119,  119,
 /*  1930 */    91,  103,  104,  119,  106,  119,   97,  119,  119,  119,
 /*  1940 */    81,  119,  103,  104,   85,  106,   87,   88,   81,  119,
 /*  1950 */    91,  119,   85,  119,   87,   88,   97,  119,   91,  119,
 /*  1960 */   119,  119,  103,  104,   97,  106,  119,  119,   81,  119,
 /*  1970 */   103,  104,   85,  106,   87,   88,  119,  119,   91,  119,
 /*  1980 */   119,  119,   81,  119,   97,  119,   85,  119,   87,   88,
 /*  1990 */   103,  104,   91,  106,  119,  119,  119,  119,   97,  119,
 /*  2000 */   119,  119,   81,  119,  103,  104,   85,  106,   87,   88,
 /*  2010 */   119,  119,   91,   81,  119,  119,  119,   85,   97,   87,
 /*  2020 */    88,  119,  119,   91,  103,  104,  119,  106,  119,   97,
 /*  2030 */   119,  119,  119,  119,  119,  103,  104,   81,  106,  119,
 /*  2040 */   119,   85,  119,   87,  119,   81,  119,   91,  119,   85,
 /*  2050 */   119,   87,  119,   97,  119,   91,  119,  119,  119,  103,
 /*  2060 */   104,   97,  106,  119,  119,  119,  119,  103,  104,  119,
 /*  2070 */   106,   81,  119,  119,  119,   85,  119,   87,  119,  119,
 /*  2080 */    81,   91,  119,  119,   85,  119,   87,   97,  119,  119,
 /*  2090 */    91,   81,  119,  103,  104,   85,  106,   87,  119,  119,
 /*  2100 */    81,   91,  103,  104,   85,  106,   87,  119,  119,  119,
 /*  2110 */    91,   81,  119,  103,  104,   85,  106,   87,  119,  119,
 /*  2120 */    81,   91,  103,  104,   85,  106,   87,  119,  119,  119,
 /*  2130 */    91,   81,  119,  103,  104,   85,  106,   87,  119,  119,
 /*  2140 */   119,   91,  103,  104,  119,  106,  119,  119,  119,  119,
 /*  2150 */   119,  119,  119,  103,  104,  119,  106,   81,  119,  119,
 /*  2160 */   119,   85,  119,   87,  119,  119,  119,   91,  119,  119,
 /*  2170 */   119,  119,  119,  119,  119,  119,  119,  119,  119,  103,
 /*  2180 */   104,  119,  106,
);
    const YY_SHIFT_USE_DFLT = -30;
    const YY_SHIFT_MAX = 232;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1371, 1621, 1171, 1171, 1421, 1471, 1421, 1371, 1571,
 /*    10 */  1171, 1171, 1471, 1121, 1171, 1171, 1171, 1171, 1171, 1171,
 /*    20 */  1321, 1171, 1521, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
 /*    30 */  1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
 /*    40 */  1271, 1271, 1221, 1671, 1721, 1671, 1671, 1671, 1671, 1671,
 /*    50 */   145,   72,   -1,  724,  724,  797,  844,  651,  964,  458,
 /*    60 */  1011,  291,  218,  364,  604,  531,  411,  891, 1058, 1058,
 /*    70 */  1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
 /*    80 */  1058, 1058, 1058, 1058, 1058,  365,  394,    1,  966,  177,
 /*    90 */   290, 1132,  401,  484,  394,  394,  799,   43,  252,  183,
 /*   100 */    -5,  110,  445,  328,  279,  425,  425,  402,  425,  425,
 /*   110 */   425,  204,  473,  204,  425,  640,  425,  425,  402,  472,
 /*   120 */   605,  425,  684,  682,  685,  684,  691,  682,  684,  354,
 /*   130 */   134,  210,  254,  113,  260,  326,  217,   60,  570,  567,
 /*   140 */   299,  292,  569,  568,  566,  539,    3,  292,  447,  292,
 /*   150 */   450,  292,  497,  495,  292,  592,  496,  493,  446,  699,
 /*   160 */   682,  722,  722,  691,  682,  738,  682,  715,  -26,  738,
 /*   170 */   -30,  -30,  -30,  -30,  -30,  494,  111,  147,  406,   30,
 /*   180 */   532,  -29,   45,   71,  174,  107,  258,  174,  277,  320,
 /*   190 */    44,  175,  521,  -26,  311,  352,  305,  216,  221,  131,
 /*   200 */   680,  619,  611,  580,  565,  562,  622,  575,  606,  638,
 /*   210 */   631,  665,  623,  621,  637,  641,  585,  554,  489,  416,
 /*   220 */   471,  424,  379,  380,  412,  490,  410,  544,  361,  515,
 /*   230 */   534,  505,  498,
);
    const YY_REDUCE_USE_DFLT = -109;
    const YY_REDUCE_MAX = 174;
    static public $yy_reduce_ofst = array(
 /*     0 */    42, 1081,   66, 1767, 1724,  212,  286,  139, 1131,  453,
 /*    10 */  1753, 1681,   -7,  525,  650,  645,  720, 1901, 1887, 1331,
 /*    20 */  1231, 1859, 1719, 1839, 1381, 1921,  530, 1932, 1867, 1431,
 /*    30 */  1281, 1801, 1796, 1631, 1828, 1581, 1531, 1181,  887, 1481,
 /*    40 */  1964, 1990, 1956, 2030, 1999, 2076, 2050, 2039, 2010, 2019,
 /*    50 */   219,    0,   73,  219,  146,  -71,  -71,  -71,  -71,  -71,
 /*    60 */   -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
 /*    70 */   -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
 /*    80 */   -71,  -71,  -71,  -71,  -71,  293,  151,  -22,  -64,  885,
 /*    90 */    95,  718,  207,  449, 1057,  460,   11,  331,  523,  242,
 /*   100 */  -108,  579,  578,  242,  578,  634,  514,  690,  763,  762,
 /*   110 */   809,  548,  930,  549,  976,  810,  929,  215,  810,  810,
 /*   120 */  -108,  810,  866,  201,  385,  294,  102, -108,  339,  595,
 /*   130 */   595,  595,  595,  597,  595,  595,  584,  584,  584,  584,
 /*   140 */   596,  593,  584,  584,  584,  584,  584,  593,  584,  593,
 /*   150 */   584,  593,  584,  584,  593,  584,  584,  584,  584,  607,
 /*   160 */   599,  656,  617,  642,  599,  613,  599,  662,  648,  613,
 /*   170 */   632,  429,   78,   56,    4,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, ),
        /* 1 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 2 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 3 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 4 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 5 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 6 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 7 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 8 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 9 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 10 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 11 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 12 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 13 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 61, 74, ),
        /* 14 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 15 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 16 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 17 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 18 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 19 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 20 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 21 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 22 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 23 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 24 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 25 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 26 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 27 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 28 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 29 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 30 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 31 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 32 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 33 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 34 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 35 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 36 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 37 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 38 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 39 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 40 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 41 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 42 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 60, 74, ),
        /* 43 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 44 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 45 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 46 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 47 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 48 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 49 */ array(15, 17, 18, 21, 23, 28, 31, 32, 35, 49, 52, 53, 54, 55, 56, 59, 74, ),
        /* 50 */ array(1, 16, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 51 */ array(1, 16, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 52 */ array(1, 22, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 53 */ array(1, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 54 */ array(1, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 55 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 56 */ array(1, 2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 57 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 58 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 59 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, ),
        /* 60 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 61 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 62 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 63 */ array(1, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 64 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 65 */ array(1, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 66 */ array(1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 67 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 68 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 69 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 70 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 71 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 72 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 73 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 74 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 75 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 76 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 77 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 78 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 79 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 80 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 81 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 82 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 83 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 84 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, ),
        /* 85 */ array(1, 16, 20, 22, 49, 57, ),
        /* 86 */ array(1, 22, ),
        /* 87 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, ),
        /* 88 */ array(10, 15, 21, 23, 28, 31, 74, 75, 76, ),
        /* 89 */ array(1, 16, 20, 22, ),
        /* 90 */ array(20, 55, 60, ),
        /* 91 */ array(1, 16, 22, ),
        /* 92 */ array(17, 18, 59, ),
        /* 93 */ array(2, 22, ),
        /* 94 */ array(1, 22, ),
        /* 95 */ array(1, 22, ),
        /* 96 */ array(10, 15, 21, 23, 28, 31, 74, 75, 76, ),
        /* 97 */ array(4, 5, 6, 7, 8, 12, 13, 14, ),
        /* 98 */ array(15, 18, 19, 25, ),
        /* 99 */ array(15, 18, 19, 58, ),
        /* 100 */ array(19, 20, 57, ),
        /* 101 */ array(16, 22, 48, ),
        /* 102 */ array(16, 22, 25, ),
        /* 103 */ array(15, 18, 58, ),
        /* 104 */ array(16, 22, 25, ),
        /* 105 */ array(15, 18, ),
        /* 106 */ array(15, 18, ),
        /* 107 */ array(15, 18, ),
        /* 108 */ array(15, 18, ),
        /* 109 */ array(15, 18, ),
        /* 110 */ array(15, 18, ),
        /* 111 */ array(17, 18, ),
        /* 112 */ array(15, 18, ),
        /* 113 */ array(17, 18, ),
        /* 114 */ array(15, 18, ),
        /* 115 */ array(15, 18, ),
        /* 116 */ array(15, 18, ),
        /* 117 */ array(15, 18, ),
        /* 118 */ array(15, 18, ),
        /* 119 */ array(15, 18, ),
        /* 120 */ array(20, 57, ),
        /* 121 */ array(15, 18, ),
        /* 122 */ array(22, ),
        /* 123 */ array(20, ),
        /* 124 */ array(22, ),
        /* 125 */ array(22, ),
        /* 126 */ array(17, ),
        /* 127 */ array(20, ),
        /* 128 */ array(22, ),
        /* 129 */ array(15, 16, 18, 30, ),
        /* 130 */ array(15, 16, 18, 30, ),
        /* 131 */ array(15, 18, 58, ),
        /* 132 */ array(15, 18, 19, ),
        /* 133 */ array(15, 17, 18, ),
        /* 134 */ array(15, 16, 18, ),
        /* 135 */ array(15, 16, 18, ),
        /* 136 */ array(16, 22, ),
        /* 137 */ array(16, 22, ),
        /* 138 */ array(16, 22, ),
        /* 139 */ array(16, 22, ),
        /* 140 */ array(15, 49, ),
        /* 141 */ array(55, 60, ),
        /* 142 */ array(16, 22, ),
        /* 143 */ array(16, 22, ),
        /* 144 */ array(16, 22, ),
        /* 145 */ array(16, 22, ),
        /* 146 */ array(16, 22, ),
        /* 147 */ array(55, 60, ),
        /* 148 */ array(16, 22, ),
        /* 149 */ array(55, 60, ),
        /* 150 */ array(16, 22, ),
        /* 151 */ array(55, 60, ),
        /* 152 */ array(16, 22, ),
        /* 153 */ array(16, 22, ),
        /* 154 */ array(55, 60, ),
        /* 155 */ array(16, 22, ),
        /* 156 */ array(16, 22, ),
        /* 157 */ array(16, 22, ),
        /* 158 */ array(16, 22, ),
        /* 159 */ array(1, ),
        /* 160 */ array(20, ),
        /* 161 */ array(22, ),
        /* 162 */ array(22, ),
        /* 163 */ array(17, ),
        /* 164 */ array(20, ),
        /* 165 */ array(2, ),
        /* 166 */ array(20, ),
        /* 167 */ array(13, ),
        /* 168 */ array(49, ),
        /* 169 */ array(2, ),
        /* 170 */ array(),
        /* 171 */ array(),
        /* 172 */ array(),
        /* 173 */ array(),
        /* 174 */ array(),
        /* 175 */ array(16, 22, 48, 49, 57, ),
        /* 176 */ array(16, 22, 49, 57, ),
        /* 177 */ array(19, 29, 49, 57, ),
        /* 178 */ array(15, 17, 18, 32, ),
        /* 179 */ array(49, 55, 57, 61, ),
        /* 180 */ array(16, 22, 48, ),
        /* 181 */ array(30, 49, 57, ),
        /* 182 */ array(30, 48, ),
        /* 183 */ array(24, 33, ),
        /* 184 */ array(49, 57, ),
        /* 185 */ array(18, 58, ),
        /* 186 */ array(16, 48, ),
        /* 187 */ array(49, 57, ),
        /* 188 */ array(2, 19, ),
        /* 189 */ array(19, 55, ),
        /* 190 */ array(33, 61, ),
        /* 191 */ array(25, 75, ),
        /* 192 */ array(18, 32, ),
        /* 193 */ array(49, ),
        /* 194 */ array(29, ),
        /* 195 */ array(16, ),
        /* 196 */ array(18, ),
        /* 197 */ array(50, ),
        /* 198 */ array(17, ),
        /* 199 */ array(17, ),
        /* 200 */ array(19, ),
        /* 201 */ array(16, ),
        /* 202 */ array(26, ),
        /* 203 */ array(50, ),
        /* 204 */ array(61, ),
        /* 205 */ array(19, ),
        /* 206 */ array(2, ),
        /* 207 */ array(32, ),
        /* 208 */ array(51, ),
        /* 209 */ array(18, ),
        /* 210 */ array(50, ),
        /* 211 */ array(18, ),
        /* 212 */ array(59, ),
        /* 213 */ array(59, ),
        /* 214 */ array(22, ),
        /* 215 */ array(22, ),
        /* 216 */ array(2, ),
        /* 217 */ array(25, ),
        /* 218 */ array(18, ),
        /* 219 */ array(48, ),
        /* 220 */ array(18, ),
        /* 221 */ array(18, ),
        /* 222 */ array(17, ),
        /* 223 */ array(17, ),
        /* 224 */ array(29, ),
        /* 225 */ array(18, ),
        /* 226 */ array(55, ),
        /* 227 */ array(18, ),
        /* 228 */ array(17, ),
        /* 229 */ array(49, ),
        /* 230 */ array(18, ),
        /* 231 */ array(32, ),
        /* 232 */ array(16, ),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
);
    static public $yy_default = array(
 /*     0 */   377,  551,  568,  522,  522,  568,  568,  568,  568,  568,
 /*    10 */   522,  522,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    20 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    30 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    40 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    50 */   568,  568,  435,  435,  435,  568,  568,  568,  568,  568,
 /*    60 */   568,  568,  568,  568,  568,  568,  521,  568,  444,  553,
 /*    70 */   452,  554,  455,  457,  464,  465,  437,  420,  461,  468,
 /*    80 */   456,  469,  441,  460,  552,  480,  435,  374,  568,  568,
 /*    90 */   534,  451,  568,  435,  435,  435,  568,  568,  568,  495,
 /*   100 */   488,  445,  470,  495,  470,  568,  568,  568,  568,  568,
 /*   110 */   568,  568,  568,  568,  568,  568,  568,  495,  568,  568,
 /*   120 */   488,  568,  435,  531,  435,  435,  568,  488,  435,  568,
 /*   130 */   568,  496,  568,  568,  568,  568,  568,  568,  568,  568,
 /*   140 */   495,  513,  568,  568,  568,  568,  568,  515,  568,  514,
 /*   150 */   568,  493,  568,  568,  512,  568,  568,  568,  568,  451,
 /*   160 */   532,  567,  567,  568,  509,  524,  535,  392,  495,  523,
 /*   170 */   495,  495,  528,  528,  528,  446,  480,  440,  568,  480,
 /*   180 */   445,  480,  445,  568,  480,  568,  445,  466,  507,  476,
 /*   190 */   568,  470,  568,  507,  568,  568,  568,  568,  568,  568,
 /*   200 */   568,  568,  442,  568,  568,  440,  507,  478,  482,  568,
 /*   210 */   568,  568,  568,  568,  568,  568,  507,  470,  568,  445,
 /*   220 */   568,  568,  568,  568,  568,  568,  476,  568,  568,  533,
 /*   230 */   568,  568,  568,  387,  454,  518,  449,  508,  529,  467,
 /*   240 */   530,  432,  516,  471,  517,  474,  483,  500,  501,  526,
 /*   250 */   434,  503,  492,  431,  525,  502,  453,  482,  491,  527,
 /*   260 */   504,  472,  481,  497,  380,  379,  423,  422,  475,  382,
 /*   270 */   381,  447,  418,  477,  376,  375,  439,  479,  485,  378,
 /*   280 */   473,  383,  494,  428,  489,  484,  427,  498,  505,  386,
 /*   290 */   385,  443,  384,  446,  566,  448,  421,  499,  520,  400,
 /*   300 */   541,  540,  542,  543,  544,  433,  401,  410,  539,  537,
 /*   310 */   412,  413,  399,  510,  538,  411,  545,  546,  406,  407,
 /*   320 */   408,  402,  562,  405,  404,  403,  419,  511,  487,  450,
 /*   330 */   547,  490,  417,  409,  424,  536,  398,  391,  550,  549,
 /*   340 */   548,  426,  458,  394,  393,  506,  507,  563,  519,  486,
 /*   350 */   389,  430,  429,  390,  395,  558,  415,  555,  556,  425,
 /*   360 */   462,  414,  463,  416,  557,  397,  561,  564,  565,  559,
 /*   370 */   459,  396,  560,  388,
);
    const YYNOCODE = 120;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 374;
    const YYNRULE = 194;
    const YYERRORSYMBOL = 77;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',   
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',   
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',        
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',       
  'PTR',           'LDELIF',        'SPACE',         'LDELFOR',     
  'SEMICOLON',     'INCDEC',        'TO',            'STEP',        
  'LDELFOREACH',   'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'MATH',          'UNIMATH',     
  'ANDSYM',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'OPENP',         'CLOSEP',        'QMARK',       
  'NOT',           'TYPECAST',      'HEX',           'DOT',         
  'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',            'HATCH',       
  'OPENB',         'CLOSEB',        'EQUALS',        'NOTEQUALS',   
  'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',   
  'IDENTITY',      'NONEIDENTITY',  'MOD',           'LAND',        
  'LOR',           'LXOR',          'QUOTE',         'BACKTICK',    
  'DOLLARID',      'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'value',         'attributes',    'variable',    
  'expr',          'modifierlist',  'ternary',       'varindexed',  
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'modifier',      'modparameters',
  'attribute',     'ifcond',        'lop',           'function',    
  'doublequoted_with_quotes',  'static_class_access',  'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "literal_element ::= ASPSTARTTAG",
 /*  25 */ "literal_element ::= ASPENDTAG",
 /*  26 */ "smartytag ::= LDEL value RDEL",
 /*  27 */ "smartytag ::= LDEL value attributes RDEL",
 /*  28 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  29 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  31 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  32 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID RDEL",
 /*  40 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  42 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  43 */ "smartytag ::= LDELIF SPACE expr RDEL",
 /*  44 */ "smartytag ::= LDELIF SPACE statement RDEL",
 /*  45 */ "smartytag ::= LDELFOR SPACE statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  46 */ "foraction ::= EQUAL expr",
 /*  47 */ "foraction ::= INCDEC",
 /*  48 */ "smartytag ::= LDELFOR SPACE statement TO expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOR SPACE statement TO expr STEP expr RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  55 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  56 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  57 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  59 */ "attributes ::= attributes attribute",
 /*  60 */ "attributes ::= attribute",
 /*  61 */ "attributes ::=",
 /*  62 */ "attribute ::= SPACE ID EQUAL ID",
 /*  63 */ "attribute ::= SPACE ID EQUAL expr",
 /*  64 */ "attribute ::= SPACE ID EQUAL value",
 /*  65 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  66 */ "attribute ::= SPACE ID",
 /*  67 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  68 */ "statements ::= statement",
 /*  69 */ "statements ::= statements COMMA statement",
 /*  70 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  71 */ "expr ::= value",
 /*  72 */ "expr ::= DOLLAR ID COLON ID",
 /*  73 */ "expr ::= expr MATH value",
 /*  74 */ "expr ::= expr UNIMATH value",
 /*  75 */ "expr ::= expr ANDSYM value",
 /*  76 */ "expr ::= array",
 /*  77 */ "expr ::= expr modifierlist",
 /*  78 */ "expr ::= expr ifcond expr",
 /*  79 */ "expr ::= expr ISIN array",
 /*  80 */ "expr ::= expr ISIN value",
 /*  81 */ "expr ::= expr lop expr",
 /*  82 */ "expr ::= expr ISDIVBY expr",
 /*  83 */ "expr ::= expr ISNOTDIVBY expr",
 /*  84 */ "expr ::= expr ISEVEN",
 /*  85 */ "expr ::= expr ISNOTEVEN",
 /*  86 */ "expr ::= expr ISEVENBY expr",
 /*  87 */ "expr ::= expr ISNOTEVENBY expr",
 /*  88 */ "expr ::= expr ISODD",
 /*  89 */ "expr ::= expr ISNOTODD",
 /*  90 */ "expr ::= expr ISODDBY expr",
 /*  91 */ "expr ::= expr ISNOTODDBY expr",
 /*  92 */ "expr ::= value INSTANCEOF ID",
 /*  93 */ "expr ::= value INSTANCEOF value",
 /*  94 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  95 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  96 */ "value ::= variable",
 /*  97 */ "value ::= UNIMATH value",
 /*  98 */ "value ::= NOT value",
 /*  99 */ "value ::= TYPECAST value",
 /* 100 */ "value ::= variable INCDEC",
 /* 101 */ "value ::= HEX",
 /* 102 */ "value ::= INTEGER",
 /* 103 */ "value ::= INTEGER DOT INTEGER",
 /* 104 */ "value ::= INTEGER DOT",
 /* 105 */ "value ::= DOT INTEGER",
 /* 106 */ "value ::= ID",
 /* 107 */ "value ::= function",
 /* 108 */ "value ::= OPENP expr CLOSEP",
 /* 109 */ "value ::= SINGLEQUOTESTRING",
 /* 110 */ "value ::= doublequoted_with_quotes",
 /* 111 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 112 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 113 */ "value ::= smartytag",
 /* 114 */ "variable ::= varindexed",
 /* 115 */ "variable ::= DOLLAR varvar AT ID",
 /* 116 */ "variable ::= object",
 /* 117 */ "variable ::= HATCH ID HATCH",
 /* 118 */ "variable ::= HATCH variable HATCH",
 /* 119 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 120 */ "arrayindex ::= arrayindex indexdef",
 /* 121 */ "arrayindex ::=",
 /* 122 */ "indexdef ::= DOT DOLLAR varvar",
 /* 123 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 124 */ "indexdef ::= DOT ID",
 /* 125 */ "indexdef ::= DOT INTEGER",
 /* 126 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 127 */ "indexdef ::= OPENB ID CLOSEB",
 /* 128 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 129 */ "indexdef ::= OPENB expr CLOSEB",
 /* 130 */ "indexdef ::= OPENB CLOSEB",
 /* 131 */ "varvar ::= varvarele",
 /* 132 */ "varvar ::= varvar varvarele",
 /* 133 */ "varvarele ::= ID",
 /* 134 */ "varvarele ::= LDEL expr RDEL",
 /* 135 */ "object ::= varindexed objectchain",
 /* 136 */ "objectchain ::= objectelement",
 /* 137 */ "objectchain ::= objectchain objectelement",
 /* 138 */ "objectelement ::= PTR ID arrayindex",
 /* 139 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 140 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 141 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 142 */ "objectelement ::= PTR method",
 /* 143 */ "function ::= ID OPENP params CLOSEP",
 /* 144 */ "method ::= ID OPENP params CLOSEP",
 /* 145 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 146 */ "params ::= expr COMMA params",
 /* 147 */ "params ::= expr",
 /* 148 */ "params ::=",
 /* 149 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 150 */ "modifierlist ::= modifier modparameters",
 /* 151 */ "modifier ::= VERT AT ID",
 /* 152 */ "modifier ::= VERT ID",
 /* 153 */ "modparameters ::= modparameters modparameter",
 /* 154 */ "modparameters ::=",
 /* 155 */ "modparameter ::= COLON value",
 /* 156 */ "modparameter ::= COLON array",
 /* 157 */ "static_class_access ::= method",
 /* 158 */ "static_class_access ::= method objectchain",
 /* 159 */ "static_class_access ::= ID",
 /* 160 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 161 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 162 */ "ifcond ::= EQUALS",
 /* 163 */ "ifcond ::= NOTEQUALS",
 /* 164 */ "ifcond ::= GREATERTHAN",
 /* 165 */ "ifcond ::= LESSTHAN",
 /* 166 */ "ifcond ::= GREATEREQUAL",
 /* 167 */ "ifcond ::= LESSEQUAL",
 /* 168 */ "ifcond ::= IDENTITY",
 /* 169 */ "ifcond ::= NONEIDENTITY",
 /* 170 */ "ifcond ::= MOD",
 /* 171 */ "lop ::= LAND",
 /* 172 */ "lop ::= LOR",
 /* 173 */ "lop ::= LXOR",
 /* 174 */ "array ::= OPENB arrayelements CLOSEB",
 /* 175 */ "arrayelements ::= arrayelement",
 /* 176 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 177 */ "arrayelements ::=",
 /* 178 */ "arrayelement ::= value APTR expr",
 /* 179 */ "arrayelement ::= ID APTR expr",
 /* 180 */ "arrayelement ::= expr",
 /* 181 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 182 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 183 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 184 */ "doublequoted ::= doublequotedcontent",
 /* 185 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 186 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 187 */ "doublequotedcontent ::= DOLLARID",
 /* 188 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 189 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 190 */ "doublequotedcontent ::= smartytag",
 /* 191 */ "doublequotedcontent ::= OTHER",
 /* 192 */ "optspace ::= SPACE",
 /* 193 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 82 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1643 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 12 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 8 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 10 ),
  array( 'lhs' => 81, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 10 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 4 ),
  array( 'lhs' => 81, 'rhs' => 6 ),
  array( 'lhs' => 81, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 8 ),
  array( 'lhs' => 90, 'rhs' => 7 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 6 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 5 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        16 => 16,
        17 => 17,
        97 => 17,
        99 => 17,
        100 => 17,
        158 => 17,
        19 => 19,
        20 => 19,
        71 => 19,
        96 => 19,
        101 => 19,
        102 => 19,
        107 => 19,
        109 => 19,
        110 => 19,
        116 => 19,
        157 => 19,
        175 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 27,
        30 => 27,
        31 => 27,
        29 => 29,
        32 => 32,
        33 => 32,
        34 => 34,
        35 => 34,
        36 => 36,
        37 => 36,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        44 => 43,
        45 => 45,
        46 => 46,
        47 => 47,
        60 => 47,
        147 => 47,
        151 => 47,
        159 => 47,
        180 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 63,
        65 => 63,
        66 => 66,
        67 => 67,
        68 => 68,
        69 => 69,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 73,
        75 => 73,
        76 => 76,
        131 => 76,
        192 => 76,
        77 => 77,
        78 => 78,
        81 => 78,
        92 => 78,
        79 => 79,
        80 => 80,
        82 => 82,
        83 => 83,
        84 => 84,
        89 => 84,
        85 => 85,
        88 => 85,
        86 => 86,
        91 => 86,
        87 => 87,
        90 => 87,
        93 => 93,
        94 => 94,
        95 => 95,
        98 => 98,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        108 => 108,
        111 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        129 => 126,
        127 => 127,
        128 => 128,
        130 => 130,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        148 => 148,
        149 => 149,
        150 => 150,
        152 => 152,
        153 => 153,
        154 => 154,
        193 => 154,
        155 => 155,
        156 => 155,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 185,
        188 => 185,
        187 => 187,
        189 => 189,
        190 => 190,
        191 => 191,
    );
#line 93 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->root_buffer->to_smarty_php();     }
#line 2057 "smarty_internal_templateparser.php"
#line 99 "smarty_internal_templateparser.y"
    function yy_r1(){ $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);     }
#line 2060 "smarty_internal_templateparser.php"
#line 111 "smarty_internal_templateparser.y"
    function yy_r4(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
                                         } else { 
                                           $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
                                         }  
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 2072 "smarty_internal_templateparser.php"
#line 123 "smarty_internal_templateparser.y"
    function yy_r5(){ $this->_retvalue = new _smarty_tag($this, '');    }
#line 2075 "smarty_internal_templateparser.php"
#line 126 "smarty_internal_templateparser.y"
    function yy_r6(){ $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2078 "smarty_internal_templateparser.php"
#line 129 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2091 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true; 
                                       $this->is_xml = true; 
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2107 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r9(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }
                                        }
#line 2128 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r10(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }
                                        }
#line 2149 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r11(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));	
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     }
                                        }
#line 2157 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));    }
#line 2160 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r13(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2168 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r14(){
                                     $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
                                       }
#line 2173 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = '';     }
#line 2176 "smarty_internal_templateparser.php"
#line 221 "smarty_internal_templateparser.y"
    function yy_r16(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2179 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2182 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2185 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2188 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2191 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r24(){ $this->_retvalue = '<<?php ?>%';     }
#line 2194 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = '%<?php ?>>';     }
#line 2197 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r26(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2200 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2203 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2206 "smarty_internal_templateparser.php"
#line 253 "smarty_internal_templateparser.y"
    function yy_r32(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2209 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2212 "smarty_internal_templateparser.php"
#line 257 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2215 "smarty_internal_templateparser.php"
#line 260 "smarty_internal_templateparser.y"
    function yy_r38(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2218 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2221 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r40(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2224 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r41(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                     }
#line 2229 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r42(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                                }
#line 2234 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r43(){ $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2237 "smarty_internal_templateparser.php"
#line 276 "smarty_internal_templateparser.y"
    function yy_r45(){
                                                             $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2241 "smarty_internal_templateparser.php"
#line 279 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2244 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r47(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2247 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2250 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = $this->compiler->compileTag('for',array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2253 "smarty_internal_templateparser.php"
#line 284 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2256 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r51(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2260 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r52(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2264 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r53(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2268 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r54(){ 
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2272 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r55(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2275 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2278 "smarty_internal_templateparser.php"
#line 298 "smarty_internal_templateparser.y"
    function yy_r57(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2283 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r58(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2286 "smarty_internal_templateparser.php"
#line 308 "smarty_internal_templateparser.y"
    function yy_r59(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[key($this->yystack[$this->yyidx + 0]->minor)] = $this->yystack[$this->yyidx + 0]->minor[key($this->yystack[$this->yyidx + 0]->minor)];    }
#line 2289 "smarty_internal_templateparser.php"
#line 312 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array();    }
#line 2292 "smarty_internal_templateparser.php"
#line 315 "smarty_internal_templateparser.y"
    function yy_r62(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2302 "smarty_internal_templateparser.php"
#line 323 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2305 "smarty_internal_templateparser.php"
#line 326 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2308 "smarty_internal_templateparser.php"
#line 327 "smarty_internal_templateparser.y"
    function yy_r67(){$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2311 "smarty_internal_templateparser.php"
#line 333 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2314 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r69(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2317 "smarty_internal_templateparser.php"
#line 336 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2320 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r72(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2323 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r73(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2326 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r76(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2329 "smarty_internal_templateparser.php"
#line 357 "smarty_internal_templateparser.y"
    function yy_r77(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));     }
#line 2332 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2335 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r79(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2338 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r80(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2341 "smarty_internal_templateparser.php"
#line 366 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2344 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r83(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2347 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2350 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r85(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2353 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r86(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2356 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r87(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2359 "smarty_internal_templateparser.php"
#line 377 "smarty_internal_templateparser.y"
    function yy_r93(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2362 "smarty_internal_templateparser.php"
#line 383 "smarty_internal_templateparser.y"
    function yy_r94(){ $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? $_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'\')->value : '.$this->yystack[$this->yyidx + 0]->minor;  $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + -2]->minor', null, true, false)->nocache;    }
#line 2365 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r95(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2368 "smarty_internal_templateparser.php"
#line 391 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2371 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2374 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';     }
#line 2377 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2380 "smarty_internal_templateparser.php"
#line 401 "smarty_internal_templateparser.y"
    function yy_r106(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2390 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r108(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2393 "smarty_internal_templateparser.php"
#line 418 "smarty_internal_templateparser.y"
    function yy_r111(){if ((!$this->template->security || $this->smarty->security_handler->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                      																				   if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                                                                  $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
                      																				   } else {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
                                                                 } 
                                                                } else {
                                                                 $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
                                                                }
                                                                   }
#line 2405 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r112(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2409 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r113(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2412 "smarty_internal_templateparser.php"
#line 440 "smarty_internal_templateparser.y"
    function yy_r114(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
                                      } else {
                                      if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + 0]->minor['var']])) {
                                          $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + 0]->minor['var'] .']->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         } else {
                                          $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         }
                                       $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2422 "smarty_internal_templateparser.php"
#line 449 "smarty_internal_templateparser.y"
    function yy_r115(){if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + -2]->minor])) {
                                                  $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 } else {
                                                  $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 }
                                                  $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2430 "smarty_internal_templateparser.php"
#line 458 "smarty_internal_templateparser.y"
    function yy_r117(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2433 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r118(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2436 "smarty_internal_templateparser.php"
#line 462 "smarty_internal_templateparser.y"
    function yy_r119(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2439 "smarty_internal_templateparser.php"
#line 468 "smarty_internal_templateparser.y"
    function yy_r120(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2442 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r121(){return;    }
#line 2445 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r122(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2448 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r123(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2451 "smarty_internal_templateparser.php"
#line 476 "smarty_internal_templateparser.y"
    function yy_r124(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2454 "smarty_internal_templateparser.php"
#line 477 "smarty_internal_templateparser.y"
    function yy_r125(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2457 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r126(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2460 "smarty_internal_templateparser.php"
#line 480 "smarty_internal_templateparser.y"
    function yy_r127(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2463 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r128(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2466 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue = '[]';    }
#line 2469 "smarty_internal_templateparser.php"
#line 493 "smarty_internal_templateparser.y"
    function yy_r132(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2472 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r133(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2475 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r134(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2478 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r135(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2482 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r136(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2485 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r137(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2488 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2491 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = '->{$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor .')->value'.$this->yystack[$this->yyidx + 0]->minor.'}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor,"'"), null, true, false)->nocache;    }
#line 2494 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2497 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2500 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r142(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2503 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r143(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2512 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r144(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2515 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r145(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2518 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r146(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2521 "smarty_internal_templateparser.php"
#line 540 "smarty_internal_templateparser.y"
    function yy_r148(){ return;    }
#line 2524 "smarty_internal_templateparser.php"
#line 545 "smarty_internal_templateparser.y"
    function yy_r149(){$this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor));    }
#line 2527 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r150(){$this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor);    }
#line 2530 "smarty_internal_templateparser.php"
#line 549 "smarty_internal_templateparser.y"
    function yy_r152(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2533 "smarty_internal_templateparser.php"
#line 554 "smarty_internal_templateparser.y"
    function yy_r153(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2536 "smarty_internal_templateparser.php"
#line 556 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = '';    }
#line 2539 "smarty_internal_templateparser.php"
#line 558 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = ':'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2542 "smarty_internal_templateparser.php"
#line 568 "smarty_internal_templateparser.y"
    function yy_r160(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2545 "smarty_internal_templateparser.php"
#line 570 "smarty_internal_templateparser.y"
    function yy_r161(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2548 "smarty_internal_templateparser.php"
#line 579 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = '==';    }
#line 2551 "smarty_internal_templateparser.php"
#line 580 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = '!=';    }
#line 2554 "smarty_internal_templateparser.php"
#line 581 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = '>';    }
#line 2557 "smarty_internal_templateparser.php"
#line 582 "smarty_internal_templateparser.y"
    function yy_r165(){$this->_retvalue = '<';    }
#line 2560 "smarty_internal_templateparser.php"
#line 583 "smarty_internal_templateparser.y"
    function yy_r166(){$this->_retvalue = '>=';    }
#line 2563 "smarty_internal_templateparser.php"
#line 584 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '<=';    }
#line 2566 "smarty_internal_templateparser.php"
#line 585 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '===';    }
#line 2569 "smarty_internal_templateparser.php"
#line 586 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '!==';    }
#line 2572 "smarty_internal_templateparser.php"
#line 587 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '%';    }
#line 2575 "smarty_internal_templateparser.php"
#line 589 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '&&';    }
#line 2578 "smarty_internal_templateparser.php"
#line 590 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '||';    }
#line 2581 "smarty_internal_templateparser.php"
#line 591 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = ' XOR ';    }
#line 2584 "smarty_internal_templateparser.php"
#line 596 "smarty_internal_templateparser.y"
    function yy_r174(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2587 "smarty_internal_templateparser.php"
#line 598 "smarty_internal_templateparser.y"
    function yy_r176(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2590 "smarty_internal_templateparser.php"
#line 599 "smarty_internal_templateparser.y"
    function yy_r177(){ return;     }
#line 2593 "smarty_internal_templateparser.php"
#line 600 "smarty_internal_templateparser.y"
    function yy_r178(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2596 "smarty_internal_templateparser.php"
#line 601 "smarty_internal_templateparser.y"
    function yy_r179(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2599 "smarty_internal_templateparser.php"
#line 608 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = "''";     }
#line 2602 "smarty_internal_templateparser.php"
#line 609 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2605 "smarty_internal_templateparser.php"
#line 611 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2608 "smarty_internal_templateparser.php"
#line 612 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2611 "smarty_internal_templateparser.php"
#line 614 "smarty_internal_templateparser.y"
    function yy_r185(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2614 "smarty_internal_templateparser.php"
#line 616 "smarty_internal_templateparser.y"
    function yy_r187(){if (isset($this->compiler->local_var["'".substr($this->yystack[$this->yyidx + 0]->minor,1)."'"])) {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
                                                      } else {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value');
                                                      }
                                                      $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache;
      }
#line 2623 "smarty_internal_templateparser.php"
#line 624 "smarty_internal_templateparser.y"
    function yy_r189(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2626 "smarty_internal_templateparser.php"
#line 625 "smarty_internal_templateparser.y"
    function yy_r190(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2631 "smarty_internal_templateparser.php"
#line 628 "smarty_internal_templateparser.y"
    function yy_r191(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2634 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 75 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2697 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 67 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2715 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>