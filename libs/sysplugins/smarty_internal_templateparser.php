<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 126 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_FAKEPHPSTARTTAG                =  6;
    const TP_XMLTAG                         =  7;
    const TP_OTHER                          =  8;
    const TP_PHP_CODE                       =  9;
    const TP_PHP_CODE_START_DOUBLEQUOTE     = 10;
    const TP_PHP_CODE_DOUBLEQUOTE           = 11;
    const TP_PHP_HEREDOC_START              = 12;
    const TP_PHP_HEREDOC_END                = 13;
    const TP_PHP_NOWDOC_START               = 14;
    const TP_PHP_NOWDOC_END                 = 15;
    const TP_PHP_DQ_CONTENT                 = 16;
    const TP_PHP_DQ_EMBED_START             = 17;
    const TP_PHP_DQ_EMBED_END               = 18;
    const TP_LITERALSTART                   = 19;
    const TP_LITERALEND                     = 20;
    const TP_LITERAL                        = 21;
    const TP_LDEL                           = 22;
    const TP_RDEL                           = 23;
    const TP_DOLLAR                         = 24;
    const TP_ID                             = 25;
    const TP_EQUAL                          = 26;
    const TP_FOREACH                        = 27;
    const TP_PTR                            = 28;
    const TP_IF                             = 29;
    const TP_SPACE                          = 30;
    const TP_UNIMATH                        = 31;
    const TP_FOR                            = 32;
    const TP_SEMICOLON                      = 33;
    const TP_INCDEC                         = 34;
    const TP_TO                             = 35;
    const TP_STEP                           = 36;
    const TP_AS                             = 37;
    const TP_APTR                           = 38;
    const TP_LDELSLASH                      = 39;
    const TP_INTEGER                        = 40;
    const TP_COMMA                          = 41;
    const TP_MATH                           = 42;
    const TP_ANDSYM                         = 43;
    const TP_OPENP                          = 44;
    const TP_CLOSEP                         = 45;
    const TP_QMARK                          = 46;
    const TP_NOT                            = 47;
    const TP_TYPECAST                       = 48;
    const TP_DOT                            = 49;
    const TP_BOOLEAN                        = 50;
    const TP_NULL                           = 51;
    const TP_SINGLEQUOTESTRING              = 52;
    const TP_QUOTE                          = 53;
    const TP_DOUBLECOLON                    = 54;
    const TP_AT                             = 55;
    const TP_HATCH                          = 56;
    const TP_OPENB                          = 57;
    const TP_CLOSEB                         = 58;
    const TP_ISIN                           = 59;
    const TP_ISDIVBY                        = 60;
    const TP_ISNOTDIVBY                     = 61;
    const TP_ISEVEN                         = 62;
    const TP_ISNOTEVEN                      = 63;
    const TP_ISEVENBY                       = 64;
    const TP_ISNOTEVENBY                    = 65;
    const TP_ISODD                          = 66;
    const TP_ISNOTODD                       = 67;
    const TP_ISODDBY                        = 68;
    const TP_ISNOTODDBY                     = 69;
    const TP_INSTANCEOF                     = 70;
    const TP_EQUALS                         = 71;
    const TP_NOTEQUALS                      = 72;
    const TP_GREATERTHAN                    = 73;
    const TP_LESSTHAN                       = 74;
    const TP_GREATEREQUAL                   = 75;
    const TP_LESSEQUAL                      = 76;
    const TP_IDENTITY                       = 77;
    const TP_NONEIDENTITY                   = 78;
    const TP_MOD                            = 79;
    const TP_LAND                           = 80;
    const TP_LOR                            = 81;
    const TP_LXOR                           = 82;
    const TP_BACKTICK                       = 83;
    const TP_DOLLARID                       = 84;
    const YY_NO_ACTION = 620;
    const YY_ACCEPT_ACTION = 619;
    const YY_ERROR_ACTION = 618;

    const YY_SZ_ACTTAB = 1824;
static public $yy_action = array(
 /*     0 */    20,  300,   85,   62,  210,  105,  232,  201,  103,   47,
 /*    10 */   249,  619,   60,  276,  334,  337,  482,  129,  225,  192,
 /*    20 */   188,  230,    9,  482,  107,   49,   48,   43,  298,  297,
 /*    30 */   302,   61,  210,   94,   64,    5,  404,   22,  315,  354,
 /*    40 */    20,   22,   93,  193,   54,  396,  169,   97,  222,   47,
 /*    50 */   210,   97,  107,  208,  485,   53,   51,  129,  225,   30,
 /*    60 */   314,  485,   28,  195,  299,   49,   48,  354,  298,  297,
 /*    70 */   302,   61,  325,   50,   64,    5,  390,  254,  315,  208,
 /*    80 */    20,   31,   83,  209,  312,   27,  169,  373,  222,   47,
 /*    90 */   210,  304,  107,  293,  208,   93,  229,  129,  225,  187,
 /*   100 */   314,   50,   28,  194,  299,   49,   48,  354,  298,  297,
 /*   110 */   302,   61,  372,   33,   64,    5,  171,  212,  315,  208,
 /*   120 */    20,  217,   83,  209,  181,   22,  159,   64,  222,   47,
 /*   130 */   261,   31,  107,   22,  312,   97,  234,  129,  225,  394,
 /*   140 */   213,   54,    6,   97,  299,   13,   48,  354,  298,  297,
 /*   150 */   302,   61,   53,   51,   64,    5,  332,   92,  315,   90,
 /*   160 */    20,   86,   83,  198,  221,   34,  167,  410,  222,   47,
 /*   170 */   210,   22,  107,   32,  208,   93,  162,  129,  225,   42,
 /*   180 */   401,   97,   28,  287,  299,   49,   48,  354,  298,  297,
 /*   190 */   302,   61,  343,  157,   64,    5,  346,  341,  342,  208,
 /*   200 */    20,   24,   93,  204,  144,   31,  288,   64,  312,   47,
 /*   210 */   187,  178,  350,  347,  335,  334,  337,  129,  225,  305,
 /*   220 */    31,  228,   28,  312,   39,   49,   48,    1,  298,  297,
 /*   230 */   302,   61,  259,  210,   64,    5,  107,   63,  315,  283,
 /*   240 */    20,  263,   93,  197,  292,   22,  190,  311,  222,   47,
 /*   250 */   210,  354,  107,  216,  208,   97,  265,  129,  200,   71,
 /*   260 */    31,  275,   28,  312,  299,   49,   48,  354,  298,  297,
 /*   270 */   302,   61,  321,   54,   64,    5,  258,  210,  315,  150,
 /*   280 */    20,  313,   81,  209,   53,   51,  179,  308,  222,   47,
 /*   290 */   176,  318,  107,  172,  397,   55,  272,  129,  225,  278,
 /*   300 */   393,  215,    6,  208,  299,   13,   48,  354,  298,  297,
 /*   310 */   302,   61,  139,  214,   64,    5,  192,   82,  315,   50,
 /*   320 */    20,   70,   83,  209,   43,    4,  175,  305,  222,   47,
 /*   330 */    31,  289,  107,  312,  324,   69,  291,  129,  225,  140,
 /*   340 */   307,  208,   14,  285,  299,   13,   48,  354,  298,  297,
 /*   350 */   302,   61,  148,   31,   64,    5,  312,   39,  315,  138,
 /*   360 */    20,  142,   83,  196,  152,  184,  174,  305,  222,   47,
 /*   370 */    31,  286,  107,  312,  305,  151,  305,  129,  225,  305,
 /*   380 */   307,    3,   14,   55,  299,   13,   48,  354,  298,  297,
 /*   390 */   302,   61,    8,   23,   64,    5,  265,   68,  315,  161,
 /*   400 */    20,  156,   93,  204,  481,  189,  165,   52,  222,   47,
 /*   410 */   384,  208,  107,  210,  305,  308,  305,  129,  225,    2,
 /*   420 */    11,  155,   28,   72,  299,   49,   48,  354,  298,  297,
 /*   430 */   302,   61,    8,  294,   64,  208,  305,  280,  315,  273,
 /*   440 */    20,  135,   93,  205,   31,  164,  182,  312,  222,   47,
 /*   450 */    41,   40,  107,  353,  239,  238,  319,  129,  225,  191,
 /*   460 */   305,  153,   28,  208,  299,   49,   48,  354,  298,  297,
 /*   470 */   302,   61,  147,  307,   64,  352,  305,  216,  185,  245,
 /*   480 */    20,  351,   93,  202,  268,  306,  371,  305,  310,   47,
 /*   490 */   313,   40,  208,  208,  370,  208,  375,  129,  225,  308,
 /*   500 */   344,  208,   28,  208,  237,   49,   48,  208,  298,  297,
 /*   510 */   302,   61,  227,   77,   64,   31,  248,   88,  312,    7,
 /*   520 */    12,  358,  360,   15,   18,  359,  368,   17,   16,  233,
 /*   530 */   361,  379,  251,   77,  331,  374,  320,  208,  208,  369,
 /*   540 */   378,  377,  208,  208,    7,   12,  358,  360,   15,   18,
 /*   550 */   359,  368,   17,   16,  357,  301,  173,  333,   77,  328,
 /*   560 */    75,  400,  208,  269,  369,  378,  377,  145,  208,    7,
 /*   570 */    12,  358,  360,   15,   18,  359,  368,   17,   16,  376,
 /*   580 */   208,  134,  305,   78,  128,  270,  208,  132,  329,  369,
 /*   590 */   378,  377,  208,  353,   26,  353,  353,  240,  203,  353,
 /*   600 */     7,   12,  358,  360,   15,   18,  359,  368,   17,   16,
 /*   610 */     7,   12,  358,  360,   15,   18,  359,  368,   17,   16,
 /*   620 */   369,  378,  377,  166,   24,   45,  170,  397,  177,  397,
 /*   630 */   369,  378,  377,  210,   76,  186,  279,  402,  383,  382,
 /*   640 */   364,  363,  365,  366,  367,  362,  353,  243,   88,  102,
 /*   650 */     7,   12,  358,  360,   15,   18,  359,  368,   17,   16,
 /*   660 */   483,  406,  208,  260,   88,  326,   88,  483,  168,  397,
 /*   670 */   369,  378,  377,    7,   12,  358,  360,   15,   18,  359,
 /*   680 */   368,   17,   16,    7,   12,  358,  360,   15,   18,  359,
 /*   690 */   368,   17,   16,  369,  378,  377,   45,   31,   91,  398,
 /*   700 */   207,  391,  143,  369,  378,  377,  208,  395,  402,  383,
 /*   710 */   382,  364,  363,  365,  366,  367,  362,  305,  133,   31,
 /*   720 */   336,   74,  224,  339,  340,  349,  130,  327,    8,  267,
 /*   730 */   353,  356,  315,   73,   89,   45,  178,  330,  353,   20,
 /*   740 */   180,  403,  222,   19,  158,  353,  107,  402,  383,  382,
 /*   750 */   364,  363,  365,  366,  367,  362,  129,  315,  299,  305,
 /*   760 */   129,  354,  244,   25,   35,  149,  317,  222,   59,  104,
 /*   770 */    57,  107,  295,  271,  281,  101,  308,  315,  267,  314,
 /*   780 */   264,  163,  199,  299,  348,  131,  354,  222,  124,  290,
 /*   790 */   117,  107,   19,  309,  322,  355,  305,  218,   99,  314,
 /*   800 */   315,  154,  199,  299,   29,  274,  354,  323,  149,  129,
 /*   810 */   222,  127,  137,  112,  107,  355,  305,  246,  215,    1,
 /*   820 */   234,  303,  314,  262,   37,  199,  299,  305,   33,  354,
 /*   830 */    38,   36,  481,  338,   95,  392,   67,  315,  355,  208,
 /*   840 */   257,  313,  345,  318,  208,  136,   55,  222,   58,  106,
 /*   850 */    56,  107,  242,   29,  274,  316,   46,  277,  255,  314,
 /*   860 */    52,   40,  199,  299,  315,  307,  354,   10,   45,   21,
 /*   870 */    65,  160,  183,  342,  222,  355,  342,  342,  107,  342,
 /*   880 */   402,  383,  382,  364,  363,  365,  366,  367,  362,  315,
 /*   890 */   299,  342,  342,  354,  342,  342,  342,  149,  342,  222,
 /*   900 */   127,  342,  113,  107,  342,  342,  342,  342,  342,  342,
 /*   910 */   342,  314,  315,  342,  199,  299,  342,  342,  354,  342,
 /*   920 */   149,  342,  222,  127,  342,  120,  107,  355,  231,  342,
 /*   930 */   342,  342,  342,  342,  314,  342,  342,  199,  299,  342,
 /*   940 */   342,  354,   45,  342,  342,  342,  342,  342,  342,  342,
 /*   950 */   355,  342,  342,  342,  402,  383,  382,  364,  363,  365,
 /*   960 */   366,  367,  362,  342,   44,  315,   96,  405,  342,  342,
 /*   970 */   342,  342,  342,  149,  342,  222,  127,  342,  119,  107,
 /*   980 */   342,  342,  409,  342,  342,  342,  342,  314,  342,  342,
 /*   990 */   199,  299,  407,  408,  354,  342,  342,  342,  342,  342,
 /*  1000 */   342,  315,  342,  355,  342,  342,  342,  342,  342,  149,
 /*  1010 */   342,  222,  127,  342,  123,  107,  342,  342,  342,  356,
 /*  1020 */   342,  342,  342,  314,  342,  342,  199,  299,  342,  342,
 /*  1030 */   354,  342,  342,   45,  342,  342,  342,  342,  342,  355,
 /*  1040 */   342,  342,  342,  342,  342,  402,  383,  382,  364,  363,
 /*  1050 */   365,  366,  367,  362,  342,  315,  342,  342,  342,  342,
 /*  1060 */   342,  342,  342,  149,  342,  222,  126,  342,  111,  107,
 /*  1070 */   342,  342,  342,  342,  342,  342,  342,  314,  342,  342,
 /*  1080 */   199,  299,  342,  342,  354,  342,  342,  342,  342,  342,
 /*  1090 */   342,  315,  342,  355,  342,  342,  342,  342,  342,  141,
 /*  1100 */   342,  222,  127,  342,  121,  107,  342,  342,  342,  342,
 /*  1110 */   342,  342,  342,  314,  342,  342,  199,  299,  342,  342,
 /*  1120 */   354,  342,  342,  315,  342,  342,  342,  342,  342,  355,
 /*  1130 */   342,  149,  342,  222,  127,  342,  122,  107,  342,  342,
 /*  1140 */   342,  342,  342,  315,  342,  314,  342,  342,  199,  299,
 /*  1150 */   342,  149,  354,  222,  127,  342,  110,  107,  342,  342,
 /*  1160 */   342,  355,  342,  342,  342,  314,  342,  342,  199,  299,
 /*  1170 */   342,  342,  354,  342,  315,  342,  342,  342,  342,  342,
 /*  1180 */   342,  355,  149,  342,  222,  126,  342,  114,  107,  342,
 /*  1190 */   342,  342,  342,  342,  315,  342,  314,  342,  342,  199,
 /*  1200 */   299,  342,  149,  354,  222,  127,  342,  115,  107,  342,
 /*  1210 */   342,  342,  355,  342,  342,  342,  314,  342,  342,  199,
 /*  1220 */   299,  342,  342,  354,  342,  342,  315,  342,  342,  342,
 /*  1230 */   342,  342,  355,  342,  149,  342,  222,  127,  342,  116,
 /*  1240 */   107,  342,  342,  342,  342,  342,  315,  342,  314,  342,
 /*  1250 */   342,  199,  299,  342,  146,  354,  222,  387,  342,  342,
 /*  1260 */   107,  342,  342,  342,  355,  342,  342,  342,  314,  342,
 /*  1270 */   342,  199,  299,  342,  342,  354,  342,  342,  342,  342,
 /*  1280 */   342,  342,  342,  342,  315,  342,  342,  206,  388,  342,
 /*  1290 */   342,  342,  149,  342,  222,  125,  342,  109,  107,  342,
 /*  1300 */   342,  342,  342,  342,  342,  342,  314,  342,  342,  199,
 /*  1310 */   299,  342,  342,  354,  342,  342,  315,  342,  342,  342,
 /*  1320 */   342,  342,  355,  342,  149,  342,  222,  127,  342,  118,
 /*  1330 */   107,  342,  342,  342,  342,  342,  315,  342,  314,  342,
 /*  1340 */   342,  199,  299,  342,   66,  354,   80,   84,  108,  342,
 /*  1350 */    98,  342,  342,  342,  355,  342,  342,  342,  314,  342,
 /*  1360 */   342,  199,  299,  342,  342,  354,  342,  342,  342,  342,
 /*  1370 */   342,  342,  342,  342,  315,  342,  342,  342,  342,  342,
 /*  1380 */   342,  342,  169,  342,  222,  253,  342,  315,  107,  342,
 /*  1390 */   342,  342,  342,  342,  342,  146,  314,  222,  387,  199,
 /*  1400 */   299,  107,  342,  354,  342,  342,  342,  342,  342,  314,
 /*  1410 */   252,  342,  199,  299,  315,  342,  354,  342,  342,  342,
 /*  1420 */   342,  342,   66,  342,   79,  100,  108,  342,   98,  386,
 /*  1430 */   342,  342,  342,  342,  315,  342,  314,  342,  342,  199,
 /*  1440 */   299,  342,  169,  354,  222,  253,  342,  342,  107,  342,
 /*  1450 */   342,  342,  342,  342,  342,  342,  314,  342,  342,  199,
 /*  1460 */   299,  342,  342,  354,  315,  342,  342,  342,  342,  342,
 /*  1470 */   219,  342,  169,  342,  222,  253,  342,  315,  107,  342,
 /*  1480 */   342,  342,  342,  342,  342,  169,  314,  222,  253,  199,
 /*  1490 */   299,  107,  342,  354,  342,  342,  342,  342,  342,  314,
 /*  1500 */   399,  342,  199,  299,  315,  342,  354,  342,  342,  342,
 /*  1510 */   342,  342,  169,  220,  222,   87,  342,  342,  107,  342,
 /*  1520 */   342,  342,  342,  342,  315,  342,  314,  342,  342,  199,
 /*  1530 */   299,  342,  169,  354,  222,  284,  342,  342,  107,  342,
 /*  1540 */   342,  342,  342,  342,  342,  342,  314,  342,  342,  199,
 /*  1550 */   299,  342,  342,  354,  315,  342,  342,  342,  342,  342,
 /*  1560 */   342,  342,  169,  342,  211,  236,  342,  315,  107,  342,
 /*  1570 */   342,  342,  342,  342,  342,  169,  314,  222,  226,  199,
 /*  1580 */   299,  107,  342,  354,  342,  342,  342,  342,  342,  314,
 /*  1590 */   315,  342,  199,  299,  342,  342,  354,  342,  169,  342,
 /*  1600 */   222,  380,  342,  315,  107,  342,  342,  342,  342,  342,
 /*  1610 */   342,  169,  314,  222,  381,  199,  299,  107,  342,  354,
 /*  1620 */   342,  342,  342,  315,  342,  314,  342,  342,  199,  299,
 /*  1630 */   342,  169,  354,  222,  235,  342,  315,  107,  342,  342,
 /*  1640 */   342,  342,  342,  342,  169,  314,  222,  389,  199,  299,
 /*  1650 */   107,  342,  354,  342,  342,  342,  342,  342,  314,  342,
 /*  1660 */   342,  199,  299,  342,  342,  354,  315,  342,  342,  342,
 /*  1670 */   342,  315,  342,  342,  169,  342,  222,  223,  342,  169,
 /*  1680 */   107,  222,  250,  342,  342,  107,  342,  342,  314,  342,
 /*  1690 */   342,  199,  299,  314,  315,  354,  199,  299,  342,  342,
 /*  1700 */   354,  342,  169,  315,  222,  247,  342,  342,  107,  342,
 /*  1710 */   342,  169,  342,  222,  282,  342,  314,  107,  342,  199,
 /*  1720 */   299,  342,  342,  354,  342,  314,  315,  342,  199,  299,
 /*  1730 */   342,  342,  354,  342,  169,  315,  222,  256,  342,  342,
 /*  1740 */   107,  342,  342,  169,  342,  222,  266,  342,  314,  107,
 /*  1750 */   342,  199,  299,  342,  342,  354,  342,  314,  342,  342,
 /*  1760 */   199,  299,  342,  342,  354,  342,  315,  342,  342,  342,
 /*  1770 */   342,  315,  342,  342,  169,  342,  222,  241,  342,  169,
 /*  1780 */   107,  222,  385,  342,  342,  107,  342,  342,  314,  342,
 /*  1790 */   342,  199,  299,  314,  315,  354,  199,  299,  342,  342,
 /*  1800 */   354,  342,  169,  342,  222,  296,  342,  342,  107,  342,
 /*  1810 */   342,  342,  342,  342,  342,  342,  314,  342,  342,  199,
 /*  1820 */   299,  342,  342,  354,
    );
    static public $yy_lookahead = array(
 /*     0 */    22,  117,   24,   25,    1,   27,   25,   29,  124,   31,
 /*    10 */    32,   86,   87,   88,   89,   90,   23,   39,   40,   49,
 /*    20 */    99,   40,   44,   30,  103,   47,   48,   57,   50,   51,
 /*    30 */    52,   53,    1,   24,   56,   57,   23,   44,   89,  118,
 /*    40 */    22,   44,   24,   25,   31,  124,   97,   54,   99,   31,
 /*    50 */     1,   54,  103,   30,   23,   42,   43,   39,   40,   36,
 /*    60 */   111,   30,   44,  114,  115,   47,   48,  118,   50,   51,
 /*    70 */    52,   53,   23,   70,   56,   57,   58,   28,   89,   30,
 /*    80 */    22,   22,   24,   25,   25,   26,   97,   23,   99,   31,
 /*    90 */     1,   25,  103,   34,   30,   24,   25,   39,   40,  104,
 /*   100 */   111,   70,   44,  114,  115,   47,   48,  118,   50,   51,
 /*   110 */    52,   53,   23,   26,   56,   57,   33,   28,   89,   30,
 /*   120 */    22,   55,   24,   25,   41,   44,   97,   56,   99,   31,
 /*   130 */    49,   22,  103,   44,   25,   54,   49,   39,   40,   58,
 /*   140 */   111,   31,   44,   54,  115,   47,   48,  118,   50,   51,
 /*   150 */    52,   53,   42,   43,   56,   57,    9,   10,   89,   12,
 /*   160 */    22,   14,   24,   25,   55,   38,   97,   23,   99,   31,
 /*   170 */     1,   44,  103,   22,   30,   24,   25,   39,   40,   22,
 /*   180 */   111,   54,   44,  106,  115,   47,   48,  118,   50,   51,
 /*   190 */    52,   53,   23,  119,   56,   57,    4,    5,    6,   30,
 /*   200 */    22,   44,   24,   25,   98,   22,   23,   56,   25,   31,
 /*   210 */   104,   19,   20,   21,   88,   89,   90,   39,   40,  113,
 /*   220 */    22,   38,   44,   25,   26,   47,   48,   26,   50,   51,
 /*   230 */    52,   53,   99,    1,   56,   57,  103,   25,   89,   27,
 /*   240 */    22,   29,   24,   25,   32,   44,   97,   23,   99,   31,
 /*   250 */     1,  118,  103,   55,   30,   54,   89,   39,   40,   95,
 /*   260 */    22,   23,   44,   25,  115,   47,   48,  118,   50,   51,
 /*   270 */    52,   53,   23,   31,   56,   57,   38,    1,   89,  119,
 /*   280 */    22,  121,   24,   25,   42,   43,   97,   34,   99,   31,
 /*   290 */   105,  120,  103,  122,  123,   28,   23,   39,   40,  132,
 /*   300 */    58,    2,   44,   30,  115,   47,   48,  118,   50,   51,
 /*   310 */    52,   53,   98,   37,   56,   57,   49,   24,   89,   70,
 /*   320 */    22,  105,   24,   25,   57,   26,   97,  113,   99,   31,
 /*   330 */    22,   23,  103,   25,   23,  105,   83,   39,   40,  119,
 /*   340 */   126,   30,   44,   23,  115,   47,   48,  118,   50,   51,
 /*   350 */    52,   53,   98,   22,   56,   57,   25,   26,   89,   98,
 /*   360 */    22,   98,   24,   25,   98,  104,   97,  113,   99,   31,
 /*   370 */    22,   23,  103,   25,  113,  119,  113,   39,   40,  113,
 /*   380 */   126,   26,   44,   28,  115,   47,   48,  118,   50,   51,
 /*   390 */    52,   53,  129,   41,   56,   57,   89,  105,   89,   98,
 /*   400 */    22,   98,   24,   25,   23,  104,   97,    2,   99,   31,
 /*   410 */    58,   30,  103,    1,  113,   34,  113,   39,   40,   30,
 /*   420 */    31,   98,   44,  116,  115,   47,   48,  118,   50,   51,
 /*   430 */    52,   53,  129,   23,   56,   30,  113,   23,   89,  132,
 /*   440 */    22,  109,   24,   25,   22,   98,   97,   25,   99,   31,
 /*   450 */    38,  128,  103,  121,   24,   25,   23,   39,   40,   23,
 /*   460 */   113,   98,   44,   30,  115,   47,   48,  118,   50,   51,
 /*   470 */    52,   53,   98,  126,   56,   90,  113,   55,  104,  110,
 /*   480 */    22,   96,   24,   25,   23,   23,   23,  113,   23,   31,
 /*   490 */   121,  128,   30,   30,   23,   30,   23,   39,   40,   34,
 /*   500 */    23,   30,   44,   30,   45,   47,   48,   30,   50,   51,
 /*   510 */    52,   53,   91,   92,   56,   22,   93,   94,   25,   60,
 /*   520 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   45,
 /*   530 */    23,   23,   91,   92,   15,   23,   23,   30,   30,   80,
 /*   540 */    81,   82,   30,   30,   60,   61,   62,   63,   64,   65,
 /*   550 */    66,   67,   68,   69,   45,   23,   25,   91,   92,   16,
 /*   560 */    17,   23,   30,   23,   80,   81,   82,   98,   30,   60,
 /*   570 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   23,
 /*   580 */    30,  109,  113,  109,  109,   23,   30,  109,   13,   80,
 /*   590 */    81,   82,   30,  121,   35,  121,  121,  106,  107,  121,
 /*   600 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   610 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   620 */    80,   81,   82,   33,   44,   59,  122,  123,  122,  123,
 /*   630 */    80,   81,   82,    1,  109,   23,   23,   71,   72,   73,
 /*   640 */    74,   75,   76,   77,   78,   79,  121,   93,   94,   30,
 /*   650 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   660 */    23,   23,   30,   93,   94,   93,   94,   30,  122,  123,
 /*   670 */    80,   81,   82,   60,   61,   62,   63,   64,   65,   66,
 /*   680 */    67,   68,   69,   60,   61,   62,   63,   64,   65,   66,
 /*   690 */    67,   68,   69,   80,   81,   82,   59,   22,   24,   23,
 /*   700 */    25,   56,   98,   80,   81,   82,   30,   58,   71,   72,
 /*   710 */    73,   74,   75,   76,   77,   78,   79,  113,  109,   22,
 /*   720 */     3,    4,   25,    6,    7,    8,  109,   11,  129,    8,
 /*   730 */   121,   45,   89,  109,   24,   59,   19,   18,  121,   22,
 /*   740 */    97,   45,   99,   22,   98,  121,  103,   71,   72,   73,
 /*   750 */    74,   75,   76,   77,   78,   79,   39,   89,  115,  113,
 /*   760 */    39,  118,   25,   41,   46,   97,   25,   99,  100,  101,
 /*   770 */   102,  103,   83,   45,   53,   45,   34,   89,    8,  111,
 /*   780 */    23,   98,  114,  115,   20,   97,  118,   99,  100,  101,
 /*   790 */   102,  103,   22,   25,   25,  127,  113,   37,   24,  111,
 /*   800 */    89,   98,  114,  115,   83,   84,  118,   25,   97,   39,
 /*   810 */    99,  100,   98,  102,  103,  127,  113,  106,    2,   26,
 /*   820 */    49,   40,  111,   53,    2,  114,  115,  113,   26,  118,
 /*   830 */    46,    2,   23,    5,   24,   56,   25,   89,  127,   30,
 /*   840 */    25,  121,  113,  120,   30,   97,   28,   99,  100,  101,
 /*   850 */   102,  103,  112,   83,   84,  123,   30,   30,  108,  111,
 /*   860 */     2,  128,  114,  115,   89,  126,  118,  108,   59,   44,
 /*   870 */   119,  119,   97,  133,   99,  127,  133,  133,  103,  133,
 /*   880 */    71,   72,   73,   74,   75,   76,   77,   78,   79,   89,
 /*   890 */   115,  133,  133,  118,  133,  133,  133,   97,  133,   99,
 /*   900 */   100,  133,  102,  103,  133,  133,  133,  133,  133,  133,
 /*   910 */   133,  111,   89,  133,  114,  115,  133,  133,  118,  133,
 /*   920 */    97,  133,   99,  100,  133,  102,  103,  127,   45,  133,
 /*   930 */   133,  133,  133,  133,  111,  133,  133,  114,  115,  133,
 /*   940 */   133,  118,   59,  133,  133,  133,  133,  133,  133,  133,
 /*   950 */   127,  133,  133,  133,   71,   72,   73,   74,   75,   76,
 /*   960 */    77,   78,   79,  133,   22,   89,   24,   25,  133,  133,
 /*   970 */   133,  133,  133,   97,  133,   99,  100,  133,  102,  103,
 /*   980 */   133,  133,   40,  133,  133,  133,  133,  111,  133,  133,
 /*   990 */   114,  115,   50,   51,  118,  133,  133,  133,  133,  133,
 /*  1000 */   133,   89,  133,  127,  133,  133,  133,  133,  133,   97,
 /*  1010 */   133,   99,  100,  133,  102,  103,  133,  133,  133,   45,
 /*  1020 */   133,  133,  133,  111,  133,  133,  114,  115,  133,  133,
 /*  1030 */   118,  133,  133,   59,  133,  133,  133,  133,  133,  127,
 /*  1040 */   133,  133,  133,  133,  133,   71,   72,   73,   74,   75,
 /*  1050 */    76,   77,   78,   79,  133,   89,  133,  133,  133,  133,
 /*  1060 */   133,  133,  133,   97,  133,   99,  100,  133,  102,  103,
 /*  1070 */   133,  133,  133,  133,  133,  133,  133,  111,  133,  133,
 /*  1080 */   114,  115,  133,  133,  118,  133,  133,  133,  133,  133,
 /*  1090 */   133,   89,  133,  127,  133,  133,  133,  133,  133,   97,
 /*  1100 */   133,   99,  100,  133,  102,  103,  133,  133,  133,  133,
 /*  1110 */   133,  133,  133,  111,  133,  133,  114,  115,  133,  133,
 /*  1120 */   118,  133,  133,   89,  133,  133,  133,  133,  133,  127,
 /*  1130 */   133,   97,  133,   99,  100,  133,  102,  103,  133,  133,
 /*  1140 */   133,  133,  133,   89,  133,  111,  133,  133,  114,  115,
 /*  1150 */   133,   97,  118,   99,  100,  133,  102,  103,  133,  133,
 /*  1160 */   133,  127,  133,  133,  133,  111,  133,  133,  114,  115,
 /*  1170 */   133,  133,  118,  133,   89,  133,  133,  133,  133,  133,
 /*  1180 */   133,  127,   97,  133,   99,  100,  133,  102,  103,  133,
 /*  1190 */   133,  133,  133,  133,   89,  133,  111,  133,  133,  114,
 /*  1200 */   115,  133,   97,  118,   99,  100,  133,  102,  103,  133,
 /*  1210 */   133,  133,  127,  133,  133,  133,  111,  133,  133,  114,
 /*  1220 */   115,  133,  133,  118,  133,  133,   89,  133,  133,  133,
 /*  1230 */   133,  133,  127,  133,   97,  133,   99,  100,  133,  102,
 /*  1240 */   103,  133,  133,  133,  133,  133,   89,  133,  111,  133,
 /*  1250 */   133,  114,  115,  133,   97,  118,   99,  100,  133,  133,
 /*  1260 */   103,  133,  133,  133,  127,  133,  133,  133,  111,  133,
 /*  1270 */   133,  114,  115,  133,  133,  118,  133,  133,  133,  133,
 /*  1280 */   133,  133,  133,  133,   89,  133,  133,  130,  131,  133,
 /*  1290 */   133,  133,   97,  133,   99,  100,  133,  102,  103,  133,
 /*  1300 */   133,  133,  133,  133,  133,  133,  111,  133,  133,  114,
 /*  1310 */   115,  133,  133,  118,  133,  133,   89,  133,  133,  133,
 /*  1320 */   133,  133,  127,  133,   97,  133,   99,  100,  133,  102,
 /*  1330 */   103,  133,  133,  133,  133,  133,   89,  133,  111,  133,
 /*  1340 */   133,  114,  115,  133,   97,  118,   99,  100,  101,  133,
 /*  1350 */   103,  133,  133,  133,  127,  133,  133,  133,  111,  133,
 /*  1360 */   133,  114,  115,  133,  133,  118,  133,  133,  133,  133,
 /*  1370 */   133,  133,  133,  133,   89,  133,  133,  133,  133,  133,
 /*  1380 */   133,  133,   97,  133,   99,  100,  133,   89,  103,  133,
 /*  1390 */   133,  133,  133,  133,  133,   97,  111,   99,  100,  114,
 /*  1400 */   115,  103,  133,  118,  133,  133,  133,  133,  133,  111,
 /*  1410 */   125,  133,  114,  115,   89,  133,  118,  133,  133,  133,
 /*  1420 */   133,  133,   97,  133,   99,  100,  101,  133,  103,  131,
 /*  1430 */   133,  133,  133,  133,   89,  133,  111,  133,  133,  114,
 /*  1440 */   115,  133,   97,  118,   99,  100,  133,  133,  103,  133,
 /*  1450 */   133,  133,  133,  133,  133,  133,  111,  133,  133,  114,
 /*  1460 */   115,  133,  133,  118,   89,  133,  133,  133,  133,  133,
 /*  1470 */   125,  133,   97,  133,   99,  100,  133,   89,  103,  133,
 /*  1480 */   133,  133,  133,  133,  133,   97,  111,   99,  100,  114,
 /*  1490 */   115,  103,  133,  118,  133,  133,  133,  133,  133,  111,
 /*  1500 */   125,  133,  114,  115,   89,  133,  118,  133,  133,  133,
 /*  1510 */   133,  133,   97,  125,   99,  100,  133,  133,  103,  133,
 /*  1520 */   133,  133,  133,  133,   89,  133,  111,  133,  133,  114,
 /*  1530 */   115,  133,   97,  118,   99,  100,  133,  133,  103,  133,
 /*  1540 */   133,  133,  133,  133,  133,  133,  111,  133,  133,  114,
 /*  1550 */   115,  133,  133,  118,   89,  133,  133,  133,  133,  133,
 /*  1560 */   133,  133,   97,  133,   99,  100,  133,   89,  103,  133,
 /*  1570 */   133,  133,  133,  133,  133,   97,  111,   99,  100,  114,
 /*  1580 */   115,  103,  133,  118,  133,  133,  133,  133,  133,  111,
 /*  1590 */    89,  133,  114,  115,  133,  133,  118,  133,   97,  133,
 /*  1600 */    99,  100,  133,   89,  103,  133,  133,  133,  133,  133,
 /*  1610 */   133,   97,  111,   99,  100,  114,  115,  103,  133,  118,
 /*  1620 */   133,  133,  133,   89,  133,  111,  133,  133,  114,  115,
 /*  1630 */   133,   97,  118,   99,  100,  133,   89,  103,  133,  133,
 /*  1640 */   133,  133,  133,  133,   97,  111,   99,  100,  114,  115,
 /*  1650 */   103,  133,  118,  133,  133,  133,  133,  133,  111,  133,
 /*  1660 */   133,  114,  115,  133,  133,  118,   89,  133,  133,  133,
 /*  1670 */   133,   89,  133,  133,   97,  133,   99,  100,  133,   97,
 /*  1680 */   103,   99,  100,  133,  133,  103,  133,  133,  111,  133,
 /*  1690 */   133,  114,  115,  111,   89,  118,  114,  115,  133,  133,
 /*  1700 */   118,  133,   97,   89,   99,  100,  133,  133,  103,  133,
 /*  1710 */   133,   97,  133,   99,  100,  133,  111,  103,  133,  114,
 /*  1720 */   115,  133,  133,  118,  133,  111,   89,  133,  114,  115,
 /*  1730 */   133,  133,  118,  133,   97,   89,   99,  100,  133,  133,
 /*  1740 */   103,  133,  133,   97,  133,   99,  100,  133,  111,  103,
 /*  1750 */   133,  114,  115,  133,  133,  118,  133,  111,  133,  133,
 /*  1760 */   114,  115,  133,  133,  118,  133,   89,  133,  133,  133,
 /*  1770 */   133,   89,  133,  133,   97,  133,   99,  100,  133,   97,
 /*  1780 */   103,   99,  100,  133,  133,  103,  133,  133,  111,  133,
 /*  1790 */   133,  114,  115,  111,   89,  118,  114,  115,  133,  133,
 /*  1800 */   118,  133,   97,  133,   99,  100,  133,  133,  103,  133,
 /*  1810 */   133,  133,  133,  133,  133,  133,  111,  133,  133,  114,
 /*  1820 */   115,  133,  133,  118,
);
    const YY_SHIFT_USE_DFLT = -31;
    const YY_SHIFT_MAX = 261;
    static public $yy_shift_ofst = array(
 /*     0 */   717,  338,  258,  298,  298,  138,   98,   98,   98,   98,
 /*    10 */    98,   98,   98,   98,   98,   98,   98,   98,   98,  -22,
 /*    20 */   -22,   58,   58,  138,   58,   58,   58,   58,   58,   58,
 /*    30 */    58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
 /*    40 */    58,   58,   58,   18,  178,  178,  218,  378,  378,  378,
 /*    50 */   458,  378,  418,  378,  378,  151,  550,  550,  676,  809,
 /*    60 */   717,  770,   89,   49,   71,  267,  169,  632,  405,  405,
 /*    70 */   405,  192,  721,  198,  147,  147,   59,  147,  422,  381,
 /*    80 */   465,  697,  493,  697,  513,  675,  543,   23,  543,  493,
 /*    90 */   543,  493,  543,  493,  493,  493,  493,  430,  355,  493,
 /*   100 */   814,  818,    9,  818,  814,  826,  814,  818,  814,  509,
 /*   110 */   540,  459,  613,  590,  484,  623,  623,  623,  623,  623,
 /*   120 */   623,  623,  623,  623,  637,  974,  883,  566,  183,  212,
 /*   130 */   238,   31,  348,  331,  308,  109,  249,  224,   64,  144,
 /*   140 */   -30,    3,  507,  508,  477,  473,  412,  471,  512,    3,
 /*   150 */   -30,  -30,  562,  556,  532,  538,  463,  -30,  433,  276,
 /*   160 */   -30,  311,  157,  273,  462,  232,  827,  232,  818,  232,
 /*   170 */   818,  827,  818,  825,  232,  232,  858,  818,  764,  232,
 /*   180 */   232,    9,  232,  232,  -31,  -31,  -31,  -31,  -31,  -31,
 /*   190 */   -31,  -31,  942,   81,  242,   13,   -7,  201,  127,  110,
 /*   200 */    87,  389,   -3,   83,   -3,   -3,  352,  299,  -19,   -3,
 /*   210 */    66,  253,  811,  760,  774,  769,  782,  768,  293,  730,
 /*   220 */   728,  741,  742,  757,  816,  771,  829,  828,  810,  779,
 /*   230 */   802,  784,  793,  718,  781,  822,  689,  718,  580,  531,
 /*   240 */   559,  612,  461,  575,  410,  320,  414,  436,  519,  619,
 /*   250 */   638,  719,  696,  722,  737,  710,  686,  649,  674,  645,
 /*   260 */   716,  815,
);
    const YY_REDUCE_USE_DFLT = -117;
    const YY_REDUCE_MAX = 191;
    static public $yy_reduce_ofst = array(
 /*     0 */   -75,  688,  711,  668,  748, 1157, 1195,  823,  912,  966,
 /*    10 */   800, 1054, 1137, 1002, 1085,  876, 1034, 1105, 1227, 1247,
 /*    20 */  1325, 1345, 1285, 1298, 1388, 1375, 1415, 1435, 1637, 1465,
 /*    30 */  1577, 1582, 1605, 1614, 1547, 1478, 1501, 1514, 1534, 1646,
 /*    40 */  1705, 1682, 1677,  -11,  -51,   69,   29,  189,  229,  269,
 /*    50 */   309,  643,  149,  775,  349,  -79,  263,  303,  323,  363,
 /*    60 */   126,  307,  374,  301,  133,  171,  106,  261,  254,  214,
 /*    70 */   347,  385,  167,  160,  421,  441,  369,  466,  160,  703,
 /*    80 */   703,  624,  617,  474,  714,  474,  423,  266,  572,  525,
 /*    90 */   554,  478,  570,  474,  609,  472,  332, -116,  504,  475,
 /*   100 */   714,  546,  491,  506,  469,  683,  604,  504,  646,  599,
 /*   110 */   599,  599,  599,  599,  599,  599,  599,  599,  599,  599,
 /*   120 */   599,  599,  599,  599,  733,  733,  733,  733,  720,  740,
 /*   130 */   720,   -5,  720,  720,  720,  720,   -5,  729,  729,  729,
 /*   140 */   723,   -5,  729,  729,  729,  729,   -5,  729,  729,   -5,
 /*   150 */   723,  723,  729,  729,  729,  729,  729,  723,  729,   -5,
 /*   160 */   723,  729,  752,  729,  729,   -5,  750,   -5,  732,   -5,
 /*   170 */   732,  759,  732,  751,   -5,   -5,  739,  732,  164,   -5,
 /*   180 */    -5,   77,   -5,   -5,  292,  230,  256,  185,   74,  216,
 /*   190 */    -5,  220,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 6, 7, 8, 19, 22, 39, ),
        /* 1 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 2 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 3 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 4 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 5 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 6 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 7 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 8 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 9 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 10 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 11 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 12 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 13 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 14 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 15 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 16 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 17 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 18 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 19 */ array(22, 24, 25, 27, 29, 31, 32, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 20 */ array(22, 24, 25, 27, 29, 31, 32, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 21 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 22 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 23 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 24 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 25 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 26 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 27 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 28 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 29 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 30 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 31 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 32 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 33 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 34 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 35 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 36 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 37 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 38 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 39 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 40 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 41 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 42 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 43 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, ),
        /* 44 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 45 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 46 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, ),
        /* 47 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 48 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 49 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 50 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 51 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 52 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 53 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 54 */ array(22, 24, 25, 31, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, ),
        /* 55 */ array(22, 24, 25, 56, ),
        /* 56 */ array(30, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 57 */ array(30, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 58 */ array(23, 30, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 59 */ array(23, 30, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 60 */ array(3, 4, 6, 7, 8, 19, 22, 39, ),
        /* 61 */ array(8, 22, 39, 53, 83, 84, ),
        /* 62 */ array(1, 23, 28, 30, 44, 54, ),
        /* 63 */ array(1, 23, 28, 30, ),
        /* 64 */ array(24, 25, 56, ),
        /* 65 */ array(28, 49, 57, ),
        /* 66 */ array(1, 23, 30, ),
        /* 67 */ array(1, 30, ),
        /* 68 */ array(2, 30, ),
        /* 69 */ array(2, 30, ),
        /* 70 */ array(2, 30, ),
        /* 71 */ array(4, 5, 6, 19, 20, 21, ),
        /* 72 */ array(8, 22, 39, 53, 83, 84, ),
        /* 73 */ array(22, 25, 26, 55, ),
        /* 74 */ array(9, 10, 12, 14, ),
        /* 75 */ array(9, 10, 12, 14, ),
        /* 76 */ array(22, 25, 26, 34, ),
        /* 77 */ array(9, 10, 12, 14, ),
        /* 78 */ array(22, 25, 55, ),
        /* 79 */ array(23, 30, 34, ),
        /* 80 */ array(23, 30, 34, ),
        /* 81 */ array(22, 25, ),
        /* 82 */ array(22, 25, ),
        /* 83 */ array(22, 25, ),
        /* 84 */ array(23, 30, ),
        /* 85 */ array(22, 25, ),
        /* 86 */ array(16, 17, ),
        /* 87 */ array(30, 36, ),
        /* 88 */ array(16, 17, ),
        /* 89 */ array(22, 25, ),
        /* 90 */ array(16, 17, ),
        /* 91 */ array(22, 25, ),
        /* 92 */ array(16, 17, ),
        /* 93 */ array(22, 25, ),
        /* 94 */ array(22, 25, ),
        /* 95 */ array(22, 25, ),
        /* 96 */ array(22, 25, ),
        /* 97 */ array(24, 25, ),
        /* 98 */ array(26, 28, ),
        /* 99 */ array(22, 25, ),
        /* 100 */ array(30, ),
        /* 101 */ array(28, ),
        /* 102 */ array(24, ),
        /* 103 */ array(28, ),
        /* 104 */ array(30, ),
        /* 105 */ array(30, ),
        /* 106 */ array(30, ),
        /* 107 */ array(28, ),
        /* 108 */ array(30, ),
        /* 109 */ array(45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 110 */ array(23, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 111 */ array(45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 112 */ array(23, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 113 */ array(33, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 114 */ array(45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 115 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 116 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 117 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 118 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 119 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 120 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 121 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 122 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 123 */ array(60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, ),
        /* 124 */ array(23, 30, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 125 */ array(45, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 126 */ array(45, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 127 */ array(59, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 128 */ array(22, 23, 25, 38, ),
        /* 129 */ array(25, 27, 29, 32, ),
        /* 130 */ array(22, 23, 25, 38, ),
        /* 131 */ array(1, 23, 30, 70, ),
        /* 132 */ array(22, 23, 25, ),
        /* 133 */ array(22, 25, 26, ),
        /* 134 */ array(22, 23, 25, ),
        /* 135 */ array(22, 25, 55, ),
        /* 136 */ array(1, 23, 70, ),
        /* 137 */ array(23, 30, ),
        /* 138 */ array(23, 30, ),
        /* 139 */ array(23, 30, ),
        /* 140 */ array(49, 57, ),
        /* 141 */ array(1, 70, ),
        /* 142 */ array(23, 30, ),
        /* 143 */ array(23, 30, ),
        /* 144 */ array(23, 30, ),
        /* 145 */ array(23, 30, ),
        /* 146 */ array(1, 38, ),
        /* 147 */ array(23, 30, ),
        /* 148 */ array(23, 30, ),
        /* 149 */ array(1, 70, ),
        /* 150 */ array(49, 57, ),
        /* 151 */ array(49, 57, ),
        /* 152 */ array(23, 30, ),
        /* 153 */ array(23, 30, ),
        /* 154 */ array(23, 30, ),
        /* 155 */ array(23, 30, ),
        /* 156 */ array(23, 30, ),
        /* 157 */ array(49, 57, ),
        /* 158 */ array(23, 30, ),
        /* 159 */ array(1, 37, ),
        /* 160 */ array(49, 57, ),
        /* 161 */ array(23, 30, ),
        /* 162 */ array(22, 44, ),
        /* 163 */ array(23, 30, ),
        /* 164 */ array(23, 30, ),
        /* 165 */ array(1, ),
        /* 166 */ array(30, ),
        /* 167 */ array(1, ),
        /* 168 */ array(28, ),
        /* 169 */ array(1, ),
        /* 170 */ array(28, ),
        /* 171 */ array(30, ),
        /* 172 */ array(28, ),
        /* 173 */ array(44, ),
        /* 174 */ array(1, ),
        /* 175 */ array(1, ),
        /* 176 */ array(2, ),
        /* 177 */ array(28, ),
        /* 178 */ array(20, ),
        /* 179 */ array(1, ),
        /* 180 */ array(1, ),
        /* 181 */ array(24, ),
        /* 182 */ array(1, ),
        /* 183 */ array(1, ),
        /* 184 */ array(),
        /* 185 */ array(),
        /* 186 */ array(),
        /* 187 */ array(),
        /* 188 */ array(),
        /* 189 */ array(),
        /* 190 */ array(),
        /* 191 */ array(),
        /* 192 */ array(22, 24, 25, 40, 50, 51, ),
        /* 193 */ array(44, 49, 54, 58, ),
        /* 194 */ array(31, 42, 43, 58, ),
        /* 195 */ array(23, 31, 42, 43, ),
        /* 196 */ array(23, 30, 44, 54, ),
        /* 197 */ array(26, 44, 54, ),
        /* 198 */ array(38, 44, 54, ),
        /* 199 */ array(31, 42, 43, ),
        /* 200 */ array(26, 49, ),
        /* 201 */ array(30, 31, ),
        /* 202 */ array(44, 54, ),
        /* 203 */ array(33, 41, ),
        /* 204 */ array(44, 54, ),
        /* 205 */ array(44, 54, ),
        /* 206 */ array(41, 58, ),
        /* 207 */ array(2, 26, ),
        /* 208 */ array(25, 40, ),
        /* 209 */ array(44, 54, ),
        /* 210 */ array(25, 55, ),
        /* 211 */ array(34, 83, ),
        /* 212 */ array(25, ),
        /* 213 */ array(37, ),
        /* 214 */ array(24, ),
        /* 215 */ array(25, ),
        /* 216 */ array(25, ),
        /* 217 */ array(25, ),
        /* 218 */ array(24, ),
        /* 219 */ array(45, ),
        /* 220 */ array(45, ),
        /* 221 */ array(25, ),
        /* 222 */ array(34, ),
        /* 223 */ array(23, ),
        /* 224 */ array(2, ),
        /* 225 */ array(49, ),
        /* 226 */ array(2, ),
        /* 227 */ array(5, ),
        /* 228 */ array(24, ),
        /* 229 */ array(56, ),
        /* 230 */ array(26, ),
        /* 231 */ array(46, ),
        /* 232 */ array(26, ),
        /* 233 */ array(46, ),
        /* 234 */ array(40, ),
        /* 235 */ array(2, ),
        /* 236 */ array(83, ),
        /* 237 */ array(46, ),
        /* 238 */ array(44, ),
        /* 239 */ array(25, ),
        /* 240 */ array(35, ),
        /* 241 */ array(23, ),
        /* 242 */ array(23, ),
        /* 243 */ array(13, ),
        /* 244 */ array(23, ),
        /* 245 */ array(23, ),
        /* 246 */ array(23, ),
        /* 247 */ array(23, ),
        /* 248 */ array(15, ),
        /* 249 */ array(30, ),
        /* 250 */ array(23, ),
        /* 251 */ array(18, ),
        /* 252 */ array(45, ),
        /* 253 */ array(41, ),
        /* 254 */ array(25, ),
        /* 255 */ array(24, ),
        /* 256 */ array(45, ),
        /* 257 */ array(58, ),
        /* 258 */ array(24, ),
        /* 259 */ array(56, ),
        /* 260 */ array(11, ),
        /* 261 */ array(25, ),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
        /* 391 */ array(),
        /* 392 */ array(),
        /* 393 */ array(),
        /* 394 */ array(),
        /* 395 */ array(),
        /* 396 */ array(),
        /* 397 */ array(),
        /* 398 */ array(),
        /* 399 */ array(),
        /* 400 */ array(),
        /* 401 */ array(),
        /* 402 */ array(),
        /* 403 */ array(),
        /* 404 */ array(),
        /* 405 */ array(),
        /* 406 */ array(),
        /* 407 */ array(),
        /* 408 */ array(),
        /* 409 */ array(),
        /* 410 */ array(),
);
    static public $yy_default = array(
 /*     0 */   618,  618,  618,  618,  618,  603,  618,  618,  618,  618,
 /*    10 */   618,  618,  618,  618,  618,  618,  618,  618,  618,  618,
 /*    20 */   618,  554,  554,  618,  554,  554,  618,  618,  618,  618,
 /*    30 */   618,  618,  618,  618,  618,  618,  618,  618,  618,  618,
 /*    40 */   618,  618,  618,  618,  618,  618,  618,  618,  618,  618,
 /*    50 */   618,  618,  618,  618,  618,  618,  481,  481,  571,  571,
 /*    60 */   411,  618,  618,  618,  618,  562,  495,  481,  481,  481,
 /*    70 */   481,  618,  618,  526,  422,  422,  618,  422,  526,  502,
 /*    80 */   502,  618,  618,  618,  618,  618,  428,  481,  428,  618,
 /*    90 */   428,  618,  428,  618,  618,  618,  618,  618,  519,  618,
 /*   100 */   481,  558,  618,  557,  481,  481,  481,  519,  481,  618,
 /*   110 */   618,  618,  618,  618,  618,  584,  577,  484,  581,  580,
 /*   120 */   576,  569,  585,  575,  571,  571,  571,  571,  618,  618,
 /*   130 */   618,  495,  618,  618,  618,  527,  495,  618,  618,  618,
 /*   140 */   547,  495,  618,  618,  618,  618,  495,  618,  618,  495,
 /*   150 */   524,  548,  618,  618,  618,  618,  618,  546,  618,  618,
 /*   160 */   545,  618,  526,  618,  618,  587,  617,  574,  560,  495,
 /*   170 */   542,  617,  563,  526,  504,  505,  518,  559,  434,  503,
 /*   180 */   498,  618,  497,  496,  565,  565,  526,  565,  526,  565,
 /*   190 */   566,  526,  618,  618,  618,  618,  492,  487,  492,  493,
 /*   200 */   507,  618,  586,  618,  618,  567,  618,  540,  618,  492,
 /*   210 */   618,  502,  618,  618,  618,  618,  618,  618,  618,  618,
 /*   220 */   618,  618,  502,  618,  540,  507,  618,  618,  618,  618,
 /*   230 */   618,  512,  487,  570,  618,  618,  618,  618,  561,  618,
 /*   240 */   489,  618,  618,  618,  618,  618,  618,  618,  618,  618,
 /*   250 */   618,  618,  618,  553,  618,  618,  618,  618,  618,  618,
 /*   260 */   618,  618,  515,  473,  466,  614,  491,  615,  472,  460,
 /*   270 */   465,  551,  454,  608,  611,  469,  412,  616,  607,  459,
 /*   280 */   461,  514,  488,  475,  463,  462,  470,  490,  467,  468,
 /*   290 */   486,  609,  474,  464,  478,  610,  572,  510,  509,  511,
 /*   300 */   516,  442,  513,  508,  556,  480,  477,  564,  506,  555,
 /*   310 */   612,  443,  540,  539,  499,  517,  544,  528,  525,  444,
 /*   320 */   613,  445,  494,  520,  476,  471,  427,  424,  429,  425,
 /*   330 */   430,  426,  423,  421,  414,  413,  415,  416,  417,  418,
 /*   340 */   419,  439,  438,  440,  441,  479,  437,  436,  431,  420,
 /*   350 */   432,  433,  435,  538,  521,  568,  512,  570,  578,  582,
 /*   360 */   579,  448,  596,  592,  591,  593,  594,  595,  583,  597,
 /*   370 */   453,  452,  455,  456,  458,  451,  450,  599,  598,  449,
 /*   380 */   500,  501,  590,  589,  600,  604,  602,  606,  601,  605,
 /*   390 */   537,  523,  522,  536,  534,  535,  549,  543,  446,  552,
 /*   400 */   447,  573,  588,  550,  533,  529,  541,  530,  531,  532,
 /*   410 */   457,
);
    const YYNOCODE = 134;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 411;
    const YYNRULE = 207;
    const YYERRORSYMBOL = 85;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'OTHER',         'PHP_CODE',      'PHP_CODE_START_DOUBLEQUOTE',  'PHP_CODE_DOUBLEQUOTE',
  'PHP_HEREDOC_START',  'PHP_HEREDOC_END',  'PHP_NOWDOC_START',  'PHP_NOWDOC_END',
  'PHP_DQ_CONTENT',  'PHP_DQ_EMBED_START',  'PHP_DQ_EMBED_END',  'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'RDEL',        
  'DOLLAR',        'ID',            'EQUAL',         'FOREACH',     
  'PTR',           'IF',            'SPACE',         'UNIMATH',     
  'FOR',           'SEMICOLON',     'INCDEC',        'TO',          
  'STEP',          'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'MATH',          'ANDSYM',      
  'OPENP',         'CLOSEP',        'QMARK',         'NOT',         
  'TYPECAST',      'DOT',           'BOOLEAN',       'NULL',        
  'SINGLEQUOTESTRING',  'QUOTE',         'DOUBLECOLON',   'AT',          
  'HATCH',         'OPENB',         'CLOSEB',        'ISIN',        
  'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',   
  'ISEVENBY',      'ISNOTEVENBY',   'ISODD',         'ISNOTODD',    
  'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',    'EQUALS',      
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',         
  'LAND',          'LOR',           'LXOR',          'BACKTICK',    
  'DOLLARID',      'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'php_code',    
  'php_code_element',  'php_dq_contents',  'php_dq_content',  'literal_elements',
  'literal_element',  'value',         'attributes',    'variable',    
  'expr',          'ternary',       'ifexprs',       'varindexed',  
  'modifier',      'modparameters',  'statement',     'statements',  
  'optspace',      'varvar',        'foraction',     'array',       
  'specialclose',  'attribute',     'exprs',         'function',    
  'doublequoted',  'static_class_access',  'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modparameter',  'ifexpr',      
  'ifcond',        'lop',           'arrayelements',  'arrayelement',
  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG php_code PHPENDTAG",
 /*   7 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   8 */ "template_element ::= XMLTAG",
 /*   9 */ "template_element ::= OTHER",
 /*  10 */ "php_code ::= php_code_element php_code",
 /*  11 */ "php_code ::=",
 /*  12 */ "php_code_element ::= PHP_CODE",
 /*  13 */ "php_code_element ::= PHP_CODE_START_DOUBLEQUOTE php_dq_contents PHP_CODE_DOUBLEQUOTE",
 /*  14 */ "php_code_element ::= PHP_HEREDOC_START php_dq_contents PHP_HEREDOC_END",
 /*  15 */ "php_code_element ::= PHP_NOWDOC_START php_dq_contents PHP_NOWDOC_END",
 /*  16 */ "php_dq_contents ::= php_dq_content php_dq_contents",
 /*  17 */ "php_dq_contents ::=",
 /*  18 */ "php_dq_content ::= PHP_DQ_CONTENT",
 /*  19 */ "php_dq_content ::= PHP_DQ_EMBED_START php_code PHP_DQ_EMBED_END",
 /*  20 */ "literal ::= LITERALSTART LITERALEND",
 /*  21 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  22 */ "literal_elements ::= literal_elements literal_element",
 /*  23 */ "literal_elements ::=",
 /*  24 */ "literal_element ::= literal",
 /*  25 */ "literal_element ::= LITERAL",
 /*  26 */ "literal_element ::= PHPSTARTTAG",
 /*  27 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  28 */ "literal_element ::= PHPENDTAG",
 /*  29 */ "smartytag ::= LDEL value RDEL",
 /*  30 */ "smartytag ::= LDEL value attributes RDEL",
 /*  31 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  32 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  36 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL DOLLAR ID EQUAL ifexprs attributes RDEL",
 /*  38 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  39 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  40 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  41 */ "smartytag ::= LDEL varindexed EQUAL ifexprs attributes RDEL",
 /*  42 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  43 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  44 */ "smartytag ::= LDEL ID RDEL",
 /*  45 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  46 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  47 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  48 */ "smartytag ::= LDEL IF SPACE ifexprs RDEL",
 /*  49 */ "smartytag ::= LDEL IF UNIMATH ifexprs RDEL",
 /*  50 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  51 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexprs SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  52 */ "foraction ::= EQUAL expr",
 /*  53 */ "foraction ::= INCDEC",
 /*  54 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  55 */ "smartytag ::= LDEL FOR SPACE statement TO expr STEP expr RDEL",
 /*  56 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  57 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  58 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  59 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  61 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  62 */ "specialclose ::= IF",
 /*  63 */ "specialclose ::= FOR",
 /*  64 */ "specialclose ::= FOREACH",
 /*  65 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  66 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  67 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  68 */ "attributes ::= attributes attribute",
 /*  69 */ "attributes ::= attribute",
 /*  70 */ "attributes ::=",
 /*  71 */ "attribute ::= SPACE ID EQUAL ID",
 /*  72 */ "attribute ::= SPACE ID EQUAL expr",
 /*  73 */ "attribute ::= SPACE ID EQUAL ifexprs",
 /*  74 */ "attribute ::= SPACE ID EQUAL value",
 /*  75 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  76 */ "attribute ::= SPACE ID",
 /*  77 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  78 */ "statements ::= statement",
 /*  79 */ "statements ::= statements COMMA statement",
 /*  80 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  81 */ "expr ::= ID",
 /*  82 */ "expr ::= exprs",
 /*  83 */ "expr ::= DOLLAR ID COLON ID",
 /*  84 */ "exprs ::= value",
 /*  85 */ "exprs ::= exprs MATH value",
 /*  86 */ "exprs ::= exprs UNIMATH value",
 /*  87 */ "exprs ::= exprs ANDSYM value",
 /*  88 */ "exprs ::= array",
 /*  89 */ "ternary ::= OPENP ifexprs CLOSEP QMARK expr COLON expr",
 /*  90 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  91 */ "value ::= variable",
 /*  92 */ "value ::= UNIMATH value",
 /*  93 */ "value ::= NOT value",
 /*  94 */ "value ::= TYPECAST value",
 /*  95 */ "value ::= variable INCDEC",
 /*  96 */ "value ::= INTEGER",
 /*  97 */ "value ::= INTEGER DOT INTEGER",
 /*  98 */ "value ::= BOOLEAN",
 /*  99 */ "value ::= NULL",
 /* 100 */ "value ::= function",
 /* 101 */ "value ::= OPENP expr CLOSEP",
 /* 102 */ "value ::= SINGLEQUOTESTRING",
 /* 103 */ "value ::= QUOTE doublequoted QUOTE",
 /* 104 */ "value ::= QUOTE QUOTE",
 /* 105 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 106 */ "value ::= smartytag",
 /* 107 */ "value ::= value modifier modparameters",
 /* 108 */ "variable ::= varindexed",
 /* 109 */ "variable ::= DOLLAR varvar AT ID",
 /* 110 */ "variable ::= object",
 /* 111 */ "variable ::= HATCH ID HATCH",
 /* 112 */ "variable ::= HATCH variable HATCH",
 /* 113 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 114 */ "arrayindex ::= arrayindex indexdef",
 /* 115 */ "arrayindex ::=",
 /* 116 */ "indexdef ::= DOT DOLLAR varvar",
 /* 117 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 118 */ "indexdef ::= DOT ID",
 /* 119 */ "indexdef ::= DOT BOOLEAN",
 /* 120 */ "indexdef ::= DOT NULL",
 /* 121 */ "indexdef ::= DOT INTEGER",
 /* 122 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 123 */ "indexdef ::= OPENB ID CLOSEB",
 /* 124 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 125 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 126 */ "indexdef ::= OPENB CLOSEB",
 /* 127 */ "varvar ::= varvarele",
 /* 128 */ "varvar ::= varvar varvarele",
 /* 129 */ "varvarele ::= ID",
 /* 130 */ "varvarele ::= LDEL expr RDEL",
 /* 131 */ "object ::= varindexed objectchain",
 /* 132 */ "objectchain ::= objectelement",
 /* 133 */ "objectchain ::= objectchain objectelement",
 /* 134 */ "objectelement ::= PTR ID arrayindex",
 /* 135 */ "objectelement ::= PTR variable arrayindex",
 /* 136 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 137 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 138 */ "objectelement ::= PTR method",
 /* 139 */ "function ::= ID OPENP params CLOSEP",
 /* 140 */ "method ::= ID OPENP params CLOSEP",
 /* 141 */ "params ::= expr COMMA params",
 /* 142 */ "params ::= expr",
 /* 143 */ "params ::=",
 /* 144 */ "modifier ::= VERT AT ID",
 /* 145 */ "modifier ::= VERT ID",
 /* 146 */ "static_class_access ::= method",
 /* 147 */ "static_class_access ::= DOLLAR ID OPENP params CLOSEP",
 /* 148 */ "static_class_access ::= method objectchain",
 /* 149 */ "static_class_access ::= DOLLAR ID OPENP params CLOSEP objectchain",
 /* 150 */ "static_class_access ::= ID",
 /* 151 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 152 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 153 */ "modparameters ::= modparameters modparameter",
 /* 154 */ "modparameters ::=",
 /* 155 */ "modparameter ::= COLON value",
 /* 156 */ "modparameter ::= COLON ID",
 /* 157 */ "ifexprs ::= ifexpr",
 /* 158 */ "ifexprs ::= NOT ifexprs",
 /* 159 */ "ifexprs ::= OPENP ifexprs CLOSEP",
 /* 160 */ "ifexpr ::= expr",
 /* 161 */ "ifexpr ::= expr ifcond expr",
 /* 162 */ "ifexpr ::= expr ISIN array",
 /* 163 */ "ifexpr ::= expr ISIN value",
 /* 164 */ "ifexpr ::= ifexprs lop ifexprs",
 /* 165 */ "ifexpr ::= ifexprs ISDIVBY ifexprs",
 /* 166 */ "ifexpr ::= ifexprs ISNOTDIVBY ifexprs",
 /* 167 */ "ifexpr ::= ifexprs ISEVEN",
 /* 168 */ "ifexpr ::= ifexprs ISNOTEVEN",
 /* 169 */ "ifexpr ::= ifexprs ISEVENBY ifexprs",
 /* 170 */ "ifexpr ::= ifexprs ISNOTEVENBY ifexprs",
 /* 171 */ "ifexpr ::= ifexprs ISODD",
 /* 172 */ "ifexpr ::= ifexprs ISNOTODD",
 /* 173 */ "ifexpr ::= ifexprs ISODDBY ifexprs",
 /* 174 */ "ifexpr ::= ifexprs ISNOTODDBY ifexprs",
 /* 175 */ "ifexpr ::= value INSTANCEOF ID",
 /* 176 */ "ifexpr ::= value INSTANCEOF value",
 /* 177 */ "ifcond ::= EQUALS",
 /* 178 */ "ifcond ::= NOTEQUALS",
 /* 179 */ "ifcond ::= GREATERTHAN",
 /* 180 */ "ifcond ::= LESSTHAN",
 /* 181 */ "ifcond ::= GREATEREQUAL",
 /* 182 */ "ifcond ::= LESSEQUAL",
 /* 183 */ "ifcond ::= IDENTITY",
 /* 184 */ "ifcond ::= NONEIDENTITY",
 /* 185 */ "ifcond ::= MOD",
 /* 186 */ "lop ::= LAND",
 /* 187 */ "lop ::= LOR",
 /* 188 */ "lop ::= LXOR",
 /* 189 */ "array ::= OPENB arrayelements CLOSEB",
 /* 190 */ "arrayelements ::= arrayelement",
 /* 191 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 192 */ "arrayelements ::=",
 /* 193 */ "arrayelement ::= value APTR expr",
 /* 194 */ "arrayelement ::= ID APTR expr",
 /* 195 */ "arrayelement ::= expr",
 /* 196 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 197 */ "doublequoted ::= doublequotedcontent",
 /* 198 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 199 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 200 */ "doublequotedcontent ::= DOLLARID",
 /* 201 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 202 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 203 */ "doublequotedcontent ::= smartytag",
 /* 204 */ "doublequotedcontent ::= OTHER",
 /* 205 */ "optspace ::= SPACE",
 /* 206 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 0 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 0 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 8 ),
  array( 'lhs' => 89, 'rhs' => 5 ),
  array( 'lhs' => 89, 'rhs' => 5 ),
  array( 'lhs' => 89, 'rhs' => 5 ),
  array( 'lhs' => 89, 'rhs' => 13 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 8 ),
  array( 'lhs' => 89, 'rhs' => 9 ),
  array( 'lhs' => 89, 'rhs' => 8 ),
  array( 'lhs' => 89, 'rhs' => 11 ),
  array( 'lhs' => 89, 'rhs' => 8 ),
  array( 'lhs' => 89, 'rhs' => 11 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 5 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 0 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 7 ),
  array( 'lhs' => 101, 'rhs' => 7 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 119, 'rhs' => 0 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 5 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 4 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 5 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 5 ),
  array( 'lhs' => 123, 'rhs' => 6 ),
  array( 'lhs' => 123, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 124, 'rhs' => 4 ),
  array( 'lhs' => 125, 'rhs' => 3 ),
  array( 'lhs' => 125, 'rhs' => 1 ),
  array( 'lhs' => 125, 'rhs' => 0 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 5 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 6 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 0 ),
  array( 'lhs' => 126, 'rhs' => 2 ),
  array( 'lhs' => 126, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 1 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 2 ),
  array( 'lhs' => 127, 'rhs' => 2 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 2 ),
  array( 'lhs' => 127, 'rhs' => 2 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 127, 'rhs' => 3 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 128, 'rhs' => 1 ),
  array( 'lhs' => 129, 'rhs' => 1 ),
  array( 'lhs' => 129, 'rhs' => 1 ),
  array( 'lhs' => 129, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 130, 'rhs' => 1 ),
  array( 'lhs' => 130, 'rhs' => 3 ),
  array( 'lhs' => 130, 'rhs' => 0 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 3 ),
  array( 'lhs' => 131, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 132, 'rhs' => 3 ),
  array( 'lhs' => 132, 'rhs' => 3 ),
  array( 'lhs' => 132, 'rhs' => 1 ),
  array( 'lhs' => 132, 'rhs' => 3 ),
  array( 'lhs' => 132, 'rhs' => 3 ),
  array( 'lhs' => 132, 'rhs' => 1 ),
  array( 'lhs' => 132, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        12 => 0,
        18 => 0,
        24 => 0,
        25 => 0,
        62 => 0,
        63 => 0,
        64 => 0,
        84 => 0,
        91 => 0,
        96 => 0,
        98 => 0,
        99 => 0,
        100 => 0,
        102 => 0,
        110 => 0,
        146 => 0,
        190 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        16 => 10,
        22 => 10,
        92 => 10,
        94 => 10,
        95 => 10,
        11 => 11,
        17 => 11,
        20 => 11,
        23 => 11,
        13 => 13,
        14 => 13,
        15 => 13,
        19 => 13,
        21 => 21,
        26 => 26,
        27 => 26,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 30,
        32 => 30,
        33 => 30,
        34 => 34,
        35 => 34,
        36 => 36,
        37 => 36,
        38 => 36,
        39 => 39,
        40 => 39,
        41 => 39,
        42 => 42,
        43 => 42,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        50 => 48,
        49 => 49,
        51 => 51,
        52 => 52,
        53 => 53,
        69 => 53,
        142 => 53,
        150 => 53,
        195 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 60,
        65 => 65,
        66 => 66,
        67 => 67,
        68 => 68,
        70 => 70,
        71 => 71,
        72 => 72,
        73 => 72,
        74 => 72,
        75 => 72,
        77 => 72,
        76 => 76,
        78 => 78,
        79 => 79,
        80 => 80,
        81 => 81,
        82 => 82,
        88 => 82,
        127 => 82,
        157 => 82,
        197 => 82,
        204 => 82,
        205 => 82,
        83 => 83,
        85 => 85,
        86 => 85,
        87 => 85,
        89 => 89,
        90 => 89,
        93 => 93,
        97 => 97,
        101 => 101,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        107 => 107,
        108 => 108,
        109 => 109,
        111 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        196 => 114,
        115 => 115,
        154 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 118,
        120 => 118,
        121 => 121,
        122 => 122,
        125 => 122,
        123 => 123,
        124 => 124,
        126 => 126,
        206 => 126,
        128 => 128,
        129 => 129,
        130 => 130,
        159 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        143 => 143,
        144 => 144,
        145 => 144,
        147 => 147,
        148 => 148,
        149 => 149,
        151 => 151,
        152 => 152,
        153 => 153,
        155 => 155,
        156 => 156,
        158 => 158,
        160 => 160,
        161 => 161,
        164 => 161,
        175 => 161,
        162 => 162,
        163 => 163,
        165 => 165,
        166 => 166,
        167 => 167,
        172 => 167,
        168 => 168,
        171 => 168,
        169 => 169,
        174 => 169,
        170 => 170,
        173 => 170,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 187,
        188 => 188,
        189 => 189,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
        198 => 198,
        199 => 199,
        200 => 200,
        201 => 201,
        202 => 202,
        203 => 203,
    );
#line 83 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2071 "smarty_internal_templateparser.php"
#line 89 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 2080 "smarty_internal_templateparser.php"
#line 97 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 2090 "smarty_internal_templateparser.php"
#line 110 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 2097 "smarty_internal_templateparser.php"
#line 117 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 2100 "smarty_internal_templateparser.php"
#line 123 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + -2]->minor) . str_replace('<?','&lt;?',$this->yystack[$this->yyidx + -1]->minor) . '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'?>', ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php'.$this->yystack[$this->yyidx + -1]->minor.'?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2113 "smarty_internal_templateparser.php"
#line 135 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2121 "smarty_internal_templateparser.php"
#line 143 "smarty_internal_templateparser.y"
    function yy_r8(){ $this->compiler->tag_nocache = true; $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true);    }
#line 2124 "smarty_internal_templateparser.php"
#line 146 "smarty_internal_templateparser.y"
    function yy_r9(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2132 "smarty_internal_templateparser.php"
#line 154 "smarty_internal_templateparser.y"
    function yy_r10(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2135 "smarty_internal_templateparser.php"
#line 155 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = '';     }
#line 2138 "smarty_internal_templateparser.php"
#line 158 "smarty_internal_templateparser.y"
    function yy_r13(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2141 "smarty_internal_templateparser.php"
#line 171 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2144 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r26(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2147 "smarty_internal_templateparser.php"
#line 180 "smarty_internal_templateparser.y"
    function yy_r28(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2150 "smarty_internal_templateparser.php"
#line 188 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2153 "smarty_internal_templateparser.php"
#line 189 "smarty_internal_templateparser.y"
    function yy_r30(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2156 "smarty_internal_templateparser.php"
#line 200 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2159 "smarty_internal_templateparser.php"
#line 202 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2162 "smarty_internal_templateparser.php"
#line 205 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2165 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2168 "smarty_internal_templateparser.php"
#line 211 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2171 "smarty_internal_templateparser.php"
#line 213 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2174 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r46(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2179 "smarty_internal_templateparser.php"
#line 219 "smarty_internal_templateparser.y"
    function yy_r47(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2184 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2187 "smarty_internal_templateparser.php"
#line 224 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2190 "smarty_internal_templateparser.php"
#line 227 "smarty_internal_templateparser.y"
    function yy_r51(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2194 "smarty_internal_templateparser.php"
#line 229 "smarty_internal_templateparser.y"
    function yy_r52(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2197 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r53(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2200 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r54(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2203 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r55(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -7]->minor,array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2206 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r56(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2210 "smarty_internal_templateparser.php"
#line 236 "smarty_internal_templateparser.y"
    function yy_r57(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2214 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r58(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2218 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r59(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2222 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r60(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2225 "smarty_internal_templateparser.php"
#line 249 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2228 "smarty_internal_templateparser.php"
#line 250 "smarty_internal_templateparser.y"
    function yy_r66(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2233 "smarty_internal_templateparser.php"
#line 254 "smarty_internal_templateparser.y"
    function yy_r67(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2236 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r68(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2239 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->_retvalue = array();    }
#line 2242 "smarty_internal_templateparser.php"
#line 268 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2245 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r72(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2248 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r76(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2251 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r78(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2254 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r79(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2257 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r80(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2260 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r81(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2263 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2266 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r83(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2269 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r85(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2272 "smarty_internal_templateparser.php"
#line 310 "smarty_internal_templateparser.y"
    function yy_r89(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2275 "smarty_internal_templateparser.php"
#line 319 "smarty_internal_templateparser.y"
    function yy_r93(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2278 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2281 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2284 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r103(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2293 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->_retvalue = "''";     }
#line 2296 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r105(){if (!$this->template->security || $this->smarty->security_handler->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor; 
                                                                }    }
#line 2301 "smarty_internal_templateparser.php"
#line 351 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2304 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r107(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2307 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r108(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2311 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r109(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2314 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r111(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2317 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r112(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2320 "smarty_internal_templateparser.php"
#line 373 "smarty_internal_templateparser.y"
    function yy_r113(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2323 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r114(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2326 "smarty_internal_templateparser.php"
#line 381 "smarty_internal_templateparser.y"
    function yy_r115(){return;    }
#line 2329 "smarty_internal_templateparser.php"
#line 385 "smarty_internal_templateparser.y"
    function yy_r116(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2332 "smarty_internal_templateparser.php"
#line 386 "smarty_internal_templateparser.y"
    function yy_r117(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2335 "smarty_internal_templateparser.php"
#line 389 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2338 "smarty_internal_templateparser.php"
#line 393 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2341 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r122(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2344 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r123(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2347 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r124(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2350 "smarty_internal_templateparser.php"
#line 401 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '';    }
#line 2353 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r128(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2356 "smarty_internal_templateparser.php"
#line 411 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2359 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2362 "smarty_internal_templateparser.php"
#line 419 "smarty_internal_templateparser.y"
    function yy_r131(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2366 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r132(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2369 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r133(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2372 "smarty_internal_templateparser.php"
#line 426 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2375 "smarty_internal_templateparser.php"
#line 427 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2378 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r136(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2381 "smarty_internal_templateparser.php"
#line 429 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2384 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2387 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r139(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2396 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r140(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2399 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2402 "smarty_internal_templateparser.php"
#line 456 "smarty_internal_templateparser.y"
    function yy_r143(){ return;    }
#line 2405 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r144(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2408 "smarty_internal_templateparser.php"
#line 466 "smarty_internal_templateparser.y"
    function yy_r147(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2411 "smarty_internal_templateparser.php"
#line 468 "smarty_internal_templateparser.y"
    function yy_r148(){ $this->_retvalue = c.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2414 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2417 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r151(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2420 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r152(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2423 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r153(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2426 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2429 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2432 "smarty_internal_templateparser.php"
#line 498 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2435 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2438 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2441 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2444 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2447 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r165(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2450 "smarty_internal_templateparser.php"
#line 509 "smarty_internal_templateparser.y"
    function yy_r166(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2453 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2456 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2459 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2462 "smarty_internal_templateparser.php"
#line 513 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2465 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r176(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2468 "smarty_internal_templateparser.php"
#line 521 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '==';    }
#line 2471 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = '!=';    }
#line 2474 "smarty_internal_templateparser.php"
#line 523 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = '>';    }
#line 2477 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r180(){$this->_retvalue = '<';    }
#line 2480 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r181(){$this->_retvalue = '>=';    }
#line 2483 "smarty_internal_templateparser.php"
#line 526 "smarty_internal_templateparser.y"
    function yy_r182(){$this->_retvalue = '<=';    }
#line 2486 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r183(){$this->_retvalue = '===';    }
#line 2489 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r184(){$this->_retvalue = '!==';    }
#line 2492 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r185(){$this->_retvalue = '%';    }
#line 2495 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r186(){$this->_retvalue = '&&';    }
#line 2498 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r187(){$this->_retvalue = '||';    }
#line 2501 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r188(){$this->_retvalue = ' XOR ';    }
#line 2504 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r189(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2507 "smarty_internal_templateparser.php"
#line 540 "smarty_internal_templateparser.y"
    function yy_r191(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2510 "smarty_internal_templateparser.php"
#line 541 "smarty_internal_templateparser.y"
    function yy_r192(){ return;     }
#line 2513 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2516 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r194(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2519 "smarty_internal_templateparser.php"
#line 552 "smarty_internal_templateparser.y"
    function yy_r198(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'' || substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '@') {
                                                                 		     $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                	      } else {
                                                                         $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                        }
                                                                       $this->compiler->has_variable_string = true;
                                                                           }
#line 2528 "smarty_internal_templateparser.php"
#line 559 "smarty_internal_templateparser.y"
    function yy_r199(){$this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2531 "smarty_internal_templateparser.php"
#line 560 "smarty_internal_templateparser.y"
    function yy_r200(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2534 "smarty_internal_templateparser.php"
#line 561 "smarty_internal_templateparser.y"
    function yy_r201(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                }
                                                                $this->compiler->has_variable_string = true;
                                                                   }
#line 2543 "smarty_internal_templateparser.php"
#line 568 "smarty_internal_templateparser.y"
    function yy_r202(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2546 "smarty_internal_templateparser.php"
#line 569 "smarty_internal_templateparser.y"
    function yy_r203(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2549 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 71 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2612 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 63 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2630 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>