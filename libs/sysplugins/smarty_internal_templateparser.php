<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->block_nesting_level = 0;
				$this->is_xml = false;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 128 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_FAKEPHPSTARTTAG                =  6;
    const TP_XMLTAG                         =  7;
    const TP_OTHER                          =  8;
    const TP_LITERALSTART                   =  9;
    const TP_LITERALEND                     = 10;
    const TP_LITERAL                        = 11;
    const TP_LDEL                           = 12;
    const TP_RDEL                           = 13;
    const TP_DOLLAR                         = 14;
    const TP_ID                             = 15;
    const TP_EQUAL                          = 16;
    const TP_FOREACH                        = 17;
    const TP_PTR                            = 18;
    const TP_IF                             = 19;
    const TP_SPACE                          = 20;
    const TP_FOR                            = 21;
    const TP_SEMICOLON                      = 22;
    const TP_INCDEC                         = 23;
    const TP_TO                             = 24;
    const TP_STEP                           = 25;
    const TP_AS                             = 26;
    const TP_APTR                           = 27;
    const TP_LDELSLASH                      = 28;
    const TP_INTEGER                        = 29;
    const TP_COMMA                          = 30;
    const TP_MATH                           = 31;
    const TP_UNIMATH                        = 32;
    const TP_ANDSYM                         = 33;
    const TP_ISIN                           = 34;
    const TP_ISDIVBY                        = 35;
    const TP_ISNOTDIVBY                     = 36;
    const TP_ISEVEN                         = 37;
    const TP_ISNOTEVEN                      = 38;
    const TP_ISEVENBY                       = 39;
    const TP_ISNOTEVENBY                    = 40;
    const TP_ISODD                          = 41;
    const TP_ISNOTODD                       = 42;
    const TP_ISODDBY                        = 43;
    const TP_ISNOTODDBY                     = 44;
    const TP_INSTANCEOF                     = 45;
    const TP_OPENP                          = 46;
    const TP_CLOSEP                         = 47;
    const TP_QMARK                          = 48;
    const TP_NOT                            = 49;
    const TP_TYPECAST                       = 50;
    const TP_DOT                            = 51;
    const TP_SINGLEQUOTESTRING              = 52;
    const TP_DOUBLECOLON                    = 53;
    const TP_AT                             = 54;
    const TP_HATCH                          = 55;
    const TP_OPENB                          = 56;
    const TP_CLOSEB                         = 57;
    const TP_EQUALS                         = 58;
    const TP_NOTEQUALS                      = 59;
    const TP_GREATERTHAN                    = 60;
    const TP_LESSTHAN                       = 61;
    const TP_GREATEREQUAL                   = 62;
    const TP_LESSEQUAL                      = 63;
    const TP_IDENTITY                       = 64;
    const TP_NONEIDENTITY                   = 65;
    const TP_MOD                            = 66;
    const TP_LAND                           = 67;
    const TP_LOR                            = 68;
    const TP_LXOR                           = 69;
    const TP_QUOTE                          = 70;
    const TP_BACKTICK                       = 71;
    const TP_DOLLARID                       = 72;
    const YY_NO_ACTION = 548;
    const YY_ACCEPT_ACTION = 547;
    const YY_ERROR_ACTION = 546;

    const YY_SZ_ACTTAB = 1877;
static public $yy_action = array(
 /*     0 */   184,  281,    9,   15,  326,  188,  276,  206,   53,  117,
 /*    10 */   112,  267,  323,  156,  324,  309,  306,  310,  336,  177,
 /*    20 */   158,  299,  308,  284,  282,  209,  280,  194,  112,  320,
 /*    30 */    47,   43,   45,   39,   18,   17,  342,  338,   23,   20,
 /*    40 */   339,  340,   21,   22,  280,   54,  297,  294,  293,  289,
 /*    50 */   290,  291,  158,  116,  197,    3,  247,  349,  356,  357,
 /*    60 */   358,  359,  355,  354,  350,  351,  352,  353,  337,  184,
 /*    70 */   281,  124,  184,  304,  188,  163,  206,   60,  170,  112,
 /*    80 */   177,  318,  198,   13,  332,   31,   25,  336,  177,  223,
 /*    90 */   252,  177,  284,  282,   89,  280,  295,  296,  298,   47,
 /*   100 */    43,   45,   39,   18,   17,  342,  338,   23,   20,  339,
 /*   110 */   340,   21,   22,   16,  348,  114,  150,   10,  547,   84,
 /*   120 */   231,  296,  298,   44,  111,   34,  349,  356,  357,  358,
 /*   130 */   359,  355,  354,  350,  351,  352,  353,  337,  184,  248,
 /*   140 */    87,  281,  245,   44,  257,  174,  242,  206,   51,  119,
 /*   150 */   112,   15,   10,  220,  276,   26,   89,  177,  336,  111,
 /*   160 */   422,    4,   32,  284,  282,   14,  280,  422,   47,   43,
 /*   170 */    45,   39,   18,   17,  342,  338,   23,   20,  339,  340,
 /*   180 */    21,   22,  184,  170,   10,  264,   15,   15,   13,  276,
 /*   190 */   276,  111,   44,  207,  161,  349,  356,  357,  358,  359,
 /*   200 */   355,  354,  350,  351,  352,  353,  337,   15,  152,  324,
 /*   210 */   276,   26,   47,   43,   45,   39,   18,   17,  342,  338,
 /*   220 */    23,   20,  339,  340,   21,   22,  184,   15,  202,  207,
 /*   230 */   276,   35,   15,  328,   29,  276,  113,  233,  250,  349,
 /*   240 */   356,  357,  358,  359,  355,  354,  350,  351,  352,  353,
 /*   250 */   337,  228,  216,  176,  222,  195,   47,   43,   45,   39,
 /*   260 */    18,   17,  342,  338,   23,   20,  339,  340,   21,   22,
 /*   270 */    10,  314,  239,  313,  155,  208,  272,  111,  177,   40,
 /*   280 */   177,  262,  159,  349,  356,  357,  358,  359,  355,  354,
 /*   290 */   350,  351,  352,  353,  337,  184,  281,  177,  184,  234,
 /*   300 */   173,  106,  206,   83,  230,  112,  177,  261,   15,  327,
 /*   310 */   303,  276,  261,  336,  177,  218,   33,  177,  284,  282,
 /*   320 */   307,  280,  300,  205,  255,   47,   43,   45,   39,   18,
 /*   330 */    17,  342,  338,   23,   20,  339,  340,   21,   22,  184,
 /*   340 */    28,  105,  281,   94,  259,  269,  283,  107,  206,  238,
 /*   350 */     4,  112,  349,  356,  357,  358,  359,  355,  354,  350,
 /*   360 */   351,  352,  353,  337,  284,  282,  147,  280,  275,   47,
 /*   370 */    43,   45,   39,   18,   17,  342,  338,   23,   20,  339,
 /*   380 */   340,   21,   22,  184,  419,  319,  301,   15,  160,  324,
 /*   390 */   276,  177,  177,  177,  272,  237,  349,  356,  357,  358,
 /*   400 */   359,  355,  354,  350,  351,  352,  353,  337,   15,  302,
 /*   410 */   177,  211,  219,   47,   43,   45,   39,   18,   17,  342,
 /*   420 */   338,   23,   20,  339,  340,   21,   22,  184,  345,   15,
 /*   430 */   281,  275,  183,  109,  249,  177,  206,   27,  272,  112,
 /*   440 */   349,  356,  357,  358,  359,  355,  354,  350,  351,  352,
 /*   450 */   353,  337,  284,  282,  184,  280,    7,   47,   43,   45,
 /*   460 */    39,   18,   17,  342,  338,   23,   20,  339,  340,   21,
 /*   470 */    22,  184,  192,  177,  281,  325,   54,  311,  274,    5,
 /*   480 */   206,   54,  177,  112,  349,  356,  357,  358,  359,  355,
 /*   490 */   354,  350,  351,  352,  353,  337,  284,  282,  120,  280,
 /*   500 */    30,   47,   43,   45,   39,   18,   17,  342,  338,   23,
 /*   510 */    20,  339,  340,   21,   22,  184,  213,  316,  331,  346,
 /*   520 */    38,   41,  256,    8,  177,  177,  177,  235,  349,  356,
 /*   530 */   357,  358,  359,  355,  354,  350,  351,  352,  353,  337,
 /*   540 */   162,  232,  317,  112,  214,   47,   43,   45,   39,   18,
 /*   550 */    17,  342,  338,   23,   20,  339,  340,   21,   22,  280,
 /*   560 */   253,  333,  244,  420,   92,  229,  153,  260,  177,  263,
 /*   570 */   420,    2,  349,  356,  357,  358,  359,  355,  354,  350,
 /*   580 */   351,  352,  353,  337,  184,  281,  128,  124,  341,   98,
 /*   590 */   196,  101,   52,  118,   99,  144,   10,   15,  330,  278,
 /*   600 */   276,   44,  336,  111,    6,  157,  305,  284,  282,  287,
 /*   610 */   280,  192,  186,  177,   47,   43,   45,   39,   18,   17,
 /*   620 */   342,  338,   23,   20,  339,  340,   21,   22,  184,  240,
 /*   630 */    19,  258,   15,  196,  268,  199,  110,   27,   44,  215,
 /*   640 */   243,  349,  356,  357,  358,  359,  355,  354,  350,  351,
 /*   650 */   352,  353,  337,  200,   11,   12,  312,  103,   47,   43,
 /*   660 */    45,   39,   18,   17,  342,  338,   23,   20,  339,  340,
 /*   670 */    21,   22,  184,  288,  335,  334,  344,  315,  272,  360,
 /*   680 */   177,  177,  177,  177,  177,  349,  356,  357,  358,  359,
 /*   690 */   355,  354,  350,  351,  352,  353,  337,  227,  210,  266,
 /*   700 */   193,   88,   47,   43,   45,   39,   18,   17,  342,  338,
 /*   710 */    23,   20,  339,  340,   21,   22,  184,  265,  217,  281,
 /*   720 */    40,  148,  271,  273,  122,  206,  254,  203,  112,  349,
 /*   730 */   356,  357,  358,  359,  355,  354,  350,  351,  352,  353,
 /*   740 */   337,  284,  282,  292,  280,  277,   47,   43,   45,   39,
 /*   750 */    18,   17,  342,  338,   23,   20,  339,  340,   21,   22,
 /*   760 */    95,    8,  267,   24,   90,  154,  302,  246,  131,  302,
 /*   770 */    54,  460,  241,  349,  356,  357,  358,  359,  355,  354,
 /*   780 */   350,  351,  352,  353,  337,  184,  281,  123,  140,  125,
 /*   790 */    98,   10,  100,   49,  118,   99,  134,  167,  111,  143,
 /*   800 */   278,  164,  278,  336,  166,  213,  133,   93,  284,  282,
 /*   810 */   287,  280,   91,  287,  302,   47,   43,   45,   39,   18,
 /*   820 */    17,  342,  338,   23,   20,  339,  340,   21,   22,  184,
 /*   830 */   302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
 /*   840 */   136,  329,  349,  356,  357,  358,  359,  355,  354,  350,
 /*   850 */   351,  352,  353,  337,  287,  302,  302,  302,  302,   47,
 /*   860 */    43,   45,   39,   18,   17,  342,  338,   23,   20,  339,
 /*   870 */   340,   21,   22,  184,  302,  302,  302,  302,  302,  302,
 /*   880 */   302,  302,  302,  302,  302,  102,  349,  356,  357,  358,
 /*   890 */   359,  355,  354,  350,  351,  352,  353,  337,  278,  302,
 /*   900 */   302,  302,  302,   47,   43,   45,   39,   18,   17,  342,
 /*   910 */   338,   23,   20,  339,  340,   21,   22,  187,  302,  302,
 /*   920 */   302,  302,  302,  302,  302,  302,  302,  302,  302,  275,
 /*   930 */   349,  356,  357,  358,  359,  355,  354,  350,  351,  352,
 /*   940 */   353,  337,  135,    3,  302,  104,   86,  163,  121,  302,
 /*   950 */   204,    3,  201,  108,  171,  302,  287,   31,   25,  124,
 /*   960 */   212,   96,  302,   48,  302,  126,  127,  124,  212,  302,
 /*   970 */   130,   48,  302,  302,  278,  165,  302,   36,  278,  278,
 /*   980 */    46,   42,  302,  286,  287,   37,   89,    1,   46,   42,
 /*   990 */     3,  286,  108,  178,   89,    1,  226,  145,  151,  302,
 /*  1000 */   302,   85,    3,  163,  108,  178,  124,  212,  302,   85,
 /*  1010 */    48,  287,  287,   31,   25,  146,  302,  149,  124,  212,
 /*  1020 */   302,  302,   48,  302,   36,  271,  302,   46,   42,  287,
 /*  1030 */   286,  287,  302,   89,    1,    3,   37,  108,  169,   46,
 /*  1040 */    42,  129,  286,  271,  138,   89,    1,    3,   85,  116,
 /*  1050 */   178,  124,  212,   97,  278,   48,  302,  132,  287,  302,
 /*  1060 */    85,  302,  139,  124,  212,  302,  278,   48,  302,   36,
 /*  1070 */   302,  287,   46,   42,  142,  286,  287,  302,   89,    1,
 /*  1080 */     3,   37,  116,  168,   46,   42,  302,  286,  287,  302,
 /*  1090 */    89,    1,    3,   85,  108,  172,  124,  175,  302,  302,
 /*  1100 */    48,  302,  271,  302,  302,   85,  302,  302,  124,  212,
 /*  1110 */   302,  302,   48,  302,   37,  302,  302,   46,   42,  302,
 /*  1120 */   286,  302,  302,   89,    1,    3,   37,  115,  178,   46,
 /*  1130 */    42,  302,  286,  302,  302,   89,    1,    3,   85,  116,
 /*  1140 */   179,  124,  212,  302,  302,   48,  302,  302,  302,  302,
 /*  1150 */    85,  302,  302,  124,  212,  302,  302,   48,  302,   37,
 /*  1160 */   302,  302,   46,   42,  302,  286,  302,  302,   89,    1,
 /*  1170 */     3,   37,  116,  178,   46,   42,  302,  286,  302,  302,
 /*  1180 */    89,  302,  302,   85,  302,  302,  124,  212,  302,  302,
 /*  1190 */    48,  302,  281,  302,  302,   85,  181,  302,  206,   73,
 /*  1200 */   302,  112,  302,  302,   37,  302,  302,   46,   42,  336,
 /*  1210 */   286,  302,  302,   89,  284,  282,  281,  280,  302,  302,
 /*  1220 */   188,  302,  206,   59,  302,  112,  182,  322,   85,  302,
 /*  1230 */   302,  302,  302,  336,  302,  302,  302,  137,  284,  282,
 /*  1240 */   281,  280,  163,  302,  181,  302,  206,   73,  190,  112,
 /*  1250 */   302,  287,   31,   25,  302,  302,  302,  336,  302,  302,
 /*  1260 */   302,  302,  284,  282,  281,  280,  302,  302,  188,  302,
 /*  1270 */   206,   59,  302,  112,  302,  321,  281,  302,  302,  302,
 /*  1280 */   188,  336,  206,   59,  302,  112,  284,  282,  281,  280,
 /*  1290 */   302,  302,  188,  336,  206,   59,  251,  112,  284,  282,
 /*  1300 */   281,  280,  302,  302,  188,  336,  206,   77,  191,  112,
 /*  1310 */   284,  282,  302,  280,  302,  302,  302,  336,  302,  302,
 /*  1320 */   221,  141,  284,  282,  281,  280,  163,  302,  188,  302,
 /*  1330 */   206,   69,  302,  112,  302,  287,   31,   25,  302,  302,
 /*  1340 */   302,  336,  302,  302,  302,  302,  284,  282,  281,  280,
 /*  1350 */   302,  302,  188,  302,  206,   75,  302,  112,  302,  302,
 /*  1360 */   281,  302,  302,  302,  188,  336,  206,   72,  302,  112,
 /*  1370 */   284,  282,  281,  280,  302,  302,  188,  336,  206,   71,
 /*  1380 */   302,  112,  284,  282,  281,  280,  302,  302,  188,  336,
 /*  1390 */   206,   79,  302,  112,  284,  282,  302,  280,  302,  302,
 /*  1400 */   302,  336,  302,  302,  302,  302,  284,  282,  281,  280,
 /*  1410 */   302,  302,  188,  302,  206,   65,  302,  112,  302,  302,
 /*  1420 */   302,  302,  302,  302,  302,  336,  302,  302,  302,  302,
 /*  1430 */   284,  282,  281,  280,  302,  302,  188,  302,  180,   66,
 /*  1440 */   302,  112,  302,  302,  281,  302,  302,  302,  188,  336,
 /*  1450 */   206,   82,  302,  112,  284,  282,  281,  280,  302,  302,
 /*  1460 */   188,  336,  206,   74,  302,  112,  284,  282,  281,  280,
 /*  1470 */   302,  302,  188,  336,  206,   63,  302,  112,  284,  282,
 /*  1480 */   302,  280,  302,  302,  302,  336,  302,  302,  302,  302,
 /*  1490 */   284,  282,  281,  280,  302,  302,  188,  302,  206,   55,
 /*  1500 */   302,  112,  302,  302,  302,  302,  302,  302,  302,  336,
 /*  1510 */   302,  302,  302,  302,  284,  282,  281,  280,  302,  302,
 /*  1520 */   188,  302,  206,   57,  302,  112,  302,  302,  281,  302,
 /*  1530 */   302,  302,  188,  336,  206,   70,  302,  112,  284,  282,
 /*  1540 */   281,  280,  302,  302,  188,  336,  206,   68,  302,  112,
 /*  1550 */   284,  282,  281,  280,  302,  302,  188,  336,  206,   80,
 /*  1560 */   302,  112,  284,  282,  302,  280,  302,  302,  302,  336,
 /*  1570 */   302,  302,  302,  302,  284,  282,  281,  280,  302,  302,
 /*  1580 */   188,  302,  206,   78,  302,  112,  302,  302,  302,  302,
 /*  1590 */   302,  302,  302,  336,  302,  302,  302,  302,  284,  282,
 /*  1600 */   281,  280,  302,  302,  188,  302,  206,   62,  302,  112,
 /*  1610 */   302,  302,  281,  302,  302,  302,  188,  336,  206,   56,
 /*  1620 */   302,  112,  284,  282,  281,  280,  302,  302,  188,  336,
 /*  1630 */   206,   58,  302,  112,  284,  282,  281,  280,  302,  302,
 /*  1640 */   188,  336,  206,   61,  302,  112,  284,  282,  302,  280,
 /*  1650 */   302,  302,  302,  336,  302,  302,  302,  302,  284,  282,
 /*  1660 */   281,  280,  302,  302,  188,  302,  206,   81,  302,  112,
 /*  1670 */   302,  302,  302,  302,  302,  302,  302,  336,  302,  302,
 /*  1680 */   302,  302,  284,  282,  281,  280,  302,  302,  188,  302,
 /*  1690 */   206,   67,  302,  112,  302,  302,  281,  302,  302,  302,
 /*  1700 */   188,  336,  206,   64,  302,  112,  284,  282,  281,  280,
 /*  1710 */   302,  302,  188,  336,  206,   50,  302,  112,  284,  282,
 /*  1720 */   281,  280,  302,  302,  188,  336,  206,   76,  302,  112,
 /*  1730 */   284,  282,  302,  280,  302,  302,  302,  336,  302,  302,
 /*  1740 */   302,  302,  284,  282,  281,  280,  302,  302,  189,  302,
 /*  1750 */   206,  302,  302,  112,  302,  302,  302,  302,  302,  302,
 /*  1760 */   302,  185,  302,  302,  302,  302,  284,  282,  281,  280,
 /*  1770 */   302,  302,  343,  302,  206,  302,  302,  112,  281,  302,
 /*  1780 */   302,  302,  225,  302,  206,  347,  302,  112,  302,  302,
 /*  1790 */   284,  282,  302,  280,  302,  224,  302,  302,  281,  302,
 /*  1800 */   284,  282,  285,  280,  206,  281,  302,  112,  302,  279,
 /*  1810 */   302,  206,  260,  302,  112,  302,    2,  302,  302,  302,
 /*  1820 */   284,  282,  302,  280,  302,  302,  302,  284,  282,  302,
 /*  1830 */   280,  281,  124,  302,  302,  270,  302,  206,  302,  302,
 /*  1840 */   112,  302,  302,  302,  302,  302,  302,  302,  302,  302,
 /*  1850 */   302,  302,  302,  284,  282,  302,  280,  302,  302,  302,
 /*  1860 */   302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
 /*  1870 */   302,  302,  302,  302,  236,   19,  258,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   77,   30,   12,   13,   81,   15,   83,   84,   85,
 /*    10 */    86,  104,   13,  106,  107,    4,    5,    6,   94,   20,
 /*    20 */     9,   10,   11,   99,  100,   83,  102,   26,   86,   57,
 /*    30 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,  102,   18,    3,    4,    5,    6,
 /*    50 */     7,    8,    9,   14,   15,   12,   47,   58,   59,   60,
 /*    60 */    61,   62,   63,   64,   65,   66,   67,   68,   69,    1,
 /*    70 */    77,   28,    1,   13,   81,   87,   83,   84,   51,   86,
 /*    80 */    20,   13,   89,   56,   13,   97,   98,   94,   20,   18,
 /*    90 */    13,   20,   99,  100,   55,  102,   76,   77,   78,   31,
 /*   100 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   110 */    42,   43,   44,   12,   15,   14,   15,   46,   74,   75,
 /*   120 */    76,   77,   78,   45,   53,   27,   58,   59,   60,   61,
 /*   130 */    62,   63,   64,   65,   66,   67,   68,   69,    1,   47,
 /*   140 */    15,   77,   17,   45,   19,   81,   21,   83,   84,   85,
 /*   150 */    86,   12,   46,   54,   15,   16,   55,   20,   94,   53,
 /*   160 */    13,   46,   25,   99,  100,   27,  102,   20,   31,   32,
 /*   170 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*   180 */    43,   44,    1,   51,   46,   15,   12,   12,   56,   15,
 /*   190 */    15,   53,   45,   54,   13,   58,   59,   60,   61,   62,
 /*   200 */    63,   64,   65,   66,   67,   68,   69,   12,  106,  107,
 /*   210 */    15,   16,   31,   32,   33,   34,   35,   36,   37,   38,
 /*   220 */    39,   40,   41,   42,   43,   44,    1,   12,   54,   54,
 /*   230 */    15,   16,   12,   13,   12,   15,   14,   15,   23,   58,
 /*   240 */    59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   250 */    69,   29,   89,   90,   14,   15,   31,   32,   33,   34,
 /*   260 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   270 */    46,   13,   47,   13,   22,   51,   23,   53,   20,    2,
 /*   280 */    20,   57,   30,   58,   59,   60,   61,   62,   63,   64,
 /*   290 */    65,   66,   67,   68,   69,    1,   77,   20,    1,   13,
 /*   300 */    81,   14,   83,   84,   85,   86,   20,   77,   12,   13,
 /*   310 */    13,   15,   77,   94,   20,   18,   12,   20,   99,  100,
 /*   320 */    78,  102,   80,   27,   71,   31,   32,   33,   34,   35,
 /*   330 */    36,   37,   38,   39,   40,   41,   42,   43,   44,    1,
 /*   340 */     2,   14,   77,  113,  114,   29,   81,   14,   83,  114,
 /*   350 */    46,   86,   58,   59,   60,   61,   62,   63,   64,   65,
 /*   360 */    66,   67,   68,   69,   99,  100,  103,  102,  105,   31,
 /*   370 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   380 */    42,   43,   44,    1,   13,   13,   13,   12,  106,  107,
 /*   390 */    15,   20,   20,   20,   23,   13,   58,   59,   60,   61,
 /*   400 */    62,   63,   64,   65,   66,   67,   68,   69,   12,   96,
 /*   410 */    20,   15,   95,   31,   32,   33,   34,   35,   36,   37,
 /*   420 */    38,   39,   40,   41,   42,   43,   44,    1,   13,   12,
 /*   430 */    77,  105,   15,   14,   81,   20,   83,   16,   23,   86,
 /*   440 */    58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
 /*   450 */    68,   69,   99,  100,    1,  102,   30,   31,   32,   33,
 /*   460 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   470 */    44,    1,   51,   20,   77,   13,   18,   55,   81,   16,
 /*   480 */    83,   18,   20,   86,   58,   59,   60,   61,   62,   63,
 /*   490 */    64,   65,   66,   67,   68,   69,   99,  100,   20,  102,
 /*   500 */    24,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*   510 */    40,   41,   42,   43,   44,    1,   53,   13,   13,   13,
 /*   520 */    48,   20,   13,   16,   20,   20,   20,   13,   58,   59,
 /*   530 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   540 */    83,   71,   15,   86,   15,   31,   32,   33,   34,   35,
 /*   550 */    36,   37,   38,   39,   40,   41,   42,   43,   44,  102,
 /*   560 */    13,   13,   47,   13,   15,  108,   15,    8,   20,   13,
 /*   570 */    20,   12,   58,   59,   60,   61,   62,   63,   64,   65,
 /*   580 */    66,   67,   68,   69,    1,   77,   92,   28,   15,   81,
 /*   590 */     2,   83,   84,   85,   86,   82,   46,   12,   13,  105,
 /*   600 */    15,   45,   94,   53,   16,   22,   13,   99,  100,   96,
 /*   610 */   102,   51,   27,   20,   31,   32,   33,   34,   35,   36,
 /*   620 */    37,   38,   39,   40,   41,   42,   43,   44,    1,   70,
 /*   630 */    71,   72,   12,    2,   15,   15,   14,   16,   45,   15,
 /*   640 */    13,   58,   59,   60,   61,   62,   63,   64,   65,   66,
 /*   650 */    67,   68,   69,   29,   46,   20,   55,   14,   31,   32,
 /*   660 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*   670 */    43,   44,    1,   13,   13,   13,   13,   13,   23,   13,
 /*   680 */    20,   20,   20,   20,   20,   58,   59,   60,   61,   62,
 /*   690 */    63,   64,   65,   66,   67,   68,   69,   57,   15,   15,
 /*   700 */    26,  103,   31,   32,   33,   34,   35,   36,   37,   38,
 /*   710 */    39,   40,   41,   42,   43,   44,    1,  101,   47,   77,
 /*   720 */     2,  103,  110,   81,  108,   83,   20,   91,   86,   58,
 /*   730 */    59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   740 */    69,   99,  100,   10,  102,  107,   31,   32,   33,   34,
 /*   750 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   760 */    79,   16,  104,   91,   88,   88,  115,   89,  103,  115,
 /*   770 */    18,   26,   57,   58,   59,   60,   61,   62,   63,   64,
 /*   780 */    65,   66,   67,   68,   69,    1,   77,   92,  103,   92,
 /*   790 */    81,   46,   83,   84,   85,   86,   82,   13,   53,   82,
 /*   800 */   105,   87,  105,   94,   87,   53,  103,   88,   99,  100,
 /*   810 */    96,  102,   88,   96,  115,   31,   32,   33,   34,   35,
 /*   820 */    36,   37,   38,   39,   40,   41,   42,   43,   44,    1,
 /*   830 */   115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
 /*   840 */    82,   13,   58,   59,   60,   61,   62,   63,   64,   65,
 /*   850 */    66,   67,   68,   69,   96,  115,  115,  115,  115,   31,
 /*   860 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   870 */    42,   43,   44,    1,  115,  115,  115,  115,  115,  115,
 /*   880 */   115,  115,  115,  115,  115,   92,   58,   59,   60,   61,
 /*   890 */    62,   63,   64,   65,   66,   67,   68,   69,  105,  115,
 /*   900 */   115,  115,  115,   31,   32,   33,   34,   35,   36,   37,
 /*   910 */    38,   39,   40,   41,   42,   43,   44,   93,  115,  115,
 /*   920 */   115,  115,  115,  115,  115,  115,  115,  115,  115,  105,
 /*   930 */    58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
 /*   940 */    68,   69,   82,   12,  115,   14,   15,   87,   17,  115,
 /*   950 */    19,   12,   21,   14,   15,  115,   96,   97,   98,   28,
 /*   960 */    29,   92,  115,   32,  115,   92,   92,   28,   29,  115,
 /*   970 */    82,   32,  115,  115,  105,   87,  115,   46,  105,  105,
 /*   980 */    49,   50,  115,   52,   96,   46,   55,   56,   49,   50,
 /*   990 */    12,   52,   14,   15,   55,   56,   57,   82,   82,  115,
 /*  1000 */   115,   70,   12,   87,   14,   15,   28,   29,  115,   70,
 /*  1010 */    32,   96,   96,   97,   98,   82,  115,   82,   28,   29,
 /*  1020 */   115,  115,   32,  115,   46,  110,  115,   49,   50,   96,
 /*  1030 */    52,   96,  115,   55,   56,   12,   46,   14,   15,   49,
 /*  1040 */    50,   92,   52,  110,   82,   55,   56,   12,   70,   14,
 /*  1050 */    15,   28,   29,   92,  105,   32,  115,   82,   96,  115,
 /*  1060 */    70,  115,   82,   28,   29,  115,  105,   32,  115,   46,
 /*  1070 */   115,   96,   49,   50,   82,   52,   96,  115,   55,   56,
 /*  1080 */    12,   46,   14,   15,   49,   50,  115,   52,   96,  115,
 /*  1090 */    55,   56,   12,   70,   14,   15,   28,   29,  115,  115,
 /*  1100 */    32,  115,  110,  115,  115,   70,  115,  115,   28,   29,
 /*  1110 */   115,  115,   32,  115,   46,  115,  115,   49,   50,  115,
 /*  1120 */    52,  115,  115,   55,   56,   12,   46,   14,   15,   49,
 /*  1130 */    50,  115,   52,  115,  115,   55,   56,   12,   70,   14,
 /*  1140 */    15,   28,   29,  115,  115,   32,  115,  115,  115,  115,
 /*  1150 */    70,  115,  115,   28,   29,  115,  115,   32,  115,   46,
 /*  1160 */   115,  115,   49,   50,  115,   52,  115,  115,   55,   56,
 /*  1170 */    12,   46,   14,   15,   49,   50,  115,   52,  115,  115,
 /*  1180 */    55,  115,  115,   70,  115,  115,   28,   29,  115,  115,
 /*  1190 */    32,  115,   77,  115,  115,   70,   81,  115,   83,   84,
 /*  1200 */   115,   86,  115,  115,   46,  115,  115,   49,   50,   94,
 /*  1210 */    52,  115,  115,   55,   99,  100,   77,  102,  115,  115,
 /*  1220 */    81,  115,   83,   84,  115,   86,  111,  112,   70,  115,
 /*  1230 */   115,  115,  115,   94,  115,  115,  115,   82,   99,  100,
 /*  1240 */    77,  102,   87,  115,   81,  115,   83,   84,  109,   86,
 /*  1250 */   115,   96,   97,   98,  115,  115,  115,   94,  115,  115,
 /*  1260 */   115,  115,   99,  100,   77,  102,  115,  115,   81,  115,
 /*  1270 */    83,   84,  115,   86,  115,  112,   77,  115,  115,  115,
 /*  1280 */    81,   94,   83,   84,  115,   86,   99,  100,   77,  102,
 /*  1290 */   115,  115,   81,   94,   83,   84,  109,   86,   99,  100,
 /*  1300 */    77,  102,  115,  115,   81,   94,   83,   84,  109,   86,
 /*  1310 */    99,  100,  115,  102,  115,  115,  115,   94,  115,  115,
 /*  1320 */   109,   82,   99,  100,   77,  102,   87,  115,   81,  115,
 /*  1330 */    83,   84,  115,   86,  115,   96,   97,   98,  115,  115,
 /*  1340 */   115,   94,  115,  115,  115,  115,   99,  100,   77,  102,
 /*  1350 */   115,  115,   81,  115,   83,   84,  115,   86,  115,  115,
 /*  1360 */    77,  115,  115,  115,   81,   94,   83,   84,  115,   86,
 /*  1370 */    99,  100,   77,  102,  115,  115,   81,   94,   83,   84,
 /*  1380 */   115,   86,   99,  100,   77,  102,  115,  115,   81,   94,
 /*  1390 */    83,   84,  115,   86,   99,  100,  115,  102,  115,  115,
 /*  1400 */   115,   94,  115,  115,  115,  115,   99,  100,   77,  102,
 /*  1410 */   115,  115,   81,  115,   83,   84,  115,   86,  115,  115,
 /*  1420 */   115,  115,  115,  115,  115,   94,  115,  115,  115,  115,
 /*  1430 */    99,  100,   77,  102,  115,  115,   81,  115,   83,   84,
 /*  1440 */   115,   86,  115,  115,   77,  115,  115,  115,   81,   94,
 /*  1450 */    83,   84,  115,   86,   99,  100,   77,  102,  115,  115,
 /*  1460 */    81,   94,   83,   84,  115,   86,   99,  100,   77,  102,
 /*  1470 */   115,  115,   81,   94,   83,   84,  115,   86,   99,  100,
 /*  1480 */   115,  102,  115,  115,  115,   94,  115,  115,  115,  115,
 /*  1490 */    99,  100,   77,  102,  115,  115,   81,  115,   83,   84,
 /*  1500 */   115,   86,  115,  115,  115,  115,  115,  115,  115,   94,
 /*  1510 */   115,  115,  115,  115,   99,  100,   77,  102,  115,  115,
 /*  1520 */    81,  115,   83,   84,  115,   86,  115,  115,   77,  115,
 /*  1530 */   115,  115,   81,   94,   83,   84,  115,   86,   99,  100,
 /*  1540 */    77,  102,  115,  115,   81,   94,   83,   84,  115,   86,
 /*  1550 */    99,  100,   77,  102,  115,  115,   81,   94,   83,   84,
 /*  1560 */   115,   86,   99,  100,  115,  102,  115,  115,  115,   94,
 /*  1570 */   115,  115,  115,  115,   99,  100,   77,  102,  115,  115,
 /*  1580 */    81,  115,   83,   84,  115,   86,  115,  115,  115,  115,
 /*  1590 */   115,  115,  115,   94,  115,  115,  115,  115,   99,  100,
 /*  1600 */    77,  102,  115,  115,   81,  115,   83,   84,  115,   86,
 /*  1610 */   115,  115,   77,  115,  115,  115,   81,   94,   83,   84,
 /*  1620 */   115,   86,   99,  100,   77,  102,  115,  115,   81,   94,
 /*  1630 */    83,   84,  115,   86,   99,  100,   77,  102,  115,  115,
 /*  1640 */    81,   94,   83,   84,  115,   86,   99,  100,  115,  102,
 /*  1650 */   115,  115,  115,   94,  115,  115,  115,  115,   99,  100,
 /*  1660 */    77,  102,  115,  115,   81,  115,   83,   84,  115,   86,
 /*  1670 */   115,  115,  115,  115,  115,  115,  115,   94,  115,  115,
 /*  1680 */   115,  115,   99,  100,   77,  102,  115,  115,   81,  115,
 /*  1690 */    83,   84,  115,   86,  115,  115,   77,  115,  115,  115,
 /*  1700 */    81,   94,   83,   84,  115,   86,   99,  100,   77,  102,
 /*  1710 */   115,  115,   81,   94,   83,   84,  115,   86,   99,  100,
 /*  1720 */    77,  102,  115,  115,   81,   94,   83,   84,  115,   86,
 /*  1730 */    99,  100,  115,  102,  115,  115,  115,   94,  115,  115,
 /*  1740 */   115,  115,   99,  100,   77,  102,  115,  115,   81,  115,
 /*  1750 */    83,  115,  115,   86,  115,  115,  115,  115,  115,  115,
 /*  1760 */   115,   94,  115,  115,  115,  115,   99,  100,   77,  102,
 /*  1770 */   115,  115,   81,  115,   83,  115,  115,   86,   77,  115,
 /*  1780 */   115,  115,   81,  115,   83,   94,  115,   86,  115,  115,
 /*  1790 */    99,  100,  115,  102,  115,   94,  115,  115,   77,  115,
 /*  1800 */    99,  100,   81,  102,   83,   77,  115,   86,  115,   81,
 /*  1810 */   115,   83,    8,  115,   86,  115,   12,  115,  115,  115,
 /*  1820 */    99,  100,  115,  102,  115,  115,  115,   99,  100,  115,
 /*  1830 */   102,   77,   28,  115,  115,   81,  115,   83,  115,  115,
 /*  1840 */    86,  115,  115,  115,  115,  115,  115,  115,  115,  115,
 /*  1850 */   115,  115,  115,   99,  100,  115,  102,  115,  115,  115,
 /*  1860 */   115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
 /*  1870 */   115,  115,  115,  115,   70,   71,   72,
);
    const YY_SHIFT_USE_DFLT = -29;
    const YY_SHIFT_MAX = 223;
    static public $yy_shift_ofst = array(
 /*     0 */    43, 1080,  931,  931,  990,  978,  978,  990, 1023, 1080,
 /*    10 */   990,  990, 1113,  939,  990,  990,  990,  990,  990,  990,
 /*    20 */   990,  990,  990,  990,  990,  990,  990,  990,  990,  990,
 /*    30 */   990,  990,  990,  990,  990,  990,  990,  990,  990, 1035,
 /*    40 */  1035, 1068, 1158, 1158, 1125, 1158, 1158, 1158, 1158,   -1,
 /*    50 */   137,   68,  294,  294,  101,  382,  225,  181,  338,  426,
 /*    60 */   828,  784,  671,  715,  627,  583,  470,  514,  872,  872,
 /*    70 */   872,  872,  872,  872,  872,  872,  872,  872,  872,  872,
 /*    80 */   872,  872,  872,  872,   43,  559,   71,  297,   27,   39,
 /*    90 */   277,  277,  453,  277, 1804,   11,  215,  139,  593,  463,
 /*   100 */   415,  371,  175,  375,  417,  375,  375,  375,  396,  375,
 /*   110 */   375,  240,  752,  375,  620,  396,  375,  390,  390,  390,
 /*   120 */   419,  501,  458,  585,  125,  296,  195,  220,   -9,  174,
 /*   130 */   462,  132,  504,  132,   60,  258,  373,  286,  372,  260,
 /*   140 */   132,  664,  660,  548,  505,  661,  662,  132,  132,  663,
 /*   150 */   304,  506,  458,  608,  718,  706,  458,  706,  733,  419,
 /*   160 */   458,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  745,  550,
 /*   170 */   222,  224,  138,  147,  556,  421,  252,  624,  106,  106,
 /*   180 */   253,   98,  -28,  588,   99,  674,  333,   77,   78,    1,
 /*   190 */     9,   92,  316,  327,  287,  115,  170,  422,  666,  608,
 /*   200 */   621,  478,  619,  622,  635,  643,  655,  684,  683,  601,
 /*   210 */   640,  631,  560,  527,  509,  507,  476,  472,  529,  547,
 /*   220 */   573,  515,  551,  549,
);
    const YY_REDUCE_USE_DFLT = -94;
    const YY_REDUCE_MAX = 167;
    static public $yy_reduce_ofst = array(
 /*     0 */    44, 1115,  709,  508, 1199,  -76,   64, 1187,  219, 1163,
 /*    10 */  1139, 1211,   -7, 1391, 1379, 1415, 1439, 1451, 1367, 1355,
 /*    20 */  1271, 1247, 1283, 1295, 1331, 1307, 1463, 1475, 1583, 1619,
 /*    30 */  1631, 1643, 1607, 1559, 1499, 1223, 1523, 1535, 1547, 1691,
 /*    40 */  1701, 1667, 1754, 1721,  353, 1728,  397,  265,  642,  916,
 /*    50 */  1155,  860,  916, 1239,  457,  -12,  -12,  -12,  -12,  -12,
 /*    60 */   -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
 /*    70 */   -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
 /*    80 */   -12,  -12,  -12,  -12,   20,  230,  888,  714,  -93,  -58,
 /*    90 */   915,  992,  717,  933,  235,  242,  824,  263,  758,  282,
 /*   100 */   935,  935,  263,  874,  793,  697,  695,  494,  793,  873,
 /*   110 */   869,  616,  282,  949,  793,  961,  793,  975,  962,  980,
 /*   120 */   163,  513,  102,  326,  317,  326,  326,  326,  326,  326,
 /*   130 */   313,  658,  313,  658,  313,  313,  313,  313,  313,  313,
 /*   140 */   658,  313,  313,  313,  313,  313,  313,  658,  658,  313,
 /*   150 */   618,  313,  638,  598,  612,  672,  638,  636,  681,  678,
 /*   160 */   638,  665,  685,  677,  724,  676,  719,  703,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 12, 28, ),
        /* 1 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 2 */ array(12, 14, 15, 17, 19, 21, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 3 */ array(12, 14, 15, 17, 19, 21, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 4 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 5 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 6 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 7 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 8 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 9 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 10 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 11 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 12 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 13 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 57, 70, ),
        /* 14 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 15 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 16 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 17 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 18 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 19 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 20 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 21 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 22 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 23 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 24 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 25 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 26 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 27 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 28 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 29 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 30 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 31 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 32 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 33 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 34 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 35 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 36 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 37 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 38 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 39 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 40 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 41 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 56, 70, ),
        /* 42 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 43 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 44 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 45 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 46 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 47 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 48 */ array(12, 14, 15, 28, 29, 32, 46, 49, 50, 52, 55, 70, ),
        /* 49 */ array(1, 13, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 50 */ array(1, 20, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 51 */ array(1, 13, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 52 */ array(1, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 53 */ array(1, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 54 */ array(12, 14, 15, 55, ),
        /* 55 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 56 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 57 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 58 */ array(1, 2, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 59 */ array(1, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 60 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 61 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 62 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 63 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 64 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 65 */ array(1, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 66 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, ),
        /* 67 */ array(1, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 68 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 69 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 70 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 71 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 72 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 73 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 74 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 75 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 76 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 77 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 78 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 79 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 80 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 81 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 82 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 83 */ array(1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 84 */ array(3, 4, 5, 6, 7, 8, 9, 12, 28, ),
        /* 85 */ array(8, 12, 28, 70, 71, 72, ),
        /* 86 */ array(1, 13, 18, 20, 46, 53, ),
        /* 87 */ array(1, 13, 18, 20, ),
        /* 88 */ array(18, 51, 56, ),
        /* 89 */ array(14, 15, 55, ),
        /* 90 */ array(2, 20, ),
        /* 91 */ array(2, 20, ),
        /* 92 */ array(1, 20, ),
        /* 93 */ array(2, 20, ),
        /* 94 */ array(8, 12, 28, 70, 71, 72, ),
        /* 95 */ array(4, 5, 6, 9, 10, 11, ),
        /* 96 */ array(12, 15, 16, 23, ),
        /* 97 */ array(12, 15, 16, 54, ),
        /* 98 */ array(13, 20, 45, ),
        /* 99 */ array(16, 18, 53, ),
        /* 100 */ array(13, 20, 23, ),
        /* 101 */ array(13, 20, 23, ),
        /* 102 */ array(12, 15, 54, ),
        /* 103 */ array(12, 15, ),
        /* 104 */ array(12, 15, ),
        /* 105 */ array(12, 15, ),
        /* 106 */ array(12, 15, ),
        /* 107 */ array(12, 15, ),
        /* 108 */ array(12, 15, ),
        /* 109 */ array(12, 15, ),
        /* 110 */ array(12, 15, ),
        /* 111 */ array(14, 15, ),
        /* 112 */ array(18, 53, ),
        /* 113 */ array(12, 15, ),
        /* 114 */ array(12, 15, ),
        /* 115 */ array(12, 15, ),
        /* 116 */ array(12, 15, ),
        /* 117 */ array(20, ),
        /* 118 */ array(20, ),
        /* 119 */ array(20, ),
        /* 120 */ array(14, ),
        /* 121 */ array(20, ),
        /* 122 */ array(18, ),
        /* 123 */ array(12, 13, 15, 27, ),
        /* 124 */ array(15, 17, 19, 21, ),
        /* 125 */ array(12, 13, 15, 27, ),
        /* 126 */ array(12, 15, 16, ),
        /* 127 */ array(12, 13, 15, ),
        /* 128 */ array(12, 13, 15, ),
        /* 129 */ array(12, 15, 54, ),
        /* 130 */ array(13, 20, ),
        /* 131 */ array(51, 56, ),
        /* 132 */ array(13, 20, ),
        /* 133 */ array(51, 56, ),
        /* 134 */ array(13, 20, ),
        /* 135 */ array(13, 20, ),
        /* 136 */ array(13, 20, ),
        /* 137 */ array(13, 20, ),
        /* 138 */ array(13, 20, ),
        /* 139 */ array(13, 20, ),
        /* 140 */ array(51, 56, ),
        /* 141 */ array(13, 20, ),
        /* 142 */ array(13, 20, ),
        /* 143 */ array(13, 20, ),
        /* 144 */ array(13, 20, ),
        /* 145 */ array(13, 20, ),
        /* 146 */ array(13, 20, ),
        /* 147 */ array(51, 56, ),
        /* 148 */ array(51, 56, ),
        /* 149 */ array(13, 20, ),
        /* 150 */ array(12, 46, ),
        /* 151 */ array(13, 20, ),
        /* 152 */ array(18, ),
        /* 153 */ array(46, ),
        /* 154 */ array(2, ),
        /* 155 */ array(20, ),
        /* 156 */ array(18, ),
        /* 157 */ array(20, ),
        /* 158 */ array(10, ),
        /* 159 */ array(14, ),
        /* 160 */ array(18, ),
        /* 161 */ array(),
        /* 162 */ array(),
        /* 163 */ array(),
        /* 164 */ array(),
        /* 165 */ array(),
        /* 166 */ array(),
        /* 167 */ array(),
        /* 168 */ array(16, 26, 46, 53, ),
        /* 169 */ array(13, 20, 46, 53, ),
        /* 170 */ array(12, 14, 15, 29, ),
        /* 171 */ array(46, 51, 53, 57, ),
        /* 172 */ array(27, 46, 53, ),
        /* 173 */ array(13, 20, 45, ),
        /* 174 */ array(13, 45, ),
        /* 175 */ array(16, 51, ),
        /* 176 */ array(22, 30, ),
        /* 177 */ array(15, 29, ),
        /* 178 */ array(46, 53, ),
        /* 179 */ array(46, 53, ),
        /* 180 */ array(23, 71, ),
        /* 181 */ array(27, 45, ),
        /* 182 */ array(30, 57, ),
        /* 183 */ array(2, 16, ),
        /* 184 */ array(15, 54, ),
        /* 185 */ array(26, ),
        /* 186 */ array(14, ),
        /* 187 */ array(13, ),
        /* 188 */ array(45, ),
        /* 189 */ array(26, ),
        /* 190 */ array(47, ),
        /* 191 */ array(47, ),
        /* 192 */ array(29, ),
        /* 193 */ array(14, ),
        /* 194 */ array(14, ),
        /* 195 */ array(46, ),
        /* 196 */ array(15, ),
        /* 197 */ array(55, ),
        /* 198 */ array(13, ),
        /* 199 */ array(46, ),
        /* 200 */ array(16, ),
        /* 201 */ array(20, ),
        /* 202 */ array(15, ),
        /* 203 */ array(14, ),
        /* 204 */ array(20, ),
        /* 205 */ array(14, ),
        /* 206 */ array(23, ),
        /* 207 */ array(15, ),
        /* 208 */ array(15, ),
        /* 209 */ array(55, ),
        /* 210 */ array(57, ),
        /* 211 */ array(2, ),
        /* 212 */ array(51, ),
        /* 213 */ array(15, ),
        /* 214 */ array(13, ),
        /* 215 */ array(16, ),
        /* 216 */ array(24, ),
        /* 217 */ array(48, ),
        /* 218 */ array(15, ),
        /* 219 */ array(13, ),
        /* 220 */ array(15, ),
        /* 221 */ array(47, ),
        /* 222 */ array(15, ),
        /* 223 */ array(15, ),
        /* 224 */ array(),
        /* 225 */ array(),
        /* 226 */ array(),
        /* 227 */ array(),
        /* 228 */ array(),
        /* 229 */ array(),
        /* 230 */ array(),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
);
    static public $yy_default = array(
 /*     0 */   546,  529,  546,  546,  502,  546,  546,  502,  546,  546,
 /*    10 */   502,  502,  546,  546,  546,  546,  546,  546,  546,  546,
 /*    20 */   546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
 /*    30 */   546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
 /*    40 */   546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
 /*    50 */   419,  546,  419,  419,  546,  546,  546,  546,  546,  501,
 /*    60 */   546,  546,  546,  546,  546,  546,  546,  546,  428,  448,
 /*    70 */   441,  444,  449,  532,  531,  445,  436,  401,  530,  439,
 /*    80 */   425,  452,  440,  421,  361,  546,  460,  546,  508,  546,
 /*    90 */   419,  419,  419,  419,  546,  546,  546,  474,  429,  467,
 /*   100 */   453,  453,  474,  546,  546,  546,  546,  546,  546,  546,
 /*   110 */   546,  546,  467,  546,  546,  546,  546,  419,  419,  419,
 /*   120 */   546,  419,  505,  546,  546,  546,  546,  546,  546,  475,
 /*   130 */   546,  494,  546,  495,  546,  546,  546,  546,  546,  546,
 /*   140 */   493,  546,  546,  546,  546,  546,  546,  472,  492,  546,
 /*   150 */   474,  546,  506,  474,  435,  545,  509,  545,  375,  546,
 /*   160 */   488,  474,  474,  511,  511,  511,  511,  474,  424,  460,
 /*   170 */   546,  460,  460,  429,  429,  458,  546,  546,  460,  450,
 /*   180 */   453,  429,  546,  486,  546,  546,  546,  546,  429,  546,
 /*   190 */   546,  546,  546,  546,  546,  507,  546,  546,  546,  486,
 /*   200 */   546,  546,  546,  546,  546,  546,  453,  546,  546,  546,
 /*   210 */   546,  486,  458,  546,  546,  424,  426,  462,  546,  546,
 /*   220 */   546,  546,  546,  546,  513,  512,  483,  481,  478,  496,
 /*   230 */   423,  362,  538,  477,  403,  404,  534,  487,  535,  462,
 /*   240 */   533,  482,  412,  479,  499,  413,  427,  497,  498,  451,
 /*   250 */   402,  500,  400,  410,  544,  537,  416,  411,  539,  536,
 /*   260 */   543,  542,  480,  386,  430,  465,  468,  473,  476,  459,
 /*   270 */   456,  510,  457,  454,  455,  485,  486,  491,  484,  433,
 /*   280 */   469,  466,  464,  431,  461,  432,  463,  418,  415,  369,
 /*   290 */   370,  371,  372,  368,  367,  363,  364,  365,  366,  373,
 /*   300 */   374,  382,  417,  409,  414,  381,  380,  376,  377,  378,
 /*   310 */   379,  470,  471,  389,  388,  390,  391,  489,  387,  385,
 /*   320 */   526,  528,  527,  541,  490,  392,  406,  407,  408,  398,
 /*   330 */   405,  393,  394,  395,  397,  396,  434,  525,  443,  446,
 /*   340 */   447,  503,  442,  438,  383,  540,  384,  437,  504,  514,
 /*   350 */   521,  522,  523,  524,  520,  519,  515,  516,  517,  518,
 /*   360 */   399,
);
    const YYNOCODE = 116;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 361;
    const YYNRULE = 185;
    const YYERRORSYMBOL = 73;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',      
  'OTHER',         'LITERALSTART',  'LITERALEND',    'LITERAL',     
  'LDEL',          'RDEL',          'DOLLAR',        'ID',          
  'EQUAL',         'FOREACH',       'PTR',           'IF',          
  'SPACE',         'FOR',           'SEMICOLON',     'INCDEC',      
  'TO',            'STEP',          'AS',            'APTR',        
  'LDELSLASH',     'INTEGER',       'COMMA',         'MATH',        
  'UNIMATH',       'ANDSYM',        'ISIN',          'ISDIVBY',     
  'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',    
  'ISNOTEVENBY',   'ISODD',         'ISNOTODD',      'ISODDBY',     
  'ISNOTODDBY',    'INSTANCEOF',    'OPENP',         'CLOSEP',      
  'QMARK',         'NOT',           'TYPECAST',      'DOT',         
  'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',            'HATCH',       
  'OPENB',         'CLOSEB',        'EQUALS',        'NOTEQUALS',   
  'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',   
  'IDENTITY',      'NONEIDENTITY',  'MOD',           'LAND',        
  'LOR',           'LXOR',          'QUOTE',         'BACKTICK',    
  'DOLLARID',      'error',         'start',         'template',    
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'value',         'attributes',    'variable',    
  'expr',          'ternary',       'varindexed',    'modifier',    
  'modparameters',  'statement',     'statements',    'optspace',    
  'varvar',        'foraction',     'array',         'specialclose',
  'attribute',     'ifcond',        'lop',           'function',    
  'doublequoted_with_quotes',  'static_class_access',  'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG",
 /*   7 */ "template_element ::= PHPENDTAG",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "template_element ::= XMLTAG",
 /*  10 */ "template_element ::= OTHER",
 /*  11 */ "literal ::= LITERALSTART LITERALEND",
 /*  12 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  13 */ "literal_elements ::= literal_elements literal_element",
 /*  14 */ "literal_elements ::=",
 /*  15 */ "literal_element ::= literal",
 /*  16 */ "literal_element ::= LITERAL",
 /*  17 */ "literal_element ::= PHPSTARTTAG",
 /*  18 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  19 */ "literal_element ::= PHPENDTAG",
 /*  20 */ "smartytag ::= LDEL value RDEL",
 /*  21 */ "smartytag ::= LDEL value attributes RDEL",
 /*  22 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  23 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  24 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  26 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  27 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  28 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  29 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  30 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  31 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  32 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ID RDEL",
 /*  34 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  35 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  37 */ "smartytag ::= LDEL IF SPACE expr RDEL",
 /*  38 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  39 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  40 */ "foraction ::= EQUAL expr",
 /*  41 */ "foraction ::= INCDEC",
 /*  42 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  43 */ "smartytag ::= LDEL FOR SPACE statement TO expr STEP expr RDEL",
 /*  44 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  45 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  46 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  47 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  48 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  49 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  50 */ "specialclose ::= IF",
 /*  51 */ "specialclose ::= FOR",
 /*  52 */ "specialclose ::= FOREACH",
 /*  53 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  54 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  55 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  56 */ "attributes ::= attributes attribute",
 /*  57 */ "attributes ::= attribute",
 /*  58 */ "attributes ::=",
 /*  59 */ "attribute ::= SPACE ID EQUAL ID",
 /*  60 */ "attribute ::= SPACE ID EQUAL expr",
 /*  61 */ "attribute ::= SPACE ID EQUAL value",
 /*  62 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  63 */ "attribute ::= SPACE ID",
 /*  64 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  65 */ "statements ::= statement",
 /*  66 */ "statements ::= statements COMMA statement",
 /*  67 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  68 */ "expr ::= value",
 /*  69 */ "expr ::= DOLLAR ID COLON ID",
 /*  70 */ "expr ::= expr MATH value",
 /*  71 */ "expr ::= expr UNIMATH value",
 /*  72 */ "expr ::= expr ANDSYM value",
 /*  73 */ "expr ::= array",
 /*  74 */ "expr ::= expr modifier modparameters",
 /*  75 */ "expr ::= expr ifcond expr",
 /*  76 */ "expr ::= expr ISIN array",
 /*  77 */ "expr ::= expr ISIN value",
 /*  78 */ "expr ::= expr lop expr",
 /*  79 */ "expr ::= expr ISDIVBY expr",
 /*  80 */ "expr ::= expr ISNOTDIVBY expr",
 /*  81 */ "expr ::= expr ISEVEN",
 /*  82 */ "expr ::= expr ISNOTEVEN",
 /*  83 */ "expr ::= expr ISEVENBY expr",
 /*  84 */ "expr ::= expr ISNOTEVENBY expr",
 /*  85 */ "expr ::= expr ISODD",
 /*  86 */ "expr ::= expr ISNOTODD",
 /*  87 */ "expr ::= expr ISODDBY expr",
 /*  88 */ "expr ::= expr ISNOTODDBY expr",
 /*  89 */ "expr ::= value INSTANCEOF ID",
 /*  90 */ "expr ::= value INSTANCEOF value",
 /*  91 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  92 */ "value ::= variable",
 /*  93 */ "value ::= UNIMATH value",
 /*  94 */ "value ::= NOT value",
 /*  95 */ "value ::= TYPECAST value",
 /*  96 */ "value ::= variable INCDEC",
 /*  97 */ "value ::= INTEGER",
 /*  98 */ "value ::= INTEGER DOT INTEGER",
 /*  99 */ "value ::= ID",
 /* 100 */ "value ::= function",
 /* 101 */ "value ::= OPENP expr CLOSEP",
 /* 102 */ "value ::= SINGLEQUOTESTRING",
 /* 103 */ "value ::= doublequoted_with_quotes",
 /* 104 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 105 */ "value ::= smartytag",
 /* 106 */ "variable ::= varindexed",
 /* 107 */ "variable ::= DOLLAR varvar AT ID",
 /* 108 */ "variable ::= object",
 /* 109 */ "variable ::= HATCH ID HATCH",
 /* 110 */ "variable ::= HATCH variable HATCH",
 /* 111 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 112 */ "arrayindex ::= arrayindex indexdef",
 /* 113 */ "arrayindex ::=",
 /* 114 */ "indexdef ::= DOT DOLLAR varvar",
 /* 115 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 116 */ "indexdef ::= DOT ID",
 /* 117 */ "indexdef ::= DOT INTEGER",
 /* 118 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 119 */ "indexdef ::= OPENB ID CLOSEB",
 /* 120 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 121 */ "indexdef ::= OPENB expr CLOSEB",
 /* 122 */ "indexdef ::= OPENB CLOSEB",
 /* 123 */ "varvar ::= varvarele",
 /* 124 */ "varvar ::= varvar varvarele",
 /* 125 */ "varvarele ::= ID",
 /* 126 */ "varvarele ::= LDEL expr RDEL",
 /* 127 */ "object ::= varindexed objectchain",
 /* 128 */ "object ::= varindexed DOUBLECOLON ID",
 /* 129 */ "objectchain ::= objectelement",
 /* 130 */ "objectchain ::= objectchain objectelement",
 /* 131 */ "objectelement ::= PTR ID arrayindex",
 /* 132 */ "objectelement ::= PTR variable arrayindex",
 /* 133 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 134 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 135 */ "objectelement ::= PTR method",
 /* 136 */ "function ::= ID OPENP params CLOSEP",
 /* 137 */ "method ::= ID OPENP params CLOSEP",
 /* 138 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 139 */ "params ::= expr COMMA params",
 /* 140 */ "params ::= expr",
 /* 141 */ "params ::=",
 /* 142 */ "modifier ::= VERT AT ID",
 /* 143 */ "modifier ::= VERT ID",
 /* 144 */ "static_class_access ::= method",
 /* 145 */ "static_class_access ::= method objectchain",
 /* 146 */ "static_class_access ::= ID",
 /* 147 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 148 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 149 */ "modparameters ::= modparameters modparameter",
 /* 150 */ "modparameters ::=",
 /* 151 */ "modparameter ::= COLON value",
 /* 152 */ "modparameter ::= COLON array",
 /* 153 */ "ifcond ::= EQUALS",
 /* 154 */ "ifcond ::= NOTEQUALS",
 /* 155 */ "ifcond ::= GREATERTHAN",
 /* 156 */ "ifcond ::= LESSTHAN",
 /* 157 */ "ifcond ::= GREATEREQUAL",
 /* 158 */ "ifcond ::= LESSEQUAL",
 /* 159 */ "ifcond ::= IDENTITY",
 /* 160 */ "ifcond ::= NONEIDENTITY",
 /* 161 */ "ifcond ::= MOD",
 /* 162 */ "lop ::= LAND",
 /* 163 */ "lop ::= LOR",
 /* 164 */ "lop ::= LXOR",
 /* 165 */ "array ::= OPENB arrayelements CLOSEB",
 /* 166 */ "arrayelements ::= arrayelement",
 /* 167 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 168 */ "arrayelements ::=",
 /* 169 */ "arrayelement ::= value APTR expr",
 /* 170 */ "arrayelement ::= ID APTR expr",
 /* 171 */ "arrayelement ::= expr",
 /* 172 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 173 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 174 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 175 */ "doublequoted ::= doublequotedcontent",
 /* 176 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 177 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 178 */ "doublequotedcontent ::= DOLLARID",
 /* 179 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 180 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 181 */ "doublequotedcontent ::= smartytag",
 /* 182 */ "doublequotedcontent ::= OTHER",
 /* 183 */ "optspace ::= SPACE",
 /* 184 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 80 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1549 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 74, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 75, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 0 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 7 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 77, 'rhs' => 13 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 9 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 8 ),
  array( 'lhs' => 77, 'rhs' => 11 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 77, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 4 ),
  array( 'lhs' => 77, 'rhs' => 6 ),
  array( 'lhs' => 77, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 7 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 0 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 5 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 5 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 6 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 0 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        15 => 0,
        16 => 0,
        50 => 0,
        51 => 0,
        52 => 0,
        68 => 0,
        92 => 0,
        97 => 0,
        100 => 0,
        102 => 0,
        103 => 0,
        108 => 0,
        144 => 0,
        166 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        14 => 11,
        12 => 12,
        13 => 13,
        93 => 13,
        95 => 13,
        96 => 13,
        145 => 13,
        17 => 17,
        18 => 17,
        19 => 19,
        20 => 20,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 27,
        29 => 29,
        30 => 29,
        31 => 31,
        32 => 31,
        33 => 33,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 37,
        39 => 39,
        40 => 40,
        41 => 41,
        57 => 41,
        140 => 41,
        146 => 41,
        171 => 41,
        42 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 48,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 60,
        62 => 60,
        64 => 60,
        63 => 63,
        65 => 65,
        66 => 66,
        67 => 67,
        69 => 69,
        70 => 70,
        71 => 70,
        72 => 70,
        73 => 73,
        123 => 73,
        183 => 73,
        74 => 74,
        75 => 75,
        78 => 75,
        89 => 75,
        76 => 76,
        77 => 77,
        79 => 79,
        80 => 80,
        81 => 81,
        86 => 81,
        82 => 82,
        85 => 82,
        83 => 83,
        88 => 83,
        84 => 84,
        87 => 84,
        90 => 90,
        91 => 91,
        94 => 94,
        98 => 98,
        99 => 99,
        101 => 101,
        104 => 104,
        105 => 105,
        106 => 106,
        107 => 107,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        150 => 113,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        121 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        184 => 122,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        141 => 141,
        142 => 142,
        143 => 142,
        147 => 147,
        148 => 148,
        149 => 149,
        151 => 151,
        152 => 151,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 176,
        179 => 176,
        178 => 178,
        180 => 180,
        181 => 181,
        182 => 182,
    );
#line 91 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1946 "smarty_internal_templateparser.php"
#line 97 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1955 "smarty_internal_templateparser.php"
#line 105 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1965 "smarty_internal_templateparser.php"
#line 118 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { 
                                           $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                         }  
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 1977 "smarty_internal_templateparser.php"
#line 130 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1980 "smarty_internal_templateparser.php"
#line 136 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES),false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('<?php', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 1993 "smarty_internal_templateparser.php"
#line 148 "smarty_internal_templateparser.y"
    function yy_r7(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true; 
                                       $this->is_xml = true; 
                                       $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars('?>', ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       $this->_retvalue = $this->compiler->processNocacheCode('?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2009 "smarty_internal_templateparser.php"
#line 163 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2017 "smarty_internal_templateparser.php"
#line 171 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true);    }
#line 2020 "smarty_internal_templateparser.php"
#line 174 "smarty_internal_templateparser.y"
    function yy_r10(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2028 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = '';     }
#line 2031 "smarty_internal_templateparser.php"
#line 183 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2034 "smarty_internal_templateparser.php"
#line 185 "smarty_internal_templateparser.y"
    function yy_r13(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2037 "smarty_internal_templateparser.php"
#line 190 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2040 "smarty_internal_templateparser.php"
#line 192 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2043 "smarty_internal_templateparser.php"
#line 200 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2046 "smarty_internal_templateparser.php"
#line 201 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2049 "smarty_internal_templateparser.php"
#line 212 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2052 "smarty_internal_templateparser.php"
#line 214 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2055 "smarty_internal_templateparser.php"
#line 216 "smarty_internal_templateparser.y"
    function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2058 "smarty_internal_templateparser.php"
#line 219 "smarty_internal_templateparser.y"
    function yy_r31(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2061 "smarty_internal_templateparser.php"
#line 221 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2064 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r34(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2067 "smarty_internal_templateparser.php"
#line 225 "smarty_internal_templateparser.y"
    function yy_r35(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2072 "smarty_internal_templateparser.php"
#line 229 "smarty_internal_templateparser.y"
    function yy_r36(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2077 "smarty_internal_templateparser.php"
#line 233 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2080 "smarty_internal_templateparser.php"
#line 236 "smarty_internal_templateparser.y"
    function yy_r39(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2084 "smarty_internal_templateparser.php"
#line 239 "smarty_internal_templateparser.y"
    function yy_r40(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2087 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r41(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2090 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r42(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2093 "smarty_internal_templateparser.php"
#line 242 "smarty_internal_templateparser.y"
    function yy_r43(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -7]->minor,array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2096 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r44(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2100 "smarty_internal_templateparser.php"
#line 246 "smarty_internal_templateparser.y"
    function yy_r45(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2104 "smarty_internal_templateparser.php"
#line 248 "smarty_internal_templateparser.y"
    function yy_r46(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2108 "smarty_internal_templateparser.php"
#line 250 "smarty_internal_templateparser.y"
    function yy_r47(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2112 "smarty_internal_templateparser.php"
#line 254 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2115 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r53(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2118 "smarty_internal_templateparser.php"
#line 260 "smarty_internal_templateparser.y"
    function yy_r54(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2123 "smarty_internal_templateparser.php"
#line 264 "smarty_internal_templateparser.y"
    function yy_r55(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2126 "smarty_internal_templateparser.php"
#line 271 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2129 "smarty_internal_templateparser.php"
#line 275 "smarty_internal_templateparser.y"
    function yy_r58(){ $this->_retvalue = array();    }
#line 2132 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r59(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2142 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r60(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2145 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2148 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2151 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r66(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2154 "smarty_internal_templateparser.php"
#line 299 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2157 "smarty_internal_templateparser.php"
#line 308 "smarty_internal_templateparser.y"
    function yy_r69(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2160 "smarty_internal_templateparser.php"
#line 310 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2163 "smarty_internal_templateparser.php"
#line 316 "smarty_internal_templateparser.y"
    function yy_r73(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2166 "smarty_internal_templateparser.php"
#line 319 "smarty_internal_templateparser.y"
    function yy_r74(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2169 "smarty_internal_templateparser.php"
#line 323 "smarty_internal_templateparser.y"
    function yy_r75(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2172 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r76(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2175 "smarty_internal_templateparser.php"
#line 325 "smarty_internal_templateparser.y"
    function yy_r77(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2178 "smarty_internal_templateparser.php"
#line 327 "smarty_internal_templateparser.y"
    function yy_r79(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2181 "smarty_internal_templateparser.php"
#line 328 "smarty_internal_templateparser.y"
    function yy_r80(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2184 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r81(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2187 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2190 "smarty_internal_templateparser.php"
#line 331 "smarty_internal_templateparser.y"
    function yy_r83(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2193 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2196 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r90(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2199 "smarty_internal_templateparser.php"
#line 344 "smarty_internal_templateparser.y"
    function yy_r91(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2202 "smarty_internal_templateparser.php"
#line 351 "smarty_internal_templateparser.y"
    function yy_r94(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2205 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2208 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r99(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2218 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2221 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r104(){if (!$this->template->security || $this->smarty->security_handler->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor; 
                                                                }    }
#line 2226 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r105(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2229 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r106(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
                                      } else {
                                      if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + 0]->minor['var']])) {
                                          $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + 0]->minor['var'] .']->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         } else {
                                          $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                         }
                                       $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2239 "smarty_internal_templateparser.php"
#line 397 "smarty_internal_templateparser.y"
    function yy_r107(){if (isset($this->compiler->local_var[$this->yystack[$this->yyidx + -2]->minor])) {
                                                  $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 } else {
                                                  $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor;
                                                 }
                                                  $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2247 "smarty_internal_templateparser.php"
#line 406 "smarty_internal_templateparser.y"
    function yy_r109(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2250 "smarty_internal_templateparser.php"
#line 407 "smarty_internal_templateparser.y"
    function yy_r110(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2253 "smarty_internal_templateparser.php"
#line 410 "smarty_internal_templateparser.y"
    function yy_r111(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2256 "smarty_internal_templateparser.php"
#line 416 "smarty_internal_templateparser.y"
    function yy_r112(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2259 "smarty_internal_templateparser.php"
#line 418 "smarty_internal_templateparser.y"
    function yy_r113(){return;    }
#line 2262 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2265 "smarty_internal_templateparser.php"
#line 423 "smarty_internal_templateparser.y"
    function yy_r115(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2268 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r116(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2271 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r117(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2274 "smarty_internal_templateparser.php"
#line 426 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2277 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2280 "smarty_internal_templateparser.php"
#line 429 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2283 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r122(){$this->_retvalue = '';    }
#line 2286 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r124(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2289 "smarty_internal_templateparser.php"
#line 443 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2292 "smarty_internal_templateparser.php"
#line 445 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2295 "smarty_internal_templateparser.php"
#line 450 "smarty_internal_templateparser.y"
    function yy_r127(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2299 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r128(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2303 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2306 "smarty_internal_templateparser.php"
#line 457 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2309 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2312 "smarty_internal_templateparser.php"
#line 460 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2315 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2318 "smarty_internal_templateparser.php"
#line 462 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2321 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2324 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r136(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2333 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2336 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2339 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r139(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2342 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r141(){ return;    }
#line 2345 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r142(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2348 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r147(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2351 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r148(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2354 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2357 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2360 "smarty_internal_templateparser.php"
#line 526 "smarty_internal_templateparser.y"
    function yy_r153(){$this->_retvalue = '==';    }
#line 2363 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r154(){$this->_retvalue = '!=';    }
#line 2366 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = '>';    }
#line 2369 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '<';    }
#line 2372 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '>=';    }
#line 2375 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '<=';    }
#line 2378 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '===';    }
#line 2381 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '!==';    }
#line 2384 "smarty_internal_templateparser.php"
#line 534 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = '%';    }
#line 2387 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = '&&';    }
#line 2390 "smarty_internal_templateparser.php"
#line 537 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = '||';    }
#line 2393 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = ' XOR ';    }
#line 2396 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r165(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2399 "smarty_internal_templateparser.php"
#line 545 "smarty_internal_templateparser.y"
    function yy_r167(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2402 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r168(){ return;     }
#line 2405 "smarty_internal_templateparser.php"
#line 547 "smarty_internal_templateparser.y"
    function yy_r169(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2408 "smarty_internal_templateparser.php"
#line 548 "smarty_internal_templateparser.y"
    function yy_r170(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2411 "smarty_internal_templateparser.php"
#line 555 "smarty_internal_templateparser.y"
    function yy_r172(){ $this->_retvalue = "''";     }
#line 2414 "smarty_internal_templateparser.php"
#line 556 "smarty_internal_templateparser.y"
    function yy_r173(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2417 "smarty_internal_templateparser.php"
#line 558 "smarty_internal_templateparser.y"
    function yy_r174(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2420 "smarty_internal_templateparser.php"
#line 559 "smarty_internal_templateparser.y"
    function yy_r175(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2423 "smarty_internal_templateparser.php"
#line 561 "smarty_internal_templateparser.y"
    function yy_r176(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2426 "smarty_internal_templateparser.php"
#line 563 "smarty_internal_templateparser.y"
    function yy_r178(){if (isset($this->compiler->local_var["'".substr($this->yystack[$this->yyidx + 0]->minor,1)."'"])) {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
                                                      } else {
                                                       $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value');
                                                      }
                                                      $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache;
      }
#line 2435 "smarty_internal_templateparser.php"
#line 571 "smarty_internal_templateparser.y"
    function yy_r180(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2438 "smarty_internal_templateparser.php"
#line 572 "smarty_internal_templateparser.y"
    function yy_r181(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2443 "smarty_internal_templateparser.php"
#line 575 "smarty_internal_templateparser.y"
    function yy_r182(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2446 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 73 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2509 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 65 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2527 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>