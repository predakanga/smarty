<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        // set instance object
        self::instance($this); 
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        if ($this->template->security && isset($this->smarty->security_handler)) {
              $this->sec_obj = $this->smarty->security_policy;
        } else {
              $this->sec_obj = $this->smarty;
        }
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->allowed_php = false;
    }
    public static function &instance($new_instance = null)
    {
        static $instance = null;
        if (isset($new_instance) && is_object($new_instance))
            $instance = $new_instance;
        return $instance;
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       assert($tag !== false && $count === 1);
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       assert($tag_text === '?>');
       return '?<?php ?>>';
    }

    
#line 127 "smarty_internal_templateparser.php"

    const TP_COMMENT                        =  1;
    const TP_PHPSTARTTAG                    =  2;
    const TP_PHPENDTAG                      =  3;
    const TP_FAKEPHPSTARTTAG                =  4;
    const TP_XMLTAG                         =  5;
    const TP_OTHER                          =  6;
    const TP_LITERALSTART                   =  7;
    const TP_LITERALEND                     =  8;
    const TP_LITERAL                        =  9;
    const TP_LDEL                           = 10;
    const TP_RDEL                           = 11;
    const TP_DOLLAR                         = 12;
    const TP_ID                             = 13;
    const TP_EQUAL                          = 14;
    const TP_FOREACH                        = 15;
    const TP_PTR                            = 16;
    const TP_IF                             = 17;
    const TP_SPACE                          = 18;
    const TP_UNIMATH                        = 19;
    const TP_FOR                            = 20;
    const TP_SEMICOLON                      = 21;
    const TP_INCDEC                         = 22;
    const TP_TO                             = 23;
    const TP_STEP                           = 24;
    const TP_AS                             = 25;
    const TP_APTR                           = 26;
    const TP_LDELSLASH                      = 27;
    const TP_INTEGER                        = 28;
    const TP_COMMA                          = 29;
    const TP_COLON                          = 30;
    const TP_MATH                           = 31;
    const TP_ANDSYM                         = 32;
    const TP_OPENP                          = 33;
    const TP_CLOSEP                         = 34;
    const TP_QMARK                          = 35;
    const TP_NOT                            = 36;
    const TP_TYPECAST                       = 37;
    const TP_DOT                            = 38;
    const TP_BOOLEAN                        = 39;
    const TP_NULL                           = 40;
    const TP_SINGLEQUOTESTRING              = 41;
    const TP_QUOTE                          = 42;
    const TP_DOUBLECOLON                    = 43;
    const TP_AT                             = 44;
    const TP_HATCH                          = 45;
    const TP_OPENB                          = 46;
    const TP_CLOSEB                         = 47;
    const TP_VERT                           = 48;
    const TP_ISIN                           = 49;
    const TP_ISDIVBY                        = 50;
    const TP_ISNOTDIVBY                     = 51;
    const TP_ISEVEN                         = 52;
    const TP_ISNOTEVEN                      = 53;
    const TP_ISEVENBY                       = 54;
    const TP_ISNOTEVENBY                    = 55;
    const TP_ISODD                          = 56;
    const TP_ISNOTODD                       = 57;
    const TP_ISODDBY                        = 58;
    const TP_ISNOTODDBY                     = 59;
    const TP_INSTANCEOF                     = 60;
    const TP_EQUALS                         = 61;
    const TP_NOTEQUALS                      = 62;
    const TP_GREATERTHAN                    = 63;
    const TP_LESSTHAN                       = 64;
    const TP_GREATEREQUAL                   = 65;
    const TP_LESSEQUAL                      = 66;
    const TP_IDENTITY                       = 67;
    const TP_NONEIDENTITY                   = 68;
    const TP_MOD                            = 69;
    const TP_LAND                           = 70;
    const TP_LOR                            = 71;
    const TP_LXOR                           = 72;
    const TP_BACKTICK                       = 73;
    const TP_DOLLARID                       = 74;
    const YY_NO_ACTION = 590;
    const YY_ACCEPT_ACTION = 589;
    const YY_ERROR_ACTION = 588;

    const YY_SZ_ACTTAB = 1623;
static public $yy_action = array(
 /*     0 */    19,  172,   92,   61,  326,   99,  320,  209,   49,   52,
 /*    10 */   223,  589,   60,  293,  291,  296,  132,  122,  220,  279,
 /*    20 */    50,   51,   41,   15,   94,  136,   53,   48,   25,  339,
 /*    30 */   351,  387,   62,  227,  358,   66,   18,   19,  160,   94,
 /*    40 */   189,  205,  262,  318,  157,  348,   52,  281,   31,  225,
 /*    50 */   181,  375,   36,  102,  122,  220,  206,   66,  205,  328,
 /*    60 */    34,  302,  316,   53,   48,  347,  339,  351,  387,   62,
 /*    70 */    45,  324,   66,   18,  258,   19,  206,   85,  193,   25,
 /*    80 */   368,  364,  369,  456,   52,  173,  275,  366,  147,  160,
 /*    90 */   456,  183,  122,  220,  182,  102,   31,  205,   34,  375,
 /*   100 */    35,   53,   48,  328,  339,  351,  387,   62,  373,  313,
 /*   110 */    66,   18,   19,  324,   85,  203,   44,   42,   93,  277,
 /*   120 */    31,   52,   31,  375,   36,  375,  376,  206,  206,  122,
 /*   130 */   220,  211,   54,  205,  263,   34,   94,  239,   53,   48,
 /*   140 */   182,  339,  351,  387,   62,  276,  273,   66,   18,   19,
 /*   150 */    57,   85,  203,   32,  238,  318,  242,  252,   52,  214,
 /*   160 */    25,  225,  322,  206,  205,  102,  122,  220,    3,   66,
 /*   170 */   160,   31,    6,  228,  375,   13,   48,  347,  339,  351,
 /*   180 */   387,   62,  260,  324,   66,   18,   19,   25,   86,  203,
 /*   190 */    31,  321,  318,  375,  206,   52,  317,  160,  225,  292,
 /*   200 */   291,  296,  102,  122,  220,  238,  226,   31,  319,    6,
 /*   210 */   375,  186,   13,   48,  347,  339,  351,  387,   62,   37,
 /*   220 */   324,   66,   18,   19,  219,   94,  192,   31,  346,  318,
 /*   230 */   375,  371,   52,  350,  248,  225,  206,  374,  102,  102,
 /*   240 */   122,  197,   24,  221,   31,  334,   34,  375,  206,   53,
 /*   250 */    48,  347,  339,  351,  387,   62,  324,  324,   66,   18,
 /*   260 */    19,  269,   85,  191,  452,  170,  318,  222,  206,   52,
 /*   270 */   345,  205,  225,  167,  205,  348,  102,  122,  220,    1,
 /*   280 */    30,   57,  217,    9,  224,  232,   13,   48,  347,  339,
 /*   290 */   351,  387,   62,  182,  324,   66,   18,   19,   70,   94,
 /*   300 */   204,  184,  134,  318,  206,  169,   52,  272,  182,  225,
 /*   310 */    78,  352,  307,  102,  122,  220,   42,  328,  205,  205,
 /*   320 */    34,    4,   14,   53,   48,  347,  339,  351,  387,   62,
 /*   330 */   288,  324,   66,   18,   19,  348,   94,  199,  206,  146,
 /*   340 */   318,  140,  308,   52,  312,  180,  225,  182,  168,  205,
 /*   350 */   102,  122,  220,  320,  328,  267,  328,   34,  267,  187,
 /*   360 */    53,   48,  347,  339,  351,  387,   62,   43,  324,   66,
 /*   370 */    18,   19,   31,   85,  203,  202,  155,  318,   77,   54,
 /*   380 */    52,  337,  185,  225,  127,  176,  270,  102,  122,  220,
 /*   390 */   320,  328,  218,  266,    9,   71,  390,   13,   48,  347,
 /*   400 */   339,  351,  387,   62,  330,  324,   66,   18,    8,    5,
 /*   410 */   360,  385,   11,   16,  388,  382,   12,   17,   63,  362,
 /*   420 */   289,   81,  283,  141,  340,  284,  205,  335,  378,  354,
 /*   430 */   353,  205,  329,   31,  205,  359,  375,  236,  328,  205,
 /*   440 */   380,  250,   68,    8,    5,  360,  385,   11,   16,  388,
 /*   450 */   382,   12,   17,    8,    5,  360,  385,   11,   16,  388,
 /*   460 */   382,   12,   17,  378,  354,  353,   31,  229,  207,  237,
 /*   470 */   280,  133,  245,  378,  354,  353,   23,  216,   49,    8,
 /*   480 */     5,  360,  385,   11,   16,  388,  382,   12,   17,  357,
 /*   490 */    50,   51,  300,  131,  271,  206,  374,  344,  205,  378,
 /*   500 */   354,  353,  206,   47,  205,    8,    5,  360,  385,   11,
 /*   510 */    16,  388,  382,   12,   17,  303,  306,  315,  274,  256,
 /*   520 */   255,  254,  257,  253,   26,  378,  354,  353,   49,  125,
 /*   530 */     8,    5,  360,  385,   11,   16,  388,  382,   12,   17,
 /*   540 */    50,   51,  154,  359,   19,  121,   94,  204,  216,  152,
 /*   550 */   378,  354,  353,   52,  249,  182,  251,  328,  323,  359,
 /*   560 */   325,  122,  220,   19,  328,   94,  198,   34,   91,  331,
 /*   570 */    53,   48,   52,  339,  351,  387,   62,  386,   42,   66,
 /*   580 */   122,  220,  124,  162,  205,  120,   34,  123,  304,   53,
 /*   590 */    48,  261,  339,  351,  387,   62,  359,   24,   66,  359,
 /*   600 */    38,  359,    8,    5,  360,  385,   11,   16,  388,  382,
 /*   610 */    12,   17,    8,    5,  360,  385,   11,   16,  388,  382,
 /*   620 */    12,   17,  378,  354,  353,  138,  264,  104,  454,  137,
 /*   630 */    20,   57,  378,  354,  353,  454,  343,   40,  363,   54,
 /*   640 */   328,  244,  318,  205,  328,  205,  246,  122,  225,   76,
 /*   650 */   295,  107,  102,  187,  349,  213,  331,  149,   25,  145,
 /*   660 */   381,   43,  367,  196,  347,  206,   47,  278,  160,  355,
 /*   670 */   324,  309,  328,  206,  328,  370,  205,   79,  303,  306,
 /*   680 */   315,  274,  256,  255,  254,  257,  253,    7,  342,    7,
 /*   690 */   314,  359,  318,   33,  268,  205,  200,  205,  225,   56,
 /*   700 */   100,   58,  102,  297,  299,  310,  311,  301,  305,  173,
 /*   710 */   381,  332,   19,  196,  347,  336,  365,  264,  205,  356,
 /*   720 */   324,   20,  205,  205,  379,  370,  205,  206,   47,  122,
 /*   730 */   259,  205,   22,  377,  153,   72,  156,  205,  122,   87,
 /*   740 */   303,  306,  315,  274,  256,  255,  254,  257,  253,  328,
 /*   750 */   286,  328,  452,  265,  453,  338,   27,   80,  126,  205,
 /*   760 */   318,  453,  205,  331,  194,   28,  225,   73,  294,  113,
 /*   770 */   102,  359,  359,  318,  206,    2,   25,  389,  381,  225,
 /*   780 */    39,  196,  347,  102,   33,  268,  160,  179,  324,  206,
 /*   790 */    47,  249,  320,  370,  341,  347,  159,   26,  206,  240,
 /*   800 */   144,  324,  303,  306,  315,  274,  256,  255,  254,  257,
 /*   810 */   253,  328,   29,  206,   47,  328,  282,  212,  327,  210,
 /*   820 */    84,  128,  383,  234,   90,  235,  303,  306,  315,  274,
 /*   830 */   256,  255,  254,  257,  253,  348,  328,  163,   96,  318,
 /*   840 */   103,  326,  285,  246,    3,  225,   55,   98,   59,  102,
 /*   850 */   384,  215,  130,   88,  374,  205,   46,  381,  230,  101,
 /*   860 */   196,  347,  316,    7,  372,   21,   45,  324,   65,  331,
 /*   870 */    10,  361,  370,  317,  317,  317,  206,   47,  317,  317,
 /*   880 */   317,  317,  317,  317,  317,  317,  317,  317,  317,  303,
 /*   890 */   306,  315,  274,  256,  255,  254,  257,  253,  317,  317,
 /*   900 */   317,  317,  317,  317,  317,  317,  318,  317,  317,  317,
 /*   910 */   246,  317,  225,   76,  317,  112,  102,  317,  317,  317,
 /*   920 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*   930 */   246,  317,  225,   76,  324,  116,  102,  317,  317,  370,
 /*   940 */   317,  317,  317,  317,  381,  317,  317,  196,  347,  317,
 /*   950 */   317,  317,  317,  317,  324,  317,  318,  317,  317,  370,
 /*   960 */   246,  317,  225,   76,  317,  111,  102,  317,  317,  317,
 /*   970 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*   980 */   246,  317,  225,   74,  324,  109,  102,  317,  317,  370,
 /*   990 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1000 */   246,  317,  225,   75,  324,  110,  102,  317,  317,  370,
 /*  1010 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1020 */   246,  317,  225,   76,  324,  118,  102,  317,  317,  370,
 /*  1030 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1040 */   246,  317,  225,   76,  324,  119,  102,  317,  317,  370,
 /*  1050 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1060 */   241,  317,  225,  178,  324,  317,  102,  317,  317,  370,
 /*  1070 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1080 */   246,  317,  225,   76,  324,  115,  102,  317,  317,  317,
 /*  1090 */   317,  317,  201,  298,  381,  317,  318,  196,  347,  317,
 /*  1100 */   246,  317,  225,   74,  324,  105,  102,  317,  317,  370,
 /*  1110 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1120 */   246,  317,  225,   76,  324,  114,  102,  317,  317,  370,
 /*  1130 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1140 */   247,  317,  225,   76,  324,  117,  102,  317,  317,  370,
 /*  1150 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1160 */   246,  317,  225,   76,  324,  108,  102,  317,  317,  370,
 /*  1170 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1180 */   246,  317,  225,   76,  324,  106,  102,  317,  317,  370,
 /*  1190 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1200 */   333,  317,  225,  151,  324,  317,  102,  317,  317,  370,
 /*  1210 */   317,  317,  317,  317,  381,  317,  318,  196,  347,  317,
 /*  1220 */   333,  243,  225,  151,  324,  318,  102,  317,  317,   89,
 /*  1230 */   317,   83,   67,   97,  381,   95,  317,  196,  347,  317,
 /*  1240 */   317,  233,  317,  381,  324,  317,  196,  347,  317,  317,
 /*  1250 */   317,  317,  317,  324,  318,  317,  317,  317,   89,  317,
 /*  1260 */    82,   69,   97,  318,   95,  317,  317,  241,  317,  225,
 /*  1270 */   178,  317,  381,  102,  317,  196,  347,  317,  317,  317,
 /*  1280 */   317,  381,  324,  318,  196,  347,  317,  333,  317,  225,
 /*  1290 */   151,  324,  317,  102,  317,  317,  317,  317,  317,  317,
 /*  1300 */   287,  381,  317,  318,  196,  347,  317,  333,  290,  225,
 /*  1310 */   151,  324,  318,  102,  317,  317,  333,  317,  225,  175,
 /*  1320 */   317,  381,  102,  317,  196,  347,  317,  317,  231,  317,
 /*  1330 */   381,  324,  317,  196,  347,  317,  317,  317,  318,  317,
 /*  1340 */   324,  317,  333,  318,  225,  177,  317,  333,  102,  225,
 /*  1350 */   171,  317,  317,  102,  317,  317,  381,  317,  317,  196,
 /*  1360 */   347,  381,  317,  318,  196,  347,  324,  333,  317,  225,
 /*  1370 */   143,  324,  317,  102,  317,  317,  317,  317,  317,  317,
 /*  1380 */   317,  381,  317,  318,  196,  347,  317,  333,  318,  208,
 /*  1390 */   142,  324,  333,  102,  225,  165,  317,  317,  102,  317,
 /*  1400 */   317,  381,  317,  317,  196,  347,  381,  317,  318,  196,
 /*  1410 */   347,  324,  333,  318,  225,  158,  324,  333,  102,  225,
 /*  1420 */   174,  317,  317,  102,  317,  317,  381,  317,  317,  196,
 /*  1430 */   347,  381,  317,  318,  196,  347,  324,  333,  317,  225,
 /*  1440 */   139,  324,  317,  102,  317,  317,  318,  317,  317,  317,
 /*  1450 */   333,  381,  225,  129,  196,  347,  102,  317,  317,  317,
 /*  1460 */   317,  324,  317,  317,  381,  318,  317,  196,  347,  333,
 /*  1470 */   317,  225,   64,  317,  324,  102,  317,  317,  318,  317,
 /*  1480 */   317,  317,  333,  381,  225,  135,  196,  347,  102,  317,
 /*  1490 */   317,  318,  317,  324,  317,  333,  381,  225,  166,  196,
 /*  1500 */   347,  102,  317,  317,  317,  317,  324,  317,  317,  381,
 /*  1510 */   318,  317,  196,  347,  333,  317,  225,  161,  317,  324,
 /*  1520 */   102,  317,  317,  318,  317,  317,  317,  333,  381,  225,
 /*  1530 */   150,  196,  347,  102,  317,  317,  318,  317,  324,  317,
 /*  1540 */   333,  381,  225,  148,  196,  347,  102,  317,  317,  318,
 /*  1550 */   317,  324,  317,  333,  381,  225,  164,  196,  347,  102,
 /*  1560 */   317,  317,  318,  317,  324,  317,  333,  381,  225,  317,
 /*  1570 */   196,  347,  102,  317,  317,  318,  317,  324,  317,  333,
 /*  1580 */   381,  225,  317,  188,  347,  102,  317,  317,  317,  317,
 /*  1590 */   324,  317,  317,  381,  318,  317,  195,  347,  333,  317,
 /*  1600 */   225,  317,  317,  324,  102,  317,  317,  317,  317,  317,
 /*  1610 */   317,  317,  381,  317,  317,  190,  347,  317,  317,  317,
 /*  1620 */   317,  317,  324,
    );
    static public $yy_lookahead = array(
 /*     0 */    10,  105,   12,   13,  108,   15,  110,   17,   19,   19,
 /*    10 */    20,   76,   77,   78,   79,   80,  106,   27,   28,   11,
 /*    20 */    31,   32,   10,   33,   12,   13,   36,   37,   33,   39,
 /*    30 */    40,   41,   42,   38,   11,   45,   46,   10,   43,   12,
 /*    40 */    13,   18,   47,   79,   84,   22,   19,   83,   10,   85,
 /*    50 */    90,   13,   14,   89,   27,   28,   48,   45,   18,   99,
 /*    60 */    33,   97,   34,   36,   37,  101,   39,   40,   41,   42,
 /*    70 */    30,  107,   45,   46,   47,   10,   48,   12,   13,   33,
 /*    80 */     2,    3,    4,   11,   19,    7,    8,    9,   84,   43,
 /*    90 */    18,   85,   27,   28,   90,   89,   10,   18,   33,   13,
 /*   100 */    14,   36,   37,   99,   39,   40,   41,   42,   22,  103,
 /*   110 */    45,   46,   10,  107,   12,   13,   10,  113,   12,   13,
 /*   120 */    10,   19,   10,   13,   14,   13,   11,   48,   48,   27,
 /*   130 */    28,   16,   60,   18,   28,   33,   12,   13,   36,   37,
 /*   140 */    90,   39,   40,   41,   42,   39,   40,   45,   46,   10,
 /*   150 */    16,   12,   13,   26,   44,   79,   44,   11,   19,   83,
 /*   160 */    33,   85,  110,   48,   18,   89,   27,   28,   14,   45,
 /*   170 */    43,   10,   33,   97,   13,   36,   37,  101,   39,   40,
 /*   180 */    41,   42,    8,  107,   45,   46,   10,   33,   12,   13,
 /*   190 */    10,   11,   79,   13,   48,   19,   83,   43,   85,   78,
 /*   200 */    79,   80,   89,   27,   28,   44,   26,   10,   11,   33,
 /*   210 */    13,   11,   36,   37,  101,   39,   40,   41,   42,   10,
 /*   220 */   107,   45,   46,   10,   96,   12,   13,   10,   11,   79,
 /*   230 */    13,   11,   19,   83,   85,   85,   48,  109,   89,   89,
 /*   240 */    27,   28,   33,   26,   10,   11,   33,   13,   48,   36,
 /*   250 */    37,  101,   39,   40,   41,   42,  107,  107,   45,   46,
 /*   260 */    10,   73,   12,   13,   11,   21,   79,   13,   48,   19,
 /*   270 */    83,   18,   85,   29,   18,   22,   89,   27,   28,   14,
 /*   280 */    24,   16,   28,   33,   12,   13,   36,   37,  101,   39,
 /*   290 */    40,   41,   42,   90,  107,   45,   46,   10,   91,   12,
 /*   300 */    13,   11,   84,   79,   48,   91,   19,   83,   90,   85,
 /*   310 */    81,   11,   11,   89,   27,   28,  113,   99,   18,   18,
 /*   320 */    33,   18,   19,   36,   37,  101,   39,   40,   41,   42,
 /*   330 */    11,  107,   45,   46,   10,   22,   12,   13,   48,   84,
 /*   340 */    79,   84,   11,   19,   83,   90,   85,   90,  105,   18,
 /*   350 */    89,   27,   28,  110,   99,   79,   99,   33,   79,   38,
 /*   360 */    36,   37,  101,   39,   40,   41,   42,   46,  107,   45,
 /*   370 */    46,   10,   10,   12,   13,   13,   84,   79,  102,   60,
 /*   380 */    19,   83,   90,   85,  106,  105,   73,   89,   27,   28,
 /*   390 */   110,   99,   34,  117,   33,   91,  117,   36,   37,  101,
 /*   400 */    39,   40,   41,   42,   11,  107,   45,   46,   50,   51,
 /*   410 */    52,   53,   54,   55,   56,   57,   58,   59,   13,   11,
 /*   420 */    15,   95,   17,   84,   11,   20,   18,   11,   70,   71,
 /*   430 */    72,   18,   11,   10,   18,  109,   13,   34,   99,   18,
 /*   440 */    11,   13,   91,   50,   51,   52,   53,   54,   55,   56,
 /*   450 */    57,   58,   59,   50,   51,   52,   53,   54,   55,   56,
 /*   460 */    57,   58,   59,   70,   71,   72,   10,   92,   93,   13,
 /*   470 */    11,  106,   44,   70,   71,   72,   29,   38,   19,   50,
 /*   480 */    51,   52,   53,   54,   55,   56,   57,   58,   59,   34,
 /*   490 */    31,   32,   80,  106,   82,   48,  109,   11,   18,   70,
 /*   500 */    71,   72,   48,   49,   18,   50,   51,   52,   53,   54,
 /*   510 */    55,   56,   57,   58,   59,   61,   62,   63,   64,   65,
 /*   520 */    66,   67,   68,   69,   14,   70,   71,   72,   19,   95,
 /*   530 */    50,   51,   52,   53,   54,   55,   56,   57,   58,   59,
 /*   540 */    31,   32,   84,  109,   10,   95,   12,   13,   38,   84,
 /*   550 */    70,   71,   72,   19,   30,   90,   47,   99,   45,  109,
 /*   560 */    13,   27,   28,   10,   99,   12,   13,   33,   12,  111,
 /*   570 */    36,   37,   19,   39,   40,   41,   42,   11,  113,   45,
 /*   580 */    27,   28,   95,   21,   18,   95,   33,   95,   34,   36,
 /*   590 */    37,   47,   39,   40,   41,   42,  109,   33,   45,  109,
 /*   600 */    35,  109,   50,   51,   52,   53,   54,   55,   56,   57,
 /*   610 */    58,   59,   50,   51,   52,   53,   54,   55,   56,   57,
 /*   620 */    58,   59,   70,   71,   72,   84,    6,   34,   11,   84,
 /*   630 */    10,   16,   70,   71,   72,   18,   11,   26,   11,   60,
 /*   640 */    99,   16,   79,   18,   99,   18,   83,   27,   85,   86,
 /*   650 */    45,   88,   89,   38,   13,   92,  111,   84,   33,   84,
 /*   660 */    97,   46,   42,  100,  101,   48,   49,   13,   43,   11,
 /*   670 */   107,   34,   99,   48,   99,  112,   18,   95,   61,   62,
 /*   680 */    63,   64,   65,   66,   67,   68,   69,  114,   11,  114,
 /*   690 */    11,  109,   79,   73,   74,   18,   83,   18,   85,   86,
 /*   700 */    87,   88,   89,    1,    2,    3,    4,    5,    6,    7,
 /*   710 */    97,   11,   10,  100,  101,   11,   11,    6,   18,   11,
 /*   720 */   107,   10,   18,   18,   11,  112,   18,   48,   49,   27,
 /*   730 */    11,   18,   29,   13,   84,   13,   84,   18,   27,   12,
 /*   740 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   99,
 /*   750 */    47,   99,   11,   42,   11,   11,   30,   95,   95,   18,
 /*   760 */    79,   18,   18,  111,   83,   23,   85,   86,   87,   88,
 /*   770 */    89,  109,  109,   79,   48,   14,   33,   83,   97,   85,
 /*   780 */    30,  100,  101,   89,   73,   74,   43,  105,  107,   48,
 /*   790 */    49,   30,  110,  112,   28,  101,   84,   14,   48,   34,
 /*   800 */    84,  107,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   810 */    69,   99,   35,   48,   49,   99,   11,   25,   11,   13,
 /*   820 */    12,   84,   11,   13,   12,   25,   61,   62,   63,   64,
 /*   830 */    65,   66,   67,   68,   69,   22,   99,   13,   12,   79,
 /*   840 */    18,  108,   11,   83,   14,   85,   86,   87,   88,   89,
 /*   850 */    99,   98,  106,   12,  109,   18,   18,   97,   94,  103,
 /*   860 */   100,  101,   34,  114,   18,   33,   30,  107,  106,  111,
 /*   870 */    94,   92,  112,  118,  118,  118,   48,   49,  118,  118,
 /*   880 */   118,  118,  118,  118,  118,  118,  118,  118,  118,   61,
 /*   890 */    62,   63,   64,   65,   66,   67,   68,   69,  118,  118,
 /*   900 */   118,  118,  118,  118,  118,  118,   79,  118,  118,  118,
 /*   910 */    83,  118,   85,   86,  118,   88,   89,  118,  118,  118,
 /*   920 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*   930 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*   940 */   118,  118,  118,  118,   97,  118,  118,  100,  101,  118,
 /*   950 */   118,  118,  118,  118,  107,  118,   79,  118,  118,  112,
 /*   960 */    83,  118,   85,   86,  118,   88,   89,  118,  118,  118,
 /*   970 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*   980 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*   990 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1000 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1010 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1020 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1030 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1040 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1050 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1060 */    83,  118,   85,   86,  107,  118,   89,  118,  118,  112,
 /*  1070 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1080 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  118,
 /*  1090 */   118,  118,  115,  116,   97,  118,   79,  100,  101,  118,
 /*  1100 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1110 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1120 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1130 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1140 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1150 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1160 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1170 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1180 */    83,  118,   85,   86,  107,   88,   89,  118,  118,  112,
 /*  1190 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1200 */    83,  118,   85,   86,  107,  118,   89,  118,  118,  112,
 /*  1210 */   118,  118,  118,  118,   97,  118,   79,  100,  101,  118,
 /*  1220 */    83,  104,   85,   86,  107,   79,   89,  118,  118,   83,
 /*  1230 */   118,   85,   86,   87,   97,   89,  118,  100,  101,  118,
 /*  1240 */   118,  104,  118,   97,  107,  118,  100,  101,  118,  118,
 /*  1250 */   118,  118,  118,  107,   79,  118,  118,  118,   83,  118,
 /*  1260 */    85,   86,   87,   79,   89,  118,  118,   83,  118,   85,
 /*  1270 */    86,  118,   97,   89,  118,  100,  101,  118,  118,  118,
 /*  1280 */   118,   97,  107,   79,  100,  101,  118,   83,  118,   85,
 /*  1290 */    86,  107,  118,   89,  118,  118,  118,  118,  118,  118,
 /*  1300 */   116,   97,  118,   79,  100,  101,  118,   83,  104,   85,
 /*  1310 */    86,  107,   79,   89,  118,  118,   83,  118,   85,   86,
 /*  1320 */   118,   97,   89,  118,  100,  101,  118,  118,  104,  118,
 /*  1330 */    97,  107,  118,  100,  101,  118,  118,  118,   79,  118,
 /*  1340 */   107,  118,   83,   79,   85,   86,  118,   83,   89,   85,
 /*  1350 */    86,  118,  118,   89,  118,  118,   97,  118,  118,  100,
 /*  1360 */   101,   97,  118,   79,  100,  101,  107,   83,  118,   85,
 /*  1370 */    86,  107,  118,   89,  118,  118,  118,  118,  118,  118,
 /*  1380 */   118,   97,  118,   79,  100,  101,  118,   83,   79,   85,
 /*  1390 */    86,  107,   83,   89,   85,   86,  118,  118,   89,  118,
 /*  1400 */   118,   97,  118,  118,  100,  101,   97,  118,   79,  100,
 /*  1410 */   101,  107,   83,   79,   85,   86,  107,   83,   89,   85,
 /*  1420 */    86,  118,  118,   89,  118,  118,   97,  118,  118,  100,
 /*  1430 */   101,   97,  118,   79,  100,  101,  107,   83,  118,   85,
 /*  1440 */    86,  107,  118,   89,  118,  118,   79,  118,  118,  118,
 /*  1450 */    83,   97,   85,   86,  100,  101,   89,  118,  118,  118,
 /*  1460 */   118,  107,  118,  118,   97,   79,  118,  100,  101,   83,
 /*  1470 */   118,   85,   86,  118,  107,   89,  118,  118,   79,  118,
 /*  1480 */   118,  118,   83,   97,   85,   86,  100,  101,   89,  118,
 /*  1490 */   118,   79,  118,  107,  118,   83,   97,   85,   86,  100,
 /*  1500 */   101,   89,  118,  118,  118,  118,  107,  118,  118,   97,
 /*  1510 */    79,  118,  100,  101,   83,  118,   85,   86,  118,  107,
 /*  1520 */    89,  118,  118,   79,  118,  118,  118,   83,   97,   85,
 /*  1530 */    86,  100,  101,   89,  118,  118,   79,  118,  107,  118,
 /*  1540 */    83,   97,   85,   86,  100,  101,   89,  118,  118,   79,
 /*  1550 */   118,  107,  118,   83,   97,   85,   86,  100,  101,   89,
 /*  1560 */   118,  118,   79,  118,  107,  118,   83,   97,   85,  118,
 /*  1570 */   100,  101,   89,  118,  118,   79,  118,  107,  118,   83,
 /*  1580 */    97,   85,  118,  100,  101,   89,  118,  118,  118,  118,
 /*  1590 */   107,  118,  118,   97,   79,  118,  100,  101,   83,  118,
 /*  1600 */    85,  118,  118,  107,   89,  118,  118,  118,  118,  118,
 /*  1610 */   118,  118,   97,  118,  118,  100,  101,  118,  118,  118,
 /*  1620 */   118,  118,  107,
);
    const YY_SHIFT_USE_DFLT = -12;
    const YY_SHIFT_MAX = 249;
    static public $yy_shift_ofst = array(
 /*     0 */   702,  361,  361,  250,  176,  139,  139,  139,  139,  139,
 /*    10 */   139,  139,  139,  139,  139,  139,  139,  139,   65,  -10,
 /*    20 */   -10,  102,   65,  102,  102,  102,  102,  102,  102,  102,
 /*    30 */   102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
 /*    40 */   102,  102,  102,   27,  287,  324,  213,  287,  534,  534,
 /*    50 */   534,  534,  534,  534,  553,  741,  679,   12,  480,  480,
 /*    60 */   702,  625,  711,  115,  256,  615,  124,  146,   40,   79,
 /*    70 */    40,   40,   79,  617,  765,  828,  454,  620,   78,   86,
 /*    80 */   110,  161,  253,   23,  423,  456,  456,  423,  423,  708,
 /*    90 */   423,  423,  362,  423,  423,  265,  423,  837,  837,  838,
 /*   100 */   837,  134,  134,  841,  134,  358,  562,  393,  429,  403,
 /*   110 */   455,  552,  552,  552,  552,  552,  552,  552,  552,  552,
 /*   120 */   217,  180,  405,   38,  112,  197,  234,  321,  700,  290,
 /*   130 */   321,  321,  321,  321,  658,  200,  209,  421,  566,  220,
 /*   140 */   627,  408,  188,    8,  301,  719,  713,  331,  750,  744,
 /*   150 */   726,  447,  416,  486,  704,  705,  677,  413,   28,  300,
 /*   160 */   272,   80,  846,  832,   80,   80,   80,  841,  134,  836,
 /*   170 */   846,   80,  134,  174,   80,   80,  134,   80,   80,  134,
 /*   180 */   -12,  -12,  -12,  -12,  -12,  -12,  -12,  106,  509,   -5,
 /*   190 */   459,  743,  154,  127,   72,  -11,  -11,  510,   46,   46,
 /*   200 */   319,  703,  761,   46,   46,  254,  428,  244,  313,  303,
 /*   210 */   831,  806,  808,  807,  792,  805,  766,  783,  777,  811,
 /*   220 */   439,  826,  830,  822,  824,  813,  812,  810,  800,  742,
 /*   230 */   727,  554,  564,  593,  544,  556,  777,  524,  547,  513,
 /*   240 */   565,  611,  720,  637,  722,  654,  579,  579,  605,  641,
);
    const YY_REDUCE_USE_DFLT = -105;
    const YY_REDUCE_MAX = 186;
    static public $yy_reduce_ofst = array(
 /*     0 */   -65,  760,  613,  681,  563,  877,  917,  847,  827,  897,
 /*    10 */  1097, 1037,  937, 1057, 1077, 1017,  997,  957,  977, 1175,
 /*    20 */  1146, 1137, 1184, 1204, 1224, 1117, 1334, 1412, 1386, 1444,
 /*    30 */  1354, 1284, 1264, 1304, 1329, 1309, 1259, 1367, 1457, 1431,
 /*    40 */  1233, 1399, 1470, 1483, 1515, 1496,   76,  -36,  298,  694,
 /*    50 */   113,  224,  150,  187,  261,  465,    4,    6,  575,  573,
 /*    60 */   121,  -40,  276,  255,  257, -104,  149,  218,  545,  218,
 /*    70 */   458,  652,  292,  203,  203,  203,  203,  279,  412,  128,
 /*    80 */   387,  387,  541,  541,  490,  326,  662,  582,  492,  339,
 /*    90 */   434,  450,  326,  487,  326,  243,  663,  716,  712,  650,
 /*   100 */   737,  682,  243,  375,  280,  749,  749,  749,  749,  749,
 /*   110 */   749,  749,  749,  749,  749,  749,  749,  749,  749,  749,
 /*   120 */   745,  745,  753,  745,  745,  745,  745,  733,  751,   50,
 /*   130 */   733,  733,  733,  733,  751,   50,  746,  751,  751,   50,
 /*   140 */   751,  751,   50,   50,  751,  751,  751,  751,   50,  751,
 /*   150 */    50,   50,  751,  751,  751,  751,  751,  751,   50,  751,
 /*   160 */   756,   50,  764,  762,   50,   50,   50,  779,   52,  758,
 /*   170 */   776,   50,   52,  229,   50,   50,   52,   50,   50,   52,
 /*   180 */   351,  207,  214,  -90,  278,  304,  365,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(1, 2, 3, 4, 5, 6, 7, 10, 27, ),
        /* 1 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 2 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 3 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 4 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 5 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 6 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 7 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 8 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 9 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 10 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 11 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 12 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 13 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 14 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 15 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 16 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 17 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 18 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 19 */ array(10, 12, 13, 15, 17, 19, 20, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 20 */ array(10, 12, 13, 15, 17, 19, 20, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 21 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 22 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 23 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 24 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 25 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 26 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 27 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 28 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 29 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 30 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 31 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 32 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 33 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 34 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 35 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 36 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 37 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 38 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 39 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 40 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 41 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 42 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 43 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, 47, ),
        /* 44 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 45 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 46 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 47 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, 46, ),
        /* 48 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 49 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 50 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 51 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 52 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 53 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 54 */ array(10, 12, 13, 19, 27, 28, 33, 36, 37, 39, 40, 41, 42, 45, ),
        /* 55 */ array(11, 18, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 56 */ array(11, 18, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 57 */ array(10, 12, 13, 45, ),
        /* 58 */ array(18, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 59 */ array(18, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 60 */ array(1, 2, 3, 4, 5, 6, 7, 10, 27, ),
        /* 61 */ array(11, 16, 18, 33, 43, 48, ),
        /* 62 */ array(6, 10, 27, 42, 73, 74, ),
        /* 63 */ array(11, 16, 18, 48, ),
        /* 64 */ array(18, 24, 48, ),
        /* 65 */ array(16, 38, 46, ),
        /* 66 */ array(12, 13, 45, ),
        /* 67 */ array(11, 18, 48, ),
        /* 68 */ array(18, 30, ),
        /* 69 */ array(18, 48, ),
        /* 70 */ array(18, 30, ),
        /* 71 */ array(18, 30, ),
        /* 72 */ array(18, 48, ),
        /* 73 */ array(11, 18, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 74 */ array(34, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 75 */ array(34, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 76 */ array(48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, ),
        /* 77 */ array(6, 10, 27, 42, 73, 74, ),
        /* 78 */ array(2, 3, 4, 7, 8, 9, ),
        /* 79 */ array(10, 13, 14, 22, ),
        /* 80 */ array(10, 13, 14, 44, ),
        /* 81 */ array(10, 13, 44, ),
        /* 82 */ array(11, 18, 22, ),
        /* 83 */ array(11, 18, 22, ),
        /* 84 */ array(10, 13, ),
        /* 85 */ array(10, 13, ),
        /* 86 */ array(10, 13, ),
        /* 87 */ array(10, 13, ),
        /* 88 */ array(10, 13, ),
        /* 89 */ array(11, 18, ),
        /* 90 */ array(10, 13, ),
        /* 91 */ array(10, 13, ),
        /* 92 */ array(10, 13, ),
        /* 93 */ array(10, 13, ),
        /* 94 */ array(10, 13, ),
        /* 95 */ array(14, 16, ),
        /* 96 */ array(10, 13, ),
        /* 97 */ array(18, ),
        /* 98 */ array(18, ),
        /* 99 */ array(18, ),
        /* 100 */ array(18, ),
        /* 101 */ array(16, ),
        /* 102 */ array(16, ),
        /* 103 */ array(12, ),
        /* 104 */ array(16, ),
        /* 105 */ array(34, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 106 */ array(21, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 107 */ array(11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 108 */ array(11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 109 */ array(34, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 110 */ array(34, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 111 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 112 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 113 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 114 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 115 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 116 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 117 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 118 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 119 */ array(50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, ),
        /* 120 */ array(10, 11, 13, 26, ),
        /* 121 */ array(10, 11, 13, 26, ),
        /* 122 */ array(13, 15, 17, 20, ),
        /* 123 */ array(10, 13, 14, ),
        /* 124 */ array(10, 13, 44, ),
        /* 125 */ array(10, 11, 13, ),
        /* 126 */ array(10, 11, 13, ),
        /* 127 */ array(38, 46, ),
        /* 128 */ array(11, 18, ),
        /* 129 */ array(11, 48, ),
        /* 130 */ array(38, 46, ),
        /* 131 */ array(38, 46, ),
        /* 132 */ array(38, 46, ),
        /* 133 */ array(38, 46, ),
        /* 134 */ array(11, 18, ),
        /* 135 */ array(11, 48, ),
        /* 136 */ array(10, 33, ),
        /* 137 */ array(11, 18, ),
        /* 138 */ array(11, 18, ),
        /* 139 */ array(11, 48, ),
        /* 140 */ array(11, 18, ),
        /* 141 */ array(11, 18, ),
        /* 142 */ array(48, 73, ),
        /* 143 */ array(11, 48, ),
        /* 144 */ array(11, 18, ),
        /* 145 */ array(11, 18, ),
        /* 146 */ array(11, 18, ),
        /* 147 */ array(11, 18, ),
        /* 148 */ array(30, 48, ),
        /* 149 */ array(11, 18, ),
        /* 150 */ array(30, 48, ),
        /* 151 */ array(29, 48, ),
        /* 152 */ array(11, 18, ),
        /* 153 */ array(11, 18, ),
        /* 154 */ array(11, 18, ),
        /* 155 */ array(11, 18, ),
        /* 156 */ array(11, 18, ),
        /* 157 */ array(11, 18, ),
        /* 158 */ array(34, 48, ),
        /* 159 */ array(11, 18, ),
        /* 160 */ array(12, 13, ),
        /* 161 */ array(48, ),
        /* 162 */ array(18, ),
        /* 163 */ array(33, ),
        /* 164 */ array(48, ),
        /* 165 */ array(48, ),
        /* 166 */ array(48, ),
        /* 167 */ array(12, ),
        /* 168 */ array(16, ),
        /* 169 */ array(30, ),
        /* 170 */ array(18, ),
        /* 171 */ array(48, ),
        /* 172 */ array(16, ),
        /* 173 */ array(8, ),
        /* 174 */ array(48, ),
        /* 175 */ array(48, ),
        /* 176 */ array(16, ),
        /* 177 */ array(48, ),
        /* 178 */ array(48, ),
        /* 179 */ array(16, ),
        /* 180 */ array(),
        /* 181 */ array(),
        /* 182 */ array(),
        /* 183 */ array(),
        /* 184 */ array(),
        /* 185 */ array(),
        /* 186 */ array(),
        /* 187 */ array(10, 12, 13, 28, 39, 40, ),
        /* 188 */ array(19, 31, 32, 47, ),
        /* 189 */ array(33, 38, 43, 47, ),
        /* 190 */ array(11, 19, 31, 32, ),
        /* 191 */ array(11, 18, 33, 43, ),
        /* 192 */ array(14, 33, 43, ),
        /* 193 */ array(26, 33, 43, ),
        /* 194 */ array(11, 18, 60, ),
        /* 195 */ array(19, 31, 32, ),
        /* 196 */ array(19, 31, 32, ),
        /* 197 */ array(14, 38, ),
        /* 198 */ array(33, 43, ),
        /* 199 */ array(33, 43, ),
        /* 200 */ array(11, 60, ),
        /* 201 */ array(29, 47, ),
        /* 202 */ array(14, 30, ),
        /* 203 */ array(33, 43, ),
        /* 204 */ array(33, 43, ),
        /* 205 */ array(13, 28, ),
        /* 206 */ array(13, 44, ),
        /* 207 */ array(21, 29, ),
        /* 208 */ array(22, 73, ),
        /* 209 */ array(18, 19, ),
        /* 210 */ array(11, ),
        /* 211 */ array(13, ),
        /* 212 */ array(12, ),
        /* 213 */ array(11, ),
        /* 214 */ array(25, ),
        /* 215 */ array(11, ),
        /* 216 */ array(28, ),
        /* 217 */ array(14, ),
        /* 218 */ array(35, ),
        /* 219 */ array(11, ),
        /* 220 */ array(38, ),
        /* 221 */ array(12, ),
        /* 222 */ array(14, ),
        /* 223 */ array(18, ),
        /* 224 */ array(13, ),
        /* 225 */ array(22, ),
        /* 226 */ array(12, ),
        /* 227 */ array(13, ),
        /* 228 */ array(25, ),
        /* 229 */ array(23, ),
        /* 230 */ array(12, ),
        /* 231 */ array(34, ),
        /* 232 */ array(33, ),
        /* 233 */ array(34, ),
        /* 234 */ array(47, ),
        /* 235 */ array(12, ),
        /* 236 */ array(35, ),
        /* 237 */ array(30, ),
        /* 238 */ array(13, ),
        /* 239 */ array(45, ),
        /* 240 */ array(35, ),
        /* 241 */ array(26, ),
        /* 242 */ array(13, ),
        /* 243 */ array(34, ),
        /* 244 */ array(13, ),
        /* 245 */ array(13, ),
        /* 246 */ array(60, ),
        /* 247 */ array(60, ),
        /* 248 */ array(45, ),
        /* 249 */ array(13, ),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
);
    static public $yy_default = array(
 /*     0 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    10 */   588,  588,  588,  588,  588,  588,  588,  588,  573,  588,
 /*    20 */   588,  531,  588,  531,  531,  531,  588,  588,  588,  588,
 /*    30 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    40 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*    50 */   588,  588,  588,  588,  588,  541,  541,  588,  452,  452,
 /*    60 */   391,  588,  588,  588,  452,  493,  588,  588,  452,  452,
 /*    70 */   452,  452,  452,  541,  541,  541,  541,  588,  588,  588,
 /*    80 */   503,  503,  474,  474,  588,  588,  588,  588,  588,  467,
 /*    90 */   588,  588,  588,  588,  588,  496,  588,  452,  452,  452,
 /*   100 */   452,  488,  496,  588,  489,  588,  588,  588,  588,  588,
 /*   110 */   588,  547,  546,  455,  550,  551,  545,  539,  554,  555,
 /*   120 */   588,  588,  588,  588,  504,  588,  588,  525,  588,  588,
 /*   130 */   522,  501,  523,  524,  588,  588,  503,  588,  588,  588,
 /*   140 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*   150 */   588,  530,  588,  588,  588,  588,  588,  588,  588,  588,
 /*   160 */   588,  473,  587,  503,  542,  434,  472,  588,  519,  466,
 /*   170 */   587,  575,  494,  405,  459,  574,  491,  462,  576,  490,
 /*   180 */   535,  535,  535,  503,  503,  535,  503,  588,  588,  588,
 /*   190 */   588,  463,  458,  463,  467,  536,  464,  479,  556,  537,
 /*   200 */   467,  588,  517,  463,  588,  588,  588,  588,  474,  588,
 /*   210 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*   220 */   479,  588,  458,  588,  588,  474,  588,  588,  588,  460,
 /*   230 */   588,  588,  492,  588,  588,  588,  540,  517,  588,  588,
 /*   240 */   484,  467,  588,  588,  588,  588,  467,  467,  588,  588,
 /*   250 */   533,  513,  583,  566,  564,  563,  562,  565,  514,  419,
 /*   260 */   402,  512,  511,  509,  585,  487,  578,  584,  581,  580,
 /*   270 */   579,  404,  470,  508,  561,  403,  507,  506,  532,  518,
 /*   280 */   510,  544,  443,  444,  445,  449,  570,  572,  416,  446,
 /*   290 */   529,  394,  393,  392,  457,  500,  396,  395,  571,  397,
 /*   300 */   406,  400,  543,  558,  528,  401,  559,  415,  418,  527,
 /*   310 */   398,  399,  557,  526,  417,  560,  484,  468,  495,  441,
 /*   320 */   520,  440,  521,  499,  498,  497,  502,  432,  451,  448,
 /*   330 */   430,  534,  420,  467,  439,  421,  428,  477,  423,  481,
 /*   340 */   424,  480,  429,  426,  425,  476,  438,  483,  478,  465,
 /*   350 */   475,  482,  422,  569,  568,  414,  411,  540,  582,  515,
 /*   360 */   548,  461,  412,  436,  410,  427,  407,  486,  408,  409,
 /*   370 */   538,  437,  586,  435,  516,  517,  442,  505,  567,  447,
 /*   380 */   431,  471,  553,  433,  450,  549,  413,  485,  552,  469,
 /*   390 */   577,
);
    const YYNOCODE = 119;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 391;
    const YYNRULE = 197;
    const YYERRORSYMBOL = 75;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',   
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'RDEL',        
  'DOLLAR',        'ID',            'EQUAL',         'FOREACH',     
  'PTR',           'IF',            'SPACE',         'UNIMATH',     
  'FOR',           'SEMICOLON',     'INCDEC',        'TO',          
  'STEP',          'AS',            'APTR',          'LDELSLASH',   
  'INTEGER',       'COMMA',         'COLON',         'MATH',        
  'ANDSYM',        'OPENP',         'CLOSEP',        'QMARK',       
  'NOT',           'TYPECAST',      'DOT',           'BOOLEAN',     
  'NULL',          'SINGLEQUOTESTRING',  'QUOTE',         'DOUBLECOLON', 
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'VERT',          'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',         
  'LXOR',          'BACKTICK',      'DOLLARID',      'error',       
  'start',         'template',      'template_element',  'smartytag',   
  'literal',       'literal_elements',  'literal_element',  'value',       
  'attributes',    'variable',      'expr',          'ternary',     
  'ifexprs',       'varindexed',    'modifier',      'modparameters',
  'statement',     'statements',    'optspace',      'varvar',      
  'foraction',     'array',         'specialclose',  'attribute',   
  'exprs',         'function',      'doublequoted',  'method',      
  'params',        'objectchain',   'arrayindex',    'object',      
  'indexdef',      'varvarele',     'objectelement',  'modparameter',
  'ifexpr',        'ifcond',        'lop',           'arrayelements',
  'arrayelement',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template_element ::= smartytag",
 /*   4 */ "template_element ::= COMMENT",
 /*   5 */ "template_element ::= literal",
 /*   6 */ "template_element ::= PHPSTARTTAG",
 /*   7 */ "template_element ::= PHPENDTAG",
 /*   8 */ "template_element ::= FAKEPHPSTARTTAG",
 /*   9 */ "template_element ::= XMLTAG",
 /*  10 */ "template_element ::= OTHER",
 /*  11 */ "literal ::= LITERALSTART LITERALEND",
 /*  12 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  13 */ "literal_elements ::= literal_elements literal_element",
 /*  14 */ "literal_elements ::=",
 /*  15 */ "literal_element ::= literal",
 /*  16 */ "literal_element ::= LITERAL",
 /*  17 */ "literal_element ::= PHPSTARTTAG",
 /*  18 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  19 */ "literal_element ::= PHPENDTAG",
 /*  20 */ "smartytag ::= LDEL value RDEL",
 /*  21 */ "smartytag ::= LDEL value attributes RDEL",
 /*  22 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  23 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  24 */ "smartytag ::= LDEL ternary attributes RDEL",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  26 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  27 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  28 */ "smartytag ::= LDEL DOLLAR ID EQUAL ifexprs attributes RDEL",
 /*  29 */ "smartytag ::= LDEL DOLLAR ID EQUAL ternary attributes RDEL",
 /*  30 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  31 */ "smartytag ::= LDEL varindexed EQUAL ternary attributes RDEL",
 /*  32 */ "smartytag ::= LDEL varindexed EQUAL ifexprs attributes RDEL",
 /*  33 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  34 */ "smartytag ::= LDEL FOREACH attributes RDEL",
 /*  35 */ "smartytag ::= LDEL ID RDEL",
 /*  36 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID modifier modparameters attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID PTR ID modifier modparameters attributes RDEL",
 /*  39 */ "smartytag ::= LDEL IF SPACE ifexprs RDEL",
 /*  40 */ "smartytag ::= LDEL IF UNIMATH ifexprs RDEL",
 /*  41 */ "smartytag ::= LDEL IF SPACE statement RDEL",
 /*  42 */ "smartytag ::= LDEL FOR SPACE statements SEMICOLON optspace ifexprs SEMICOLON optspace DOLLAR varvar foraction RDEL",
 /*  43 */ "foraction ::= EQUAL expr",
 /*  44 */ "foraction ::= INCDEC",
 /*  45 */ "smartytag ::= LDEL FOR SPACE statement TO expr attributes RDEL",
 /*  46 */ "smartytag ::= LDEL FOR SPACE statement TO expr STEP expr RDEL",
 /*  47 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar RDEL",
 /*  48 */ "smartytag ::= LDEL FOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  49 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar RDEL",
 /*  50 */ "smartytag ::= LDEL FOREACH SPACE array AS DOLLAR varvar APTR DOLLAR varvar RDEL",
 /*  51 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  52 */ "smartytag ::= LDELSLASH specialclose RDEL",
 /*  53 */ "specialclose ::= IF",
 /*  54 */ "specialclose ::= FOR",
 /*  55 */ "specialclose ::= FOREACH",
 /*  56 */ "smartytag ::= LDELSLASH ID attributes RDEL",
 /*  57 */ "smartytag ::= LDELSLASH ID modifier modparameters attributes RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  59 */ "attributes ::= attributes attribute",
 /*  60 */ "attributes ::= attribute",
 /*  61 */ "attributes ::=",
 /*  62 */ "attribute ::= SPACE ID EQUAL ID",
 /*  63 */ "attribute ::= SPACE ID EQUAL expr",
 /*  64 */ "attribute ::= SPACE ID EQUAL ifexprs",
 /*  65 */ "attribute ::= SPACE ID EQUAL value",
 /*  66 */ "attribute ::= SPACE ID EQUAL ternary",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  69 */ "statements ::= statement",
 /*  70 */ "statements ::= statements COMMA statement",
 /*  71 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  72 */ "expr ::= ID",
 /*  73 */ "expr ::= exprs",
 /*  74 */ "expr ::= DOLLAR ID COLON ID",
 /*  75 */ "expr ::= expr modifier modparameters",
 /*  76 */ "exprs ::= value",
 /*  77 */ "exprs ::= exprs MATH value",
 /*  78 */ "exprs ::= exprs UNIMATH value",
 /*  79 */ "exprs ::= exprs ANDSYM value",
 /*  80 */ "exprs ::= array",
 /*  81 */ "ternary ::= OPENP ifexprs CLOSEP QMARK expr COLON expr",
 /*  82 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  83 */ "value ::= variable",
 /*  84 */ "value ::= UNIMATH value",
 /*  85 */ "value ::= NOT value",
 /*  86 */ "value ::= TYPECAST value",
 /*  87 */ "value ::= variable INCDEC",
 /*  88 */ "value ::= INTEGER",
 /*  89 */ "value ::= INTEGER DOT INTEGER",
 /*  90 */ "value ::= BOOLEAN",
 /*  91 */ "value ::= NULL",
 /*  92 */ "value ::= function",
 /*  93 */ "value ::= OPENP expr CLOSEP",
 /*  94 */ "value ::= SINGLEQUOTESTRING",
 /*  95 */ "value ::= QUOTE doublequoted QUOTE",
 /*  96 */ "value ::= QUOTE QUOTE",
 /*  97 */ "value ::= ID DOUBLECOLON method",
 /*  98 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP",
 /*  99 */ "value ::= ID DOUBLECOLON method objectchain",
 /* 100 */ "value ::= ID DOUBLECOLON DOLLAR ID OPENP params CLOSEP objectchain",
 /* 101 */ "value ::= ID DOUBLECOLON ID",
 /* 102 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex",
 /* 103 */ "value ::= ID DOUBLECOLON DOLLAR ID arrayindex objectchain",
 /* 104 */ "value ::= smartytag",
 /* 105 */ "variable ::= varindexed",
 /* 106 */ "variable ::= DOLLAR varvar AT ID",
 /* 107 */ "variable ::= object",
 /* 108 */ "variable ::= HATCH ID HATCH",
 /* 109 */ "variable ::= HATCH variable HATCH",
 /* 110 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 111 */ "arrayindex ::= arrayindex indexdef",
 /* 112 */ "arrayindex ::=",
 /* 113 */ "indexdef ::= DOT DOLLAR varvar",
 /* 114 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 115 */ "indexdef ::= DOT ID",
 /* 116 */ "indexdef ::= DOT BOOLEAN",
 /* 117 */ "indexdef ::= DOT NULL",
 /* 118 */ "indexdef ::= DOT INTEGER",
 /* 119 */ "indexdef ::= DOT LDEL exprs RDEL",
 /* 120 */ "indexdef ::= OPENB ID CLOSEB",
 /* 121 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 122 */ "indexdef ::= OPENB exprs CLOSEB",
 /* 123 */ "indexdef ::= OPENB CLOSEB",
 /* 124 */ "varvar ::= varvarele",
 /* 125 */ "varvar ::= varvar varvarele",
 /* 126 */ "varvarele ::= ID",
 /* 127 */ "varvarele ::= LDEL expr RDEL",
 /* 128 */ "object ::= varindexed objectchain",
 /* 129 */ "objectchain ::= objectelement",
 /* 130 */ "objectchain ::= objectchain objectelement",
 /* 131 */ "objectelement ::= PTR ID arrayindex",
 /* 132 */ "objectelement ::= PTR variable arrayindex",
 /* 133 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 134 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 135 */ "objectelement ::= PTR method",
 /* 136 */ "function ::= ID OPENP params CLOSEP",
 /* 137 */ "method ::= ID OPENP params CLOSEP",
 /* 138 */ "params ::= expr COMMA params",
 /* 139 */ "params ::= expr",
 /* 140 */ "params ::=",
 /* 141 */ "modifier ::= VERT AT ID",
 /* 142 */ "modifier ::= VERT ID",
 /* 143 */ "modparameters ::= modparameters modparameter",
 /* 144 */ "modparameters ::=",
 /* 145 */ "modparameter ::= COLON exprs",
 /* 146 */ "modparameter ::= COLON ID",
 /* 147 */ "ifexprs ::= ifexpr",
 /* 148 */ "ifexprs ::= NOT ifexprs",
 /* 149 */ "ifexprs ::= OPENP ifexprs CLOSEP",
 /* 150 */ "ifexpr ::= expr",
 /* 151 */ "ifexpr ::= expr ifcond expr",
 /* 152 */ "ifexpr ::= expr ISIN array",
 /* 153 */ "ifexpr ::= expr ISIN value",
 /* 154 */ "ifexpr ::= ifexprs lop ifexprs",
 /* 155 */ "ifexpr ::= ifexprs ISDIVBY ifexprs",
 /* 156 */ "ifexpr ::= ifexprs ISNOTDIVBY ifexprs",
 /* 157 */ "ifexpr ::= ifexprs ISEVEN",
 /* 158 */ "ifexpr ::= ifexprs ISNOTEVEN",
 /* 159 */ "ifexpr ::= ifexprs ISEVENBY ifexprs",
 /* 160 */ "ifexpr ::= ifexprs ISNOTEVENBY ifexprs",
 /* 161 */ "ifexpr ::= ifexprs ISODD",
 /* 162 */ "ifexpr ::= ifexprs ISNOTODD",
 /* 163 */ "ifexpr ::= ifexprs ISODDBY ifexprs",
 /* 164 */ "ifexpr ::= ifexprs ISNOTODDBY ifexprs",
 /* 165 */ "ifexpr ::= value INSTANCEOF ID",
 /* 166 */ "ifexpr ::= value INSTANCEOF value",
 /* 167 */ "ifcond ::= EQUALS",
 /* 168 */ "ifcond ::= NOTEQUALS",
 /* 169 */ "ifcond ::= GREATERTHAN",
 /* 170 */ "ifcond ::= LESSTHAN",
 /* 171 */ "ifcond ::= GREATEREQUAL",
 /* 172 */ "ifcond ::= LESSEQUAL",
 /* 173 */ "ifcond ::= IDENTITY",
 /* 174 */ "ifcond ::= NONEIDENTITY",
 /* 175 */ "ifcond ::= MOD",
 /* 176 */ "lop ::= LAND",
 /* 177 */ "lop ::= LOR",
 /* 178 */ "lop ::= LXOR",
 /* 179 */ "array ::= OPENB arrayelements CLOSEB",
 /* 180 */ "arrayelements ::= arrayelement",
 /* 181 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 182 */ "arrayelements ::=",
 /* 183 */ "arrayelement ::= value APTR expr",
 /* 184 */ "arrayelement ::= ID APTR expr",
 /* 185 */ "arrayelement ::= expr",
 /* 186 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 187 */ "doublequoted ::= doublequotedcontent",
 /* 188 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 189 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 190 */ "doublequotedcontent ::= DOLLARID",
 /* 191 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 192 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 193 */ "doublequotedcontent ::= smartytag",
 /* 194 */ "doublequotedcontent ::= OTHER",
 /* 195 */ "optspace ::= SPACE",
 /* 196 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 0 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 13 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 9 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 11 ),
  array( 'lhs' => 79, 'rhs' => 8 ),
  array( 'lhs' => 79, 'rhs' => 11 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 8 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 6 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        5 => 0,
        15 => 0,
        16 => 0,
        53 => 0,
        54 => 0,
        55 => 0,
        76 => 0,
        83 => 0,
        88 => 0,
        90 => 0,
        91 => 0,
        92 => 0,
        94 => 0,
        107 => 0,
        180 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        14 => 11,
        12 => 12,
        13 => 13,
        84 => 13,
        86 => 13,
        87 => 13,
        17 => 17,
        18 => 17,
        19 => 19,
        20 => 20,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 25,
        26 => 25,
        27 => 27,
        28 => 27,
        29 => 27,
        30 => 30,
        31 => 30,
        32 => 30,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        41 => 39,
        40 => 40,
        42 => 42,
        43 => 43,
        44 => 44,
        60 => 44,
        139 => 44,
        185 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 51,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 63,
        65 => 63,
        66 => 63,
        68 => 63,
        67 => 67,
        69 => 69,
        70 => 70,
        71 => 71,
        72 => 72,
        73 => 73,
        80 => 73,
        124 => 73,
        147 => 73,
        187 => 73,
        194 => 73,
        195 => 73,
        74 => 74,
        75 => 75,
        77 => 77,
        78 => 77,
        79 => 77,
        81 => 81,
        82 => 81,
        85 => 85,
        89 => 89,
        93 => 93,
        95 => 95,
        96 => 96,
        97 => 97,
        98 => 98,
        99 => 99,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        186 => 111,
        112 => 112,
        144 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        116 => 115,
        117 => 115,
        118 => 118,
        119 => 119,
        122 => 119,
        120 => 120,
        121 => 121,
        123 => 123,
        196 => 123,
        125 => 125,
        126 => 126,
        127 => 127,
        149 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        140 => 140,
        141 => 141,
        142 => 141,
        143 => 143,
        145 => 145,
        146 => 146,
        148 => 148,
        150 => 150,
        151 => 151,
        154 => 151,
        165 => 151,
        152 => 152,
        153 => 153,
        155 => 155,
        156 => 156,
        157 => 157,
        162 => 157,
        158 => 158,
        161 => 158,
        159 => 159,
        164 => 159,
        160 => 160,
        163 => 160,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        188 => 188,
        189 => 189,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 193,
    );
#line 82 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 1963 "smarty_internal_templateparser.php"
#line 88 "smarty_internal_templateparser.y"
    function yy_r1(){if ($this->template->extract_code == false) {
                                                  $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
                                               } else {
                                                 // store code in extract buffer
                                                  $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                               } 
                                                 }
#line 1972 "smarty_internal_templateparser.php"
#line 96 "smarty_internal_templateparser.y"
    function yy_r2(){if ($this->template->extract_code == false) {
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                           } else {
                                                             // store code in extract buffer
                                                             $this->template->extracted_compiled_code .= $this->yystack[$this->yyidx + 0]->minor;
                                                             $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
                                                           } 
                                                              }
#line 1982 "smarty_internal_templateparser.php"
#line 109 "smarty_internal_templateparser.y"
    function yy_r3(){
                                          if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('Smarty tags are not allowed inside &lt;?php ?> tags');
                                          }
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true);
                                         } else { $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;}  $this->compiler->has_variable_string = false;    }
#line 1992 "smarty_internal_templateparser.php"
#line 119 "smarty_internal_templateparser.y"
    function yy_r4(){ $this->_retvalue = '';    }
#line 1995 "smarty_internal_templateparser.php"
#line 125 "smarty_internal_templateparser.y"
    function yy_r6(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
                                       if ($this->allowed_php) {
                                           $this->compiler->trigger_template_error ('&lt;?php ?> tags can not be nested');
                                       }
				                               $this->allowed_php = true;
                                       $this->_retvalue = $this->compiler->processNocacheCode($this->yystack[$this->yyidx + 0]->minor, true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2012 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->sec_obj->php_handling == SMARTY_PHP_PASSTHRU) {
					                             $this->_retvalue = '?<??>>';
                                      } elseif ($this->sec_obj->php_handling == SMARTY_PHP_QUOTE) {
                                       $this->_retvalue = $this->compiler->processNocacheCode(htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES), false);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_ALLOW) {
				                               $this->allowed_php = false;
                                       $this->_retvalue = $this->compiler->processNocacheCode('?>', true);
                                      }elseif ($this->sec_obj->php_handling == SMARTY_PHP_REMOVE) {
                                       $this->_retvalue = '';
                                      }
                                         }
#line 2026 "smarty_internal_templateparser.php"
#line 154 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));	
                                     } else {
                                       $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);	
                                     }
                                        }
#line 2034 "smarty_internal_templateparser.php"
#line 163 "smarty_internal_templateparser.y"
    function yy_r9(){ $this->compiler->tag_nocache = true; $this->_retvalue = $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true) . substr($this->yystack[$this->yyidx + 0]->minor,5,strlen($this->yystack[$this->yyidx + 0]->minor)-7) . $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true);    }
#line 2037 "smarty_internal_templateparser.php"
#line 166 "smarty_internal_templateparser.y"
    function yy_r10(){if ($this->lex->strip) {
                                       $this->_retvalue = preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor);	
                                     } else {
                                       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;	
                                     }
                                        }
#line 2045 "smarty_internal_templateparser.php"
#line 177 "smarty_internal_templateparser.y"
    function yy_r11(){ $this->_retvalue = '';     }
#line 2048 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2051 "smarty_internal_templateparser.php"
#line 180 "smarty_internal_templateparser.y"
    function yy_r13(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2054 "smarty_internal_templateparser.php"
#line 185 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2057 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2060 "smarty_internal_templateparser.php"
#line 195 "smarty_internal_templateparser.y"
    function yy_r20(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2063 "smarty_internal_templateparser.php"
#line 196 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2066 "smarty_internal_templateparser.php"
#line 207 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = $this->compiler->compileTag('assign',array('value'=>$this->yystack[$this->yyidx + -1]->minor,'var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'"));    }
#line 2069 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor,'var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'"),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2072 "smarty_internal_templateparser.php"
#line 212 "smarty_internal_templateparser.y"
    function yy_r30(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array('value'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor));    }
#line 2075 "smarty_internal_templateparser.php"
#line 216 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2078 "smarty_internal_templateparser.php"
#line 218 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2081 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2084 "smarty_internal_templateparser.php"
#line 222 "smarty_internal_templateparser.y"
    function yy_r37(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                     }
#line 2089 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r38(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('object_methode'=>$this->yystack[$this->yyidx + -4]->minor),$this->yystack[$this->yyidx + -1]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                                }
#line 2094 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2097 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r40(){ $this->_retvalue = $this->compiler->compileTag(($this->yystack[$this->yyidx + -3]->minor == 'else if')? 'elseif' : $this->yystack[$this->yyidx + -3]->minor,array('if condition'=>trim($this->yystack[$this->yyidx + -2]->minor).$this->yystack[$this->yyidx + -1]->minor));    }
#line 2100 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r42(){
                                                             $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -11]->minor,array('start'=>$this->yystack[$this->yyidx + -9]->minor,'ifexp'=>$this->yystack[$this->yyidx + -6]->minor,'varloop'=>$this->yystack[$this->yyidx + -2]->minor,'loop'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2104 "smarty_internal_templateparser.php"
#line 236 "smarty_internal_templateparser.y"
    function yy_r43(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2107 "smarty_internal_templateparser.php"
#line 237 "smarty_internal_templateparser.y"
    function yy_r44(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2110 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r45(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array_merge(array('start'=>$this->yystack[$this->yyidx + -4]->minor,'to'=>$this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2113 "smarty_internal_templateparser.php"
#line 239 "smarty_internal_templateparser.y"
    function yy_r46(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -7]->minor,array('start'=>$this->yystack[$this->yyidx + -5]->minor,'to'=>$this->yystack[$this->yyidx + -3]->minor,'step'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2116 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r47(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2120 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r48(){
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2124 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r49(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -6]->minor,array('from'=>$this->yystack[$this->yyidx + -4]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2128 "smarty_internal_templateparser.php"
#line 247 "smarty_internal_templateparser.y"
    function yy_r50(){ 
                                                            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -9]->minor,array('from'=>$this->yystack[$this->yyidx + -7]->minor,'item'=>$this->yystack[$this->yyidx + -1]->minor,'key'=>$this->yystack[$this->yyidx + -4]->minor));    }
#line 2132 "smarty_internal_templateparser.php"
#line 251 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2135 "smarty_internal_templateparser.php"
#line 256 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2138 "smarty_internal_templateparser.php"
#line 257 "smarty_internal_templateparser.y"
    function yy_r57(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                         $this->_retvalue .= $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -3]->minor,'params'=>'ob_get_clean()'.$this->yystack[$this->yyidx + -2]->minor)).'?>';
                                                                                          }
#line 2143 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r58(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2146 "smarty_internal_templateparser.php"
#line 268 "smarty_internal_templateparser.y"
    function yy_r59(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2149 "smarty_internal_templateparser.php"
#line 272 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = array();    }
#line 2152 "smarty_internal_templateparser.php"
#line 275 "smarty_internal_templateparser.y"
    function yy_r62(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2155 "smarty_internal_templateparser.php"
#line 276 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2158 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor=>'true');    }
#line 2161 "smarty_internal_templateparser.php"
#line 287 "smarty_internal_templateparser.y"
    function yy_r69(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2164 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r70(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2167 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r71(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2170 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r72(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';     }
#line 2173 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r73(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2176 "smarty_internal_templateparser.php"
#line 299 "smarty_internal_templateparser.y"
    function yy_r74(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2179 "smarty_internal_templateparser.php"
#line 300 "smarty_internal_templateparser.y"
    function yy_r75(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array('modifier'=>$this->yystack[$this->yyidx + -1]->minor,'params'=>$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor));     }
#line 2182 "smarty_internal_templateparser.php"
#line 305 "smarty_internal_templateparser.y"
    function yy_r77(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2185 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r81(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2188 "smarty_internal_templateparser.php"
#line 327 "smarty_internal_templateparser.y"
    function yy_r85(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2191 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r89(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2194 "smarty_internal_templateparser.php"
#line 342 "smarty_internal_templateparser.y"
    function yy_r93(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2197 "smarty_internal_templateparser.php"
#line 346 "smarty_internal_templateparser.y"
    function yy_r95(){ $_s = str_replace(array('."".','.""'),array('.',''),'"'.$this->yystack[$this->yyidx + -1]->minor.'"'); 
                                                    if (substr($_s,0,3) == '"".') {
                                                      $this->_retvalue = substr($_s,3);
                                                    } else {
                                                      $this->_retvalue = $_s;
                                                    }
                                                      }
#line 2206 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r96(){ $this->_retvalue = "''";     }
#line 2209 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r97(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2212 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r98(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -3]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -1]->minor .')';     }
#line 2215 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r99(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.'::'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2218 "smarty_internal_templateparser.php"
#line 359 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'=$_smarty_tpl->getVariable(\''. $this->yystack[$this->yyidx + -4]->minor .'\')->value;?>'; $this->_retvalue = $this->yystack[$this->yyidx + -7]->minor.'::$_tmp'.$this->prefix_number.'('. $this->yystack[$this->yyidx + -2]->minor .')'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2221 "smarty_internal_templateparser.php"
#line 361 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2224 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -4]->minor.'::$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2227 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.'::$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2230 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2233 "smarty_internal_templateparser.php"
#line 376 "smarty_internal_templateparser.y"
    function yy_r105(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor['var'] .')->value'.$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2237 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2240 "smarty_internal_templateparser.php"
#line 383 "smarty_internal_templateparser.y"
    function yy_r108(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2243 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r109(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2246 "smarty_internal_templateparser.php"
#line 387 "smarty_internal_templateparser.y"
    function yy_r110(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2249 "smarty_internal_templateparser.php"
#line 393 "smarty_internal_templateparser.y"
    function yy_r111(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2252 "smarty_internal_templateparser.php"
#line 395 "smarty_internal_templateparser.y"
    function yy_r112(){return;    }
#line 2255 "smarty_internal_templateparser.php"
#line 399 "smarty_internal_templateparser.y"
    function yy_r113(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + 0]->minor .')->value]'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable('$this->yystack[$this->yyidx + 0]->minor', null, true, false)->nocache;    }
#line 2258 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = '[$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -2]->minor .')->'.$this->yystack[$this->yyidx + 0]->minor.']'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -2]->minor,"'"), null, true, false)->nocache;    }
#line 2261 "smarty_internal_templateparser.php"
#line 403 "smarty_internal_templateparser.y"
    function yy_r115(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2264 "smarty_internal_templateparser.php"
#line 407 "smarty_internal_templateparser.y"
    function yy_r118(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2267 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2270 "smarty_internal_templateparser.php"
#line 410 "smarty_internal_templateparser.y"
    function yy_r120(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2273 "smarty_internal_templateparser.php"
#line 411 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable','[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2276 "smarty_internal_templateparser.php"
#line 415 "smarty_internal_templateparser.y"
    function yy_r123(){$this->_retvalue = '';    }
#line 2279 "smarty_internal_templateparser.php"
#line 423 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2282 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2285 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2288 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r128(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = '$_smarty_tpl->getVariable('. $this->yystack[$this->yyidx + -1]->minor['var'] .')->value'.$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + -1]->minor['var'],"'"), null, true, false)->nocache;}    }
#line 2292 "smarty_internal_templateparser.php"
#line 436 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2295 "smarty_internal_templateparser.php"
#line 438 "smarty_internal_templateparser.y"
    function yy_r130(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2298 "smarty_internal_templateparser.php"
#line 440 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2301 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2304 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2307 "smarty_internal_templateparser.php"
#line 443 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';    }
#line 2310 "smarty_internal_templateparser.php"
#line 445 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2313 "smarty_internal_templateparser.php"
#line 451 "smarty_internal_templateparser.y"
    function yy_r136(){if (!$this->template->security || $this->smarty->security_handler->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if ($this->yystack[$this->yyidx + -3]->minor == 'isset' || $this->yystack[$this->yyidx + -3]->minor == 'empty' || $this->yystack[$this->yyidx + -3]->minor == 'array' || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                    }    }
#line 2322 "smarty_internal_templateparser.php"
#line 462 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $this->yystack[$this->yyidx + -1]->minor .")";    }
#line 2325 "smarty_internal_templateparser.php"
#line 466 "smarty_internal_templateparser.y"
    function yy_r138(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.",".$this->yystack[$this->yyidx + 0]->minor;    }
#line 2328 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r140(){ return;    }
#line 2331 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r141(){ $this->_retvalue =  $this->yystack[$this->yyidx + 0]->minor;    }
#line 2334 "smarty_internal_templateparser.php"
#line 488 "smarty_internal_templateparser.y"
    function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2337 "smarty_internal_templateparser.php"
#line 492 "smarty_internal_templateparser.y"
    function yy_r145(){$this->_retvalue = ','.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2340 "smarty_internal_templateparser.php"
#line 493 "smarty_internal_templateparser.y"
    function yy_r146(){$this->_retvalue = ',\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2343 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r148(){$this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2346 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r150(){$this->_retvalue =$this->yystack[$this->yyidx + 0]->minor;    }
#line 2349 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r151(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2352 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r152(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2355 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r153(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2358 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r155(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2361 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2364 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2367 "smarty_internal_templateparser.php"
#line 513 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2370 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2373 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r160(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2376 "smarty_internal_templateparser.php"
#line 521 "smarty_internal_templateparser.y"
    function yy_r166(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2379 "smarty_internal_templateparser.php"
#line 523 "smarty_internal_templateparser.y"
    function yy_r167(){$this->_retvalue = '==';    }
#line 2382 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r168(){$this->_retvalue = '!=';    }
#line 2385 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '>';    }
#line 2388 "smarty_internal_templateparser.php"
#line 526 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '<';    }
#line 2391 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '>=';    }
#line 2394 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '<=';    }
#line 2397 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '===';    }
#line 2400 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '!==';    }
#line 2403 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '%';    }
#line 2406 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '&&';    }
#line 2409 "smarty_internal_templateparser.php"
#line 534 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '||';    }
#line 2412 "smarty_internal_templateparser.php"
#line 535 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = ' XOR ';    }
#line 2415 "smarty_internal_templateparser.php"
#line 540 "smarty_internal_templateparser.y"
    function yy_r179(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2418 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2421 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r182(){ return;     }
#line 2424 "smarty_internal_templateparser.php"
#line 544 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2427 "smarty_internal_templateparser.php"
#line 545 "smarty_internal_templateparser.y"
    function yy_r184(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2430 "smarty_internal_templateparser.php"
#line 554 "smarty_internal_templateparser.y"
    function yy_r188(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'' || substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '@') {
                                                                 		     $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                	      } else {
                                                                         $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                        }
                                                                       $this->compiler->has_variable_string = true;
                                                                           }
#line 2439 "smarty_internal_templateparser.php"
#line 561 "smarty_internal_templateparser.y"
    function yy_r189(){$this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; $this->compiler->has_variable_string = true;    }
#line 2442 "smarty_internal_templateparser.php"
#line 562 "smarty_internal_templateparser.y"
    function yy_r190(){$this->_retvalue = '{$_smarty_tpl->getVariable(\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value}'; $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable(trim($this->yystack[$this->yyidx + 0]->minor,"'"), null, true, false)->nocache; $this->compiler->has_variable_string = true;    }
#line 2445 "smarty_internal_templateparser.php"
#line 563 "smarty_internal_templateparser.y"
    function yy_r191(){if (substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '\'') {
                                                                 $this->_retvalue = '".'.$this->yystack[$this->yyidx + -1]->minor.'."';
                                                                } else {
                                                                 $this->_retvalue = '{'.$this->yystack[$this->yyidx + -1]->minor.'}'; 
                                                                }
                                                                $this->compiler->has_variable_string = true;
                                                                   }
#line 2454 "smarty_internal_templateparser.php"
#line 570 "smarty_internal_templateparser.y"
    function yy_r192(){ $this->_retvalue = '".('.$this->yystack[$this->yyidx + -1]->minor.')."'; $this->compiler->has_variable_string = true;    }
#line 2457 "smarty_internal_templateparser.php"
#line 571 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '{$_tmp'.$this->prefix_number.'}'; $this->compiler->has_variable_string = true;    }
#line 2460 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 72 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2523 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 64 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2541 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>