<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;
    private $last_taglineno = 0;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->prefix_number = 0;
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text) {
        return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') === false) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'"');
			 		$this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache;
			 		$this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 } else {
			    $var = '{'.$variable.'}';
			 }
			 return '$_smarty_tpl->tpl_vars->'. $var .'->value';
    }
#line 133 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_LDELFOR                        = 22;
    const TP_SEMICOLON                      = 23;
    const TP_INCDEC                         = 24;
    const TP_TO                             = 25;
    const TP_STEP                           = 26;
    const TP_LDELFOREACH                    = 27;
    const TP_SPACE                          = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_LDELSETFILTER                  = 31;
    const TP_SMARTYBLOCKCHILD               = 32;
    const TP_LDELSLASH                      = 33;
    const TP_INTEGER                        = 34;
    const TP_COMMA                          = 35;
    const TP_OPENP                          = 36;
    const TP_CLOSEP                         = 37;
    const TP_MATH                           = 38;
    const TP_UNIMATH                        = 39;
    const TP_ANDSYM                         = 40;
    const TP_ISIN                           = 41;
    const TP_ISDIVBY                        = 42;
    const TP_ISNOTDIVBY                     = 43;
    const TP_ISEVEN                         = 44;
    const TP_ISNOTEVEN                      = 45;
    const TP_ISEVENBY                       = 46;
    const TP_ISNOTEVENBY                    = 47;
    const TP_ISODD                          = 48;
    const TP_ISNOTODD                       = 49;
    const TP_ISODDBY                        = 50;
    const TP_ISNOTODDBY                     = 51;
    const TP_INSTANCEOF                     = 52;
    const TP_NAMESPACECLASS                 = 53;
    const TP_QMARK                          = 54;
    const TP_NOT                            = 55;
    const TP_TYPECAST                       = 56;
    const TP_HEX                            = 57;
    const TP_DOT                            = 58;
    const TP_SINGLEQUOTESTRING              = 59;
    const TP_DOUBLECOLON                    = 60;
    const TP_AT                             = 61;
    const TP_HATCH                          = 62;
    const TP_OPENB                          = 63;
    const TP_CLOSEB                         = 64;
    const TP_EQUALS                         = 65;
    const TP_NOTEQUALS                      = 66;
    const TP_GREATERTHAN                    = 67;
    const TP_LESSTHAN                       = 68;
    const TP_GREATEREQUAL                   = 69;
    const TP_LESSEQUAL                      = 70;
    const TP_IDENTITY                       = 71;
    const TP_NONEIDENTITY                   = 72;
    const TP_MOD                            = 73;
    const TP_LAND                           = 74;
    const TP_LOR                            = 75;
    const TP_LXOR                           = 76;
    const TP_QUOTE                          = 77;
    const TP_BACKTICK                       = 78;
    const TP_DOLLARID                       = 79;
    const YY_NO_ACTION = 596;
    const YY_ACCEPT_ACTION = 595;
    const YY_ERROR_ACTION = 594;

    const YY_SZ_ACTTAB = 2443;
static public $yy_action = array(
 /*     0 */   212,  321,  323,  318,  317,  313,  312,  314,  315,  316,
 /*    10 */   200,  390,  344,   10,  366,  341,   30,  133,  236,    3,
 /*    20 */   108,  149,    3,  108,   11,  150,  357,   11,  150,  245,
 /*    30 */   288,  244,  245,  288,  244,   38,  137,   52,   47,   48,
 /*    40 */    44,   43,   37,  368,  369,   35,   36,  370,  377,   26,
 /*    50 */    25,  336,  331,  327,  326,  332,  242,  241,  214,  200,
 /*    60 */   325,  335,  109,  283,  378,  386,  387,  388,  389,  385,
 /*    70 */   384,  380,  379,  381,  382,  284,  212,  346,  358,   13,
 /*    80 */   356,  116,    2,  110,   83,  124,  595,   95,  259,  319,
 /*    90 */   322,  340,   19,  301,  383,  290,  360,  231,  376,  367,
 /*   100 */   186,  348,  357,   11,  252,   11,  135,  234,   11,  293,
 /*   110 */   265,  216,  258,   52,   47,   48,   44,   43,   37,  368,
 /*   120 */   369,   35,   36,  370,  377,   26,   25,  212,  101,  166,
 /*   130 */    29,  212,  143,  185,   12,    2,  123,  374,  293,  354,
 /*   140 */   378,  386,  387,  388,  389,  385,  384,  380,  379,  381,
 /*   150 */   382,  284,   39,  375,   11,  203,  199,   27,   19,  135,
 /*   160 */    34,  290,   16,    2,   52,   47,   48,   44,   43,   37,
 /*   170 */   368,  369,   35,   36,  370,  377,   26,   25,  106,  181,
 /*   180 */   306,   19,   50,  203,  290,   16,   19,  135,  293,  290,
 /*   190 */   205,  378,  386,  387,  388,  389,  385,  384,  380,  379,
 /*   200 */   381,  382,  284,  212,  346,  203,  107,  161,  142,  209,
 /*   210 */   168,   53,  118,  125,    8,   15,  293,  455,  311,  458,
 /*   220 */   301,  383,   21,  238,  231,  376,  367,  235,  348,  455,
 /*   230 */    11,  458,  247,  203,  212,   19,    6,    2,  290,    2,
 /*   240 */    52,   47,   48,   44,   43,   37,  368,  369,   35,   36,
 /*   250 */   370,  377,   26,   25,  212,   19,  195,  364,  290,   18,
 /*   260 */   212,  135,  170,  135,  278,   14,  160,  378,  386,  387,
 /*   270 */   388,  389,  385,  384,  380,  379,  381,  382,  284,  189,
 /*   280 */   324,  235,  320,  319,  322,   50,    4,   11,  293,  203,
 /*   290 */   287,   52,   47,   48,   44,   43,   37,  368,  369,   35,
 /*   300 */    36,  370,  377,   26,   25,  205,  138,  337,  173,  198,
 /*   310 */   364,  253,  248,  129,  232,  262,  212,  293,  378,  386,
 /*   320 */   387,  388,  389,  385,  384,  380,  379,  381,  382,  284,
 /*   330 */   212,  353,  193,  346,  205,   19,  347,  142,  290,  346,
 /*   340 */    77,  124,  172,  158,   23,  160,  160,  124,   11,  301,
 /*   350 */   383,  293,  190,  231,  376,  367,  272,  348,  105,  231,
 /*   360 */   376,  367,  197,  348,  218,  309,  212,   52,   47,   48,
 /*   370 */    44,   43,   37,  368,  369,   35,   36,  370,  377,   26,
 /*   380 */    25,  328,  171,  162,  209,  138,  192,  364,   42,    8,
 /*   390 */   271,  293,  293,   11,  378,  386,  387,  388,  389,  385,
 /*   400 */   384,  380,  379,  381,  382,  284,  212,  346,  205,  187,
 /*   410 */    19,  142,  346,  290,   77,  124,  154,   50,  293,  355,
 /*   420 */   124,  202,   19,  301,  383,  290,  212,  231,  376,  367,
 /*   430 */   291,  348,  231,  376,  367,   11,  348,  246,  219,  183,
 /*   440 */   188,  285,  291,   52,   47,   48,   44,   43,   37,  368,
 /*   450 */   369,   35,   36,  370,  377,   26,   25,  212,  164,   42,
 /*   460 */   363,  276,   42,   19,  275,  169,  233,  293,  309,  160,
 /*   470 */   378,  386,  387,  388,  389,  385,  384,  380,  379,  381,
 /*   480 */   382,  284,   19,   19,  205,  223,  249,  334,  175,  333,
 /*   490 */   291,  100,  203,  282,   52,   47,   48,   44,   43,   37,
 /*   500 */   368,  369,   35,   36,  370,  377,   26,   25,  212,  138,
 /*   510 */   174,  242,  269,   19,    6,  201,  226,  134,  121,  112,
 /*   520 */   212,  378,  386,  387,  388,  389,  385,  384,  380,  379,
 /*   530 */   381,  382,  284,  373,  373,  307,  299,  203,  242,  240,
 /*   540 */   117,  136,    9,  149,   23,   52,   47,   48,   44,   43,
 /*   550 */    37,  368,  369,   35,   36,  370,  377,   26,   25,  212,
 /*   560 */   365,  338,   31,  128,  196,  251,   32,  149,  280,   98,
 /*   570 */   159,  257,  378,  386,  387,  388,  389,  385,  384,  380,
 /*   580 */   379,  381,  382,  284,  373,  373,   11,  267,  145,  304,
 /*   590 */   229,  131,    5,  300,   94,  349,   52,   47,   48,   44,
 /*   600 */    43,   37,  368,  369,   35,   36,  370,  377,   26,   25,
 /*   610 */   194,  139,  309,  298,  302,  303,  236,  330,  132,  160,
 /*   620 */   337,   45,  141,  378,  386,  387,  388,  389,  385,  384,
 /*   630 */   380,  379,  381,  382,  284,  212,  346,  350,  176,   11,
 /*   640 */   142,  346,  266,   77,  124,  155,   17,  293,  291,  124,
 /*   650 */   277,  212,  301,  383,  212,   45,  231,  376,  367,  291,
 /*   660 */   348,  231,  376,  367,  239,  348,  289,  220,   20,  286,
 /*   670 */   237,  104,   52,   47,   48,   44,   43,   37,  368,  369,
 /*   680 */    35,   36,  370,  377,   26,   25,  212,   41,  279,  178,
 /*   690 */   327,  327,  327,  327,  287,  327,  327,  152,  103,  378,
 /*   700 */   386,  387,  388,  389,  385,  384,  380,  379,  381,  382,
 /*   710 */   284,  291,  327,  373,  327,  327,  327,  327,  327,  327,
 /*   720 */   327,  327,  140,   52,   47,   48,   44,   43,   37,  368,
 /*   730 */   369,   35,   36,  370,  377,   26,   25,  373,  327,  327,
 /*   740 */   327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
 /*   750 */   378,  386,  387,  388,  389,  385,  384,  380,  379,  381,
 /*   760 */   382,  284,  212,  346,  327,  165,  153,  142,  327,  261,
 /*   770 */    70,  118,  240,  212,  293,  212,  212,  273,  224,  301,
 /*   780 */   383,   11,  348,  231,  376,  367,  291,  348,  339,  327,
 /*   790 */   308,  297,  327,  327,  327,  327,  327,  327,  327,   52,
 /*   800 */    47,   48,   44,   43,   37,  368,  369,   35,   36,  370,
 /*   810 */   377,   26,   25,  212,  327,  327,  327,  327,  327,  327,
 /*   820 */   327,  327,  327,  115,   50,   99,  378,  386,  387,  388,
 /*   830 */   389,  385,  384,  380,  379,  381,  382,  284,  373,  327,
 /*   840 */   373,  327,  327,  327,  327,  327,  327,  327,  327,  250,
 /*   850 */    52,   47,   48,   44,   43,   37,  368,  369,   35,   36,
 /*   860 */   370,  377,   26,   25,  327,  327,  327,  327,  327,  327,
 /*   870 */   327,  327,  327,  327,  327,  327,  120,  378,  386,  387,
 /*   880 */   388,  389,  385,  384,  380,  379,  381,  382,  284,  212,
 /*   890 */   346,  373,  167,  327,  116,  346,  361,   83,  124,  151,
 /*   900 */   327,  293,   22,  124,  204,   97,  301,  383,   11,  260,
 /*   910 */   231,  376,  367,  291,  348,  231,  376,  367,  327,  348,
 /*   920 */   373,   11,  327,  327,  327,  256,   52,   47,   48,   44,
 /*   930 */    43,   37,  368,  369,   35,   36,  370,  377,   26,   25,
 /*   940 */   212,  229,  327,  327,  327,  327,  327,  327,  327,  327,
 /*   950 */   327,  327,  327,  378,  386,  387,  388,  389,  385,  384,
 /*   960 */   380,  379,  381,  382,  284,  327,  327,  327,  227,  327,
 /*   970 */   327,  327,  327,  327,  327,  327,  327,   52,   47,   48,
 /*   980 */    44,   43,   37,  368,  369,   35,   36,  370,  377,   26,
 /*   990 */    25,  212,  327,  327,  327,  327,  327,  327,  327,  327,
 /*  1000 */   327,  327,  327,  327,  378,  386,  387,  388,  389,  385,
 /*  1010 */   384,  380,  379,  381,  382,  284,  327,  327,  327,  327,
 /*  1020 */   327,  327,  327,  327,  327,  327,  327,  327,   52,   47,
 /*  1030 */    48,   44,   43,   37,  368,  369,   35,   36,  370,  377,
 /*  1040 */    26,   25,  327,  327,  327,  327,  327,  327,  327,  327,
 /*  1050 */   327,  327,  327,  327,  327,  378,  386,  387,  388,  389,
 /*  1060 */   385,  384,  380,  379,  381,  382,  284,   52,   47,   48,
 /*  1070 */    44,   43,   37,  368,  369,   35,   36,  370,  377,   26,
 /*  1080 */    25,  296,  327,  327,  327,  327,  327,  327,  327,  327,
 /*  1090 */   327,  327,  327,   11,  378,  386,  387,  388,  389,  385,
 /*  1100 */   384,  380,  379,  381,  382,  284,  212,  327,  327,  327,
 /*  1110 */    10,  327,  144,  208,  327,  346,    3,  108,  329,  146,
 /*  1120 */   327,  454,  150,  124,  327,  327,  245,  288,  244,  230,
 /*  1130 */    11,   33,  372,   11,   51,  231,  376,  367,  327,  348,
 /*  1140 */   327,  346,  327,  264,  270,  156,  327,  327,  255,  124,
 /*  1150 */    49,   46,  305,  228,  371,   11,   11,  105,    1,  281,
 /*  1160 */   327,  231,  376,  367,   10,  348,  144,  222,  327,  327,
 /*  1170 */     3,  108,   96,  327,  212,  351,  150,  327,  310,  327,
 /*  1180 */   245,  288,  244,  230,  263,   33,  327,   11,   51,  352,
 /*  1190 */    11,  327,  327,  225,  327,  346,   11,  327,  342,  148,
 /*  1200 */   327,   11,  255,  124,   49,   46,  305,  228,  371,    2,
 /*  1210 */    11,  105,    1,  212,  327,  231,  376,  367,   10,  348,
 /*  1220 */   144,  206,  327,  327,    3,  108,   96,  327,  460,  327,
 /*  1230 */   150,  327,  274,  135,  245,  288,  244,  230,  292,   33,
 /*  1240 */   460,  243,   51,  327,   11,  362,  327,  346,  327,  327,
 /*  1250 */    11,  147,  327,  327,  327,  124,  255,   11,   49,   46,
 /*  1260 */   305,  228,  371,  327,   50,  105,    1,  231,  376,  367,
 /*  1270 */   327,  348,   10,  191,  126,   92,  327,  327,    3,  108,
 /*  1280 */    96,  327,  345,  294,  150,  295,   28,   40,  245,  288,
 /*  1290 */   244,  230,  268,   33,   11,   11,   51,   11,  327,  343,
 /*  1300 */   203,  346,  327,  212,   11,  157,  327,  327,  327,  124,
 /*  1310 */   255,   11,   49,   46,  305,  228,  371,  327,  460,  105,
 /*  1320 */     1,  231,  376,  367,  327,  348,   10,  327,  130,  222,
 /*  1330 */   460,  327,    3,  108,   96,  327,  327,  327,  150,  327,
 /*  1340 */   327,  327,  245,  288,  244,  230,  327,   33,  191,  180,
 /*  1350 */    51,  327,  327,  327,   50,  327,  327,  327,  293,  327,
 /*  1360 */   327,   28,   40,  212,  255,  327,   49,   46,  305,  228,
 /*  1370 */   371,  327,  327,  105,    1,  203,  327,  327,  457,  327,
 /*  1380 */    10,  327,  129,  222,  327,  327,    3,  108,   96,  327,
 /*  1390 */   457,  327,  150,  327,  327,  327,  245,  288,  244,  230,
 /*  1400 */   327,   24,  191,  179,   51,  327,  327,  327,  327,  327,
 /*  1410 */   327,  327,  293,  327,   50,   28,   40,  327,  255,  327,
 /*  1420 */    49,   46,  305,  228,  371,  327,  327,  105,    1,  203,
 /*  1430 */   327,  327,  327,  327,   10,  327,  127,  222,  327,  327,
 /*  1440 */     3,  108,   96,  327,  327,  327,  150,  327,  327,  327,
 /*  1450 */   245,  288,  244,  230,  327,    7,  191,  182,   51,  327,
 /*  1460 */   327,  327,  327,  327,  327,  327,  293,  327,  327,   28,
 /*  1470 */    40,  327,  255,  327,   49,   46,  305,  228,  371,  327,
 /*  1480 */   327,  105,    1,  203,  327,  327,  327,  327,   10,  327,
 /*  1490 */   144,  207,  327,  327,    3,  108,   96,  327,  327,  327,
 /*  1500 */   150,  327,  327,  327,  245,  288,  244,  217,  327,   33,
 /*  1510 */   191,  177,   51,  327,  327,  327,  327,  327,  327,  327,
 /*  1520 */   293,  327,  327,   28,   40,  327,  255,  327,   49,   46,
 /*  1530 */   305,  228,  371,  327,  327,  105,    1,  203,  327,  327,
 /*  1540 */   327,  327,   10,  327,  144,  211,  327,  327,    3,  108,
 /*  1550 */    96,  327,  327,  327,  150,  327,  327,  327,  245,  288,
 /*  1560 */   244,  230,  327,   33,  102,  163,   51,  327,  327,  327,
 /*  1570 */   327,  327,  327,  327,  293,  327,  327,   28,   40,  327,
 /*  1580 */   255,  327,   49,   46,  305,  228,  371,  327,  327,  105,
 /*  1590 */     1,  203,  327,  327,  327,  327,   10,  327,  144,  210,
 /*  1600 */   327,  327,    3,  108,   96,  327,  327,  327,  150,  327,
 /*  1610 */   327,  327,  245,  288,  244,  230,  327,   33,  191,  184,
 /*  1620 */    51,  327,  327,  327,  327,  327,  327,  327,  293,  327,
 /*  1630 */   327,   28,   40,  327,  255,  327,   49,   46,  305,  228,
 /*  1640 */   371,  327,  327,  105,    1,  203,  327,  327,  327,  327,
 /*  1650 */    10,  327,  129,  222,  327,  327,    3,  108,   96,  327,
 /*  1660 */   327,  327,  150,  327,  327,  327,  245,  288,  244,  230,
 /*  1670 */   327,   24,  327,  327,   51,  327,  327,  327,  327,  327,
 /*  1680 */   327,  327,  327,  327,  327,  327,  327,  327,  255,  327,
 /*  1690 */    49,   46,  305,  228,  371,  327,  327,  105,  327,  327,
 /*  1700 */   327,  327,  327,  327,   10,  327,  129,  221,  327,  327,
 /*  1710 */     3,  108,   96,  327,  327,  327,  150,  327,  327,  327,
 /*  1720 */   245,  288,  244,  230,  327,   24,  327,  327,   51,  327,
 /*  1730 */   327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
 /*  1740 */   327,  327,  254,  327,   49,   46,  305,  228,  371,  327,
 /*  1750 */   327,  105,  327,  327,  327,  327,  327,  327,  327,  327,
 /*  1760 */   327,  504,  327,  327,  327,  327,   96,  327,  504,  327,
 /*  1770 */   504,  504,  390,  504,  504,  327,  327,   30,  327,  327,
 /*  1780 */   504,    2,  504,    3,  108,  327,  327,  327,  327,  150,
 /*  1790 */   327,  327,  327,  245,  288,  244,  346,  504,  327,  327,
 /*  1800 */   142,  327,  327,   57,  124,  135,  327,  327,  327,  504,
 /*  1810 */   327,  327,  301,  383,  327,  327,  231,  376,  367,  327,
 /*  1820 */   348,  327,  327,  504,  327,  327,  327,  346,  327,  327,
 /*  1830 */   327,  142,  327,  327,   70,  124,  327,  327,  327,  359,
 /*  1840 */    13,  356,  327,  301,  383,  327,  327,  231,  376,  367,
 /*  1850 */   327,  348,  327,  346,  327,  327,  327,  142,  327,  327,
 /*  1860 */    63,  124,  327,  327,  327,  327,  327,  327,  327,  301,
 /*  1870 */   383,  327,  327,  215,  376,  367,  327,  348,  346,  327,
 /*  1880 */   327,  327,  142,  327,  327,   66,  124,  327,  327,  346,
 /*  1890 */   327,  327,  327,  142,  301,  383,   68,  124,  231,  376,
 /*  1900 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  1910 */   376,  367,  142,  348,  327,   85,  124,  327,  327,  346,
 /*  1920 */   327,  327,  327,  142,  301,  383,   65,  124,  231,  376,
 /*  1930 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  1940 */   376,  367,   93,  348,  327,   54,  122,  327,  327,  327,
 /*  1950 */   327,  327,  327,  327,  301,  383,  327,  327,  213,  376,
 /*  1960 */   367,  327,  348,  346,  327,  327,  327,  142,  327,  327,
 /*  1970 */    56,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  1980 */   383,   91,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  1990 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2000 */    73,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  2010 */   383,   67,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  2020 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2030 */    71,  124,  327,  327,  327,  327,  327,  327,  327,  301,
 /*  2040 */   383,  327,  327,  231,  376,  367,  327,  348,  346,  327,
 /*  2050 */   327,  327,   93,  327,  327,   59,  122,  327,  327,  346,
 /*  2060 */   327,  327,  327,  113,  301,  383,   88,  124,  231,  376,
 /*  2070 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  2080 */   376,  367,  142,  348,  327,   60,  124,  327,  327,  346,
 /*  2090 */   327,  327,  327,  142,  301,  383,   84,  124,  231,  376,
 /*  2100 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  2110 */   376,  367,  142,  348,  327,   64,  124,  327,  327,  327,
 /*  2120 */   327,  327,  327,  327,  301,  383,  327,  327,  231,  376,
 /*  2130 */   367,  327,  348,  346,  327,  327,  327,  142,  327,  327,
 /*  2140 */    79,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  2150 */   383,   89,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  2160 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2170 */    72,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  2180 */   383,   87,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  2190 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2200 */    90,  124,  327,  327,  327,  327,  327,  327,  327,  301,
 /*  2210 */   383,  327,  327,  231,  376,  367,  327,  348,  346,  327,
 /*  2220 */   327,  327,  114,  327,  327,   76,  124,  327,  327,  346,
 /*  2230 */   327,  327,  327,  142,  301,  383,   80,  124,  231,  376,
 /*  2240 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  2250 */   376,  367,  142,  348,  327,   82,  124,  327,  327,  346,
 /*  2260 */   327,  327,  327,  142,  301,  383,   78,  124,  231,  376,
 /*  2270 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  2280 */   376,  367,  142,  348,  327,   58,  124,  327,  327,  327,
 /*  2290 */   327,  327,  327,  327,  301,  383,  327,  327,  231,  376,
 /*  2300 */   367,  327,  348,  346,  327,  327,  327,  111,  327,  327,
 /*  2310 */    69,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  2320 */   383,   81,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  2330 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2340 */    74,  124,  327,  327,  346,  327,  327,  327,  142,  301,
 /*  2350 */   383,   75,  124,  231,  376,  367,  327,  348,  327,  327,
 /*  2360 */   301,  383,  327,  346,  231,  376,  367,  142,  348,  327,
 /*  2370 */    86,  124,  327,  327,  327,  327,  327,  327,  327,  301,
 /*  2380 */   383,  327,  327,  231,  376,  367,  327,  348,  346,  327,
 /*  2390 */   327,  327,  142,  327,  327,   61,  124,  327,  327,  346,
 /*  2400 */   327,  327,  327,  142,  301,  383,   62,  124,  231,  376,
 /*  2410 */   367,  327,  348,  327,  327,  301,  383,  327,  346,  231,
 /*  2420 */   376,  367,  119,  348,  327,   55,  124,  327,  327,  327,
 /*  2430 */   327,  327,  327,  327,  301,  383,  327,  327,  231,  376,
 /*  2440 */   367,  327,  348,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    3,    4,    5,    6,    7,    8,    9,   10,   11,
 /*    10 */    12,   10,   16,   15,  107,   16,   15,   17,    2,   21,
 /*    20 */    22,  114,   21,   22,   28,   27,   84,   28,   27,   31,
 /*    30 */    32,   33,   31,   32,   33,   19,   36,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,    4,    5,    6,    7,    8,   92,   93,   94,   12,
 /*    60 */    13,   14,  120,  121,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,    1,   84,   77,   78,
 /*    80 */    79,   88,   36,   86,   91,   92,   81,   82,   83,   84,
 /*    90 */    85,   16,   15,  100,  101,   18,   16,  104,  105,  106,
 /*   100 */    90,  108,   84,   28,   58,   28,   60,   30,   28,   99,
 /*   110 */    64,  118,  119,   38,   39,   40,   41,   42,   43,   44,
 /*   120 */    45,   46,   47,   48,   49,   50,   51,    1,   89,   90,
 /*   130 */    15,    1,   17,   18,   15,   36,   17,   18,   99,  121,
 /*   140 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   150 */    75,   76,   26,   34,   28,  116,   89,   30,   15,   60,
 /*   160 */    30,   18,   19,   36,   38,   39,   40,   41,   42,   43,
 /*   170 */    44,   45,   46,   47,   48,   49,   50,   51,   89,   90,
 /*   180 */    18,   15,   52,  116,   18,   19,   15,   60,   99,   18,
 /*   190 */   116,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   200 */    74,   75,   76,    1,   84,  116,   89,   90,   88,   58,
 /*   210 */   109,   91,   92,   93,   63,   15,   99,   16,   16,   16,
 /*   220 */   100,  101,   19,   61,  104,  105,  106,   61,  108,   28,
 /*   230 */    28,   28,   61,  116,    1,   15,   36,   36,   18,   36,
 /*   240 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   250 */    48,   49,   50,   51,    1,   15,  112,  113,   18,   19,
 /*   260 */     1,   60,   89,   60,   24,   19,   20,   65,   66,   67,
 /*   270 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   90,
 /*   280 */    13,   61,   83,   84,   85,   52,   35,   28,   99,  116,
 /*   290 */   117,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   300 */    47,   48,   49,   50,   51,  116,   60,  110,   90,  112,
 /*   310 */   113,   17,   18,   17,   18,   64,    1,   99,   65,   66,
 /*   320 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   330 */     1,   78,   98,   84,  116,   15,  113,   88,   18,   84,
 /*   340 */    91,   92,   90,   88,   19,   20,   20,   92,   28,  100,
 /*   350 */   101,   99,   23,  104,  105,  106,  101,  108,   62,  104,
 /*   360 */   105,  106,   98,  108,  115,   24,    1,   38,   39,   40,
 /*   370 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   380 */    51,   16,   90,   90,   58,   60,  112,  113,   35,   63,
 /*   390 */    37,   99,   99,   28,   65,   66,   67,   68,   69,   70,
 /*   400 */    71,   72,   73,   74,   75,   76,    1,   84,  116,   90,
 /*   410 */    15,   88,   84,   18,   91,   92,   88,   52,   99,   78,
 /*   420 */    92,   16,   15,  100,  101,   18,    1,  104,  105,  106,
 /*   430 */   111,  108,  104,  105,  106,   28,  108,   30,  115,  109,
 /*   440 */   109,   16,  111,   38,   39,   40,   41,   42,   43,   44,
 /*   450 */    45,   46,   47,   48,   49,   50,   51,    1,   90,   35,
 /*   460 */    16,   37,   35,   15,   37,   89,   18,   99,   24,   20,
 /*   470 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   480 */    75,   76,   15,   15,  116,   18,   18,   85,  109,   87,
 /*   490 */   111,   98,  116,   37,   38,   39,   40,   41,   42,   43,
 /*   500 */    44,   45,   46,   47,   48,   49,   50,   51,    1,   60,
 /*   510 */    89,   92,   93,   15,   36,   18,   18,   17,   96,   96,
 /*   520 */     1,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   530 */    74,   75,   76,  111,  111,   16,  107,  116,   92,   93,
 /*   540 */    18,   17,   25,  114,   19,   38,   39,   40,   41,   42,
 /*   550 */    43,   44,   45,   46,   47,   48,   49,   50,   51,    1,
 /*   560 */   107,   18,    2,   60,   18,   18,   54,  114,   64,   96,
 /*   570 */    96,   64,   65,   66,   67,   68,   69,   70,   71,   72,
 /*   580 */    73,   74,   75,   76,  111,  111,   28,   37,   17,   34,
 /*   590 */    58,   17,   36,   34,   18,   62,   38,   39,   40,   41,
 /*   600 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   610 */    23,   18,   24,   18,   18,   18,    2,   99,   17,   20,
 /*   620 */   110,    2,   35,   65,   66,   67,   68,   69,   70,   71,
 /*   630 */    72,   73,   74,   75,   76,    1,   84,   62,   90,   28,
 /*   640 */    88,   84,  114,   91,   92,   88,   28,   99,  111,   92,
 /*   650 */    16,    1,  100,  101,    1,    2,  104,  105,  106,  111,
 /*   660 */   108,  104,  105,  106,   95,  108,   16,  115,   95,   16,
 /*   670 */    20,  109,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   680 */    46,   47,   48,   49,   50,   51,    1,    2,   28,  109,
 /*   690 */   122,  122,  122,  122,  117,  122,  122,   97,   96,   65,
 /*   700 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   710 */    76,  111,  122,  111,  122,  122,  122,  122,  122,  122,
 /*   720 */   122,  122,   96,   38,   39,   40,   41,   42,   43,   44,
 /*   730 */    45,   46,   47,   48,   49,   50,   51,  111,  122,  122,
 /*   740 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*   750 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   760 */    75,   76,    1,   84,  122,   90,   92,   88,  122,   16,
 /*   770 */    91,   92,   93,    1,   99,    1,    1,   16,  104,  100,
 /*   780 */   101,   28,  108,  104,  105,  106,  111,  108,   16,  122,
 /*   790 */    16,   16,  122,  122,  122,  122,  122,  122,  122,   38,
 /*   800 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   810 */    49,   50,   51,    1,  122,  122,  122,  122,  122,  122,
 /*   820 */   122,  122,  122,   96,   52,   96,   65,   66,   67,   68,
 /*   830 */    69,   70,   71,   72,   73,   74,   75,   76,  111,  122,
 /*   840 */   111,  122,  122,  122,  122,  122,  122,  122,  122,   37,
 /*   850 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   860 */    48,   49,   50,   51,  122,  122,  122,  122,  122,  122,
 /*   870 */   122,  122,  122,  122,  122,  122,   96,   65,   66,   67,
 /*   880 */    68,   69,   70,   71,   72,   73,   74,   75,   76,    1,
 /*   890 */    84,  111,   90,  122,   88,   84,   16,   91,   92,   88,
 /*   900 */   122,   99,   19,   92,   16,   96,  100,  101,   28,   16,
 /*   910 */   104,  105,  106,  111,  108,  104,  105,  106,  122,  108,
 /*   920 */   111,   28,  122,  122,  122,  119,   38,   39,   40,   41,
 /*   930 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   940 */     1,   58,  122,  122,  122,  122,  122,  122,  122,  122,
 /*   950 */   122,  122,  122,   65,   66,   67,   68,   69,   70,   71,
 /*   960 */    72,   73,   74,   75,   76,  122,  122,  122,   29,  122,
 /*   970 */   122,  122,  122,  122,  122,  122,  122,   38,   39,   40,
 /*   980 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   990 */    51,    1,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1000 */   122,  122,  122,  122,   65,   66,   67,   68,   69,   70,
 /*  1010 */    71,   72,   73,   74,   75,   76,  122,  122,  122,  122,
 /*  1020 */   122,  122,  122,  122,  122,  122,  122,  122,   38,   39,
 /*  1030 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  1040 */    50,   51,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1050 */   122,  122,  122,  122,  122,   65,   66,   67,   68,   69,
 /*  1060 */    70,   71,   72,   73,   74,   75,   76,   38,   39,   40,
 /*  1070 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  1080 */    51,   16,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1090 */   122,  122,  122,   28,   65,   66,   67,   68,   69,   70,
 /*  1100 */    71,   72,   73,   74,   75,   76,    1,  122,  122,  122,
 /*  1110 */    15,  122,   17,   18,  122,   84,   21,   22,   16,   88,
 /*  1120 */   122,   16,   27,   92,  122,  122,   31,   32,   33,   34,
 /*  1130 */    28,   36,  101,   28,   39,  104,  105,  106,  122,  108,
 /*  1140 */   122,   84,  122,   16,   16,   88,  122,  122,   53,   92,
 /*  1150 */    55,   56,   57,   58,   59,   28,   28,   62,   63,   64,
 /*  1160 */   122,  104,  105,  106,   15,  108,   17,   18,  122,  122,
 /*  1170 */    21,   22,   77,  122,    1,   16,   27,  122,   16,  122,
 /*  1180 */    31,   32,   33,   34,   16,   36,  122,   28,   39,   16,
 /*  1190 */    28,  122,  122,   20,  122,   84,   28,  122,   16,   88,
 /*  1200 */   122,   28,   53,   92,   55,   56,   57,   58,   59,   36,
 /*  1210 */    28,   62,   63,    1,  122,  104,  105,  106,   15,  108,
 /*  1220 */    17,   18,  122,  122,   21,   22,   77,  122,   16,  122,
 /*  1230 */    27,  122,   16,   60,   31,   32,   33,   34,   16,   36,
 /*  1240 */    28,   29,   39,  122,   28,   16,  122,   84,  122,  122,
 /*  1250 */    28,   88,  122,  122,  122,   92,   53,   28,   55,   56,
 /*  1260 */    57,   58,   59,  122,   52,   62,   63,  104,  105,  106,
 /*  1270 */   122,  108,   15,   89,   17,   18,  122,  122,   21,   22,
 /*  1280 */    77,  122,   16,   16,   27,   16,  102,  103,   31,   32,
 /*  1290 */    33,   34,   16,   36,   28,   28,   39,   28,  122,   16,
 /*  1300 */   116,   84,  122,    1,   28,   88,  122,  122,  122,   92,
 /*  1310 */    53,   28,   55,   56,   57,   58,   59,  122,   16,   62,
 /*  1320 */    63,  104,  105,  106,  122,  108,   15,  122,   17,   18,
 /*  1330 */    28,  122,   21,   22,   77,  122,  122,  122,   27,  122,
 /*  1340 */   122,  122,   31,   32,   33,   34,  122,   36,   89,   90,
 /*  1350 */    39,  122,  122,  122,   52,  122,  122,  122,   99,  122,
 /*  1360 */   122,  102,  103,    1,   53,  122,   55,   56,   57,   58,
 /*  1370 */    59,  122,  122,   62,   63,  116,  122,  122,   16,  122,
 /*  1380 */    15,  122,   17,   18,  122,  122,   21,   22,   77,  122,
 /*  1390 */    28,  122,   27,  122,  122,  122,   31,   32,   33,   34,
 /*  1400 */   122,   36,   89,   90,   39,  122,  122,  122,  122,  122,
 /*  1410 */   122,  122,   99,  122,   52,  102,  103,  122,   53,  122,
 /*  1420 */    55,   56,   57,   58,   59,  122,  122,   62,   63,  116,
 /*  1430 */   122,  122,  122,  122,   15,  122,   17,   18,  122,  122,
 /*  1440 */    21,   22,   77,  122,  122,  122,   27,  122,  122,  122,
 /*  1450 */    31,   32,   33,   34,  122,   36,   89,   90,   39,  122,
 /*  1460 */   122,  122,  122,  122,  122,  122,   99,  122,  122,  102,
 /*  1470 */   103,  122,   53,  122,   55,   56,   57,   58,   59,  122,
 /*  1480 */   122,   62,   63,  116,  122,  122,  122,  122,   15,  122,
 /*  1490 */    17,   18,  122,  122,   21,   22,   77,  122,  122,  122,
 /*  1500 */    27,  122,  122,  122,   31,   32,   33,   34,  122,   36,
 /*  1510 */    89,   90,   39,  122,  122,  122,  122,  122,  122,  122,
 /*  1520 */    99,  122,  122,  102,  103,  122,   53,  122,   55,   56,
 /*  1530 */    57,   58,   59,  122,  122,   62,   63,  116,  122,  122,
 /*  1540 */   122,  122,   15,  122,   17,   18,  122,  122,   21,   22,
 /*  1550 */    77,  122,  122,  122,   27,  122,  122,  122,   31,   32,
 /*  1560 */    33,   34,  122,   36,   89,   90,   39,  122,  122,  122,
 /*  1570 */   122,  122,  122,  122,   99,  122,  122,  102,  103,  122,
 /*  1580 */    53,  122,   55,   56,   57,   58,   59,  122,  122,   62,
 /*  1590 */    63,  116,  122,  122,  122,  122,   15,  122,   17,   18,
 /*  1600 */   122,  122,   21,   22,   77,  122,  122,  122,   27,  122,
 /*  1610 */   122,  122,   31,   32,   33,   34,  122,   36,   89,   90,
 /*  1620 */    39,  122,  122,  122,  122,  122,  122,  122,   99,  122,
 /*  1630 */   122,  102,  103,  122,   53,  122,   55,   56,   57,   58,
 /*  1640 */    59,  122,  122,   62,   63,  116,  122,  122,  122,  122,
 /*  1650 */    15,  122,   17,   18,  122,  122,   21,   22,   77,  122,
 /*  1660 */   122,  122,   27,  122,  122,  122,   31,   32,   33,   34,
 /*  1670 */   122,   36,  122,  122,   39,  122,  122,  122,  122,  122,
 /*  1680 */   122,  122,  122,  122,  122,  122,  122,  122,   53,  122,
 /*  1690 */    55,   56,   57,   58,   59,  122,  122,   62,  122,  122,
 /*  1700 */   122,  122,  122,  122,   15,  122,   17,   18,  122,  122,
 /*  1710 */    21,   22,   77,  122,  122,  122,   27,  122,  122,  122,
 /*  1720 */    31,   32,   33,   34,  122,   36,  122,  122,   39,  122,
 /*  1730 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1740 */   122,  122,   53,  122,   55,   56,   57,   58,   59,  122,
 /*  1750 */   122,   62,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1760 */   122,   16,  122,  122,  122,  122,   77,  122,   23,  122,
 /*  1770 */    25,   26,   10,   28,   29,  122,  122,   15,  122,  122,
 /*  1780 */    35,   36,   37,   21,   22,  122,  122,  122,  122,   27,
 /*  1790 */   122,  122,  122,   31,   32,   33,   84,   52,  122,  122,
 /*  1800 */    88,  122,  122,   91,   92,   60,  122,  122,  122,   64,
 /*  1810 */   122,  122,  100,  101,  122,  122,  104,  105,  106,  122,
 /*  1820 */   108,  122,  122,   78,  122,  122,  122,   84,  122,  122,
 /*  1830 */   122,   88,  122,  122,   91,   92,  122,  122,  122,   77,
 /*  1840 */    78,   79,  122,  100,  101,  122,  122,  104,  105,  106,
 /*  1850 */   122,  108,  122,   84,  122,  122,  122,   88,  122,  122,
 /*  1860 */    91,   92,  122,  122,  122,  122,  122,  122,  122,  100,
 /*  1870 */   101,  122,  122,  104,  105,  106,  122,  108,   84,  122,
 /*  1880 */   122,  122,   88,  122,  122,   91,   92,  122,  122,   84,
 /*  1890 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  1900 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  1910 */   105,  106,   88,  108,  122,   91,   92,  122,  122,   84,
 /*  1920 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  1930 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  1940 */   105,  106,   88,  108,  122,   91,   92,  122,  122,  122,
 /*  1950 */   122,  122,  122,  122,  100,  101,  122,  122,  104,  105,
 /*  1960 */   106,  122,  108,   84,  122,  122,  122,   88,  122,  122,
 /*  1970 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  1980 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  1990 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2000 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  2010 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  2020 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2030 */    91,   92,  122,  122,  122,  122,  122,  122,  122,  100,
 /*  2040 */   101,  122,  122,  104,  105,  106,  122,  108,   84,  122,
 /*  2050 */   122,  122,   88,  122,  122,   91,   92,  122,  122,   84,
 /*  2060 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  2070 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  2080 */   105,  106,   88,  108,  122,   91,   92,  122,  122,   84,
 /*  2090 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  2100 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  2110 */   105,  106,   88,  108,  122,   91,   92,  122,  122,  122,
 /*  2120 */   122,  122,  122,  122,  100,  101,  122,  122,  104,  105,
 /*  2130 */   106,  122,  108,   84,  122,  122,  122,   88,  122,  122,
 /*  2140 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  2150 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  2160 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2170 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  2180 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  2190 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2200 */    91,   92,  122,  122,  122,  122,  122,  122,  122,  100,
 /*  2210 */   101,  122,  122,  104,  105,  106,  122,  108,   84,  122,
 /*  2220 */   122,  122,   88,  122,  122,   91,   92,  122,  122,   84,
 /*  2230 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  2240 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  2250 */   105,  106,   88,  108,  122,   91,   92,  122,  122,   84,
 /*  2260 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  2270 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  2280 */   105,  106,   88,  108,  122,   91,   92,  122,  122,  122,
 /*  2290 */   122,  122,  122,  122,  100,  101,  122,  122,  104,  105,
 /*  2300 */   106,  122,  108,   84,  122,  122,  122,   88,  122,  122,
 /*  2310 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  2320 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  2330 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2340 */    91,   92,  122,  122,   84,  122,  122,  122,   88,  100,
 /*  2350 */   101,   91,   92,  104,  105,  106,  122,  108,  122,  122,
 /*  2360 */   100,  101,  122,   84,  104,  105,  106,   88,  108,  122,
 /*  2370 */    91,   92,  122,  122,  122,  122,  122,  122,  122,  100,
 /*  2380 */   101,  122,  122,  104,  105,  106,  122,  108,   84,  122,
 /*  2390 */   122,  122,   88,  122,  122,   91,   92,  122,  122,   84,
 /*  2400 */   122,  122,  122,   88,  100,  101,   91,   92,  104,  105,
 /*  2410 */   106,  122,  108,  122,  122,  100,  101,  122,   84,  104,
 /*  2420 */   105,  106,   88,  108,  122,   91,   92,  122,  122,  122,
 /*  2430 */   122,  122,  122,  122,  100,  101,  122,  122,  104,  105,
 /*  2440 */   106,  122,  108,
);
    const YY_SHIFT_USE_DFLT = -5;
    const YY_SHIFT_MAX = 255;
    static public $yy_shift_ofst = array(
 /*     0 */    -2, 1527, 1149, 1419, 1527, 1149, 1149, 1419, 1095, 1149,
 /*    10 */  1257, 1473, 1149, 1149, 1149, 1149, 1149, 1473, 1149, 1149,
 /*    20 */  1149, 1581, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
 /*    30 */  1257, 1203, 1311, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
 /*    40 */  1149, 1149, 1149, 1149, 1365, 1365, 1635, 1635, 1635, 1635,
 /*    50 */  1689, 1635, 1635,  202,   75,   -1,  126,  558,  558,  558,
 /*    60 */   685,  456,  761,  253,  329,  507,  405,  634,  888,  939,
 /*    70 */   812,  990,  990,  990,  990,  990,  990,  990,  990,  990,
 /*    80 */   990,  990,  990,  990,  990,  990,  990,  990,  990,  990,
 /*    90 */  1029, 1029, 1173,  365,  259,   -2, 1762,  407,   77,  320,
 /*   100 */   653, 1105, 1105,  320,  326,  296,  259,  259,    0,    1,
 /*   110 */    47, 1212,  166, 1302, 1362,  240,  130,  650,  325,  772,
 /*   120 */   143,  220,  246,  395,  449, 1276,  467,  448,  294,  395,
 /*   130 */   468,  395,  395,  395,  395,  294,  395,    0,  294,  519,
 /*   140 */   395,    0,  233,  498,  448,  395,  315,  315,  315,  599,
 /*   150 */   618,  315,  611,  599,  315,  315,  315,  315,   -5,  171,
 /*   160 */   115,   80,  753,   -4,  880, 1065,  893, 1269,  151,  775,
 /*   170 */   425, 1229, 1267, 1266,  774,  151, 1128, 1127,  151, 1168,
 /*   180 */  1162, 1159, 1283,  151, 1182,  200, 1222, 1216,  151, 1102,
 /*   190 */   660,  315,  599,  619,  660,  599,  556,  619,  599,  315,
 /*   200 */   267,   -5,   -5,   -5,   -5,   -5, 1745,  203,   46,  119,
 /*   210 */   201,  127,  162,  444,  587,  341,  251,  883,  424,  353,
 /*   220 */   427,   99,   99,   16,  575,  576,  556,  574,  559,  555,
 /*   230 */   532,  588,  533,  614,  601,  597,  596,  593,  595,  571,
 /*   240 */   550,  517,  525,  524,  522,  497,  500,  543,  478,  560,
 /*   250 */   512,  504,  547,  546,  503,  503,
);
    const YY_REDUCE_USE_DFLT = -94;
    const YY_REDUCE_MAX = 205;
    static public $yy_reduce_ofst = array(
 /*     0 */     5,   -7,  249,  120,  806,  552,  323,  679, 1835, 1879,
 /*    10 */  1964, 1975, 1920, 1769, 1712, 1794, 2164, 2219, 2005, 2315,
 /*    20 */  2024, 2134, 2260, 2090, 2304, 1824, 1939, 1909, 2279, 1805,
 /*    30 */  1854, 1890, 1994, 1743, 2230, 2249, 2175, 2060, 2334, 2194,
 /*    40 */  2049, 2109, 2145, 2079, 1031,  255,  811,  557, 1057, 1111,
 /*    50 */  1217,  328, 1163, 1259, 1475, 1529, 1313, 1367, 1421, 1475,
 /*    60 */  1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
 /*    70 */  1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
 /*    80 */  1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
 /*    90 */  1184, 1184,   89,   39,  117,  199,  -58,  802,  319,  675,
 /*   100 */   173,  189,  218,  548,  197,  674,  292,  368,  -36,   18,
 /*   110 */   402,   67,  331,   67,   67,  600,   67,  376,  144,   67,
 /*   120 */   331,  331,  144,  474,  144,  293,  422,  423,  -93,  422,
 /*   130 */   422,  473,  602,  780,  729,  429,  809,  446,  453,  421,
 /*   140 */   379,  419,   67,  626,  422,  727,   67,   67,   67,  274,
 /*   150 */   252,   67,   10,  144,   67,   67,   67,   67,   67,  537,
 /*   160 */   528,  518,  518,  518,  518,  518,  518,  518,  510,   74,
 /*   170 */    74,  518,  518,  518,   74,  510,  518,  518,  510,  518,
 /*   180 */   518,  518,  518,  510,  518,  580,  518,  518,  510,  518,
 /*   190 */   569,   74,  223,  577,  573,  223,  562,  577,  223,   74,
 /*   200 */    -3,  393,  330,  264,  101,  234,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 1 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 2 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 3 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 4 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 5 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 6 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 7 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 8 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 64, 77, ),
        /* 9 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 10 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 11 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 12 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 13 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 14 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 15 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 16 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 17 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 18 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 19 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 20 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 21 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 22 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 23 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 24 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 25 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 26 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 27 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 28 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 29 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 30 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 31 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 32 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 33 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 34 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 35 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 36 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 37 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 38 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 39 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 40 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 41 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 42 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 43 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 44 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 45 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 63, 77, ),
        /* 46 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 47 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 48 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 49 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 50 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 51 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 52 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 53, 55, 56, 57, 58, 59, 62, 77, ),
        /* 53 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 54 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 55 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 56 */ array(1, 26, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 57 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 58 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 59 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 60 */ array(1, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 61 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 62 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 63 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, ),
        /* 64 */ array(1, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 65 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 66 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 67 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 68 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 69 */ array(1, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 70 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 71 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 72 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 73 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 74 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 75 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 76 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 77 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 78 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 79 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 80 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 81 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 82 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 83 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 84 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 85 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 86 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 87 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 88 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 89 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 90 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 91 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 92 */ array(1, 16, 20, 28, 36, 60, ),
        /* 93 */ array(1, 16, 28, 52, ),
        /* 94 */ array(1, 28, ),
        /* 95 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 96 */ array(10, 15, 21, 22, 27, 31, 32, 33, 77, 78, 79, ),
        /* 97 */ array(15, 18, 28, 30, ),
        /* 98 */ array(15, 18, 28, 30, ),
        /* 99 */ array(15, 18, 28, ),
        /* 100 */ array(1, 2, 16, ),
        /* 101 */ array(1, 16, 28, ),
        /* 102 */ array(1, 16, 28, ),
        /* 103 */ array(15, 18, 28, ),
        /* 104 */ array(20, 58, 63, ),
        /* 105 */ array(17, 18, 62, ),
        /* 106 */ array(1, 28, ),
        /* 107 */ array(1, 28, ),
        /* 108 */ array(17, 36, ),
        /* 109 */ array(10, 15, 21, 22, 27, 31, 32, 33, 77, 78, 79, ),
        /* 110 */ array(4, 5, 6, 7, 8, 12, 13, 14, ),
        /* 111 */ array(1, 16, 28, 29, 52, ),
        /* 112 */ array(15, 18, 19, 61, ),
        /* 113 */ array(1, 16, 28, 52, ),
        /* 114 */ array(1, 16, 28, 52, ),
        /* 115 */ array(15, 18, 19, 24, ),
        /* 116 */ array(1, 30, 52, ),
        /* 117 */ array(1, 16, 20, ),
        /* 118 */ array(19, 20, 60, ),
        /* 119 */ array(1, 16, 52, ),
        /* 120 */ array(15, 18, 19, ),
        /* 121 */ array(15, 18, 61, ),
        /* 122 */ array(19, 20, 60, ),
        /* 123 */ array(15, 18, ),
        /* 124 */ array(20, 60, ),
        /* 125 */ array(16, 28, ),
        /* 126 */ array(15, 18, ),
        /* 127 */ array(15, 18, ),
        /* 128 */ array(17, 18, ),
        /* 129 */ array(15, 18, ),
        /* 130 */ array(15, 18, ),
        /* 131 */ array(15, 18, ),
        /* 132 */ array(15, 18, ),
        /* 133 */ array(15, 18, ),
        /* 134 */ array(15, 18, ),
        /* 135 */ array(17, 18, ),
        /* 136 */ array(15, 18, ),
        /* 137 */ array(17, 36, ),
        /* 138 */ array(17, 18, ),
        /* 139 */ array(1, 16, ),
        /* 140 */ array(15, 18, ),
        /* 141 */ array(17, 36, ),
        /* 142 */ array(1, 52, ),
        /* 143 */ array(15, 18, ),
        /* 144 */ array(15, 18, ),
        /* 145 */ array(15, 18, ),
        /* 146 */ array(1, ),
        /* 147 */ array(1, ),
        /* 148 */ array(1, ),
        /* 149 */ array(20, ),
        /* 150 */ array(28, ),
        /* 151 */ array(1, ),
        /* 152 */ array(28, ),
        /* 153 */ array(20, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(1, ),
        /* 157 */ array(1, ),
        /* 158 */ array(),
        /* 159 */ array(15, 18, 61, ),
        /* 160 */ array(15, 17, 18, ),
        /* 161 */ array(16, 28, ),
        /* 162 */ array(16, 28, ),
        /* 163 */ array(16, 28, ),
        /* 164 */ array(16, 28, ),
        /* 165 */ array(16, 28, ),
        /* 166 */ array(16, 28, ),
        /* 167 */ array(16, 28, ),
        /* 168 */ array(58, 63, ),
        /* 169 */ array(1, 16, ),
        /* 170 */ array(1, 16, ),
        /* 171 */ array(16, 28, ),
        /* 172 */ array(16, 28, ),
        /* 173 */ array(16, 28, ),
        /* 174 */ array(1, 16, ),
        /* 175 */ array(58, 63, ),
        /* 176 */ array(16, 28, ),
        /* 177 */ array(16, 28, ),
        /* 178 */ array(58, 63, ),
        /* 179 */ array(16, 28, ),
        /* 180 */ array(16, 28, ),
        /* 181 */ array(16, 28, ),
        /* 182 */ array(16, 28, ),
        /* 183 */ array(58, 63, ),
        /* 184 */ array(16, 28, ),
        /* 185 */ array(15, 36, ),
        /* 186 */ array(16, 28, ),
        /* 187 */ array(16, 28, ),
        /* 188 */ array(58, 63, ),
        /* 189 */ array(16, 28, ),
        /* 190 */ array(28, ),
        /* 191 */ array(1, ),
        /* 192 */ array(20, ),
        /* 193 */ array(2, ),
        /* 194 */ array(28, ),
        /* 195 */ array(20, ),
        /* 196 */ array(36, ),
        /* 197 */ array(2, ),
        /* 198 */ array(20, ),
        /* 199 */ array(1, ),
        /* 200 */ array(13, ),
        /* 201 */ array(),
        /* 202 */ array(),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(16, 23, 25, 26, 28, 29, 35, 36, 37, 52, 60, 64, 78, ),
        /* 207 */ array(16, 19, 28, 36, 60, ),
        /* 208 */ array(36, 58, 60, 64, ),
        /* 209 */ array(15, 17, 18, 34, ),
        /* 210 */ array(16, 28, 36, 60, ),
        /* 211 */ array(30, 36, 60, ),
        /* 212 */ array(18, 61, ),
        /* 213 */ array(16, 24, ),
        /* 214 */ array(23, 35, ),
        /* 215 */ array(24, 78, ),
        /* 216 */ array(35, 64, ),
        /* 217 */ array(19, 58, ),
        /* 218 */ array(35, 37, ),
        /* 219 */ array(35, 37, ),
        /* 220 */ array(35, 37, ),
        /* 221 */ array(36, 60, ),
        /* 222 */ array(36, 60, ),
        /* 223 */ array(2, 19, ),
        /* 224 */ array(62, ),
        /* 225 */ array(18, ),
        /* 226 */ array(36, ),
        /* 227 */ array(17, ),
        /* 228 */ array(34, ),
        /* 229 */ array(34, ),
        /* 230 */ array(58, ),
        /* 231 */ array(24, ),
        /* 232 */ array(62, ),
        /* 233 */ array(2, ),
        /* 234 */ array(17, ),
        /* 235 */ array(18, ),
        /* 236 */ array(18, ),
        /* 237 */ array(18, ),
        /* 238 */ array(18, ),
        /* 239 */ array(17, ),
        /* 240 */ array(37, ),
        /* 241 */ array(25, ),
        /* 242 */ array(19, ),
        /* 243 */ array(17, ),
        /* 244 */ array(18, ),
        /* 245 */ array(18, ),
        /* 246 */ array(17, ),
        /* 247 */ array(18, ),
        /* 248 */ array(36, ),
        /* 249 */ array(2, ),
        /* 250 */ array(54, ),
        /* 251 */ array(64, ),
        /* 252 */ array(18, ),
        /* 253 */ array(18, ),
        /* 254 */ array(60, ),
        /* 255 */ array(60, ),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
);
    static public $yy_default = array(
 /*     0 */   394,  577,  548,  594,  594,  548,  548,  594,  594,  594,
 /*    10 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
 /*    20 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
 /*    30 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
 /*    40 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
 /*    50 */   594,  594,  594,  594,  594,  594,  454,  454,  454,  454,
 /*    60 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  459,
 /*    70 */   594,  487,  479,  579,  483,  461,  456,  547,  484,  478,
 /*    80 */   546,  578,  464,  580,  436,  488,  475,  465,  459,  480,
 /*    90 */   493,  492,  504,  467,  454,  391,  594,  454,  454,  454,
 /*   100 */   594,  513,  474,  454,  560,  594,  454,  454,  594,  594,
 /*   110 */   594,  467,  521,  467,  467,  594,  467,  594,  514,  467,
 /*   120 */   521,  521,  514,  594,  514,  594,  594,  594,  594,  594,
 /*   130 */   594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
 /*   140 */   521,  594,  467,  594,  594,  594,  477,  470,  496,  557,
 /*   150 */   454,  497,  454,  514,  495,  471,  472,  491,  555,  522,
 /*   160 */   594,  594,  594,  594,  594,  594,  594,  594,  540,  594,
 /*   170 */   594,  594,  594,  594,  594,  539,  594,  594,  538,  594,
 /*   180 */   594,  594,  594,  541,  594,  521,  594,  594,  519,  594,
 /*   190 */   593,  474,  558,  549,  593,  535,  521,  550,  561,  513,
 /*   200 */   409,  554,  521,  554,  521,  554,  469,  504,  504,  594,
 /*   210 */   504,  504,  594,  494,  594,  494,  594,  500,  594,  594,
 /*   220 */   594,  489,  504,  533,  594,  594,  533,  594,  594,  502,
 /*   230 */   500,  494,  594,  533,  594,  594,  594,  594,  594,  594,
 /*   240 */   594,  462,  594,  594,  594,  594,  594,  594,  559,  533,
 /*   250 */   506,  594,  594,  594,  490,  594,  576,  529,  575,  392,
 /*   260 */   419,  434,  574,  438,  439,  527,  542,  466,  433,  463,
 /*   270 */   444,  544,  556,  534,  443,  545,  543,  526,  437,  592,
 /*   280 */   528,  530,  506,  584,  573,  446,  445,  553,  447,  448,
 /*   290 */   533,  532,  435,  453,  440,  441,  442,  449,  551,  509,
 /*   300 */   503,  468,  469,  515,  501,  499,  552,  450,  451,  498,
 /*   310 */   432,  431,  402,  401,  403,  404,  405,  400,  399,  395,
 /*   320 */   393,  396,  397,  398,  406,  407,  416,  415,  417,  418,
 /*   330 */   452,  414,  413,  408,  410,  411,  412,  520,  523,  422,
 /*   340 */   589,  423,  424,  425,  421,  420,  512,  537,  516,  517,
 /*   350 */   518,  426,  427,  586,  583,  585,  587,  590,  582,  581,
 /*   360 */   428,  430,  429,  588,  536,  511,  510,  508,  481,  482,
 /*   370 */   485,  507,  476,  531,  524,  525,  505,  486,  562,  570,
 /*   380 */   569,  571,  572,  473,  568,  567,  563,  564,  565,  566,
 /*   390 */   591,
);
    const YYNOCODE = 123;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 391;
    const YYNRULE = 203;
    const YYERRORSYMBOL = 80;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'COMMENT',
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',
  'PTR',           'LDELIF',        'LDELFOR',       'SEMICOLON',
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH',
  'SPACE',         'AS',            'APTR',          'LDELSETFILTER',
  'SMARTYBLOCKCHILD',  'LDELSLASH',     'INTEGER',       'COMMA',
  'OPENP',         'CLOSEP',        'MATH',          'UNIMATH',
  'ANDSYM',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',
  'INSTANCEOF',    'NAMESPACECLASS',  'QMARK',         'NOT',
  'TYPECAST',      'HEX',           'DOT',           'SINGLEQUOTESTRING',
  'DOUBLECOLON',   'AT',            'HATCH',         'OPENB',
  'CLOSEB',        'EQUALS',        'NOTEQUALS',     'GREATERTHAN',
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',
  'LXOR',          'QUOTE',         'BACKTICK',      'DOLLARID',
  'error',         'start',         'template',      'template_element',
  'smartytag',     'literal',       'literal_elements',  'literal_element',
  'value',         'modifierlist',  'attributes',    'expr',
  'varindexed',    'statement',     'statements',    'optspace',
  'varvar',        'foraction',     'modparameters',  'attribute',
  'ternary',       'array',         'ifcond',        'lop',
  'variable',      'function',      'doublequoted_with_quotes',  'static_class_access',
  'object',        'arrayindex',    'indexdef',      'varvarele',
  'objectchain',   'objectelement',  'method',        'params',
  'modifier',      'modparameter',  'arrayelements',  'arrayelement',
  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "literal_element ::= ASPSTARTTAG",
 /*  25 */ "literal_element ::= ASPENDTAG",
 /*  26 */ "smartytag ::= LDEL value RDEL",
 /*  27 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  28 */ "smartytag ::= LDEL value attributes RDEL",
 /*  29 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  31 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  32 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  34 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  35 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID RDEL",
 /*  37 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  40 */ "smartytag ::= LDELIF expr RDEL",
 /*  41 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF statement RDEL",
 /*  43 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  44 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes RDEL",
 /*  45 */ "foraction ::= EQUAL expr",
 /*  46 */ "foraction ::= INCDEC",
 /*  47 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  56 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  57 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  61 */ "attributes ::= attributes attribute",
 /*  62 */ "attributes ::= attribute",
 /*  63 */ "attributes ::=",
 /*  64 */ "attribute ::= SPACE ID EQUAL ID",
 /*  65 */ "attribute ::= SPACE ID EQUAL expr",
 /*  66 */ "attribute ::= SPACE ID EQUAL value",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE expr",
 /*  69 */ "attribute ::= SPACE value",
 /*  70 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  71 */ "statements ::= statement",
 /*  72 */ "statements ::= statements COMMA statement",
 /*  73 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  74 */ "statement ::= varindexed EQUAL expr",
 /*  75 */ "statement ::= OPENP statement CLOSEP",
 /*  76 */ "expr ::= value",
 /*  77 */ "expr ::= ternary",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "expr ::= expr MATH value",
 /*  80 */ "expr ::= expr UNIMATH value",
 /*  81 */ "expr ::= expr ANDSYM value",
 /*  82 */ "expr ::= array",
 /*  83 */ "expr ::= expr modifierlist",
 /*  84 */ "expr ::= expr ifcond expr",
 /*  85 */ "expr ::= expr ISIN array",
 /*  86 */ "expr ::= expr ISIN value",
 /*  87 */ "expr ::= expr lop expr",
 /*  88 */ "expr ::= expr ISDIVBY expr",
 /*  89 */ "expr ::= expr ISNOTDIVBY expr",
 /*  90 */ "expr ::= expr ISEVEN",
 /*  91 */ "expr ::= expr ISNOTEVEN",
 /*  92 */ "expr ::= expr ISEVENBY expr",
 /*  93 */ "expr ::= expr ISNOTEVENBY expr",
 /*  94 */ "expr ::= expr ISODD",
 /*  95 */ "expr ::= expr ISNOTODD",
 /*  96 */ "expr ::= expr ISODDBY expr",
 /*  97 */ "expr ::= expr ISNOTODDBY expr",
 /*  98 */ "expr ::= value INSTANCEOF ID",
 /*  99 */ "expr ::= value INSTANCEOF NAMESPACECLASS",
 /* 100 */ "expr ::= value INSTANCEOF value",
 /* 101 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 103 */ "value ::= variable",
 /* 104 */ "value ::= UNIMATH value",
 /* 105 */ "value ::= NOT value",
 /* 106 */ "value ::= TYPECAST value",
 /* 107 */ "value ::= variable INCDEC",
 /* 108 */ "value ::= HEX",
 /* 109 */ "value ::= INTEGER",
 /* 110 */ "value ::= INTEGER DOT INTEGER",
 /* 111 */ "value ::= INTEGER DOT",
 /* 112 */ "value ::= DOT INTEGER",
 /* 113 */ "value ::= ID",
 /* 114 */ "value ::= function",
 /* 115 */ "value ::= OPENP expr CLOSEP",
 /* 116 */ "value ::= SINGLEQUOTESTRING",
 /* 117 */ "value ::= doublequoted_with_quotes",
 /* 118 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 119 */ "value ::= NAMESPACECLASS DOUBLECOLON static_class_access",
 /* 120 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 121 */ "value ::= smartytag",
 /* 122 */ "value ::= value modifierlist",
 /* 123 */ "variable ::= varindexed",
 /* 124 */ "variable ::= DOLLAR varvar AT ID",
 /* 125 */ "variable ::= object",
 /* 126 */ "variable ::= HATCH ID HATCH",
 /* 127 */ "variable ::= HATCH variable HATCH",
 /* 128 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 129 */ "arrayindex ::= arrayindex indexdef",
 /* 130 */ "arrayindex ::=",
 /* 131 */ "indexdef ::= DOT DOLLAR varvar",
 /* 132 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 133 */ "indexdef ::= DOT ID",
 /* 134 */ "indexdef ::= DOT INTEGER",
 /* 135 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 136 */ "indexdef ::= OPENB ID CLOSEB",
 /* 137 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 138 */ "indexdef ::= OPENB expr CLOSEB",
 /* 139 */ "indexdef ::= OPENB CLOSEB",
 /* 140 */ "varvar ::= varvarele",
 /* 141 */ "varvar ::= varvar varvarele",
 /* 142 */ "varvarele ::= ID",
 /* 143 */ "varvarele ::= LDEL expr RDEL",
 /* 144 */ "object ::= varindexed objectchain",
 /* 145 */ "objectchain ::= objectelement",
 /* 146 */ "objectchain ::= objectchain objectelement",
 /* 147 */ "objectelement ::= PTR ID arrayindex",
 /* 148 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 149 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 150 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 151 */ "objectelement ::= PTR method",
 /* 152 */ "function ::= ID OPENP params CLOSEP",
 /* 153 */ "method ::= ID OPENP params CLOSEP",
 /* 154 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 155 */ "params ::= params COMMA expr",
 /* 156 */ "params ::= expr",
 /* 157 */ "params ::=",
 /* 158 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 159 */ "modifierlist ::= modifier modparameters",
 /* 160 */ "modifier ::= VERT AT ID",
 /* 161 */ "modifier ::= VERT ID",
 /* 162 */ "modparameters ::= modparameters modparameter",
 /* 163 */ "modparameters ::=",
 /* 164 */ "modparameter ::= COLON value",
 /* 165 */ "modparameter ::= COLON array",
 /* 166 */ "static_class_access ::= method",
 /* 167 */ "static_class_access ::= method objectchain",
 /* 168 */ "static_class_access ::= ID",
 /* 169 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 170 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 171 */ "ifcond ::= EQUALS",
 /* 172 */ "ifcond ::= NOTEQUALS",
 /* 173 */ "ifcond ::= GREATERTHAN",
 /* 174 */ "ifcond ::= LESSTHAN",
 /* 175 */ "ifcond ::= GREATEREQUAL",
 /* 176 */ "ifcond ::= LESSEQUAL",
 /* 177 */ "ifcond ::= IDENTITY",
 /* 178 */ "ifcond ::= NONEIDENTITY",
 /* 179 */ "ifcond ::= MOD",
 /* 180 */ "lop ::= LAND",
 /* 181 */ "lop ::= LOR",
 /* 182 */ "lop ::= LXOR",
 /* 183 */ "array ::= OPENB arrayelements CLOSEB",
 /* 184 */ "arrayelements ::= arrayelement",
 /* 185 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 186 */ "arrayelements ::=",
 /* 187 */ "arrayelement ::= value APTR expr",
 /* 188 */ "arrayelement ::= ID APTR expr",
 /* 189 */ "arrayelement ::= expr",
 /* 190 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 191 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 192 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 193 */ "doublequoted ::= doublequotedcontent",
 /* 194 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 195 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 196 */ "doublequotedcontent ::= DOLLARID",
 /* 197 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 198 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 199 */ "doublequotedcontent ::= smartytag",
 /* 200 */ "doublequotedcontent ::= OTHER",
 /* 201 */ "optspace ::= SPACE",
 /* 202 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 85 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1735 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 0 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 7 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 7 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 12 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 11 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 11 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 8 ),
  array( 'lhs' => 100, 'rhs' => 7 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 4 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 5 ),
  array( 'lhs' => 113, 'rhs' => 6 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 5 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 0 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 0 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        202 => 15,
        16 => 16,
        75 => 16,
        17 => 17,
        104 => 17,
        106 => 17,
        107 => 17,
        129 => 17,
        167 => 17,
        19 => 19,
        20 => 19,
        46 => 19,
        68 => 19,
        69 => 19,
        76 => 19,
        77 => 19,
        82 => 19,
        103 => 19,
        108 => 19,
        109 => 19,
        114 => 19,
        116 => 19,
        117 => 19,
        125 => 19,
        140 => 19,
        166 => 19,
        168 => 19,
        184 => 19,
        189 => 19,
        201 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        30 => 28,
        29 => 29,
        31 => 31,
        32 => 31,
        33 => 33,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        43 => 41,
        42 => 42,
        44 => 44,
        45 => 45,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        71 => 62,
        156 => 62,
        160 => 62,
        164 => 62,
        165 => 62,
        63 => 63,
        157 => 63,
        163 => 63,
        64 => 64,
        65 => 65,
        66 => 65,
        70 => 65,
        67 => 67,
        72 => 72,
        73 => 73,
        74 => 73,
        78 => 78,
        79 => 79,
        80 => 79,
        81 => 79,
        83 => 83,
        122 => 83,
        84 => 84,
        87 => 84,
        98 => 84,
        99 => 84,
        85 => 85,
        86 => 86,
        88 => 88,
        89 => 89,
        90 => 90,
        95 => 90,
        91 => 91,
        94 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        100 => 100,
        101 => 101,
        102 => 102,
        105 => 105,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        123 => 123,
        124 => 124,
        126 => 126,
        127 => 127,
        128 => 128,
        130 => 130,
        186 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        138 => 135,
        136 => 136,
        137 => 137,
        139 => 139,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        158 => 158,
        159 => 159,
        161 => 161,
        162 => 162,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        185 => 185,
        187 => 187,
        188 => 188,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
        195 => 194,
        197 => 194,
        196 => 196,
        198 => 198,
        199 => 199,
        200 => 200,
    );
#line 96 "smarty_internal_templateparser.y"
    function yy_r0(){
    $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2169 "smarty_internal_templateparser.php"
#line 104 "smarty_internal_templateparser.y"
    function yy_r1(){
    $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2174 "smarty_internal_templateparser.php"
#line 120 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->has_code) {
        $tmp ='';
        if ($this->last_taglineno != $this->lex->taglineno) {
            $tmp = "<?php \$_smarty_tpl->trace_line = {$this->lex->taglineno}?>";
            $this->last_taglineno = $this->lex->taglineno;
        }
        foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
    } else {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2191 "smarty_internal_templateparser.php"
#line 137 "smarty_internal_templateparser.y"
    function yy_r5(){
    $this->_retvalue = new _smarty_tag($this, '');
    }
#line 2196 "smarty_internal_templateparser.php"
#line 142 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2201 "smarty_internal_templateparser.php"
#line 147 "smarty_internal_templateparser.y"
    function yy_r7(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2217 "smarty_internal_templateparser.php"
#line 163 "smarty_internal_templateparser.y"
    function yy_r8(){
    if ($this->is_xml) {
        $this->compiler->tag_nocache = true;
        $this->is_xml = false;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
        $this->template->has_nocache_code = $save;
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2236 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r9(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    }
#line 2260 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    }
#line 2281 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r11(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    }
    }
#line 2290 "smarty_internal_templateparser.php"
#line 235 "smarty_internal_templateparser.y"
    function yy_r12(){
    $this->compiler->tag_nocache = true;
    $this->is_xml = true;
    $save = $this->template->has_nocache_code;
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
    $this->template->has_nocache_code = $save;
    }
#line 2299 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r13(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
    } else {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2308 "smarty_internal_templateparser.php"
#line 252 "smarty_internal_templateparser.y"
    function yy_r14(){
    $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2313 "smarty_internal_templateparser.php"
#line 257 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->_retvalue = '';
    }
#line 2318 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r16(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2323 "smarty_internal_templateparser.php"
#line 265 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2328 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2333 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r21(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2338 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r23(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2343 "smarty_internal_templateparser.php"
#line 293 "smarty_internal_templateparser.y"
    function yy_r24(){
    $this->_retvalue = '<<?php ?>%';
    }
#line 2348 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = '%<?php ?>>';
    }
#line 2353 "smarty_internal_templateparser.php"
#line 307 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2358 "smarty_internal_templateparser.php"
#line 311 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2363 "smarty_internal_templateparser.php"
#line 315 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2368 "smarty_internal_templateparser.php"
#line 319 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2373 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r31(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));
    }
#line 2378 "smarty_internal_templateparser.php"
#line 340 "smarty_internal_templateparser.y"
    function yy_r33(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2383 "smarty_internal_templateparser.php"
#line 344 "smarty_internal_templateparser.y"
    function yy_r34(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }
#line 2388 "smarty_internal_templateparser.php"
#line 349 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2393 "smarty_internal_templateparser.php"
#line 353 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());
    }
#line 2398 "smarty_internal_templateparser.php"
#line 358 "smarty_internal_templateparser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2403 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2409 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2415 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r40(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2421 "smarty_internal_templateparser.php"
#line 380 "smarty_internal_templateparser.y"
    function yy_r41(){
    $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2427 "smarty_internal_templateparser.php"
#line 385 "smarty_internal_templateparser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2433 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),1);
    }
#line 2438 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r45(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2443 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2448 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2453 "smarty_internal_templateparser.php"
#line 417 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2458 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2463 "smarty_internal_templateparser.php"
#line 426 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2468 "smarty_internal_templateparser.php"
#line 430 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2473 "smarty_internal_templateparser.php"
#line 434 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2478 "smarty_internal_templateparser.php"
#line 439 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2483 "smarty_internal_templateparser.php"
#line 443 "smarty_internal_templateparser.y"
    function yy_r55(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2488 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    }
#line 2493 "smarty_internal_templateparser.php"
#line 454 "smarty_internal_templateparser.y"
    function yy_r57(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());
    }
#line 2498 "smarty_internal_templateparser.php"
#line 458 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2503 "smarty_internal_templateparser.php"
#line 463 "smarty_internal_templateparser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2508 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2513 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2519 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r62(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2524 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->_retvalue = array();
    }
#line 2529 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r64(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2542 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r65(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2547 "smarty_internal_templateparser.php"
#line 511 "smarty_internal_templateparser.y"
    function yy_r67(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2552 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r72(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2558 "smarty_internal_templateparser.php"
#line 541 "smarty_internal_templateparser.y"
    function yy_r73(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2563 "smarty_internal_templateparser.php"
#line 569 "smarty_internal_templateparser.y"
    function yy_r78(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2568 "smarty_internal_templateparser.php"
#line 574 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2573 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r83(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2578 "smarty_internal_templateparser.php"
#line 599 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2583 "smarty_internal_templateparser.php"
#line 603 "smarty_internal_templateparser.y"
    function yy_r85(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2588 "smarty_internal_templateparser.php"
#line 607 "smarty_internal_templateparser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2593 "smarty_internal_templateparser.php"
#line 615 "smarty_internal_templateparser.y"
    function yy_r88(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2598 "smarty_internal_templateparser.php"
#line 619 "smarty_internal_templateparser.y"
    function yy_r89(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2603 "smarty_internal_templateparser.php"
#line 623 "smarty_internal_templateparser.y"
    function yy_r90(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2608 "smarty_internal_templateparser.php"
#line 627 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2613 "smarty_internal_templateparser.php"
#line 631 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2618 "smarty_internal_templateparser.php"
#line 635 "smarty_internal_templateparser.y"
    function yy_r93(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2623 "smarty_internal_templateparser.php"
#line 663 "smarty_internal_templateparser.y"
    function yy_r100(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2630 "smarty_internal_templateparser.php"
#line 672 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2635 "smarty_internal_templateparser.php"
#line 676 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2640 "smarty_internal_templateparser.php"
#line 691 "smarty_internal_templateparser.y"
    function yy_r105(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2645 "smarty_internal_templateparser.php"
#line 712 "smarty_internal_templateparser.y"
    function yy_r110(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2650 "smarty_internal_templateparser.php"
#line 716 "smarty_internal_templateparser.y"
    function yy_r111(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2655 "smarty_internal_templateparser.php"
#line 720 "smarty_internal_templateparser.y"
    function yy_r112(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2660 "smarty_internal_templateparser.php"
#line 725 "smarty_internal_templateparser.y"
    function yy_r113(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2673 "smarty_internal_templateparser.php"
#line 743 "smarty_internal_templateparser.y"
    function yy_r115(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2678 "smarty_internal_templateparser.php"
#line 758 "smarty_internal_templateparser.y"
    function yy_r118(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        }
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2691 "smarty_internal_templateparser.php"
#line 771 "smarty_internal_templateparser.y"
    function yy_r119(){
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2696 "smarty_internal_templateparser.php"
#line 775 "smarty_internal_templateparser.y"
    function yy_r120(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2705 "smarty_internal_templateparser.php"
#line 784 "smarty_internal_templateparser.y"
    function yy_r121(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2712 "smarty_internal_templateparser.php"
#line 799 "smarty_internal_templateparser.y"
    function yy_r123(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2725 "smarty_internal_templateparser.php"
#line 812 "smarty_internal_templateparser.y"
    function yy_r124(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars->'. trim($this->yystack[$this->yyidx + -2]->minor,"'") .'->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2730 "smarty_internal_templateparser.php"
#line 822 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = '$_smarty_tpl->config_vars->'. $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2735 "smarty_internal_templateparser.php"
#line 826 "smarty_internal_templateparser.y"
    function yy_r127(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
#line 2740 "smarty_internal_templateparser.php"
#line 830 "smarty_internal_templateparser.y"
    function yy_r128(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2745 "smarty_internal_templateparser.php"
#line 843 "smarty_internal_templateparser.y"
    function yy_r130(){
    return;
    }
#line 2750 "smarty_internal_templateparser.php"
#line 849 "smarty_internal_templateparser.y"
    function yy_r131(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2755 "smarty_internal_templateparser.php"
#line 853 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2760 "smarty_internal_templateparser.php"
#line 857 "smarty_internal_templateparser.y"
    function yy_r133(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2765 "smarty_internal_templateparser.php"
#line 861 "smarty_internal_templateparser.y"
    function yy_r134(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2770 "smarty_internal_templateparser.php"
#line 865 "smarty_internal_templateparser.y"
    function yy_r135(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2775 "smarty_internal_templateparser.php"
#line 870 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2780 "smarty_internal_templateparser.php"
#line 874 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2785 "smarty_internal_templateparser.php"
#line 884 "smarty_internal_templateparser.y"
    function yy_r139(){
    $this->_retvalue = '[]';
    }
#line 2790 "smarty_internal_templateparser.php"
#line 897 "smarty_internal_templateparser.y"
    function yy_r141(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2795 "smarty_internal_templateparser.php"
#line 902 "smarty_internal_templateparser.y"
    function yy_r142(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2800 "smarty_internal_templateparser.php"
#line 907 "smarty_internal_templateparser.y"
    function yy_r143(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2805 "smarty_internal_templateparser.php"
#line 914 "smarty_internal_templateparser.y"
    function yy_r144(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2814 "smarty_internal_templateparser.php"
#line 923 "smarty_internal_templateparser.y"
    function yy_r145(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2819 "smarty_internal_templateparser.php"
#line 928 "smarty_internal_templateparser.y"
    function yy_r146(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2824 "smarty_internal_templateparser.php"
#line 933 "smarty_internal_templateparser.y"
    function yy_r147(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2832 "smarty_internal_templateparser.php"
#line 940 "smarty_internal_templateparser.y"
    function yy_r148(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2840 "smarty_internal_templateparser.php"
#line 947 "smarty_internal_templateparser.y"
    function yy_r149(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2848 "smarty_internal_templateparser.php"
#line 954 "smarty_internal_templateparser.y"
    function yy_r150(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2856 "smarty_internal_templateparser.php"
#line 962 "smarty_internal_templateparser.y"
    function yy_r151(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2861 "smarty_internal_templateparser.php"
#line 970 "smarty_internal_templateparser.y"
    function yy_r152(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                if (strncasecmp($par,'$_smarty_tpl->config_vars',strlen('$_smarty_tpl->config_vars')) === 0) {
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.preg_replace('/\$_smarty_tpl->config_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getConfigVariable(\'\1\', null, true, false)',$par).';?>';
                    $isset_par = '$_tmp'.$this->prefix_number;
                } else {
                    $isset_par = preg_replace('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getVariable(\'\1\', null, true, false)',$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2897 "smarty_internal_templateparser.php"
#line 1008 "smarty_internal_templateparser.y"
    function yy_r153(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2905 "smarty_internal_templateparser.php"
#line 1015 "smarty_internal_templateparser.y"
    function yy_r154(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2915 "smarty_internal_templateparser.php"
#line 1026 "smarty_internal_templateparser.y"
    function yy_r155(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2920 "smarty_internal_templateparser.php"
#line 1043 "smarty_internal_templateparser.y"
    function yy_r158(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2925 "smarty_internal_templateparser.php"
#line 1047 "smarty_internal_templateparser.y"
    function yy_r159(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2930 "smarty_internal_templateparser.php"
#line 1055 "smarty_internal_templateparser.y"
    function yy_r161(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2935 "smarty_internal_templateparser.php"
#line 1063 "smarty_internal_templateparser.y"
    function yy_r162(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2940 "smarty_internal_templateparser.php"
#line 1097 "smarty_internal_templateparser.y"
    function yy_r169(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2945 "smarty_internal_templateparser.php"
#line 1102 "smarty_internal_templateparser.y"
    function yy_r170(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2950 "smarty_internal_templateparser.php"
#line 1108 "smarty_internal_templateparser.y"
    function yy_r171(){
    $this->_retvalue = '==';
    }
#line 2955 "smarty_internal_templateparser.php"
#line 1112 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = '!=';
    }
#line 2960 "smarty_internal_templateparser.php"
#line 1116 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->_retvalue = '>';
    }
#line 2965 "smarty_internal_templateparser.php"
#line 1120 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = '<';
    }
#line 2970 "smarty_internal_templateparser.php"
#line 1124 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = '>=';
    }
#line 2975 "smarty_internal_templateparser.php"
#line 1128 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = '<=';
    }
#line 2980 "smarty_internal_templateparser.php"
#line 1132 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = '===';
    }
#line 2985 "smarty_internal_templateparser.php"
#line 1136 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = '!==';
    }
#line 2990 "smarty_internal_templateparser.php"
#line 1140 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '%';
    }
#line 2995 "smarty_internal_templateparser.php"
#line 1144 "smarty_internal_templateparser.y"
    function yy_r180(){
    $this->_retvalue = '&&';
    }
#line 3000 "smarty_internal_templateparser.php"
#line 1148 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = '||';
    }
#line 3005 "smarty_internal_templateparser.php"
#line 1152 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = ' XOR ';
    }
#line 3010 "smarty_internal_templateparser.php"
#line 1159 "smarty_internal_templateparser.y"
    function yy_r183(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 3015 "smarty_internal_templateparser.php"
#line 1167 "smarty_internal_templateparser.y"
    function yy_r185(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3020 "smarty_internal_templateparser.php"
#line 1175 "smarty_internal_templateparser.y"
    function yy_r187(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3025 "smarty_internal_templateparser.php"
#line 1179 "smarty_internal_templateparser.y"
    function yy_r188(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3030 "smarty_internal_templateparser.php"
#line 1191 "smarty_internal_templateparser.y"
    function yy_r190(){
    $this->_retvalue = "''";
    }
#line 3035 "smarty_internal_templateparser.php"
#line 1195 "smarty_internal_templateparser.y"
    function yy_r191(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 3040 "smarty_internal_templateparser.php"
#line 1200 "smarty_internal_templateparser.y"
    function yy_r192(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 3046 "smarty_internal_templateparser.php"
#line 1205 "smarty_internal_templateparser.y"
    function yy_r193(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3051 "smarty_internal_templateparser.php"
#line 1209 "smarty_internal_templateparser.y"
    function yy_r194(){
    $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);
    }
#line 3056 "smarty_internal_templateparser.php"
#line 1217 "smarty_internal_templateparser.y"
    function yy_r196(){
    $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars->'. substr($this->yystack[$this->yyidx + 0]->minor,1) .'->value');
    }
#line 3061 "smarty_internal_templateparser.php"
#line 1225 "smarty_internal_templateparser.y"
    function yy_r198(){
    $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 3066 "smarty_internal_templateparser.php"
#line 1229 "smarty_internal_templateparser.y"
    function yy_r199(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3071 "smarty_internal_templateparser.php"
#line 1233 "smarty_internal_templateparser.y"
    function yy_r200(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3076 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 78 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 3139 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 70 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3157 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>