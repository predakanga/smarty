<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.1 Maintainer: tony2001 Status: ready -->
<sect1 id="language.function.textformat">
 <title>textformat</title>
 <informaltable frame="all">
  <tgroup cols="5">
  <colspec colname="param" align="center" />
  <colspec colname="type" align="center" />
  <colspec colname="required" align="center" />
  <colspec colname="default" align="center" />
  <colspec colname="desc" />
  <thead>
   <row>
    <entry>Имя аттрибута</entry>
    <entry>Тип</entry>
    <entry>Обязателен</entry>       
    <entry>По умолчанию</entry>
    <entry>Описание</entry>
   </row>
  </thead>
  <tbody>
   <row>
    <entry>style</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>предустановленный стиль</entry>
   </row>
   <row>
    <entry>indent</entry>
    <entry>number</entry>
    <entry>Нет</entry>
    <entry><emphasis>0</emphasis></entry>
    <entry>отступ строки</entry>
   </row>
   <row>
    <entry>indent_first</entry>
    <entry>number</entry>
    <entry>Нет</entry>
    <entry><emphasis>0</emphasis></entry>
    <entry>отступ первой строки</entry>
   </row>
   <row>
    <entry>indent_char</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>(single space)</emphasis></entry>
    <entry>символ, которым заполняеться отступ строк.</entry>
   </row>
   <row>
    <entry>wrap</entry>
    <entry>number</entry>
    <entry>Нет</entry>
    <entry><emphasis>80</emphasis></entry>
    <entry>количество символов в строке</entry>
   </row>
   <row>
    <entry>wrap_char</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>\n</emphasis></entry>
    <entry>текст, разделяющий каждую строку</entry>
   </row>
   <row>
    <entry>wrap_cut</entry>
    <entry>логический (boolean)</entry>
    <entry>Нет</entry>
    <entry><emphasis>false</emphasis></entry>
    <entry>
     Переносить текст по символам (то есть точно 
     по указанной длине строки) (true), или по 
     границам слов (false)
    </entry>
   </row>
   <row>
    <entry>assign</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>переменная шаблона, которой будет присвоен вывод</entry>
   </row>
  </tbody>
  </tgroup>
 </informaltable>
 <para>
  функция textformat используеться для форматирования текст, 
  заключенного внтури ее. В основном убирает лишние пробелы и 
  специальные символы, а так же форматирует абзацы, делает отступы,
  переносит слова.
 </para>
 <para>
  Можно указывать параметры явно, или использовать предустановленные стили.
  На данный момент существует только стиль "email".
 </para>
 <example>
  <title>textformat</title>
  <programlisting>
<![CDATA[
{textformat wrap=40}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

OUTPUT:

This is foo. This is foo. This is foo.
This is foo. This is foo. This is foo.

This is bar.

bar foo bar foo foo. bar foo bar foo
foo. bar foo bar foo foo. bar foo bar
foo foo. bar foo bar foo foo. bar foo
bar foo foo. bar foo bar foo foo.


{textformat wrap=40 indent=4}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

OUTPUT:

    This is foo. This is foo. This is
    foo. This is foo. This is foo. This
    is foo.

    This is bar.

    bar foo bar foo foo. bar foo bar foo
    foo. bar foo bar foo foo. bar foo
    bar foo foo. bar foo bar foo foo.
    bar foo bar foo foo. bar foo bar
    foo foo.

{textformat wrap=40 indent=4 indent_first=4}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

OUTPUT:

        This is foo. This is foo. This
    is foo. This is foo. This is foo.
    This is foo.

        This is bar.

        bar foo bar foo foo. bar foo bar
    foo foo. bar foo bar foo foo. bar
    foo bar foo foo. bar foo bar foo
    foo. bar foo bar foo foo. bar foo
    bar foo foo.

{textformat style="email"}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

OUTPUT:

This is foo. This is foo. This is foo. This is foo. This is foo. This is
foo.

This is bar.

bar foo bar foo foo. bar foo bar foo foo. bar foo bar foo foo. bar foo
bar foo foo. bar foo bar foo foo. bar foo bar foo foo. bar foo bar foo
foo.
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
