<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<sect1 id="language.function.config.load">
 <title>config_load</title>
 <informaltable frame="all">
  <tgroup cols="5">
  <colspec colname="param" align="center" />
  <colspec colname="type" align="center" />
  <colspec colname="required" align="center" />
  <colspec colname="default" align="center" />
  <colspec colname="desc" />
  <thead>
   <row>
    <entry>Имя аттрибута</entry>
    <entry>Тип</entry>
    <entry>Обязателен</entry>       
    <entry>По умолчанию</entry>
    <entry>Описание</entry>
   </row>
  </thead>
  <tbody>
   <row>
    <entry>file</entry>
    <entry>строка (string)</entry>
    <entry>Да</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя config файла для загрузки</entry>
   </row>
   <row>
    <entry>section</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя секции для загрузки</entry>
   </row>
   <row>
    <entry>scope</entry>
    <entry>строка (string)</entry>
    <entry>Нет</entry>
    <entry><emphasis>local</emphasis></entry>
    <entry>
     Способ обработки области видимости загруженных
     переменных. Должен быть одинм из local, parent 
     или global. local означает, что переменные загружены 
     в контекст локального шаблона. parent означает, что 
     переменные загружены в контекст как локального, так 
     и родительского шаблона. global означает, что 
     переменные доступны из любого шаблона.
     </entry>
    </row>
    <row>
     <entry>global</entry>
     <entry>логический (boolean)</entry>
     <entry>Нет</entry>
     <entry><emphasis>No</emphasis></entry>
     <entry>
      Доступны ли переменные из родительского шаблона.
      Аналогичен scope=parent. ЗАМЕЧАНИЕ: Этот аттрибут 
      перекрывается аттрибутом scope, но все еще 
      поддерживается. Если scope указан, то это значение 
      игнорируется.
     </entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
	<para>
  Эта функция используется для загрузки переменных в 
  шаблон из файлов конфигруации. Смотри 
  <link linkend="config.files">Файлы конфигурации</link> 
  для дополнительной информации.
	</para>
 <example>
  <title>функция config_load</title>
  <programlisting>
<![CDATA[
{config_load file="colors.conf"}

<html>
<title>{#pageTitle#}</title>
<body bgcolor="{#bodyBgColor#}">
<table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
	<tr bgcolor="{#rowBgColor#}">
		<td>First</td>
		<td>Last</td>
		<td>Address</td>
	</tr>
</table>
</body>
</html>
]]>
  </programlisting>
 </example>
	<para>
  Файлы конфигурации также могут содержать секции. Можно загрузить
  переменные из определенной секции, указав аттрибут 
  <emphasis>section</emphasis>.
 </para>
 <note>
  <para>
   <emphasis>Секции файлов конфигурации</emphasis> и встроенная 
   функция <emphasis>section</emphasis> не имеют ничего общего, кроме 
   схожего названия.
  </para>
 </note>
 <example>
  <title>функция config_load с указанием секции</title>
  <programlisting>
<![CDATA[
{config_load file="colors.conf" section="Customer"}

<html>
<title>{#pageTitle#}</title>
<body bgcolor="{#bodyBgColor#}">
<table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
	<tr bgcolor="{#rowBgColor#}">
		<td>First</td>
		<td>Last</td>
		<td>Address</td>
	</tr>
</table>
</body>
</html>
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

