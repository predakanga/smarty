<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.2 Maintainer: freespace Status: ready -->
<sect1 id="language.function.foreach">
 <title>foreach,foreachelse</title>

 <informaltable frame="all">
  <tgroup cols="5">
  <colspec colname="param" align="center" />
  <colspec colname="type" align="center" />
  <colspec colname="required" align="center" />
  <colspec colname="default" align="center" />
  <colspec colname="desc" />
  <thead>
   <row>
    <entry>Имя атрибута</entry>
    <entry>Тип</entry>
    <entry>Обязателен</entry>
    <entry>По умолчанию</entry>
    <entry>Описание</entry>
   </row>
  </thead>
  <tbody>
   <row>
    <entry>from</entry>
    <entry>array</entry>
    <entry>Да</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Массив, по которому надо пройтись</entry>
   </row>
   <row>
    <entry>item</entry>
    <entry>string</entry>
    <entry>Да</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя переменной, которая будет выступать в
    качестве значения текущего елемента</entry>
   </row>
   <row>
    <entry>key</entry>
    <entry>string</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя переменной, которая будет выступать в
    качестве ключа текущего елемента</entry>
   </row>
   <row>
    <entry>name</entry>
    <entry>string</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Название цикла foreach для доступа к его
    свойствам</entry>
   </row>
  </tbody>
  </tgroup>
 </informaltable>

	<para>
  Циклы <emphasis>foreach</emphasis> являются альтернативой
  циклам <emphasis>section</emphasis>. Циклы
  <emphasis>foreach</emphasis> используются для прохождения
  по одному массиву. Синтаксис <emphasis>foreach</emphasis>
  намного проще, чем <emphasis>section</emphasis>, но его
  можно использовать только для одного массива.
  Тэг <emphasis>foreach</emphasis> должен иметь в пару тэг
  <emphasis>/foreach</emphasis>. Обязательные параметры -
  <emphasis>from</emphasis> и <emphasis>item</emphasis>. Название
  цикла foreach может быть любой последовательностью букв, цифр
  и знаков подчеркиваний _. Циклы <emphasis>foreach</emphasis>
  могут быть вложенные, и имена вложенных циклов должны быть
  уникальные. Переменная <emphasis>from</emphasis> (обычно
  массив значений) указывает количество итераций цикла.
  <emphasis>foreachelse</emphasis> выполняется, если нету значений
  в переменной <emphasis>from</emphasis>.
 </para>

 <example>
  <title>foreach</title>
  <programlisting>
<![CDATA[
{* выводятся все значния массива $custid *}
{foreach from=$custid item=curr_id}
	id: {$curr_id}<br>
{/foreach}

OUTPUT:

id: 1000<br>
id: 1001<br>
id: 1002<br>
]]>
  </programlisting>
 </example>

 <example>
  <title>foreach key</title>
  <programlisting>
<![CDATA[
{* The key contains the key for each looped value

assignment looks like this:

$smarty->assign("contacts", array(array("phone" => "1", "fax" => "2", "cell" => "3"),
      array("phone" => "555-4444", "fax" => "555-3333", "cell" => "760-1234")));

*}

{foreach name=outer item=contact from=$contacts}
  {foreach key=key item=item from=$contact}
    {$key}: {$item}<br>
  {/foreach}
{/foreach}

OUTPUT:

phone: 1<br>
fax: 2<br>
cell: 3<br>
phone: 555-4444<br>
fax: 555-3333<br>
cell: 760-1234<br>
]]>
  </programlisting>
 </example>

	<para>
		Циклы foreach имеют свои свойства, доступ к которым реализуется через
		{$smarty.foreach.foreachname.varname}, где foreachname это название цикла
		(значение атрибута <emphasis>name</emphasis>), а varname - имя свойства.
	</para>

	<sect2 id="foreach.property.iteration">
		<title>iteration</title>
		<para>
  	Количество отработанных итераций.
		</para>
		<para>
			Отсчет начинается с 1 и увеличивается на единицу на каждой итерации.
		</para>
	</sect2>

	<sect2 id="foreach.property.first">
		<title>first</title>
			<para>
   	<emphasis>first</emphasis> устанавливается в true, если текущая итерация первая.
			</para>
	</sect2>

	<sect2 id="foreach.property.last">
		<title>last</title>
		<para>
  	<emphasis>last</emphasis> устанавливается в true, если текущая итерация последняя.
		</para>
	</sect2>

	<sect2 id="foreach.property.show">
		<title>show</title>
		<para>
   Атрибут <emphasis>show</emphasis> может принимать логические
   значения (истина или ложь). Если ложь, то цикл foreach не будет
   отображаться. Если присутствует тэг foreachelse, то он будет
   отображен.
 	</para>
 </sect2>

	<sect2 id="foreach.property.total">
 	<title>total</title>
		<para>
	 	<emphasis>total</emphasis> хранит количество итераций цикла.
			Может быть использовано как в цикле, так и вне его..
		</para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

