<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.2 Maintainer: freespace Status: ready -->
<sect1 id="language.function.capture">
 <title>capture</title>
 <para>
  capture используется для того, чтобы присвоить вывод шаблона какой-либо 
  переменной вместо его вывода на экран. Любое содержание между {capture
  name="foo"} и {/capture} сохраняется в переменную, указанную в 
  атрибуте name. Затем его можно использовать в шаблоне с помощью
  специальной переменной $smarty.capture.foo, где foo - значение, 
  переданное атрибуту name. Если атрибут name не указан, то 
  используется default. Каждая комманда {capture} должна иметь пару
  {/capture}. capture поддерживает вложение.
 </para>
 <note>
 <title>Техническое замечание</title>
  <para>
   Smarty 1.4.0 - 1.4.4 помещало захваченный вывод в переменную $return.
   С версии 1.4.5 поведение было изменено на использование атрибута name, 
   так что обновите ваши шаблоны соответственно.
  </para>
 </note>
 <caution>
  <para>
   Будте осторожны, сохраняя вывод комманды <command>insert</command>. 
   Если вы используете кэширование и встречаются команды
   <command>insert</command> в области кэширования, то
   не сохраняйте данный вывод.
  </para>
 </caution>
 <para>
  <example>
   <title>Сохранение вывода шаблона</title>
   <programlisting>
<![CDATA[
{* we don't want to print a table row unless content is displayed *}
{capture name=banner}
{include file="get_banner.tpl"}
{/capture}
{if $smarty.capture.banner ne ""}
	<tr>
		<td>
			{$smarty.capture.banner}
		</td>
	</tr>
 {/if}
]]>
   </programlisting>
  </example>
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

