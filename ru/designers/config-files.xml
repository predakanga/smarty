<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.7 Maintainer: freespace Status: ready -->
<chapter id="config.files">
 <title>Конфигурационные файлы</title>
 <para>
  С помощью конфигурационных файлов дизайнеру удобно управлять глобальными
  переменными из одного файла. Например, цветами в шаблонах. Обычно, если
  вы хотите сменить цветувую схему, то необходимо просмотреть каждый шаблон
  и в каждом изменить цвета. С помощью файла конфигурации все цвета могут
  быть вынесены в отдельный файл и только один файл надо будет исправлять.
 </para>
 <example>
  <title>Пример файла конфигурации</title>
  <programlisting>
<![CDATA[
# глобальные переменные
pageTitle = "Main Menu"
bodyBgColor = #000000
tableBgColor = #000000
rowBgColor = #00ff00

[Customer]
pageTitle = "Customer Info"

[Login]
pageTitle = "Login"
focus = "username"
Intro = """Значение, которое занимает больше
           чем одну строку должно быть заключено
           в тройные кавычки."""

# спрятанная секция
[.Database]
host=my.example.com
db=ADDRESSBOOK
user=php-user
pass=foobar
]]>
  </programlisting>
 </example>
 <para>
  Значения <link linkend="language.config.variables">переменных в
  конфигурационных файлах</link> могут заключаться в кавычки, но это не
  обязательно. Можно использовать как двойные, так и одинарные кавычки.
  Если у вас есть значение, которое занимает больше, чем одну строку,
  необходимо заключить его в тройные кавычки (""").
  Можно включать комментарии в файл конфигурации используя любой синтакис,
  который не является допустимым синтаксисом файлов конфигурации.
  Для этих целей рекомендуется использовать символ <literal>#</literal>
  (hash) в начале строки.
 </para>
 <para>
  Конфигурационный файл в примере имеет две секции. Названия секций заключены в
  квадратные скобки []. Названия секций могут быть произвольными строками,
  не содержащими символов <literal>[</literal> или <literal>]</literal>. Четыре
  переменные вначале - глобальные переменные или переменные вне секций.
  Эти переменные всегда загружаются из файла конфигурации. Если загружается
  определенная секция, то глобальные переменные и переменные из этой секции
  становятся доступными. Если переменная существует как глобальная, так и
  внутри секции, то используется версия из секции. Если есть две одинаковые
  переменные в пределах одной секции, то используеться последний встретившийся
  вариант.
 </para>
 <para>
  Файлы конфигурации загружаются в шаблон в помощью функции
  <link linkend="language.function.config.load"><command>
  {config_load}</command></link> (см. также <link
  linkend="api.config.load"><command>config_load()</command></link>).
 </para>
 <para>
  Можно спрятать отдельные переменные или целые секции, добавив к названию
  точку в начале. Это полезно, когда ваше приложение берет некоторые
  переменные, ненужные в шаблоне, из файла конфигурации. Если шаблоны могут
  редактировать третьи лица, то вы можете быть спокойны за ценную информацию
  из файлов конфигураций: они не смогут ее загрузить в шаблон.
 </para>
 <para>
  См. также <link
  linkend="language.function.config.load">{config_load}</link>, <link
  linkend="variable.config.overwrite">$config_overwrite</link>, <link
  linkend="api.get.config.vars">get_config_vars()</link>, <link
  linkend="api.clear.config">clear_config()</link> и <link
  linkend="api.config.load">config_load()</link>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
