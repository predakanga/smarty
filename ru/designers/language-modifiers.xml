<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.23 Maintainer: freespace Status: ready -->
<chapter id="language.modifiers">
 <title>Модификаторы переменных</title>
 <para>
  Модификаторы переменных могут быть прмменены к
  <link linkend="language.syntax.variables">переменным</link>,
  <link linkend="language.custom.functions">пользовательским функциям</link>
  или строкам. Для их применения надо после модифицируемого значения
  указать символ <literal>|</literal> (вертикальная черта) и название модификатора.
  Так же модификаторы могут принимать параметры, которые влияют на их поведение.
  Эти параметры следуют за названием модификатора и разделяются
  <literal>:</literal> (двоеточием). Кроме того, все функции PHP могут быть
  использованы в качестве модификаторов - об этом дальше.
 </para>
 <example>
  <title>Примеры модификаторов</title>
  <programlisting>
<![CDATA[
{* применение модификатора к переменной *}
{$title|upper}

{* модификатор с параметрами *}
{$title|truncate:40:'...'}

{* применение модификатора к аргументу функции *}
{html_table loop=$myvar|upper}

{* с параметрами *}
{html_table loop=$myvar|truncate:40:'...'}

{* применение модификатора к строке *}
{'foobar'|upper}

{* использование date_format для форматирования текущей даты *}
{$smarty.now|date_format:"%Y/%m/%d"}

{* применение модификатора к функции *}
{mailto|upper address='smarty@example.com'}

{* использование функции PHP str_repeat *}
{'='|str_repeat:80}

{* функция PHP count *}
{$myArray|@count}

{* функция PHP shuffle, применяемая к IP адресу сервера *}
{$smarty.server.SERVER_ADDR|shuffle}

(* это приведет в верхний регистр букв и обрежет пробелы у всех элементов массива *}
<select name="name_id">
    {html_options output=$myArray|upper|truncate:20}
</select>
]]>
  </programlisting>
 </example>
 <para>
  Если модификатор применяется к переменной-массиву, то он будет применен к
  каждому элементу массива. Если же требуется применить модификатор к массиву,
  как к переменной, то необходимо перед именем модификатора указать символ
  <literal>@</literal>. Пример: <literal>{$articleTitle|@count}</literal> выведет
  количество елементов в массиве $articleTitle.
 </para>
 
 <para>
  Модификаторы автоматически загружаются из директории
  <link linkend="variable.plugins.dir">$plugins_dir</link>
  или могут быть явно зарегистрированы при помощи
  <link linkend="api.register.modifier">register_modifier()</link>;
  это удобно для использования функции как в PHP-коде, так и в шаблоне.
 </para>

 <para>
  Любая PHP-функция может быть явно использована в качестве модификатора.
  (Предыдущий пример с <literal>@count</literal> на самом деле использует функцию
  PHP, а не модификатор Smarty). Использование PHP-функций в качестве модификаторов
  имеет две маленькие "ловушки": Во-первых, иногда порядок аргументов функции
  не самый удобный (<literal>{"%2.f"|sprintf:$float}</literal> - это рабочий, но
  не совсем удобный вариант. Больше подойдет <literal>{$float|string_format:"%2.f"}</literal>,
  который обеспечивается дистрибутивом Smarty). Во-вторых, в случае включения <link
  linkend="variable.security">$security</link>, все PHP-функции, которые будут
  использованы как модификаторы, должны быть объявлены "безопасными"
  в массиве
  <link linkend="variable.security.settings">$security_settings['MODIFIER_FUNCS']</link>.
 </para>

 <para>
  См. также
  <link linkend="api.register.modifier">register_modifier()</link>,
  <link linkend="api.register.function">register_function()</link>,
  <link linkend="plugins">Плагины - расширение функциональности Smarty</link>
  и
  <link linkend="plugins.modifiers">модификаторы</link>.
 </para>

 &designers.language-modifiers.language-modifier-capitalize;
 &designers.language-modifiers.language-modifier-cat;
 &designers.language-modifiers.language-modifier-count-characters;
 &designers.language-modifiers.language-modifier-count-paragraphs;
 &designers.language-modifiers.language-modifier-count-sentences;
 &designers.language-modifiers.language-modifier-count-words;
 &designers.language-modifiers.language-modifier-date-format;
 &designers.language-modifiers.language-modifier-default;
 &designers.language-modifiers.language-modifier-escape;
 &designers.language-modifiers.language-modifier-indent;
 &designers.language-modifiers.language-modifier-lower;
 &designers.language-modifiers.language-modifier-nl2br;
 &designers.language-modifiers.language-modifier-regex-replace;
 &designers.language-modifiers.language-modifier-replace;
 &designers.language-modifiers.language-modifier-spacify;
 &designers.language-modifiers.language-modifier-string-format;
 &designers.language-modifiers.language-modifier-strip;
 &designers.language-modifiers.language-modifier-strip-tags;
 &designers.language-modifiers.language-modifier-truncate;
 &designers.language-modifiers.language-modifier-upper;
 &designers.language-modifiers.language-modifier-wordwrap;

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
