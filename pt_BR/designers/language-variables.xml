<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
  <chapter id="language.variables">
   <title>Variáveis</title>
   <para>
    O Smarty tem vários tipos diferentes de variáveis. O tipo de variável depende de
    de qual símbolo esta prefixada(ou cercada).
   </para>

   <para>
    Variáveis no Smarty podem ser mostradas diretamente ou usada como argumentos para
    atributos de funções e modificadores, dentro de expressões condicionais, etc.
    Para mostrar uma variável, simplesmente coloque ela entre delimitadores sendo que
    ela seja a única coisa entre eles. Exemplos:
    <programlisting>
{$Name}

{$Contacts[row].Phone}

&lt;body bgcolor="{#bgcolor#}"&gt;</programlisting>
   </para>

   <sect1 id="language.assigned.variables">
    <title>Variáveis definidas do PHP</title>
    <para>
     Variáveis que são definidas do PHP são referenciadas precedendo elas
     com um sinal de sifrão <literal>$</literal>. Variáveis definidas dentro do template
     com a função  <link linkend="language.function.assign">assign</link>
     também são mostradas desta maneira.
    </para>
    <example>

     <title>Variáveis definidas</title>
<programlisting>
Hello {$firstname}, glad to see you could make it.
&lt;p&gt;
Your last login was on {$lastLoginDate}.

MOSTRA:

Hello Doug, glad to see you could make it.
&lt;p&gt;
Your last login was on January 11th, 2001.</programlisting>
</example>

    <sect2 id="language.variables.assoc.arrays">
     <title>Associative arrays</title>
      <para>
       Você também pode referenciar matrizes associativas que são definidas no PHP
       especificando a chave depois do símbolo '.'
       (ponto).
      </para>
<example>
<title>Acessando variáveis de matriz associativa</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('Contacts',
    array('fax' => '555-222-9876',
          'email' => 'zaphod@slartibartfast.com',
          'phone' => array('home' => '555-444-3333',
                           'cell' => '555-111-1234')));
$smarty-&gt;display('index.tpl');

index.tpl:

{$Contacts.fax}&lt;br&gt;
{$Contacts.email}&lt;br&gt;
{* you can print arrays of arrays as well *}
{$Contacts.phone.home}&lt;br&gt;
{$Contacts.phone.cell}&lt;br&gt;

MOSTRA:

555-222-9876&lt;br&gt;
zaphod@slartibartfast.com&lt;br&gt;
555-444-3333&lt;br&gt;
555-111-1234&lt;br&gt;</programlisting>
</example>
	</sect2>
        <sect2 id="language.variables.array.indexes">
   	 <title>Índices de Matrizes</title>
	  <para>
           Você pode referencia matrizes pelo seu índice, muito
           parecido com a sintaxe nativa do PHP.
	</para>
<example>
<title>Acesando matrizes por seus índices</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('Contacts',
    array('555-222-9876',
          'zaphod@slartibartfast.com',
          array('555-444-3333',
                '555-111-1234')));
$smarty-&gt;display('index.tpl');

index.tpl:

{$Contacts[0]}&lt;br&gt;
{$Contacts[1]}&lt;br&gt;
{* you can print arrays of arrays as well *}
{$Contacts[2][0]}&lt;br&gt;
{$Contacts[2][1]}&lt;br&gt;

MOSTRA:

555-222-9876&lt;br&gt;
zaphod@slartibartfast.com&lt;br&gt;
555-444-3333&lt;br&gt;
555-111-1234&lt;br&gt;</programlisting>
</example>
	</sect2>
        <sect2 id="language.variables.objects">
	<title>Objetos</title>
	<para>
         Propriedades de objetos definidos do PHP podem ser referenciados
         especificando-se o nome da propriedade depois do símbolo '-&gt;'.
	</para>
<example>
<title>Acessando propriedades de objetos</title>
<programlisting>
name: {$person-&gt;name}&lt;br&gt;
email: {$person-&gt;email}&lt;br&gt;

MOSTRA:

name: Zaphod Beeblebrox&lt;br&gt;
email: zaphod@slartibartfast.com&lt;br&gt;</programlisting>
</example>
	</sect2>
       </sect1>

       <sect1 id="language.config.variables">
			<title>Variáveis carregadas de arquivos de configuração</title>
			<para>
             Variáveis que são carregadas de arquivos de configuração são referenciadas
             colocando-se elas entre cancelas (#), ou com a variável smarty
			 <link
			 linkend="language.variables.smarty.config">$smarty.config</link>.
			 A segunda sintaxe é útil para coloca-las
             entre aspas em um atributo.
			</para>
<example>

<title>Variáveis de configuração</title>
<programlisting>
foo.conf:

pageTitle = "This is mine"
bodyBgColor = "#eeeeee"
tableBorderSize = "3"
tableBgColor = "#bbbbbb"
rowBgColor = "#cccccc"

index.tpl:

{config_load file="foo.conf"}
&lt;html&gt;
&lt;title&gt;{#pageTitle#}&lt;/title&gt;
&lt;body bgcolor="{#bodyBgColor#}"&gt;
&lt;table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}"&gt;
&lt;tr bgcolor="{#rowBgColor#}"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;

index.tpl: (sintaxe alternativa)

{config_load file="foo.conf"}
&lt;html&gt;
&lt;title&gt;{$smarty.config.pageTitle}&lt;/title&gt;
&lt;body bgcolor="{$smarty.config.bodyBgColor}"&gt;
&lt;table border="{$smarty.config.tableBorderSize}" bgcolor="{$smarty.config.tableBgColor}"&gt;
&lt;tr bgcolor="{$smarty.config.rowBgColor}"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;


SAÍDA: (mesma para ambos exemplos)

&lt;html&gt;
&lt;title&gt;This is mine&lt;/title&gt;
&lt;body bgcolor="#eeeeee"&gt;
&lt;table border="3" bgcolor="#bbbbbb"&gt;
&lt;tr bgcolor="#cccccc"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
</example>
			<para>
            Variáveis de um arquivo de configuração não podem ser usadas até
            que sejam carregadas de um arquivo de configuração. Este procedimento
            é explicado posteriormente neste documento em
            <command>config_load</command>.
			</para>
		</sect1>

        <sect1 id="language.variables.smarty">
         <title>A variável reservada {$smarty}</title>
         <para>
          A variável reservada {$smarty} pode ser utilizada para acessar variáveis
          especiais do template. Segue uma lista completa.
         </para>

         <sect2 id="language.variables.smarty.request">
          <title>Variáveis Request</title>
          <para>
           Variáveis request como get, post, cookies, server,
           environment, e session podem ser acessadas como mostrado
           nos exemplos abaixo:
          </para>
          <example>

           <title>Mostrando váriáveis request</title>
           <programlisting>
{* mostra o valor de page da URL (GET) http://www.domain.com/index.php?page=foo *}
{$smarty.get.page}

{* mostra a variável "page" de um formulário (POST) *}
{$smarty.post.page}

{* mostra o valor do cookie "username" *}
{$smarty.cookies.username}

{* mostra a variável do servidor "SERVER_NAME" *}
{$smarty.server.SERVER_NAME}

{* mostra a variável de ambiente do sistema "PATH" *}
{$smarty.env.PATH}

{* mostra a variável de session do php "id" *}
{$smarty.session.id}

{* mostra a variável "username" da união de get/post/cookies/server/env *}
{$smarty.request.username}</programlisting>
</example>
		</sect2>

        <sect2 id="language.variables.smarty.now">
			<title>{$smarty.now}</title>
			<para>
             O timestamp atual pode ser acessado com {$smarty.now}.
             O número reflete o número de segundos passados desde o assim chamado
             Epoch (1 de Janeiro de 1970) e pode ser passado diretamente para o
             modificador date_format para mostrar a data.
			</para>
<example>

<title>Usando {$smarty.now}</title>
<programlisting>
{* usa o modificador date_format para mostrar a data e hora atuais *}
{$smarty.now|date_format:"%Y-%m-%d %H:%M:%S"}</programlisting>
</example>
		</sect2>
        <sect2 id="language.variables.smarty.const">
			<title>{$smarty.const}</title>
			<para>
             Você pode acessar o valor de constantes PHP diretamente.
			</para>
<example>

<title>Usando {$smarty.const}</title>
<programlisting>
{$smarty.const._MY_CONST_VAL}</programlisting>
</example>
		</sect2>

		<sect2 id="language.variables.smarty.capture">
			<title>{$smarty.capture}</title>
			<para>
			 A saída capturada via {capture}..{/capture} pode ser acessada usando a variável
             {$smarty}. Veja a a seção sobre
			<link linkend="language.function.capture">capture</link> para um exemplo.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.config">
			<title>{$smarty.config}</title>
			<para>
			A variável {$smarty} pode ser usada para referir variáveis de configuração carregadas.
            {$smarty.config.foo} é um sinonimo para {#foo#}. Veja a seção sobre
			<link linkend="language.function.config.load">config_load</link> para um exemplo.
			</para>
		</sect2>

        <sect2 id="language.variables.smarty.loops">
			<title>{$smarty.section}, {$smarty.foreach}</title>
			<para>
			A variável {$smarty} pode ser usada para se referir a propriedades 'section' e
			'foreach' de loop. Veja a documentação sobre
			<link linkend="language.function.section">section</link> e
			<link linkend="language.function.foreach">foreach</link>.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.template">
			<title>{$smarty.template}</title>
			<para>
             Esta variável contém o nome do template
             atual que esta sendo processado.
			</para>
		</sect2>

		</sect1>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->