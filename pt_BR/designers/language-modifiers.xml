<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
    <chapter id="language.modifiers">
     <title>Modificadores de variáveis</title>
     <para>
      Modificadores de variáveis podem ser aplicados a variáveis, funções customizadas
      ou strings. Para aplicar um modificador, especifique o valor seguido por
      <literal>|</literal>(pipe) e o nome do modificador. Um modificador aceita
      parâmetros adicionais que afetam o seu funcionamento. Estes parâmetros seguem
      o nome do modificador e são separados por <literal>:</literal> (dois pontos).
     </para>
     <example>
      <title>Exemplo de modificador</title>
      <programlisting>
{* Transforma para maiúsculas *}
&lt;h2&gt;{$title|upper}&lt;/h2&gt;

{* Trunca o $topic para 40 caracteres usa ... no final *}
Topic: {$topic|truncate:40:"..."}

{* formata uma string literal *}
{"now"|date_format:"%Y/%m/%d"}

{* aplica um modificador para uma função customizada *}
{mailto|upper address="me@domain.dom"}</programlisting>
     </example>
     <para>
      Se você aplicar um modificador para uma matriz ao invés de o valor de uma variável,
      o modificador vai ser aplicado em cada valor desta matriz. Se você realmente quiser
      que o funciona em uma matriz inteira, você deve colocar um simbolo
      <literal>@</literal> antes do nome do modificador, assim como:
      <literal>{$articleTitle|@count}</literal> (isto irá mostrar o número de elementos 
      na matriz $articleTitle.)
     </para>
     <para>
      Modificadores podem ser carregados automaticamente a partir do seu <link
      linkend="variable.plugins.dir">$plugins_dir</link> (veja também:
      <link linkend="plugins.naming.conventions">Naming
      Conventions</link>) ou podem ser registrados explicitamente (veja: <link
      linkend="api.register.modifier">register_modifier</link>).
      Adicionalmente, todas as funções do php podem ser utilizadas como
      modificadores implicitamente. (O exemplo
      <literal>@count</literal> acima usa atualmente a função count
      do php e não um modificador do Smarty). Usar funções do
      php como modificadores tem dois pequenos problemas: Primeiro, algumas
      vezes a ordem dos parâmetros da função não é a desejavel
      (<literal>{"%2.f"|sprintf:$float}</literal> atualmente funciona, mas pede algo
      mais intuitivo <literal>{Por exemplo:
      $float|string_format:"%2.f"}</literal> que é provido pela distribuição
      do Smarty). Segundo: com <link
      linkend="variable.security">$security</link> ativado, todas as funções do 
      php que sejam utilizados como modificadores devem ser declaradas como
      confiáveis na matriz <link linkend="variable.security.settings">
      $security_settings['MODIFIER_FUNCS']</link>.
     </para>

&designers.language-modifiers.language-modifier-capitalize;
&designers.language-modifiers.language-modifier-count-characters;
&designers.language-modifiers.language-modifier-cat;
&designers.language-modifiers.language-modifier-count-paragraphs;
&designers.language-modifiers.language-modifier-count-sentences;
&designers.language-modifiers.language-modifier-count-words;
&designers.language-modifiers.language-modifier-date-format;
&designers.language-modifiers.language-modifier-default;
&designers.language-modifiers.language-modifier-escape;
&designers.language-modifiers.language-modifier-indent;
&designers.language-modifiers.language-modifier-lower;
&designers.language-modifiers.language-modifier-nl2br;
&designers.language-modifiers.language-modifier-regex-replace;
&designers.language-modifiers.language-modifier-replace;
&designers.language-modifiers.language-modifier-spacify;
&designers.language-modifiers.language-modifier-string-format;
&designers.language-modifiers.language-modifier-strip;
&designers.language-modifiers.language-modifier-strip-tags;
&designers.language-modifiers.language-modifier-truncate;
&designers.language-modifiers.language-modifier-upper;
&designers.language-modifiers.language-modifier-wordwrap;

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->