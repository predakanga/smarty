<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: ready -->		
<sect1 id="api.config.load">
			<title>config_load</title>
   <methodsynopsis>
   <type>void</type><methodname>config_load</methodname>
    <methodparam><type>string</type><parameter>file</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>section</parameter></methodparam>
   </methodsynopsis>
			<para>
			Isso carrega o arquivo de configuração de dados e fixa-o para o 
			template. Isso funciona idêntico a função <link
			linkend="language.function.config.load">
			config_load</link>.
			</para>
		  <note>
		  <title>Notas Técnicas</title>
    	  <para>
		   À partir da Smarty 2.4.0, variáveis de template fixadas são
		   mantidas através de fetch() e display(). Variáveis de configuração carregadas
		   de config_load() são sempre de escopo global. Arquivos de configuração
		   também são compilados para execução rápida, e repeita o <link
		   linkend="variable.force.compile">force_compile</link> e <link
		   linkend="variable.compile.check">compile_check</link> parâmetros de configuração.
    	  </para>
		  </note>
<example>
<title>config_load</title>
<programlisting>
// load config variables and assign them
$smarty->config_load('my.conf');

// load a section
$smarty->config_load('my.conf','foobar');</programlisting>
</example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->