<part id="smarty.for.designers"><!-- En Version: 1.86 -->
 <title>Smarty para Designers de Template</title>

  <chapter id="language.basic.syntax">
   <title>Sintaxe Básica</title>
   <para>
    Todas as tags de template do Smarty estão fechadas com delimitadores.
    Por padrão, estes delimitadores são <literal>{</literal> e
    <literal>}</literal>, mas eles podem ser mudados.
   </para>
   <para>
    Para estes exemplos, nós iremos assumir que você está usando os
    delimitadores padrão. No Smarty, todo o conteúdo fora dos delimitadores é
    mostrado como conteúdo estatico, ou sem modificações. Quando o Smarty encontra
    tags de template, ele tenta interpreta-las, e então mostra a saída
    apropriada em seu lugar.
   </para>

   <sect1 id="language.syntax.comments">
    <title>Comentários</title>
    <para>
     Comentários de template são cercados por asteriscos, e são cercados por
     delimitadores, assim: {* este é um comentário *}.
     Comentários Smarty não são mostrado na saída final do template.
     Eles são usados para fazer notas internas nos templates.
    </para>
    <example>
     <title>Comentários</title>
     <programlisting>
{* Smarty *}

{* inclui o arquivo header aqui *}
{include file="header.tpl"}

{include file=$includeFile}

{include file=#includeFile#}

{* Mostra listas dropdown *}
&lt;SELECT name=company&gt;
{html_options values=$vals selected=$selected output=$output}
&lt;/SELECT&gt;</programlisting>
    </example>
   </sect1>

   <sect1 id="language.syntax.functions">
    <title>Funções</title>
    <para>
     Cada tag Smarty mostra uma
     <link linkend="language.variables">variável</link> ou utiliza algum tipo de
     função. Funções são processadas e mostradas colocando-se a função e seus
     atributos entre delimitadores, assim: {funcname
     attr1="val" attr2="val"}.
    </para>
    <example>
     <title>Sintaxe de funções</title>
     <programlisting>
{config_load file="colors.conf"}

{include file="header.tpl"}

{if $highlight_name}
	Welcome, &lt;font color="{#fontColor#}"&gt;{$name}!&lt;/font&gt;
{else}
	Welcome, {$name}!
{/if}

{include file="footer.tpl"}</programlisting>
    </example>
    <para>
     Ambas as funções internas e as funções customizadas tem a mesma sintaxe nos
     templates. Funções internas são o funcionamento do Smarty,
     assim como <command>if</command>, <command>section</command> e
     <command>strip</command>. Elas não podem ser modificadas. Funções customizadas
     são funções adicionais implementadas por plugins. Elas podem ser modificadas
     como você quiser, ou você pode adionar novas. <command>html_options</command> e
     <command>html_select_date</command> são exemplos de funções customizadas.
    </para>
   </sect1>

   <sect1 id="language.syntax.attributes">
    <title>Atributos</title>
    <para>
     A maioria das funções levam atributos que especificam ou modificam o seu
     funcionamento. Atributos para funções Smarty são muito parecidos como
     atributos HTML. Valores estáticos são precisam estar entre aspas,
     mas é recomendados para strings literais. Variáveis também podem ser
     usadas, e não precisam estar entre aspas.
    </para>
    <para>
     Alguns atributos requerem valores booleanos (true ou false). Estes podem
     ser especificados sem aspas <literal>true</literal>,
     <literal>on</literal>, e <literal>yes</literal>, ou
     <literal>false</literal>, <literal>off</literal>, e
     <literal>no</literal>.
    </para>
    <example>
     <title>Sintaxe de atributos de funções</title>
     <programlisting>
{include file="header.tpl"}

{include file=$includeFile}

{include file=#includeFile#}

{html_select_date display_days=yes}

&lt;SELECT name=company&gt;
{html_options values=$vals selected=$selected output=$output}
&lt;/SELECT&gt;</programlisting>
</example>
	</sect1>
   <sect1 id="language.syntax.quotes">
    <title>Colocando Variáveis em Aspas Duplas</title>
    <para>
    Smarty irá reconhecer variáveis entre aspas duplas enquanto
    as variáveis conterem apenas números, letras, sublinhados e conchetes
    []. Com qualquer outro caractere (pontos, referencia de objetos, etc.) as variáveis
    devem estar entre apóstrofos.
    </para>
    <example>
     <title>Sintaxe entre aspas</title>
     <programlisting>
EXEMPLOS DE SINTAXE:
{func var="test $foo test"}       &lt;-- vê $foo
{func var="test $foo_bar test"}   &lt;-- vê $foo_bar
{func var="test $foo[0] test"}    &lt;-- vê $foo[0]
{func var="test $foo[bar] test"}  &lt;-- vê $foo[bar]
{func var="test $foo.bar test"}   &lt;-- vê $foo (not $foo.bar)
{func var="test `$foo.bar` test"} &lt;-- vê $foo.bar

EXEMPLOS PRATICOS:
{include file="subdir/$tpl_name.tpl"} &lt;-- irá substituir $tpl_name com o valor
{cycle values="one,two,`$smarty.config.myval`"} &lt;-- deve ter apóstrofos</programlisting>
</example>
		</sect1>
   <sect1 id="language.math">
    <title>Matemática</title>
    <para>
    Matemática pode ser aplicada diretamente em valores de variáveis.
    </para>
    <example>
     <title>Exemplos de matemática</title>
     <programlisting>
{$foo+1}

{$foo*$bar}

{* alguns exemplos mais complicados *}

{$foo-&gt;bar-$bar[1]*$baz-&gt;foo-&gt;bar()-3*7}

{if ($foo+$bar.test%$baz*134232+10+$b+10)}

{$foo|truncate:"`$fooTruncCount/$barTruncFactor-1`"}

{assign var="foo" value="`$foo+$bar`"}</programlisting>
</example>
	</sect1>

  </chapter>

  <chapter id="language.variables">
   <title>Variáveis</title>
   <para>
    O Smarty tem vários tipos diferentes de variáveis. O tipo de variável depende de
    de qual símbolo esta prefixada(ou cercada).
   </para>

   <para>
    Variáveis no Smarty podem ser mostradas diretamente ou usada como argumentos para
    atributos de funções e modificadores, dentro de expressões condicionais, etc.
    Para mostrar uma variável, simplesmente coloque ela entre delimitadores sendo que
    ela seja a única coisa entre eles. Exemplos:
    <programlisting>
{$Name}

{$Contacts[row].Phone}

&lt;body bgcolor="{#bgcolor#}"&gt;</programlisting>
   </para>

   <sect1 id="language.assigned.variables">
    <title>Variáveis definidas do PHP</title>
    <para>
     Variáveis que são definidas do PHP são referenciadas precedendo elas
     com um sinal de sifrão <literal>$</literal>. Variáveis definidas dentro do template
     com a função  <link linkend="language.function.assign">assign</link>
     também são mostradas desta maneira.
    </para>
    <example>

     <title>Variáveis definidas</title>
<programlisting>
Hello {$firstname}, glad to see you could make it.
&lt;p&gt;
Your last login was on {$lastLoginDate}.

MOSTRA:

Hello Doug, glad to see you could make it.
&lt;p&gt;
Your last login was on January 11th, 2001.</programlisting>
</example>

    <sect2 id="language.variables.assoc.arrays">
     <title>Associative arrays</title>
      <para>
       Você também pode referenciar matrizes associativas que são definidas no PHP
       especificando a chave depois do símbolo '.'
       (ponto).
      </para>
<example>
<title>Acessando variáveis de matriz associativa</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('Contacts',
    array('fax' => '555-222-9876',
          'email' => 'zaphod@slartibartfast.com',
          'phone' => array('home' => '555-444-3333',
                           'cell' => '555-111-1234')));
$smarty-&gt;display('index.tpl');

index.tpl:

{$Contacts.fax}&lt;br&gt;
{$Contacts.email}&lt;br&gt;
{* you can print arrays of arrays as well *}
{$Contacts.phone.home}&lt;br&gt;
{$Contacts.phone.cell}&lt;br&gt;

MOSTRA:

555-222-9876&lt;br&gt;
zaphod@slartibartfast.com&lt;br&gt;
555-444-3333&lt;br&gt;
555-111-1234&lt;br&gt;</programlisting>
</example>
	</sect2>
        <sect2 id="language.variables.array.indexes">
   	 <title>Índices de Matrizes</title>
	  <para>
           Você pode referencia matrizes pelo seu índice, muito
           parecido com a sintaxe nativa do PHP.
	</para>
<example>
<title>Acesando matrizes por seus índices</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('Contacts',
    array('555-222-9876',
          'zaphod@slartibartfast.com',
          array('555-444-3333',
                '555-111-1234')));
$smarty-&gt;display('index.tpl');

index.tpl:

{$Contacts[0]}&lt;br&gt;
{$Contacts[1]}&lt;br&gt;
{* you can print arrays of arrays as well *}
{$Contacts[2][0]}&lt;br&gt;
{$Contacts[2][1]}&lt;br&gt;

MOSTRA:

555-222-9876&lt;br&gt;
zaphod@slartibartfast.com&lt;br&gt;
555-444-3333&lt;br&gt;
555-111-1234&lt;br&gt;</programlisting>
</example>
	</sect2>
        <sect2 id="language.variables.objects">
	<title>Objetos</title>
	<para>
         Propriedades de objetos definidos do PHP podem ser referenciados
         especificando-se o nome da propriedade depois do símbolo '-&gt;'.
	</para>
<example>
<title>Acessando propriedades de objetos</title>
<programlisting>
name: {$person-&gt;name}&lt;br&gt;
email: {$person-&gt;email}&lt;br&gt;

MOSTRA:

name: Zaphod Beeblebrox&lt;br&gt;
email: zaphod@slartibartfast.com&lt;br&gt;</programlisting>
</example>
	</sect2>
       </sect1>

       <sect1 id="language.config.variables">
			<title>Variáveis carregadas de arquivos de configuração</title>
			<para>
             Variáveis que são carregadas de arquivos de configuração são referenciadas
             colocando-se elas entre cancelas (#), ou com a variável smarty
			 <link
			 linkend="language.variables.smarty.config">$smarty.config</link>.
			 A segunda sintaxe é útil para coloca-las
             entre aspas em um atributo.
			</para>
<example>

<title>Variáveis de configuração</title>
<programlisting>
foo.conf:

pageTitle = "This is mine"
bodyBgColor = "#eeeeee"
tableBorderSize = "3"
tableBgColor = "#bbbbbb"
rowBgColor = "#cccccc"

index.tpl:

{config_load file="foo.conf"}
&lt;html&gt;
&lt;title&gt;{#pageTitle#}&lt;/title&gt;
&lt;body bgcolor="{#bodyBgColor#}"&gt;
&lt;table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}"&gt;
&lt;tr bgcolor="{#rowBgColor#}"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;

index.tpl: (sintaxe alternativa)

{config_load file="foo.conf"}
&lt;html&gt;
&lt;title&gt;{$smarty.config.pageTitle}&lt;/title&gt;
&lt;body bgcolor="{$smarty.config.bodyBgColor}"&gt;
&lt;table border="{$smarty.config.tableBorderSize}" bgcolor="{$smarty.config.tableBgColor}"&gt;
&lt;tr bgcolor="{$smarty.config.rowBgColor}"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;


SAÍDA: (mesma para ambos exemplos)

&lt;html&gt;
&lt;title&gt;This is mine&lt;/title&gt;
&lt;body bgcolor="#eeeeee"&gt;
&lt;table border="3" bgcolor="#bbbbbb"&gt;
&lt;tr bgcolor="#cccccc"&gt;
	&lt;td&gt;First&lt;/td&gt;
	&lt;td&gt;Last&lt;/td&gt;
	&lt;td&gt;Address&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
</example>
			<para>
            Variáveis de um arquivo de configuração não podem ser usadas até
            que sejam carregadas de um arquivo de configuração. Este procedimento
            é explicado posteriormente neste documento em
            <command>config_load</command>.
			</para>
		</sect1>

        <sect1 id="language.variables.smarty">
         <title>A variável reservada {$smarty}</title>
         <para>
          A variável reservada {$smarty} pode ser utilizada para acessar variáveis
          especiais do template. Segue uma lista completa.
         </para>

         <sect2 id="language.variables.smarty.request">
          <title>Variáveis Request</title>
          <para>
           Variáveis request como get, post, cookies, server,
           environment, e session podem ser acessadas como mostrado
           nos exemplos abaixo:
          </para>
          <example>

           <title>Mostrando váriáveis request</title>
           <programlisting>
{* mostra o valor de page da URL (GET) http://www.domain.com/index.php?page=foo *}
{$smarty.get.page}

{* mostra a variável "page" de um formulário (POST) *}
{$smarty.post.page}

{* mostra o valor do cookie "username" *}
{$smarty.cookies.username}

{* mostra a variável do servidor "SERVER_NAME" *}
{$smarty.server.SERVER_NAME}

{* mostra a variável de ambiente do sistema "PATH" *}
{$smarty.env.PATH}

{* mostra a variável de session do php "id" *}
{$smarty.session.id}

{* mostra a variável "username" da união de get/post/cookies/server/env *}
{$smarty.request.username}</programlisting>
</example>
		</sect2>

        <sect2 id="language.variables.smarty.now">
			<title>{$smarty.now}</title>
			<para>
             O timestamp atual pode ser acessado com {$smarty.now}.
             O número reflete o número de segundos passados desde o assim chamado
             Epoch (1 de Janeiro de 1970) e pode ser passado diretamente para o
             modificador date_format para mostrar a data.
			</para>
<example>

<title>Usando {$smarty.now}</title>
<programlisting>
{* usa o modificador date_format para mostrar a data e hora atuais *}
{$smarty.now|date_format:"%Y-%m-%d %H:%M:%S"}</programlisting>
</example>
		</sect2>
        <sect2 id="language.variables.smarty.const">
			<title>{$smarty.const}</title>
			<para>
             Você pode acessar o valor de constantes PHP diretamente.
			</para>
<example>

<title>Usando {$smarty.const}</title>
<programlisting>
{$smarty.const._MY_CONST_VAL}</programlisting>
</example>
		</sect2>

		<sect2 id="language.variables.smarty.capture">
			<title>{$smarty.capture}</title>
			<para>
			 A saída capturada via {capture}..{/capture} pode ser acessada usando a variável
             {$smarty}. Veja a a seção sobre
			<link linkend="language.function.capture">capture</link> para um exemplo.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.config">
			<title>{$smarty.config}</title>
			<para>
			A variável {$smarty} pode ser usada para referir variáveis de configuração carregadas.
            {$smarty.config.foo} é um sinonimo para {#foo#}. Veja a seção sobre
			<link linkend="language.function.config.load">config_load</link> para um exemplo.
			</para>
		</sect2>

        <sect2 id="language.variables.smarty.loops">
			<title>{$smarty.section}, {$smarty.foreach}</title>
			<para>
			A variável {$smarty} pode ser usada para se referir a propriedades 'section' e
			'foreach' de loop. Veja a documentação sobre
			<link linkend="language.function.section">section</link> e
			<link linkend="language.function.foreach">foreach</link>.
			</para>
		</sect2>

		<sect2 id="language.variables.smarty.template">
			<title>{$smarty.template}</title>
			<para>
             Esta variável contém o nome do template
             atual que esta sendo processado.
			</para>
		</sect2>

		</sect1>
	</chapter>

    <chapter id="language.modifiers">
     <title>Modificadores de variáveis</title>
     <para>
      Modificadores de variáveis podem ser aplicados a variáveis, funções customizadas
      ou strings. Para aplicar um modificador, especifique o valor seguido por
      <literal>|</literal>(pipe) e o nome do modificador. Um modificador aceita
      parâmetros adicionais que afetam o seu funcionamento. Estes parâmetros seguem
      o nome do modificador e são separados por <literal>:</literal> (dois pontos).
     </para>
     <example>
      <title>Exemplo de modificador</title>
      <programlisting>
{* Transforma para maiúsculas *}
&lt;h2&gt;{$title|upper}&lt;/h2&gt;

{* Trunca o $topic para 40 caracteres usa ... no final *}
Topic: {$topic|truncate:40:"..."}

{* formata uma string literal *}
{"now"|date_format:"%Y/%m/%d"}

{* aplica um modificador para uma função customizada *}
{mailto|upper address="me@domain.dom"}</programlisting>
     </example>
     <para>
      Se você aplicar um modificador para uma matriz ao invés de o valor de uma variável,
      o modificador vai ser aplicado em cada valor desta matriz. Se você realmente quiser
      que o funciona em uma matriz inteira, você deve colocar um simbolo
      <literal>@</literal> antes do nome do modificador, assim como:
      <literal>{$articleTitle|@count}</literal> (isto irá mostrar o número de elementos 
      na matriz $articleTitle.)
     </para>
     <para>
      Modificadores podem ser carregados automaticamente a partir do seu <link
      linkend="variable.plugins.dir">$plugins_dir</link> (veja também:
      <link linkend="plugins.naming.conventions">Naming
      Conventions</link>) ou podem ser registrados explicitamente (veja: <link
      linkend="api.register.modifier">register_modifier</link>).
      Adicionalmente, todas as funções do php podem ser utilizadas como
      modificadores implicitamente. (O exemplo
      <literal>@count</literal> acima usa atualmente a função count
      do php e não um modificador do Smarty). Usar funções do
      php como modificadores tem dois pequenos problemas: Primeiro, algumas
      vezes a ordem dos parâmetros da função não é a desejavel
      (<literal>{"%2.f"|sprintf:$float}</literal> atualmente funciona, mas pede algo
      mais intuitivo <literal>{Por exemplo:
      $float|string_format:"%2.f"}</literal> que é provido pela distribuição
      do Smarty). Segundo: com <link
      linkend="variable.security">$security</link> ativado, todas as funções do 
      php que sejam utilizados como modificadores devem ser declaradas como
      confiáveis na matriz <link linkend="variable.security.settings">
      $security_settings['MODIFIER_FUNCS']</link>.
     </para>

      <sect1 id="language.modifier.capitalize">
       <title>capitalize</title>
       <para>
        Isto é usado para converter para maiúsculas a primeira letra de todas as palavras em uma variável.
       </para>
       <example>
        <title>capitalize</title>
        <programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Police begin campaign to rundown jaywalkers.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|capitalize}

SAÍDA:

Police begin campaign to rundown jaywalkers.
Police Begin Campaign To Rundown Jaywalkers.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.count.characters">
			<title>count_characters</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry>false</entry>
                        <entry>Isto determina quando incluir ou não os espaços em
                        branco na contagem.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Isto é usado para contar o número de caracteres em uma variável.
			</para>
<example>
<title>count_characters</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Cold Wave Linked to Temperatures.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|count_characters}
{$articleTitle|count_characters:true}
MOSTRA:

Cold Wave Linked to Temperatures.
29
32</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.cat">
			<title>cat</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="cat" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>cat</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>Este é o valor para concatenar com a variável dada.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Este valor é concatenado com a variável dada.
			</para>
<example>
<title>cat</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Psychics predict world didn't end");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle|cat:" yesterday."}

MOSTRA:

Psychics predict world didn't end yesterday.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.count.paragraphs">
			<title>count_paragraphs</title>
			<para>
			 Isto é usado para contar o número de paragrafos em uma variável.
			</para>
<example>
<title>count_paragraphs</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "War Dims Hope for Peace. Child's Death Ruins
Couple's Holiday.\n\nMan is Fatally Slain. Death Causes Loneliness, Feeling of Isolation.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|count_paragraphs}

MOSTRA:

War Dims Hope for Peace. Child's Death Ruins Couple's Holiday.

Man is Fatally Slain. Death Causes Loneliness, Feeling of Isolation.
2</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.count.sentences">
			<title>count_sentences</title>
			<para>
			Isto é usado para contar o número de sentenças em uma variável.
			</para>
<example>
<title>count_sentences</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Two Soviet Ships Collide - One Dies. Enraged Cow Injures Farmer with Axe.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|count_sentences}

MOSTRA:

Two Soviet Ships Collide - One Dies. Enraged Cow Injures Farmer with Axe.
2</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.count.words">
			<title>count_words</title>
			<para>
			Isto é usado para contar o número de palavras em uma variável.
			</para>
<example>
<title>count_words</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Dealers Will Hear Car Talk at Noon.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|count_words}

MOSTRA:

Dealers Will Hear Car Talk at Noon.
7</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.date.format">
			<title>date_format</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>%b %e, %Y</entry>
                        <entry>Este é o formato para a data mostrada.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>n/a</entry>
                        <entry>Esta é a data padrão se a entrada estiver vazia.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
	<para>
            Isto formata a data e hora no formato strftime() indicado.
            Datas podem ser passadas para o Smarty como timestamps unix, timestamps mysql,
            ou qualquer string composta de mês dia ano(interpretavel por strtotime).
            Designers podem então usar date_format para ter um controle completo da formatação
            da data. Se a data passada para date_format estiver vazia e um segundo parâmetro
            for passado, este será usado como a data 
            para formatar.
			</para>
<example>
<title>date_format</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('yesterday', strtotime('-1 day'));
$smarty-&gt;display('index.tpl');

index.tpl:


{$smarty.now|date_format}
{$smarty.now|date_format:"%A, %B %e, %Y"}
{$smarty.now|date_format:"%H:%M:%S"}
{$yesterday|date_format}
{$yesterday|date_format:"%A, %B %e, %Y"}
{$yesterday|date_format:"%H:%M:%S"}

MOSTRA:

Feb 6, 2001
Tuesday, February 6, 2001
14:33:00
Feb 5, 2001
Monday, February 5, 2001
14:33:00</programlisting>
</example>
<example>
<title>date_format conversion specifiers</title>
<programlisting>
%a - nome do dia da semana abreviado de acordo com o local atual

%A - nome do dia da semana inteiro de acordo com o local atual

%b - nome do mês abreviado de acordo com o local atual

%B - nome do mês inteiro de acordo com o local atual

%c - representação preferencial de data e hora para o local atual

%C - ano com dois dígitos (o ano dividido por 100 e truncado para um inteiro, intervalo de 00 a 99)

%d - dia do mês como um número decimal (intervalo de 00 a 31)

%D - o mesmo que %m/%d/%y

%e - dia do mês como um número decimal, um único dígito é precedido por um
espaço (intervalo de 1 a 31)

%g - ano baseado na semana, sem o século [00,99]

%G - ano baseado na semana, incluindo o século [0000,9999]

%h - o mesmo que %b

%H - hora como um número decimal usando um relógio de 24 horas (intervalo de 00 a 23)

%I - hora como um número decimal usando um relógio de 12 horas (intervalo de 01 a 12)

%j - dia do ano como um número decimal (intervalo de 001 a 366)

%k - hora (relógio de 24 horas) digítos únicos são precedidos por um espaço em branco (intervalo de 0 a 23)
      
%l - hora como um número decimal usando um relógio de 12 horas, digítos unicos são precedidos
por um espaço em branco (intervalo de 1 a 12)

%m - mês como número decimal (intervalo de 01 a 12)

%M - minuto como um número decimal

%n - caractere de nova linha 

%p - ou `am' ou `pm' de acordo com o valor de hora dado, ou as strings correspondentes ao local atual 

%r - hora na notação a.m. e p.m.  

%R - hora na notação de 24 horas

%S - segundo como número decimal 

%t - caractere tab 

%T - hora atual, igual a %H:%M:%S 

%u - dia da semana como um número decimal [1,7], com 1 representando segunda-feira 

%U - número da semana do ano atual como um número decimal, começando com o primeiro domingo como primeiro dia da primeira semana 

%V - número da semana do ano atual como um número decimal de acordo com The ISO 8601:1988,
intervalo de 01 a 53, aonde a semana 1 é a primeira semana que tenha pelo menos quatro dias no ano atual, sendo domingo o primeiro dia da semana. 

%w - dia da semana como decimal, domingo sendo 0 

%W - número da semana do ano atual como número decimal, começando com a primeira segunda como primeiro dia da primeira semana  

%x - representação preferencial da data para o local atualsem a hora 

%X - representação preferencial da hora para o local atual sem a data 

%y - ano como número decimal sem o século (intervalo de 00 a 99) 

%Y - ano como número decimal incluindo o século 

%Z - zona horária ou nome ou abreviação 

%% - um caractere `%' 


NOTA PARA PROGRAMADORES: date_format é essencialmente um wrapper para a função strftime() do PHP.
Você deverá ter mais ou menos especificadores de conversão disponíveis de acordo com a 
função strftime() do sistema operacional aonde o PHP foi compilado. De uma olhada
na página de manual do seu sistema para uma lista completa dos especificadores válidos.</programlisting>
</example>

		</sect1>
		<sect1 id="language.modifier.default">
			<title>default</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>vazio</emphasis></entry>
                        <entry>Este é o valor padrão para mostrar se a variável
                        estiver vazia.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Isto é usado para definir um valor padrão para uma variável. Se a variável estiver
			vazia ou não for definida, o valor padrão dado é mostrado.
			Default usa um argumento.
			</para>
<example>
<title>default</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Dealers Will Hear Car Talk at Noon.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle|default:"no title"}
{$myTitle|default:"no title"}

MOSTRA:

Dealers Will Hear Car Talk at Noon.
no title</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.escape">
			<title>escape</title>
            <informaltable frame="all">
                <tgroup cols="6">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="possible" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Valores Possíveis</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>html,htmlall,url,quotes,hex,hexentity,javascript</entry>
                        <entry>html</entry>
                        <entry>Este é o formato de escape para usar.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Este é usado para escapar html, url, aspas simples em uma variável que já não esteja 
			escapada, escapar hex, hexentity ou javascript.
			Por padrão, é escapado
			o html da variável.
			</para>
<example>
<title>escape</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "'Stiff Opposition Expected to Casketless Funeral Plan'");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|escape}
{$articleTitle|escape:"html"}    {* escapa  &amp; &quot; &#039; &lt; &gt; *}
{$articleTitle|escape:"htmlall"} {* escapa todas as entidades html *}
{$articleTitle|escape:"url"}
{$articleTitle|escape:"quotes"}
&lt;a href="mailto:{$EmailAddress|escape:"hex"}"&gt;{$EmailAddress|escape:"hexentity"}&lt;/a&gt;

MOSTRA:

'Stiff Opposition Expected to Casketless Funeral Plan'
&amp;#039;Stiff Opposition Expected to Casketless Funeral Plan&amp;#039;
&amp;#039;Stiff Opposition Expected to Casketless Funeral Plan&amp;#039;
&amp;#039;Stiff Opposition Expected to Casketless Funeral Plan&amp;#039;
%27Stiff+Opposition+Expected+to+Casketless+Funeral+Plan%27
\'Stiff Opposition Expected to Casketless Funeral Plan\'
&lt;a href=&quot;mailto:%62%6f%62%40%6d%65%2e%6e%65%74&quot;&gt;&amp;#x62;&amp;#x6f;&amp;#x62;&amp;#x40;&amp;#x6d;&amp;#x65;&amp;#x2e;&amp;#x6e;&amp;#x65;&amp;#x74;&lt;/a&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.indent">
			<title>indent</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry>4</entry>
						<entry>Isto define com quantos 
						caracteres endentar.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>(um espaço)</entry>
                        <entry>Isto define qual caractere usado para endentar.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Isto endenta uma string em cada linha, o padrão é 4. Como
			parâmetro opcional, você pode especificar o número de caracteres para
			endentar. Como segundo parâmetro opcional, você pode especificar o caractere 
			usado para endentar. (Use "\t" para tabs.)
			</para>
<example>
<title>indent</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'NJ judge to rule on nude beach.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}

{$articleTitle|indent}

{$articleTitle|indent:10}

{$articleTitle|indent:1:"\t"}

MOSTRA:

NJ judge to rule on nude beach.
Sun or rain expected today, dark tonight.
Statistics show that teen pregnancy drops off significantly after 25.

    NJ judge to rule on nude beach.
    Sun or rain expected today, dark tonight.
    Statistics show that teen pregnancy drops off significantly after 25.

          NJ judge to rule on nude beach.
          Sun or rain expected today, dark tonight.
          Statistics show that teen pregnancy drops off significantly after 25.

	NJ judge to rule on nude beach.
	Sun or rain expected today, dark tonight.
	Statistics show that teen pregnancy drops off significantly after 25.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.lower">
			<title>lower</title>
			<para>
			Isto é usado para converter para minúsculas uma variável.
			</para>
<example>
<title>lower</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Two Convicts Evade Noose, Jury Hung.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|lower}

MOSTRA:

Two Convicts Evade Noose, Jury Hung.
two convicts evade noose, jury hung.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.nl2br">
			<title>nl2br</title>
			<para>
			Todas as quebras de linha serão convertidas para &lt;br /&gt; na variável
			data. Isto é equivalente a função nl2br() do PHP.
			</para>
<example>
<title>nl2br</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Sun or rain expected\ntoday, dark tonight");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle|nl2br}

MOSTRA:

Sun or rain expected&lt;br /&gt;today, dark tonight</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.regex.replace">
			<title>regex_replace</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Esta é a expressão regular a ser substituída.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Esta é a string que irá substituir a expressão regular.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Uma expressão regular para localizar e substituir na variável. Use a sintaxe
			para preg_replace() do manual do PHP.
			</para>
<example>
<title>regex_replace</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Infertility unlikely to\nbe passed on, experts say.");
$smarty-&gt;display('index.tpl');

index.tpl:

{* replace each carriage return, tab &amp; new line with a space *}

{$articleTitle}
{$articleTitle|regex_replace:"/[\r\t\n]/":" "}

MOSTRA:

Infertility unlikely to
 be passed on, experts say.
Infertility unlikely to be passed on, experts say.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.replace">
			<title>replace</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Esta é a string a ser substituida.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Esta é a string que irá substituir.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Um simples localizar e substituir.
			</para>
<example>
<title>replace</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Child's Stool Great for Use in Garden.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|replace:"Garden":"Vineyard"}
{$articleTitle|replace:" ":"   "}

OUTPUT:

Child's Stool Great for Use in Garden.
Child's Stool Great for Use in Vineyard.
Child's   Stool   Great   for   Use   in   Garden.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.spacify">
			<title>spacify</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>um espaço</emphasis></entry>
                        <entry>O que é inserido entre cada caractere 
                        da variável.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Insere um espaço entre cada caractere de uma variável.
			Você pode opcionalmente passar um caractere (ou uma string) diferente para inserir.
			</para>
<example>
<title>spacify</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Something Went Wrong in Jet Crash, Experts Say.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|spacify}
{$articleTitle|spacify:"^^"}

OUTPUT:

Something Went Wrong in Jet Crash, Experts Say.
S o m e t h i n g   W e n t   W r o n g   i n   J e t   C r a s h ,   E x p e r t s   S a y .
S^^o^^m^^e^^t^^h^^i^^n^^g^^ ^^W^^e^^n^^t^^ ^^W^^r^^o^^n^^g^^ ^^i^^n^^ ^^J^^e^^t^^ ^^C^^r^^a^^s^^h^^,^^ ^^E^^x^^p^^e^^r^^t^^s^^ ^^S^^a^^y^^.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.string.format">
			<title>string_format</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Este é o formato para ser usado. (sprintf)</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Este é um meio para formatar strings, como números decimais e outros.
			 Use a sintaxe para sprintf para a formatação.
			</para>
<example>
<title>string_format</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('number', 23.5787446);
$smarty-&gt;display('index.tpl');

index.tpl:

{$number}
{$number|string_format:"%.2f"}
{$number|string_format:"%d"}

MOSTRA:

23.5787446
23.58
24</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.strip">
			<title>strip</title>
			<para>
			Isto substitui todos os espaços repetidos, novas linhas e tabs por
			um único espaço ou a string indicada.
			</para>
			<note>
			<title>Nota</title>
			<para>
			 Se você quer substituir blocos de texto do template, use a função <link
             linkend="language.function.strip">strip</link>.
			</para>
			</note>
<example>
<title>strip</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Grandmother of\neight makes\t    hole in one.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|strip}
{$articleTitle|strip:"&amp;nbsp;"}

MOSTRA:

Grandmother of
eight makes        hole in one.
Grandmother of eight makes hole in one.
Grandmother&amp;nbsp;of&amp;nbsp;eight&amp;nbsp;makes&amp;nbsp;hole&amp;nbsp;in&amp;nbsp;one.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.strip.tags">
			<title>strip_tags</title>
			<para>
			 Isto retira as tags de marcação, basicamente tudo entre &lt; e &gt;.
			</para>
<example>
<title>strip_tags</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Blind Woman Gets &lt;font face=\"helvetica\"&gt;New Kidney&lt;/font&gt; from Dad she Hasn't Seen in &lt;b&gt;years&lt;/b&gt;.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|strip_tags}

MOSTRA:

Blind Woman Gets &lt;font face="helvetica"&gt;New Kidney&lt;/font&gt; from Dad she Hasn't Seen in &lt;b&gt;years&lt;/b&gt;.
Blind Woman Gets New Kidney from Dad she Hasn't Seen in years.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.truncate">
			<title>truncate</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry>80</entry>
                        <entry>Este determina para
                        quantos caracteres truncar.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>...</entry>
                        <entry>Este é o texto para adicionar se truncar.</entry>
                    </row>
                    <row>
                        <entry>3</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry>false</entry>
                        <entry>Isto determina quando truncar ou não ao final de uma
                        palavra(false), ou no caractere exato (true).</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Isto trunca a variável para uma quantidade de caracteres, o padrão é 80. 
			Como segundo parâmetro opcional, você pode especificar uma string para mostrar
			ao final se a variável foi truncada. Os caracteres da string são incluídos no tamanho
			original para a truncagem. por padrão, truncate irá tentar cortar ao final de uma palavra.
			Se você quizer cortar na quantidade exata de caracteres, passe o terceiro
			parâmetro, que é opcional,
			como true.
			</para>
<example>
<title>truncate</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Two Sisters Reunite after Eighteen Years at Checkout Counter.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|truncate}
{$articleTitle|truncate:30}
{$articleTitle|truncate:30:""}
{$articleTitle|truncate:30:"---"}
{$articleTitle|truncate:30:"":true}
{$articleTitle|truncate:30:"...":true}

MOSTRA:

Two Sisters Reunite after Eighteen Years at Checkout Counter.
Two Sisters Reunite after Eighteen Years at Checkout Counter.
Two Sisters Reunite after...
Two Sisters Reunite after
Two Sisters Reunite after---
Two Sisters Reunite after Eigh
Two Sisters Reunite after E...</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.upper">
			<title>upper</title>
			<para>
            Isto é usado para converter para maiúsculas uma variável.
			</para>
<example>
<title>upper</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "If Strike isn't Settled Quickly it may Last a While.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|upper}

MOSTRA:

If Strike isn't Settled Quickly it may Last a While.
IF STRIKE ISN'T SETTLED QUICKLY IT MAY LAST A WHILE.</programlisting>
</example>
		</sect1>
		<sect1 id="language.modifier.wordwrap">
			<title>wordwrap</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc"/>
                <thead>
                    <row>
                        <entry>Posição do Parâmetro</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>1</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry>80</entry>
						<entry>Isto determina em
						quantas colunas quebrar.</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>\n</entry>
                        <entry>Esta é a string usada para quebrar.</entry>
                    </row>
                    <row>
                        <entry>3</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry>false</entry>
                        <entry>Isto determina quando quebrar ou não ao final de uma palavra
                        (false), ou no caractere exato (true).</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Isto quebra uma string para uma largura de coluna, o padrão é 80. 
			Como segundo parâmetro opcional, você pode especificar a string que será usada
			para quebrar o texto para a próxima linha
			(o padrão é um retorno de carro \n).
			Por padrão, wordwrap irá tentar quebrar ao final de uma palavra. Se
			você quiser quebrar no tamanho exato de caracteres, passe o terceiro parâmetro, que é opcional, como true.
			</para>
<example>
<title>wordwrap</title>
<programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', "Blind woman gets new kidney from dad she hasn't seen in years.");
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}

{$articleTitle|wordwrap:30}

{$articleTitle|wordwrap:20}

{$articleTitle|wordwrap:30:"&lt;br&gt;\n"}

{$articleTitle|wordwrap:30:"\n":true}

MOSTRA:

Blind woman gets new kidney from dad she hasn't seen in years.

Blind woman gets new kidney
from dad she hasn't seen in
years.

Blind woman gets new
kidney from dad she
hasn't seen in
years.

Blind woman gets new kidney&lt;br&gt;
from dad she hasn't seen in years.

Blind woman gets new kidney fr
om dad she hasn't seen in year
s.</programlisting>
</example>
        </sect1>

      </chapter>

       <chapter id="language.combining.modifiers">
        <title>Combinando Modificadores</title>
        <para>
         Você pode aplicar qualquer número de modificadores para uma variável. Eles serão
         aplicados na ordem que eles foram combinados, da esquerda para a direita. Eles
         devem ser separados com um caractere <literal>|</literal> (pipe).
        </para>
        <example>
         <title>Combinando Modificadores</title>
         <programlisting>
index.php:

$smarty = new Smarty;
$smarty-&gt;assign('articleTitle', 'Smokers are Productive, but Death Cuts Efficiency.');
$smarty-&gt;display('index.tpl');

index.tpl:

{$articleTitle}
{$articleTitle|upper|spacify}
{$articleTitle|lower|spacify|truncate}
{$articleTitle|lower|truncate:30|spacify}
{$articleTitle|lower|spacify|truncate:30:". . ."}


MOSTRA:

Smokers are Productive, but Death Cuts Efficiency.
S M O K E R S   A R E   P R O D U C T I V E ,   B U T   D E A T H   C U T S   E F F I C I E N C Y .
s m o k e r s   a r e   p r o d u c t i v e ,   b u t   d e a t h   c u t s...
s m o k e r s   a r e   p r o d u c t i v e ,   b u t . . .
s m o k e r s   a r e   p. . .</programlisting>
        </example>
       </chapter>


    <chapter id="language.builtin.functions">
     <title>Funções Embutidas</title>
     <para>
      O Smarty vem com várias funções embutidas. Funções embutidas fazem parte
      da linguagem de template. Você não pode criar funções personalizadas com
      o mesmo nome, nem pode modificar as funções embutidas.
     </para>
     <sect1 id="language.function.capture">
      <title>capture</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>default</emphasis></entry>
                        <entry>O nome do bloco capturado</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável para dar o valor da saída capturada</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
      <para>
       capture é usado para coletar toda a saída do template em uma variável ao invés
       de mostra-lo. Qualquer conteúdo entre {capture
       name="foo"} e {/capture} coletado na variável especificada no atributo name.
       O conteúdo capturado pode ser usado no template a apertir da variável especial
       $smarty.capture.foo aonde foo é o valor passado para o atributo name. Se você não
       passar um atributo name, então será usado "default". Todos os comandos
       {capture} devem ter o seu {/capture}. Você pode aninhar(colocar um dentro de outro)
       comandos capture.
      </para>
	  <note>
	  <title>Nota Tecnica</title>
      <para>
       Smarty 1.4.0 - 1.4.4 coloca o conteúdo capturado dentro da variável
       chamada $return. A partir do 1.4.5, este funcionamento foi mudado
       para usar o atributo name, então atualize os seus templates de acordo.
      </para>
	  </note>
      <caution>
       <para>
        Tenha cuidado quando capturar a saída do comando <command>insert</command>.
        Se você tiver o cache em on e você tiver comandos <command>insert</command>
        que você espera que funcione com conteúdo do cache, 
        não capture este conteúdo.
       </para>
      </caution>
      <para>
       <example>
        <title>capturando conteúdo do template</title>
        <programlisting>
{* we don't want to print a table row unless content is displayed *}
{capture name=banner}
{include file="get_banner.tpl"}
{/capture}
{if $smarty.capture.banner ne ""}
	&lt;tr&gt;
		&lt;td&gt;
			{$smarty.capture.banner}
		&lt;/td&gt;
	&lt;/tr&gt;
{/if}</programlisting>
       </example>
      </para>
     </sect1>
		<sect1 id="language.function.config.load">
			<title>config_load</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>file</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome do arquivo de configuração para incluir</entry>
                    </row>
                    <row>
                        <entry>section</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da seção a carregar</entry>
                    </row>
                    <row>
                        <entry>scope</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>local</emphasis></entry>
                        <entry>
                         Como o escopo das variáveis carregadas é tratado, 
                         o qual deve ser um entre local, parent ou global. local
						 indica que as variáveis são carregadas no contexto do
						 template local apenas. parent indica que as variáveis são carregadas
						 no contexto atual e no template que o chamou. global indica
						 que as variáveis estão
						 disponíveis para todos os templates.
						</entry>
                    </row>
                    <row>
                        <entry>global</entry>
                        <entry>boolean</entry>
                        <entry>No</entry>
                        <entry><emphasis>No</emphasis></entry>
                        <entry>
						 Quando ou não as variáveis são visiveis para o template
						 superior(aquele que chamou este), o mesmo que scope=parent.
						 NOTA: este atributo esta obsoleto pelo atributo scope, mas
						 ainda é suportado. Se scope for indicado, este valor é ignorado.
						</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Esta função é usada para carregar as variáveis de um arquivo de configuração
			 dentro de um template. Veja <link linkend="config.files">Config Files</link>
			 para maiores
			 informações.
			</para>
<example>
<title>Função config_load</title>

<programlisting>
{config_load file="colors.conf"}

&lt;html&gt;
&lt;title&gt;{#pageTitle#}&lt;/title&gt;
&lt;body bgcolor="{#bodyBgColor#}"&gt;
&lt;table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}"&gt;
	&lt;tr bgcolor="{#rowBgColor#}"&gt;
		&lt;td&gt;First&lt;/td&gt;
		&lt;td&gt;Last&lt;/td&gt;
		&lt;td&gt;Address&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
</example>
			<para>
			 Arquivos de configuração podem conter seções também. Voce pode carregar
			 variáveis de uma seção adicionando o atributo
            <emphasis>section</emphasis>.
			</para>
            <para>
            NOTA: <emphasis>Config file sections</emphasis> e a função embutida de 
            template <emphasis>section</emphasis> não tem nada a ver um com o outro,
            eles apenas tem uma mesma
            convenção de nomes.
            </para>
<example>
<title>Função config_load com seções</title>
<programlisting>
{config_load file="colors.conf" section="Customer"}

&lt;html&gt;
&lt;title&gt;{#pageTitle#}&lt;/title&gt;
&lt;body bgcolor="{#bodyBgColor#}"&gt;
&lt;table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}"&gt;
	&lt;tr bgcolor="{#rowBgColor#}"&gt;
		&lt;td&gt;First&lt;/td&gt;
		&lt;td&gt;Last&lt;/td&gt;
		&lt;td&gt;Address&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.foreach">
			<title>foreach,foreachelse</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>from</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da matriz que você estará pegando os elementos</entry>
                    </row>
                    <row>
                        <entry>item</entry>
                        <entry>string</entry>
                        <entry>Yes</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável
                        que é o elemento atual</entry>
                    </row>
                    <row>
                        <entry>key</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
						<entry><emphasis>n/a</emphasis></entry>
						<entry>O nome da variável que é a chave atual</entry>
                    </row>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
						<entry>O nome do loop foreach para acessar as 
						propriedades foreach</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Loops <emphasis>foreach</emphasis> são uma alternativa para loops
			<emphasis>section</emphasis>. <emphasis>foreach</emphasis> é usado
			para pegar cada elemento de uma matriz associativa simples.
			A sintaxe para <emphasis>foreach</emphasis> é muito mais simples do que
			<emphasis>section</emphasis>, mas tem a desvantagem de poder ser usada
			apenas para uma única matriz. Tags <emphasis>foreach</emphasis> devem ter
			seu par <emphasis>/foreach</emphasis>. Os parâmetros requeridos são
			<emphasis>from</emphasis> e <emphasis>item</emphasis>. O nome do loop
			foreach pode ser qualquer coisa que você queira, feito de letras, números
			e sublinhados. Loops <emphasis>foreach</emphasis>
			podem ser aninhados, e o nome dos loops aninhados devem ser diferentes
			um dos outros. A variável <emphasis>from</emphasis> (normalmente uma
			matriz de valores) determina o número de vezes do loop
			<emphasis>foreach</emphasis>.
			<emphasis>foreachelse</emphasis> é executado quando não houverem mais valores
			na variável <emphasis>from</emphasis>.
			</para>
<example>
<title>foreach</title>
<programlisting>

{* este exemplo irá mostrar todos os valores da matriz $custid *}
{foreach from=$custid item=curr_id}
	id: {$curr_id}&lt;br&gt;
{/foreach}

MOSTRA:

id: 1000&lt;br&gt;
id: 1001&lt;br&gt;
id: 1002&lt;br&gt;</programlisting>
</example>

<example>
<title>foreach key</title>
<programlisting>
{* A key contém a chave para cada valor do loop

A definição é alo assim:

$smarty->assign("contacts", array(array("phone" =&gt; "1", "fax" =&gt; "2", "cell" =&gt; "3"),
      array("phone" =&gt; "555-4444", "fax" =&gt; "555-3333", "cell" =&gt; "760-1234")));

*}

{foreach name=outer item=contact from=$contacts}
  {foreach key=key item=item from=$contact}
    {$key}: {$item}&lt;br&gt;
  {/foreach}
{/foreach}

MOSTRA:

phone: 1&lt;br&gt;
fax: 2&lt;br&gt;
cell: 3&lt;br&gt;
phone: 555-4444&lt;br&gt;
fax: 555-3333&lt;br&gt;
cell: 760-1234&lt;br&gt;</programlisting>
</example>

		<para>
		Loop foreach também tem as suas próprias variáveis para manipilar a as propriedades
		foreach. Estas são indicadas assim: {$smarty.foreach.foreachname.varname} com
		foreachname sendo o nome especificado no atributo
		<emphasis>name</emphasis> do foreach.
		</para>


			<sect2 id="foreach.property.iteration">
			<title>iteration</title>
			<para>
        	iteration é usado para mostrar a interação atual do loop.
			</para>
			<para>
			Iteration sempre começa em 1 e
			é incrementado um a um em cada interação.
			</para>
			</sect2>

			<sect2 id="foreach.property.first">
			<title>first</title>
			<para>
        	<emphasis>first</emphasis> é definido como true se a interação atual
        	do foreach for a primeira.
			</para>
			</sect2>

			<sect2 id="foreach.property.last">
			<title>last</title>
			<para>
        	<emphasis>last</emphasis> é definido como true se a interação atual
        	do foreach for a última.
			</para>
			</sect2>

			<sect2 id="foreach.property.show">	
			<title>show</title>
			<para>
        	<emphasis>show</emphasis> é usado como parâmetro para o foreach.
        	<emphasis>show</emphasis> é um valor booleano, true ou false. Se
        	false, o foreach não será mostrado. Se tiver um foreachelse
        	presente, este será alternativamente mostrado.
			</para>

			</sect2>
			<sect2 id="foreach.property.total">	
			<title>total</title>
			<para>
			<emphasis>total</emphasis> é usado para mostrar o número de interações do
			foreach. Isto pode ser usado dentro ou depois do foreach.
			</para>
			</sect2>





		</sect1>
		<sect1 id="language.function.include">
			<title>include</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>file</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome do arquivo de template a incluir</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome de uma variável que irá
                        conter toda a saída do template</entry>
                    </row>
                    <row>
                        <entry>[var ...]</entry>
                        <entry>[var type]</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Variável para passar localmente para o template</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Tags include são usados para incluir outros templates no template
			 atual. Quaisquer variáveis disponíveis no template atual também esta 
			 disponível dentro do template incluido. A tag include deve ter o atributo
			 "file",  o qual contém o caminho do arquivo a incluir.
			</para>
			<para>
			 Você pode opcionalmente passar o atributo <emphasis>assign</emphasis>,
			 o qual irá especificar o nome de uma variável de template para a qual
			 conterá toda a saída de <emphasis>include</emphasis> ao
			 invés de mostra-la.
			</para>
<example>
<title>function include</title>
<programlisting>
{include file="header.tpl"}

{* O corpo do template vai aqui *}

{include file="footer.tpl"}</programlisting>
</example>
			<para>
			 Você pode também passar variáveis para o template incluído como atributos.
			 Quaisquer variáveis passadas para um template incluído como atributos 
			 estão disponíveis somente dentro do escopo do template incluído.
			 As variáveis passadas como atributos sobrescrevem as variáveis de 
			 template atuais, no caso de ambas terem o mesmo nome.
			</para>
<example>
<title>Função include passando variáveis</title>
<programlisting>
{include file="header.tpl" title="Main Menu" table_bgcolor="#c0c0c0"}

{* O corpo de template vai aqui *}

{include file="footer.tpl" logo="http://my.domain.com/logo.gif"}</programlisting>
</example>
			<para>
			Use a sintaxe para <link
			linkend="template.resources">template resources</link> para
			incluir arquivos fora do diretório $template_dir.
			</para>
<example>
<title>Exemplos de recursos para a função include</title>
<programlisting>
{* caminho absoluto *}
{include file="/usr/local/include/templates/header.tpl"}

{* caminho absoluto (mesma coisa) *}
{include file="file:/usr/local/include/templates/header.tpl"}

{* caminho absoluto do windows (DEVE usar o prefixo "file:") *}
{include file="file:C:/www/pub/templates/header.tpl"}

{* incluir a partir do recurso de template chamado "db" *}
{include file="db:header.tpl"}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.include.php">
			<title>include_php</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>file</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome do arquivo php a incluir</entry>
                    </row>
                    <row>
                        <entry>once</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Quando incluir ou não o arquivo php mais de uma vez se
                        incluído várias vezes</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável
                        que receberá a saída do arquivo php</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			Tags include_php são usadas para incluir um script php no seu template.
			Se a segurança estiver ativada, então o script php deve estar localizado
			no caminho $trusted_dir. A tag include_php deve ter o atributo
			"file", o qual contém o caminho para o arquivo php a ser incluído,
			ou relativo a $trusted_dir, ou um caminho absoluto.
			</para>
			<para>
			include_php é um bom meio de manipular templates com componentes,
			e mante o código PHP separado dos arquivos de template. Vamos dizer
			que você tenha um template que mostre a navegação do seu site, o qual
			é prenchido automaticamente a partir de um banco de dados. Você pode 
			manter a sua lógica PHP que obtém os dados em um diretório separado,
			e inclui-la no topo do template. Agora você pode incluir este template
			em qualquer lugar sem se preocupar se a informação do banco de dados foi
			obtida antes de usar.
			</para>
			<para>
			 Por padrão, os arquivos php são incluídos apenas uma vez mesmo 
			 se incluídos várias vezes no template. Você pode especificar que ele 
			 seja incluído todas as vezes com o atributo <emphasis>once</emphasis>.
			 Definindo once para false irá incluir o script php a cada vez que
			 ele seja incluído no template.
			</para>
			<para>
			 Você pode opcionalmente passar o atributo <emphasis>assign</emphasis>,
			 o qual irá especificar uma variável de template a qual irá conter
			 toda a saída de 
			 <emphasis>include_php</emphasis> em vez de mostra-la.
			</para>
			<para>
			 O objeto smarty esta disponível como $this dentro do 
			 script php que você incluiu.
			</para>
<example>
<title>Função include_php</title>
<programlisting>
load_nav.php
-------------

&lt;?php

	// carrega variáveis de um banco de dados mysql e define ela para o template
	require_once("MySQL.class.php");
	$sql = new MySQL;
	$sql->query("select * from site_nav_sections order by name",SQL_ALL);
	$this->assign('sections',$sql->record);

?&gt;


index.tpl
---------

{* caminho absoluto ou relativo a $trusted_dir *}
{include_php file="/path/to/load_nav.php"}

{foreach item="curr_section" from=$sections}
	&lt;a href="{$curr_section.url}"&gt;{$curr_section.name}&lt;/a&gt;&lt;br&gt;
{/foreach}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.insert">
			<title>insert</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da função insert (insert_name)</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável que
                        irá receber a saída</entry>
                    </row>
                    <row>
                        <entry>script</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome de um script php que será incluido
                        antes que a função insert seja chamada</entry>
                    </row>
                    <row>
                        <entry>[var ...]</entry>
                        <entry>[var type]</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Variável para passar para a função insert</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Tags insert funcionam parecido com as tags include, exceto que as tags
			 insert não vão para o cache quando <link
			linkend="caching">caching</link> esta ativado. Ela será
			executada a cada invocação do template.
			</para>
            <para>
             Vamos dizer que você tenha um template com um banner em cima. O
             banner pode conter qualquer mistura de html, imagens, flash, etc.
             Assin nós não podemos usar uma ligação estatica aqui, e nós não 
             queremos que este conteúdo fique no cache com a página. Aqui vem a tag 
             insert: o template conhece os valores #banner_location_id# e
             #site_id# (obtidos de um arquivo de configuração), e precisa chamar
             uma função para obter o conteúdo do banner.
			</para>
<example>
<title>function insert</title>
<programlisting>
{* example of fetching a banner *}
{insert name="getBanner" lid=#banner_location_id# sid=#site_id#}</programlisting>
</example>
			<para>
			 Neste exemplo, nós estamos usando o nome "getBanner" e passando os parâmetros
			 #banner_location_id# e #site_id#. O Smarty irá procurar por uma função chamada
			 insert_getBanner() na sua aplicação PHP, passando os valores de 
			 #banner_location_id# e #site_id# como primeiro argumento em uma
			 matriz associativa. Todos os nomes de função insert em sua
			 aplicação devem ser precedidas por "insert_" para prevenir possíveis
			 problemas com nomes de funções repetidos. Sua função insert_getBanner()
			 deve fazer alguma coisa com os valores passados e retornar os resultados.
			 Estes resultados são mostrados no template em lugar da tag insert.
			 Neste exemplo, o Smarty irá chamar esta função:
			 insert_getBanner(array("lid" => "12345","sid" => "67890"));
			 e mostrar o resultado retornado no lugar da tag insert.
			</para>
			<para>
			 Se você der o atributo "assign", a saída da tag insert será
			 dada para esta variável ao invés de ser mostrada
			 no template. Nota: definir a saída para uma variável não é
			 útil quando o cache esta ativo.
			</para>
			<para>
			 Se você der o atributo "script", este script php será incluido
			 (apenas uma vez) antes da execução da função insert. Este
			 é o caso onde a função insert não existe ainda, e um script
			 php deve ser incluído antes para faze-la funcionar. O caminho pode
			 ser absoluto ou relativo a $trusted_dir. Quando a segurança esta
			 ativada, o script deve estar em $trusted_dir.
			</para>
			<para>
			 O objeto Smarty é passado como segundo argumento. Desde modo
			 pocê pode refenciar o objeto Smarty
			 de dentro da função.
			</para>
			<note>
			<title>Nota Tecnica</title>
			<para>
			 É possível ter partes do template fora do cache.
			 se você tiver <link linkend="caching">caching</link>
             ativado, tags insert não estarão no cache. Ela será executada
             dinamicamente a cada vez que a página seja criada, mesmo com
             páginas em cache. Isto funciona bem para coisas como banners, pesquisa,
             clima, resultados de pesquisa, areas de opnião do usuário, etc.
			</para>
			</note>
		</sect1>
		<sect1 id="language.function.if">
			<title>if,elseif,else</title>
			<para>
			 Comandos if no Smarty tem muito da mesma flexibilidade do php,
			 com algumas adições para a ferramenta de template.
			 Todo <emphasis>if</emphasis> deve ter o seu 
			<emphasis>/if</emphasis>. <emphasis>else</emphasis> e
			<emphasis>elseif</emphasis> também são permitidos. "eq", "ne","neq",
			"gt", "lt", "lte", "le", "gte" "ge","is even","is odd", "is not
			even","is not odd","not","mod","div by","even by","odd
			by","==","!=","&gt;", "&lt;","&lt;=","&gt;=" são todos os qualificadores
			de condição válidos, e ddevem estar separados
			dos elementos em roda por espaço.
			</para>
<example>
<title>comandos if</title>
<programlisting>
{if $name eq "Fred"}
	Welcome Sir.
{elseif $name eq "Wilma"}
	Welcome Ma'am.
{else}
	Welcome, whatever you are.
{/if}

{* um exemplo com "or" *}
{if $name eq "Fred" or $name eq "Wilma"}
	...
{/if}

{* o mesmo que acima *}
{if $name == "Fred" || $name == "Wilma"}
	...
{/if}

{* a seguinte sintaxe não irá funcionar, qualificadores de condição
   devem estar separados dos elementos em torno por espaços *}
{if $name=="Fred" || $name=="Wilma"}
	...
{/if}


{* parenteses são permitidos *}
{if ( $amount &lt; 0 or $amount &gt; 1000 ) and $volume >= #minVolAmt#}
	...
{/if}

{* você pode também colocar funções php *}
{if count($var) gt 0}
	...
{/if}

{* testa se o valor é par ou impar *}
{if $var is even}
	...
{/if}
{if $var is odd}
	...
{/if}
{if $var is not odd}
	...
{/if}

{* test if var is divisible by 4 *}
{if $var is div by 4}
	...
{/if}

{* test if var is even, grouped by two. i.e.,
0=even, 1=even, 2=odd, 3=odd, 4=even, 5=even, etc. *}
{if $var is even by 2}
	...
{/if}

{* 0=even, 1=even, 2=even, 3=odd, 4=odd, 5=odd, etc. *}
{if $var is even by 3}
	...
{/if}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.ldelim">
			<title>ldelim,rdelim</title>
			<para>
			ldelim e rdelim são usados para mostrar os delimitadores literalmente,
			no nosso caso "{" ou "}". A ferramente de template sempre
			tenta interpretar os delimitadores,	então este é o meio de contornar isso.
			</para>
<example>
<title>ldelim, rdelim</title>
<programlisting>
{* isto irá mostrar os delimitadore no template *}

{ldelim}funcname{rdelim} is how functions look in Smarty!


MOSTRA:

{funcname} is how functions look in Smarty!</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.literal">
			<title>literal</title>
			<para>
			 Tags literal permitem que um bloco de dados seja tomado literalmente,
			 não sendo interpretado pelo smarty. Isto é útil
			 para coisas como seções javascript, aonde podem haver
			 chaves("{}") e coisas assim que possam confundir
			 o interpretador do template.
			 Qualquer coisa dentro das {literal}{/literal} não será interpretado, mas mostrado como estiver.
			</para>
<example>
<title>Tags literal</title>
<programlisting>
{literal}
	&lt;script language=javascript&gt;

        	&lt;!--
                	function isblank(field) {
                	if (field.value == '') 
                        	{ return false; }
                	else
                        	{
                        	document.loginform.submit();
                        	return true;
                        	}
                	}
        	// --&gt;

	&lt;/script&gt;
{/literal}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.php">
			<title>php</title>
			<para>
			 Tags php permitem que você adicione código php diretamente no template.
			 Não será escapado, não importando a definição de <link
			linkend="variable.php.handling">$php_handling</link>. Isto
			é apenas para usuários avançados e normalmente não é necessário.
			</para>
<example>
<title>Tags php</title>
<programlisting>
{php}
		// incluindo um script php
		// diretamente no template.
		include("/path/to/display_weather.php");
{/php}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.section">
			<title>section,sectionelse</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da seção</entry>
                    </row>
                    <row>
                        <entry>loop</entry>
                        <entry>[$variable_name]</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável para determinar o
                        número de interações</entry>
                    </row>
                    <row>
                        <entry>start</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
						<entry><emphasis>0</emphasis></entry> <entry>A posição
						do índice que a seção vai começar.  Se o valor 
						é negativo, a posição de inicio é calculada a partir 
						do final da matriz. For exemplo, se houverem
						sete valores na matriz e start for -2, o
						índice inicial é 5. Valores inválidos (valores fora do
						tamanho da matriz) são automaticamente truncados
						para o valor válido mais próximo.</entry>
                    </row>
                    <row>
                        <entry>step</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
						<entry>O valor do passo que será usado para o loop
						na matriz. Por exemplo, step=2 irá realizar o loop com
						os índices 0,2,4, etc. Se step for negativo, ele irá caminhar
						pela matriz de trás para frente.</entry>
                    </row>
                    <row>
                        <entry>max</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
						<entry>Define o número máximo de loops
						para a section.</entry>
                    </row>
                    <row>
                        <entry>show</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Determina quando mostrar ou não esta section</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 sections de template são usada para realizar um loop por uma matriz. Todas as tags
			 <emphasis>section</emphasis> devem ter as suas
             <emphasis>/section</emphasis>. Parâmetros requeridos são
             <emphasis>name</emphasis> e <emphasis>loop</emphasis>. O nome 
             de section pode ser o que você quiser, feito de letras,
             números e sublinhados. Sections podem ser aninhadas, e os nomes das section
             aninhadas devem ser diferentes um dos outros. A variável do loop
             (normalmente uma matriz de valores) determina o número de vezes do
             loop da section. Quando estiver mostrando uma variável dentro de uma section,
             o nome da section deve estar ao lado da variável dentro de conchetes
             []. <emphasis>sectionelse</emphasis> é
             executado quando não houverem valores para a variável de loop.
			</para>
<example>
<title>section</title>
<programlisting>

{* este exemplo irá mostrar todos os valores de $custid array *}
{section name=customer loop=$custid}
	id: {$custid[customer]}&lt;br&gt;
{/section}

MOSTRA:

id: 1000&lt;br&gt;
id: 1001&lt;br&gt;
id: 1002&lt;br&gt;</programlisting>
</example>

<example>
<title>loop de variável section</title>
<programlisting>
{* a variável de loo´p determina o número de vezes do loop.
   Vocâ pode acessar qualquer variável do template dentro da section.
   Este exemplo assume que $custid, $name e $address são todas
   matrizes contendo o mesmo número de valores *}
{section name=customer loop=$custid}
	id: {$custid[customer]}&lt;br&gt;
	name: {$name[customer]}&lt;br&gt;
	address: {$address[customer]}&lt;br&gt;
	&lt;p&gt;
{/section}


MOSTRA:

id: 1000&lt;br&gt;
name: John Smith&lt;br&gt;
address: 253 N 45th&lt;br&gt;
&lt;p&gt;
id: 1001&lt;br&gt;
name: Jack Jones&lt;br&gt;
address: 417 Mulberry ln&lt;br&gt;
&lt;p&gt;
id: 1002&lt;br&gt;
name: Jane Munson&lt;br&gt;
address: 5605 apple st&lt;br&gt;
&lt;p&gt;</programlisting>
</example>

<example>
<title>Nomes de section</title>
<programlisting>
{* o nome de section pode ser o que você quiser,
   e é usado para referenciar os dados dentro da section *}
{section name=mydata loop=$custid}
	id: {$custid[mydata]}&lt;br&gt;
	name: {$name[mydata]}&lt;br&gt;
	address: {$address[mydata]}&lt;br&gt;
	&lt;p&gt;
{/section}</programlisting>
</example>

<example>
<title>sections aninhadas</title>
<programlisting>
{* sections podem ser aninhadas tão profundamente quanto você quiser. Com sections aninhadas,
   você pode acessar estruturas de dados complexas, como matriz multi-dimensionais.
   Neste exemplo, $contact_type[customer] é uma matriz de
   tipos de contato para o custumer atual. *}
{section name=customer loop=$custid}
	id: {$custid[customer]}&lt;br&gt;
	name: {$name[customer]}&lt;br&gt;
	address: {$address[customer]}&lt;br&gt;
	{section name=contact loop=$contact_type[customer]}
		{$contact_type[customer][contact]}: {$contact_info[customer][contact]}&lt;br&gt;
	{/section}
	&lt;p&gt;
{/section}


MOSTRA:

id: 1000&lt;br&gt;
name: John Smith&lt;br&gt;
address: 253 N 45th&lt;br&gt;
home phone: 555-555-5555&lt;br&gt;
cell phone: 555-555-5555&lt;br&gt;
e-mail: john@mydomain.com&lt;br&gt;
&lt;p&gt;
id: 1001&lt;br&gt;
name: Jack Jones&lt;br&gt;
address: 417 Mulberry ln&lt;br&gt;
home phone: 555-555-5555&lt;br&gt;
cell phone: 555-555-5555&lt;br&gt;
e-mail: jack@mydomain.com&lt;br&gt;
&lt;p&gt;
id: 1002&lt;br&gt;
name: Jane Munson&lt;br&gt;
address: 5605 apple st&lt;br&gt;
home phone: 555-555-5555&lt;br&gt;
cell phone: 555-555-5555&lt;br&gt;
e-mail: jane@mydomain.com&lt;br&gt;
&lt;p&gt;</programlisting>
</example>

<example>
<title>sections e matrizes associativas</title>
<programlisting>
{* Este é um exemplo de mostrar os dados de matriz associativa
   dentro da section *}
{section name=customer loop=$contacts}
	name: {$contacts[customer].name}&lt;br&gt;
	home: {$contacts[customer].home}&lt;br&gt;
	cell: {$contacts[customer].cell}&lt;br&gt;
	e-mail: {$contacts[customer].email}&lt;p&gt;
{/section}


MOSTRA:

name: John Smith&lt;br&gt;
home: 555-555-5555&lt;br&gt;
cell: 555-555-5555&lt;br&gt;
e-mail: john@mydomain.com&lt;p&gt;
name: Jack Jones&lt;br&gt;
home phone: 555-555-5555&lt;br&gt;
cell phone: 555-555-5555&lt;br&gt;
e-mail: jack@mydomain.com&lt;p&gt;
name: Jane Munson&lt;br&gt;
home phone: 555-555-5555&lt;br&gt;
cell phone: 555-555-5555&lt;br&gt;
e-mail: jane@mydomain.com&lt;p&gt;</programlisting>
</example>



<example>
<title>sectionelse</title>
<programlisting>
{* sectionelse irá executar se não houverem mais valores $custid *}
{section name=customer loop=$custid}
	id: {$custid[customer]}&lt;br&gt;
{sectionelse}
	there are no values in $custid.
{/section}</programlisting>
</example>
		<para>
		 Sections também tem as suas próprias variáveis que manipulam as propriedaes section.
		 Estas são indicadas assim: {$smarty.section.sectionname.varname}
		</para>
		<para>
		NOTA: a partir do Smarty 1.5.0, a sintaxe para as variáveis de propriedades de section
		mudou de {%sectionname.varname%} para
		{$smarty.section.sectionname.varname}. A sintaxe antiga ainda é suportada,
		mas você irá ver referencias apenas a nova sintaxe nos
		exemplos do manual.
		</para>
			<sect2 id="section.property.index">	
			<title>index</title>
			<para>
			index é usado para mostrar o índice atual do loop, começando em zero
			(ou pelo atributo start se dado), e incrementando por um (ou pelo
			atributo step se dado).
			</para>
			<note>
				<title>Nota Técnica</title>
				<para>
				 Se as propriedades section não for modificada,
				 então isto funciona igual a propriedade iteration da section,
				 exceto que começa em 0 ao invés de 1.
				</para>
			</note>
	<example>
	<title>section property index</title>
	<programlisting>
	{section name=customer loop=$custid}
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{/section}


	MOSTRA:

	0 id: 1000&lt;br&gt;
	1 id: 1001&lt;br&gt;
	2 id: 1002&lt;br&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.index.prev">	
			<title>index_prev</title>
			<para>
			index_prev é usado para mostrar o índice anterior do loop.
        	No primeiro loop, isto é definido como -1.
			</para>
	<example>
	<title>section property index_prev</title>
	<programlisting>
	{section name=customer loop=$custid}
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{* FYI, $custid[customer.index] and $custid[customer] are identical in meaning *}
	{if $custid[customer.index_prev] ne $custid[customer.index]}
    	The customer id changed&lt;br&gt;
	{/if}
	{/section}


	MOSTRA:

	0 id: 1000&lt;br&gt;
    	The customer id changed&lt;br&gt;
	1 id: 1001&lt;br&gt;
    	The customer id changed&lt;br&gt;
	2 id: 1002&lt;br&gt;
    	The customer id changed&lt;br&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.index.next">
			<title>index_next</title>
			<para>
        	 index_next é usado para mostrar o próximo indice do loop. No último loop,
        	 isto ainda é um mais o índice atual( respeitando a definição
        	 do atributo step, se dado.)
			</para>
	<example>
	<title>section property index_next</title>
	<programlisting>
	{section name=customer loop=$custid}
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{* FYI, $custid[customer.index] and $custid[customer] are identical in meaning *}
	{if $custid[customer.index_next] ne $custid[customer.index]}
    	The customer id will change&lt;br&gt;
	{/if}
	{/section}


	MOSTRA:

	0 id: 1000&lt;br&gt;
    	The customer id will change&lt;br&gt;
	1 id: 1001&lt;br&gt;
    	The customer id will change&lt;br&gt;
	2 id: 1002&lt;br&gt;
    	The customer id will change&lt;br&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.iteration">
			<title>iteration</title>
			<para>
        	iteration é usado para mostrar a interação atual do loop.
			</para>
			<para>
			NOTA: isto não é afetado pelas propriedades start, step e
			max, diferentemente das propriedade index. Iteration também começa com 1
			ao invés de 0 como index. rownum é um apelido para iteration,
			elas funcionam de modo identico.
			</para>
	<example>
	<title>section property iteration</title>
	<programlisting>
	{section name=customer loop=$custid start=5 step=2}
	current loop iteration: {$smarty.section.customer.iteration}&lt;br&gt;
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{* FYI, $custid[customer.index] and $custid[customer] are identical in meaning *}
	{if $custid[customer.index_next] ne $custid[customer.index]}
    	The customer id will change&lt;br&gt;
	{/if}
	{/section}


	MOSTRA:

	current loop iteration: 1
	5 id: 1000&lt;br&gt;
    	The customer id will change&lt;br&gt;
	current loop iteration: 2
	7 id: 1001&lt;br&gt;
    	The customer id will change&lt;br&gt;
	current loop iteration: 3
	9 id: 1002&lt;br&gt;
    	The customer id will change&lt;br&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.first">
			<title>first</title>
			<para>
        	 first é definido como true se a interação atual da section
        	 é a primeira.
			</para>
	<example>
	<title>section property first</title>
	<programlisting>
	{section name=customer loop=$custid}
	{if $smarty.section.customer.first}
    	&lt;table&gt;
	{/if}

	&lt;tr&gt;&lt;td&gt;{$smarty.section.customer.index} id:
        	{$custid[customer]}&lt;/td&gt;&lt;/tr&gt;

	{if $smarty.section.customer.last}
    	&lt;/table&gt;
	{/if}
	{/section}


	MOSTRA:

	&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;0 id: 1000&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;1 id: 1001&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;2 id: 1002&lt;/td&gt;&lt;/tr&gt;
	&lt;/table&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.last">
			<title>last</title>
			<para>
        	last é definido como true de a interação atual da 
        	section é a última.
			</para>
	<example>
	<title>section property last</title>
	<programlisting>
	{section name=customer loop=$custid}
	{if $smarty.section.customer.first}
    	&lt;table&gt;
	{/if}

	&lt;tr&gt;&lt;td&gt;{$smarty.section.customer.index} id:
        	{$custid[customer]}&lt;/td&gt;&lt;/tr&gt;

	{if $smarty.section.customer.last}
    	&lt;/table&gt;
	{/if}
	{/section}


	MOSTRA:

	&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;0 id: 1000&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;1 id: 1001&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;2 id: 1002&lt;/td&gt;&lt;/tr&gt;
	&lt;/table&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.rownum">	
			<title>rownum</title>
			<para>
			rownum é usado para mostrar a interação atual do loop,
			começando em um. É um apelido para iteration,
			elas funcionam de modo identico.
			</para>
	<example>
	<title>section property rownum</title>
	<programlisting>
	{section name=customer loop=$custid}
	{$smarty.section.customer.rownum} id: {$custid[customer]}&lt;br&gt;
	{/section}


	MOSTRA:

	1 id: 1000&lt;br&gt;
	2 id: 1001&lt;br&gt;
	3 id: 1002&lt;br&gt;
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.loop">	
			<title>loop</title>
			<para>
			loop é usado para mostrar o último número do índice do loop desta
			section. Isto pode ser usado dentro ou depois de section.
			</para>
	<example>
	<title>section property index</title>
	<programlisting>
	{section name=customer loop=$custid}
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{/section}

	There were {$smarty.section.customer.loop} customers shown above.

	MOSTRA:

	0 id: 1000&lt;br&gt;
	1 id: 1001&lt;br&gt;
	2 id: 1002&lt;br&gt;

	There were 3 customers shown above.
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.show">	
			<title>show</title>
			<para>
        	<emphasis>show</emphasis> é usado como parâmetro para section.
        	<emphasis>show</emphasis> é um valor booleano, true ou false. Se
        	false, a section não será mostrada. Se existir um sectionelse
        	presente, esta será alternativamente mostrado.
			</para>
	<example>
	<title>section attribute show</title>
	<programlisting>
	{* $show_customer_info deve ser passada da aplicação PHP,
	   para regular quando mostrar ou não mostrar esta section *}
	{section name=customer loop=$custid show=$show_customer_info}
	{$smarty.section.customer.rownum} id: {$custid[customer]}&lt;br&gt;
	{/section}

	{if $smarty.section.customer.show}
	the section was shown.
	{else}
	the section was not shown.
	{/if}


	MOSTRA:

	1 id: 1000&lt;br&gt;
	2 id: 1001&lt;br&gt;
	3 id: 1002&lt;br&gt;

	the section was shown.
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.total">	
			<title>total</title>
			<para>
			total é usado para mostrar o número de interações que esta section terá.
			Isto pode ser usado dentro ou depois da section.
			</para>
	<example>
	<title>section property total</title>
	<programlisting>
	{section name=customer loop=$custid step=2}	
	{$smarty.section.customer.index} id: {$custid[customer]}&lt;br&gt;
	{/section}

	There were {$smarty.section.customer.total} customers shown above.

	MOSTRA:

	0 id: 1000&lt;br&gt;
	2 id: 1001&lt;br&gt;
	4 id: 1002&lt;br&gt;

	There were 3 customers shown above.
</programlisting>
	</example>
			</sect2>
		</sect1>
		<sect1 id="language.function.strip">
			<title>strip</title>
			<para>
			 Várias vezes web designers tem problemas com espaços em branco e
			 carriage returns afetam a saída do HTML (browser
			"features"), assim você tem que colocar todas as suas tags juntas para ter 
			os resultados desejados. Isto normalmente termina em um
			template ilegível ou que não se consegue ler.
			</para>
			<para>
			 Tudo dentro de {strip}{/strip} no Smarty tem retirados os espaços em branco
			 e carriage returns no inicio e final das linhas
			 antes que sejam mostrados. Deste modo você pode manter seu template
			 legível, e não se preocupar com o espaço estra causando 
			 problemas.
			</para>
			<note>
			<title>Nota Técnica</title>
			<para>
			{strip}{/strip} não afeta o conteúdo das variáveis de template.
			Veja <link linkend="language.modifier.strip">strip modifier
			function</link>.
			</para>
			</note>
<example>
<title>strip tags</title>
<programlisting>
{* o seguinte estará tudo junto em uma linha na saída *}
{strip}
&lt;table border=0&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;A HREF="{$url}"&gt;
			&lt;font color="red"&gt;This is a test&lt;/font&gt;
			&lt;/A&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
{/strip}


MOSTRA:

&lt;table border=0&gt;&lt;tr&gt;&lt;td&gt;&lt;A HREF="http://my.domain.com"&gt;&lt;font color="red"&gt;This is a test&lt;/font&gt;&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</programlisting>
</example>
		<para>
		 Note que no exemplo acima, todas as linhas começam e terminam
		 com tags HTML. Tenha cuidado que todas as linhas ficam juntas.
		 Se você tiver texto simples no inicio ou no final de uma linha,
		 ele estará junto, e pode não ser o resultado desejado.
		</para>
		</sect1>
       </chapter>

        <chapter id="language.custom.functions">
         <title>Funções Personalizadas</title>
        <para>
         Smarty vem com várias funções personalizadas que você
         pode usar em seus templates.
        </para>
		<sect1 id="language.function.assign">
			<title>assign</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>var</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável que esta ganhando valor</entry>
                    </row>
                    <row>
                        <entry>value</entry>
                        <entry>string</entry>
                        <entry>Yes</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O valor que esta sendo dado</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			assign é usado para definir valores para variável
			de template durante a execução do template.
			</para>
<example>
<title>assign</title>
<programlisting>
{assign var="name" value="Bob"}

The value of $name is {$name}.

MOSTRA:

The value of $name is Bob.</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.counter">
			<title>counter</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>default</emphasis></entry>
                        <entry>O nome do contador</entry>
                    </row>
                    <row>
                        <entry>start</entry>
                        <entry>number</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
                        <entry>O número inicial para contar a partir de</entry>
                    </row>
                    <row>
                        <entry>skip</entry>
                        <entry>number</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
                        <entry>O intervalo para contar</entry>
                    </row>
                    <row>
                        <entry>direction</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>up</emphasis></entry>
                        <entry>A direção para contar (up/down)</entry>
                    </row>
                    <row>
                        <entry>print</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Quando mostrar ou não o valor</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A variável de template que vai 
                        receber a saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			counter é usada para mostrar uma contagem. counter irá se lembrar de
			count em cada interação. Você pode ajustar o número, o intervalo
			e a direção da contagem, assim como detrminar quando
			mostrar ou não a contagem. Você pode ter varios contadores ao
			mesmo tempo, dando um nome único para cada um. Se você não der um nome,
			o nome 'default' será usado.
			</para>
			<para>
			 Se você indicar o atributo especial "assign", a saída da função counter
			 irá para essa variável de template ao invés de
			 ser mostrada no template.
			</para>
<example>
<title>counter</title>
<programlisting>
{* inicia a contagem *}
{counter start=0 skip=2 print=false}

{counter}&lt;br&gt;
{counter}&lt;br&gt;
{counter}&lt;br&gt;
{counter}&lt;br&gt;

MOSTRA:

2&lt;br&gt;
4&lt;br&gt;
6&lt;br&gt;
8&lt;br&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.cycle">
			<title>cycle</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>default</emphasis></entry>
                        <entry>O nome do ciclo</entry>
                    </row>
                    <row>
                        <entry>values</entry>
                        <entry>mixed</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>N/A</emphasis></entry>
						<entry>Os valores do ciclo, ou uma lista delimitada
						por vírgula (veja o atributo delimiter),
						ou uma matriz de valores.</entry>
                    </row>
                    <row>
                        <entry>print</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Quando mostrar ou não o valor</entry>
                    </row>
                    <row>
                        <entry>advance</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Quando avançar ou não para o próximo valor</entry>
                    </row>
                    <row>
                        <entry>delimiter</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>,</emphasis></entry>
                        <entry>O delimitador para usar no atributo values.</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A variável de template que
                        receberá a saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Cycle é usado para fazer um clico através de um conjunto de valores.
			 Isto torna fácil alternar entre duas ou mais cores em uma tabela,
			 ou entre uma matriz de valores.
			</para>
			<para>
			 Você pode usar o cycle em mais de um conjunto de valores
			 no seu template. Dê a cada conjunto de valores
			 um nome único.
			</para>
			<para>
			 Você pode fazer com que o valor atual não seja mostrado
			 definindo o atributo print para false. Isto é útil para
			 pular um valor.
			</para>
			<para>
			 O atributo advance é usado para repetir um valor. Quando definido
			 para false, a próxima chamada para cycle irá mostrar o mesmo valor.
			</para>
			<para>
			 Se você indicar o atributo especial "assign", a saída da função
			 cycle irá para a variável de template ao invés de ser
			 mostrado diretamente no template.
			</para>
<example>
<title>cycle</title>
<programlisting>
{section name=rows loop=$data}
&lt;tr bgcolor="{cycle values="#eeeeee,#d0d0d0"}"&gt;
   &lt;td&gt;{$data[rows]}&lt;/td&gt;
&lt;/tr&gt;
{/section}

MOSTRA:

&lt;tr bgcolor="#eeeeee"&gt;
   &lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr bgcolor="#d0d0d0"&gt;
   &lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr bgcolor="#eeeeee"&gt;
   &lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.debug">
			<title>debug</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>output</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>html</emphasis></entry>
                        <entry>Tipo de saída, html ou javascript</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 {debug} mostra o console de debug na página. Isto funciona independente
			 da definição de <link linkend="chapter.debugging.console">debug</link>.
			 Já que isto é executado em tempo de execução, isto é capaz apenas de
			 mostrar as variáveis definidas, e não os templates
			 que estejam em uso. Mas você pode ver todas as variáveis
			 disponíveis no escopo do template.
			</para>
		</sect1>
		<sect1 id="language.function.eval">
			<title>eval</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>var</entry>
                        <entry>mixed</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Variável (ou string) para avaliar</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A variável de template que
                        receberá a saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			eval é usado para avaliar uma variável como template. Isto pode ser usado para
			coisas como embutir tags/variáveis de template dentro de variáveis
			ou tags/variáveis dentro de variáveis em um arquivo de configuração.
			</para>
			<para>
			 Se você indicar o atributo especial "assign", a saída da função
			 eval irá para esta variável de template ao
			 invés de aparecer no template.
			</para>
			<note>
			<title>Nota Técnica</title>
			<para>
			 Variáveis avaliadas são tratadas igual a templates. Elas seguem
			 o mesmo funcionamento para escapar e para segurança como
			 se fossem templates.
			</para>
			</note>
			<note>
			<title>Nota Técnica</title>
			<para>
			 Variáveis avaliadas são compiladas a cada invocação, as versões
			 compiladas não são salvas. Entretando, se você tiver o cache ativado,
			 a saída vai ficar no cache junto com o resto do template.
			</para>
			</note>
<example>
<title>eval</title>
<programlisting>
setup.conf
----------

emphstart = &lt;b&gt;
emphend = &lt;/b&gt;
title = Welcome to {$company}'s home page!
ErrorCity = You must supply a {#emphstart#}city{#emphend#}.
ErrorState = You must supply a {#emphstart#}state{#emphend#}.


index.tpl
---------

{config_load file="setup.conf"}

{eval var=$foo}
{eval var=#title#}
{eval var=#ErrorCity#}
{eval var=#ErrorState# assign="state_error"}
{$state_error}

MOSTRA:

This is the contents of foo.
Welcome to Foobar Pub &amp; Grill's home page!
You must supply a &lt;b&gt;city&lt;/b&gt;.
You must supply a &lt;b&gt;state&lt;/b&gt;.

</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.fetch">
			<title>fetch</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>file</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O arquivo, site http ou ftp para obter</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A variável de template
                        que vai receber a saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 fetch é usado para obter arquivos do sistema de arquivos local,
			 http ou ftp, e mostrar o seu conteúdo. Se o nome do arquivo começar
			 com "http://", a página do web site será obtidae mostrada. Se o
			 nome do arquivo começar com "ftp://", o arquivo será obtido do servidor
			 ftp e mostrado. Para arquivos locais, o caminho completo do sistema de 
			 arquivos deve ser dado, ou um caminho relativo ao script php executado.
			</para>
			<para>
			 Se você indicar o atributo especial "assign", a saída da função
 			 fetch irá para uma variável de template ao ivés de 
 			 ser mostrado no template. (novo no Smarty 1.5.0)
			</para>
			<note>
				<title>Nota Técnica</title>
				<para>
				 Isto não suporta redirecionamento http, tenha
				 certesa de incluir a barra no final aonde necessário.
            	</para>
			</note>
			<note>
				<title>Nota Técnica</title>
				<para>
				 Se a segurança do template esta ativada e você
				 estiver obtendo um arquivo do sistema de arquivos local, isto
				 irá permitir apenas arquivos de um dos diretórios
				 definidos como seguros. ($secure_dir)
            	</para>
			</note>
<example>
<title>fetch</title>
<programlisting>
{* inclui algum javascript no seu template *}
{fetch file="/export/httpd/www.domain.com/docs/navbar.js"}

{* embute algum texto sobre o tempo de outro web site *}
{fetch file="http://www.myweather.com/68502/"}

{* obtém um arquivo de notícias via ftp *}
{fetch file="ftp://user:password@ftp.domain.com/path/to/currentheadlines.txt"}

{* coloca o conteúdo obtido para uma varável de template *}
{fetch file="http://www.myweather.com/68502/" assign="weather"}
{if $weather ne ""}
	&lt;b&gt;{$weather}&lt;/b&gt;
{/if}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.checkboxes">
			<title>html_checkboxes</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>checkbox</emphasis></entry>
                        <entry>O nome da lista checkbox</entry>
                    </row>
                    <row>
                        <entry>values</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que estaja usando o atributo options</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Uma matriz de valores para os botões checkbox</entry>
                    </row>
                    <row>
                        <entry>output</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que estaja usando o atributo options</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>uma matriz de saída para os botões checkbox</entry>
                    </row>
                    <row>
                        <entry>selected</entry>
                        <entry>string/array</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>O(s) elemento(s) checkbox marcado(s)</entry>
                    </row>
                    <row>
                        <entry>options</entry>
                        <entry>matriz</entry>
                        <entry>Sim, a mesnos que esteja usando values e output</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Uma matriz associativa de valores e saída</entry>
                    </row>
                    <row>
                        <entry>separator</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>string de texto para separar cada checkbox</entry>
                    </row>
                    <row>
                        <entry>labels</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Adicionar tags &lt;label&gt; para na saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 html_checkboxes é uma função personalizada que cria um grupo de
			 checkbox com os dados providos. Ela cuida de qual(is) item(s)
			 estão selecionado(s) por padrão. Os atributos requeridos são
			 values e output, a menos que você use options.
			 Toda a saída é compatível com XHTML.
			</para>
			<para>
			 Todos os parâmetro que não estejam na lista acima são mostrados
			 como pares nome/valor dentro de cada tag &lt;input&gt; criada.
			</para>
<example>
<title>html_checkboxes</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_ids', array(1000,1001,1002,1003));
$smarty-&gt;assign('cust_names', array('Joe Schmoe','Jack Smith','Jane Johnson','Charlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');


index.tpl:

{html_checkboxes values=$cust_ids checked=$customer_id output=$cust_names separator="&lt;br /&gt;"}


index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_checkboxes', array(
			1000 =&gt; 'Joe Schmoe',
			1001 =&gt; 'Jack Smith',
			1002 =&gt; 'Jane Johnson',
			1003 =&gt; 'Charlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');

index.tpl:

{html_checkboxes name="id" options=$cust_checkboxes checked=$customer_id separator="&lt;br /&gt;"}


MOSTRA: (ambos os exemplos)

&lt;label&gt;&lt;input type="checkbox" name="checkbox[]" value="1000" /&gt;Joe Schmoe&lt;/label&gt;&lt;br /&gt;
&lt;label&gt;&lt;input type="checkbox" name="checkbox[]" value="1001" checked="checked" /&gt;Jack Smith&lt;/label&gt;&lt;br /&gt;
&lt;label&gt;&lt;input type="checkbox" name="checkbox[]" value="1002" /&gt;Jane Johnson&lt;/label&gt;&lt;br /&gt;
&lt;label&gt;&lt;input type="checkbox" name="checkbox[]" value="1003" /&gt;Charlie Brown&lt;/label&gt;&lt;br /&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.image">
			<title>html_image</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>file</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>name/path para a imagem</entry>
                    </row>
                    <row>
                        <entry>border</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>0</emphasis></entry>
                        <entry>tamanho da borda de contorno da imagem</entry>
                    </row>
                    <row>
                        <entry>height</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>altura atual da imagem</emphasis></entry>
                        <entry>altura com a qual a imagem deve ser mostrada</entry>
                    </row>
                    <row>
                        <entry>width</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>largura atual da imagem</emphasis></entry>
                        <entry>largura com a qual a imagem deve ser mostrada</entry>
                    </row>
                    <row>
                        <entry>basedir</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>doc root do servidor</emphasis></entry>
                        <entry>diretório de base a caminhos relativos</entry>
                    </row>
                    <row>
                        <entry>alt</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>""</emphasis></entry>
                        <entry>descrição alternativa da imagem</entry>
                    </row>
                    <row>
                        <entry>href</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>valor href para aonde a imagem será ligada</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			html_image é uma função customizada que gera uma tag HTML para uma imagem.
			A altura e a largura são automaticamente calculadas a partir do arquivo de imagem se
			nenhum valor é fornecido.
			</para>
			<para>
			basedir é o diretório base do qual caminhos relativos de imagens estão baseados.
			Se não fornecido, o document root do servidor (variável de ambiente DOCUMENT_ROOT) é usada
			como o diretório base. Se a segurança está habilitada, o caminho para a imagem deve estar dentro
			de um diretório seguro.
			</para>
			<para>
			<parameter>href</parameter> é o valor href para onde a imagem será ligada. Se um link é fornecido,
			uma tag	&lt;a href="LINKVALUE"&gt;&lt;a&gt; é posta em volta da tag da imagem.
			</para>
			<note>
				<title>Nota Técnica</title>
				<para>
				html_image requer uma ação ao disco para ler a imagem e calcular
				a altura e a largura. Se você não usa caching de template, normalmente é 
				melhor evitar html_image e deixar as tags de imagem estáticas para performance
				otimizada.		
            	</para>
			</note>
<example>
<title>html_image</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;display('index.tpl');

index.tpl:

{html_image file="pumpkin.jpg"}
{html_image file="/path/from/docroot/pumpkin.jpg"}
{html_image file="../path/relative/to/currdir/pumpkin.jpg"}

OUTPUT: (possível)

&lt;img src="pumpkin.jpg" alt="" border="0" width="44" height="68" /&gt;
&lt;img src="/path/from/docroot/pumpkin.jpg" alt="" border="0" width="44" height="68" /&gt;
&lt;img src="../path/relative/to/currdir/pumpkin.jpg" alt="" border="0" width="44" height="68" /&gt;</programlisting>




</example>
		</sect1>
		<sect1 id="language.function.html.options">
			<title>html_options</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>values</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que usando atributos de opções</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array de valores para o menu dropdown</entry>
                    </row>
                    <row>
                        <entry>output</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que usando atributos de opções</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array de saída para o menu dropdown</entry>
                    </row>
                    <row>
                        <entry>selected</entry>
                        <entry>string/array</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>o elemento do option selecionado</entry>
                    </row>
                    <row>
                        <entry>options</entry>
                        <entry>associative array</entry>
                        <entry>Sim, a menos que usando valores e saída</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array associativo de valores e saída</entry>
                    </row>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>nome do grupo selecionado</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			html_options é uma função customizada que cria um grupo html option com os dados fornecidos.
			Ela está atenta de quais itens são selecionados por definição. Atributos exigidos são valores e
			saída, a menos que você use options
			no lugar.
			</para>
			<para>
			Se um valor dado é um array, ele será tratado como um OPTGROUP html,
			e mostrará os grupos.
			Recursion é suportado com OPTGROUP. Todas as saídas estão compatíveis com XHTML.
			</para>
			<para>
			Se o atributo opcional <emphasis>name</emphasis> é dado, as tags
			&lt;select name="groupname"&gt;&lt;/select&gt; irão enclausurar a lista de opções.
			Caso contrário apenas a lista de opções é gerada.
			</para>
			<para>
			Todos os parâmetros que não estão na lista acima são exibidos como
			name/value-pairs dentro de &lt;select&gt;-tag. Eles são ignorados se o opcional
			 <emphasis>name</emphasis>não é dado.
			</para>
<example>
<title>html_options</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_ids', array(1000,1001,1002,1003));
$smarty-&gt;assign('cust_names', array('Joe Schmoe','Jack Smith','Jane
Johnson','Carlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');

index.tpl:

&lt;select name=customer_id&gt;
	{html_options values=$cust_ids selected=$customer_id output=$cust_names}
&lt;/select&gt;


index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_options', array(
			1001 =&gt; 'Taniel Franklin',
			1002 =&gt; 'Fernando Correa',
			1003 =&gt; 'Marcelo Pereira',
			1004 =&gt; 'Charlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');

index.tpl:

&lt;select name=customer_id&gt;
	{html_options options=$cust_options selected=$customer_id}
&lt;/select&gt;


OUTPUT: (both examples)

&lt;select name=customer_id&gt;
	&lt;option value="1000"&gt;Taniel Franklin&lt;/option&gt;
	&lt;option value="1001" selected="selected"&gt;Fernando Correa&lt;/option&gt;
	&lt;option value="1002"&gt;Marcelo Pereira&lt;/option&gt;
	&lt;option value="1003"&gt;Charlie Brown&lt;/option&gt;
&lt;/select&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.radios">
			<title>html_radios</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>radio</emphasis></entry>
                        <entry>nome da radio list</entry>
                    </row>
                    <row>
                        <entry>values</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que utilizando atributo de opções</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array de valores para radio buttons</entry>
                    </row>
                    <row>
                        <entry>output</entry>
                        <entry>array</entry>
                        <entry>Sim, a menos que utilizando atributo de opções</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array de saída pra radio buttons</entry>
                    </row>
                    <row>
                        <entry>checked</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>O elemento do radio assinalado</entry>
                    </row>
                    <row>
                        <entry>options</entry>
                        <entry>associative array</entry>
                        <entry>Sim, a menos que utilizando valores e saída</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>um array associativo de valores e saída</entry>
                    </row>
                    <row>
                        <entry>separator</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>string de texto para separae cada item de radio</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			html_radios é uma função customizada que cria grupo de botões de radio html
			com os dados fornecidos.  Ele está atento para qual item está selecionado por definição.
			Atributos exigidos são valores e saídas, a menos que você use opções no lugar disso. Toda 
			saída é compatível com XHTML.
			</para>
			<para>
			Todos os parâmetros que não estão na lista acima são impressos como
			name/value-pairs de dentro de cada &lt;input&gt;-tags criada.
			</para>

<example>
<title>html_radios</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_ids', array(1000,1001,1002,1003));
$smarty-&gt;assign('cust_names', array('Joe Schmoe','Jack Smith','Jane
Johnson','Carlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');


index.tpl:

{html_radios values=$cust_ids checked=$customer_id output=$cust_names separator="&lt;br /&gt;"}


index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_radios', array(
			1001 =&gt; 'Joe Schmoe',
			1002 =&gt; 'Jack Smith',
			1003 =&gt; 'Jane Johnson',
			1004 =&gt; 'Charlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');


index.tpl:

{html_radios name="id" options=$cust_radios checked=$customer_id separator="&lt;br /&gt;"}


OUTPUT: (both examples)

&lt;input type="radio" name="id[]" value="1000"&gt;Taniel Fraklin&lt;br /&gt;
&lt;input type="radio" name="id[]" value="1001" checked="checked"&gt;&lt;br /&gt;
&lt;input type="radio" name="id[]" value="1002"&gt;Marcelo Pereira&lt;br /&gt;
&lt;input type="radio" name="id[]" value="1003"&gt;Charlie Brown&lt;br /&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.select.date">
			<title>html_select_date</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>prefix</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>Date_</entry>
                        <entry>Com o que prefixar o nome da variável</entry>
                    </row>
                    <row>
                        <entry>time</entry>
                        <entry>timestamp/YYYY-MM-DD</entry>
                        <entry>Não</entry>
                        <entry>tempo atual no timestamp do unix ou YYYY-MM-DD
						format</entry>
                        <entry>qual date/time para usar</entry>
                    </row>
                    <row>
                        <entry>start_year</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>ano atual</entry>
                        <entry>o primeiro ano no menu dropdown, ou o
						número do ano, ou relativo ao ano atual (+/- N)</entry>
                    </row>
                    <row>
                        <entry>end_year</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>da mesma forma que start_year</entry>
                        <entry>o último ano no menu dropdown, ou o
						número do ano, ou relativo ao ano atual (+/- N)</entry>
                    </row>
                    <row>
                        <entry>display_days</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>se mostra os dias ou não</entry>
                    </row>
                    <row>
                        <entry>display_months</entry>
                        <entry>boolean</entry>
                        <entry>No</entry>
                        <entry>true</entry>
                        <entry>whether to display months or not</entry>
                    </row>
                    <row>
                        <entry>display_years</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>se mostra os anos ou não</entry>
                    </row>
                    <row>
                        <entry>month_format</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>%B</entry>
                        <entry>qual seria o formato do mês (strftime)</entry>
                    </row>
                    <row>
                        <entry>day_format</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>%02d</entry>
                        <entry>a saída do dia seria em qual formato (sprintf)</entry>
                    </row>
                    <row>
                        <entry>day_value_format</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry>%d</entry>
                        <entry>o valor do dia seria em qual formato (sprintf)</entry>
                    </row>
                    <row>
                        <entry>year_as_text</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>false</entry>
                        <entry>se mostra ou não o ano como texto</entry>
                    </row>
                    <row>
                        <entry>reverse_years</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>false</entry>
                        <entry>mostra os anos na ordem reversa</entry>
                    </row>
                    <row>
                        <entry>field_array</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>
							se um nome é dado, as caixas de seleção serão exibidos assim que os resultados
							forem devolvidos ao PHP
							na forma de name[Day], name[Year], name[Month].
						</entry>
                    </row>
                    <row>
                        <entry>day_size</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry>null</entry>
                        <entry>adiciona o atributo de tamanho para a tag select se for dada</entry>
                    </row>
                    <row>
                        <entry>month_size</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona o atributo de tamanho para a tag de select se for dada</entry>
                    </row>
                    <row>
                        <entry>year_size</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona o atributo de tamanho para a tag de select se for dada</entry>
                    </row>
                    <row>
                        <entry>all_extra</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos extras para todas as tags select/input se 
                        forem dadas</entry>
                    </row>
                    <row>
                        <entry>day_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos
                        extras para todas as tags select/input se forem dadas</entry>
                    </row>
                    <row>
                        <entry>month_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos extras
                        para todas as tags select/input se forem dadas</entry>
                    </row>
                    <row>
                        <entry>year_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos extras
                        para todas as tags select/input se forem dadas</entry>
                    </row>
                    <row>
                        <entry>field_order</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>MDY</entry>
                        <entry>a ordem para se mostrar os campos</entry>
                    </row>
                    <row>
                        <entry>field_separator</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>\n</entry>
                        <entry>string exibida entre os diferentes campos</entry>
                    </row>
                    <row>
                        <entry>month_value_format</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>%m</entry>
						<entry>formato strftime dos valores do mês, o padrão é
						%m para número de mês.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			html_select_date é uma função customizada que cria menus dropdowns
			de data para você. Ele pode mostrar algo ou tudo de ano, mês e dia.
			</para>
<example>
<title>html_select_date</title>
<programlisting>
{html_select_date}


OUTPUT:

&lt;select name="Date_Month"&gt;
&lt;option value="1"&gt;January&lt;/option&gt;
&lt;option value="2"&gt;February&lt;/option&gt;
&lt;option value="3"&gt;March&lt;/option&gt;
&lt;option value="4"&gt;April&lt;/option&gt;
&lt;option value="5"&gt;May&lt;/option&gt;
&lt;option value="6"&gt;June&lt;/option&gt;
&lt;option value="7"&gt;July&lt;/option&gt;
&lt;option value="8"&gt;August&lt;/option&gt;
&lt;option value="9"&gt;September&lt;/option&gt;
&lt;option value="10"&gt;October&lt;/option&gt;
&lt;option value="11"&gt;November&lt;/option&gt;
&lt;option value="12" selected&gt;December&lt;/option&gt;
&lt;/select&gt;
&lt;select name="Date_Day"&gt;
&lt;option value="1"&gt;01&lt;/option&gt;
&lt;option value="2"&gt;02&lt;/option&gt;
&lt;option value="3"&gt;03&lt;/option&gt;
&lt;option value="4"&gt;04&lt;/option&gt;
&lt;option value="5"&gt;05&lt;/option&gt;
&lt;option value="6"&gt;06&lt;/option&gt;
&lt;option value="7"&gt;07&lt;/option&gt;
&lt;option value="8"&gt;08&lt;/option&gt;
&lt;option value="9"&gt;09&lt;/option&gt;
&lt;option value="10"&gt;10&lt;/option&gt;
&lt;option value="11"&gt;11&lt;/option&gt;
&lt;option value="12"&gt;12&lt;/option&gt;
&lt;option value="13" selected&gt;13&lt;/option&gt;
&lt;option value="14"&gt;14&lt;/option&gt;
&lt;option value="15"&gt;15&lt;/option&gt;
&lt;option value="16"&gt;16&lt;/option&gt;
&lt;option value="17"&gt;17&lt;/option&gt;
&lt;option value="18"&gt;18&lt;/option&gt;
&lt;option value="19"&gt;19&lt;/option&gt;
&lt;option value="20"&gt;20&lt;/option&gt;
&lt;option value="21"&gt;21&lt;/option&gt;
&lt;option value="22"&gt;22&lt;/option&gt;
&lt;option value="23"&gt;23&lt;/option&gt;
&lt;option value="24"&gt;24&lt;/option&gt;
&lt;option value="25"&gt;25&lt;/option&gt;
&lt;option value="26"&gt;26&lt;/option&gt;
&lt;option value="27"&gt;27&lt;/option&gt;
&lt;option value="28"&gt;28&lt;/option&gt;
&lt;option value="29"&gt;29&lt;/option&gt;
&lt;option value="30"&gt;30&lt;/option&gt;
&lt;option value="31"&gt;31&lt;/option&gt;
&lt;/select&gt;
&lt;select name="Date_Year"&gt;
&lt;option value="2001" selected&gt;2001&lt;/option&gt;
&lt;/select&gt;</programlisting>
</example>


<example>
<title>html_select_date</title>
<programlisting>

{* ano de começo e fim pode ser relativo ao ano atual *}
{html_select_date prefix="StartDate" time=$time start_year="-5" end_year="+1" display_days=false}

OUTPUT: (o ano atual é 2000)

&lt;select name="StartDateMonth"&gt;
&lt;option value="1"&gt;January&lt;/option&gt;
&lt;option value="2"&gt;February&lt;/option&gt;
&lt;option value="3"&gt;March&lt;/option&gt;
&lt;option value="4"&gt;April&lt;/option&gt;
&lt;option value="5"&gt;May&lt;/option&gt;
&lt;option value="6"&gt;June&lt;/option&gt;
&lt;option value="7"&gt;July&lt;/option&gt;
&lt;option value="8"&gt;August&lt;/option&gt;
&lt;option value="9"&gt;September&lt;/option&gt;
&lt;option value="10"&gt;October&lt;/option&gt;
&lt;option value="11"&gt;November&lt;/option&gt;
&lt;option value="12" selected&gt;December&lt;/option&gt;
&lt;/select&gt;
&lt;select name="StartDateYear"&gt;
&lt;option value="1999"&gt;1995&lt;/option&gt;
&lt;option value="1999"&gt;1996&lt;/option&gt;
&lt;option value="1999"&gt;1997&lt;/option&gt;
&lt;option value="1999"&gt;1998&lt;/option&gt;
&lt;option value="1999"&gt;1999&lt;/option&gt;
&lt;option value="2000" selected&gt;2000&lt;/option&gt;
&lt;option value="2001"&gt;2001&lt;/option&gt;
&lt;/select&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.select.time">
			<title>html_select_time</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>prefix</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>Time_</entry>
                        <entry>com o que prefixar o nome da variável</entry>
                    </row>
                    <row>
                        <entry>time</entry>
                        <entry>timestamp</entry>
                        <entry>Não</entry>
                        <entry>tempo atual</entry>
                        <entry>qual date/time para usar</entry>
                    </row>
                    <row>
                        <entry>display_hours</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>Exibir ou não as horas</entry>
                    </row>
                    <row>
                        <entry>display_minutes</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>Exibir ou não os minutos</entry>
                    </row>
                    <row>
                        <entry>display_seconds</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>Exibir ou não os segundos</entry>
                    </row>
                    <row>
                        <entry>display_meridian</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>Exibir ou não da forma (am/pm)</entry>
                    </row>
                    <row>
                        <entry>use_24_hours</entry>
                        <entry>booleano</entry>
                        <entry>Não</entry>
                        <entry>true</entry>
                        <entry>Usar ou não relógio de 24 horas</entry>
                    </row>
                    <row>
                        <entry>minute_interval</entry>
                        <entry>inteiro</entry>
                        <entry>Não</entry>
                        <entry>1</entry>
                        <entry>intervalo dos números dos minutos do menu dropdown</entry>
                    </row>
                    <row>
                        <entry>second_interval</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry>1</entry>
                        <entry>intervalo dos números dos segundos do menu dropdown</entry>
                    </row>
                    <row>
                        <entry>field_array</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>n/a</entry>
                        <entry>exibe valores para o array deste nome outputs values to array of this name</entry>
                    </row>
                    <row>
                        <entry>all_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos
                        extras para tags select/input se fornecidas</entry>
                    </row>
                    <row>
                        <entry>hour_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos
                        extras para tags select/input se fornecidas</entry>
                    </row>
                    <row>
                        <entry>minute_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos
                        extras para tags select/input tags se fornecidas</entry>
                    </row>
                    <row>
                        <entry>second_extra</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos 
                        extras para tags select/input se fornecidas</entry>
                    </row>
                    <row>
                        <entry>meridian_extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry>null</entry>
                        <entry>adiciona atributos
                        extras para tags select/input se fornecidas</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			html_select_time é uma função cusomizada que cria menus dropdowns de hora para você. Ela pode mostrar
			alguns valores, ou tudo de hora,
			minuto, segundo e ainda formato am/pm
			</para>
<example>
<title>html_select_time</title>
<programlisting>
{html_select_time use_24_hours=true}


OUTPUT:

&lt;select name="Time_Hour"&gt;
&lt;option value="00"&gt;00&lt;/option&gt;
&lt;option value="01"&gt;01&lt;/option&gt;
&lt;option value="02"&gt;02&lt;/option&gt;
&lt;option value="03"&gt;03&lt;/option&gt;
&lt;option value="04"&gt;04&lt;/option&gt;
&lt;option value="05"&gt;05&lt;/option&gt;
&lt;option value="06"&gt;06&lt;/option&gt;
&lt;option value="07"&gt;07&lt;/option&gt;
&lt;option value="08"&gt;08&lt;/option&gt;
&lt;option value="09" selected&gt;09&lt;/option&gt;
&lt;option value="10"&gt;10&lt;/option&gt;
&lt;option value="11"&gt;11&lt;/option&gt;
&lt;option value="12"&gt;12&lt;/option&gt;
&lt;option value="13"&gt;13&lt;/option&gt;
&lt;option value="14"&gt;14&lt;/option&gt;
&lt;option value="15"&gt;15&lt;/option&gt;
&lt;option value="16"&gt;16&lt;/option&gt;
&lt;option value="17"&gt;17&lt;/option&gt;
&lt;option value="18"&gt;18&lt;/option&gt;
&lt;option value="19"&gt;19&lt;/option&gt;
&lt;option value="20"&gt;20&lt;/option&gt;
&lt;option value="21"&gt;21&lt;/option&gt;
&lt;option value="22"&gt;22&lt;/option&gt;
&lt;option value="23"&gt;23&lt;/option&gt;
&lt;/select&gt;
&lt;select name="Time_Minute"&gt;
&lt;option value="00"&gt;00&lt;/option&gt;
&lt;option value="01"&gt;01&lt;/option&gt;
&lt;option value="02"&gt;02&lt;/option&gt;
&lt;option value="03"&gt;03&lt;/option&gt;
&lt;option value="04"&gt;04&lt;/option&gt;
&lt;option value="05"&gt;05&lt;/option&gt;
&lt;option value="06"&gt;06&lt;/option&gt;
&lt;option value="07"&gt;07&lt;/option&gt;
&lt;option value="08"&gt;08&lt;/option&gt;
&lt;option value="09"&gt;09&lt;/option&gt;
&lt;option value="10"&gt;10&lt;/option&gt;
&lt;option value="11"&gt;11&lt;/option&gt;
&lt;option value="12"&gt;12&lt;/option&gt;
&lt;option value="13"&gt;13&lt;/option&gt;
&lt;option value="14"&gt;14&lt;/option&gt;
&lt;option value="15"&gt;15&lt;/option&gt;
&lt;option value="16"&gt;16&lt;/option&gt;
&lt;option value="17"&gt;17&lt;/option&gt;
&lt;option value="18"&gt;18&lt;/option&gt;
&lt;option value="19"&gt;19&lt;/option&gt;
&lt;option value="20" selected&gt;20&lt;/option&gt;
&lt;option value="21"&gt;21&lt;/option&gt;
&lt;option value="22"&gt;22&lt;/option&gt;
&lt;option value="23"&gt;23&lt;/option&gt;
&lt;option value="24"&gt;24&lt;/option&gt;
&lt;option value="25"&gt;25&lt;/option&gt;
&lt;option value="26"&gt;26&lt;/option&gt;
&lt;option value="27"&gt;27&lt;/option&gt;
&lt;option value="28"&gt;28&lt;/option&gt;
&lt;option value="29"&gt;29&lt;/option&gt;
&lt;option value="30"&gt;30&lt;/option&gt;
&lt;option value="31"&gt;31&lt;/option&gt;
&lt;option value="32"&gt;32&lt;/option&gt;
&lt;option value="33"&gt;33&lt;/option&gt;
&lt;option value="34"&gt;34&lt;/option&gt;
&lt;option value="35"&gt;35&lt;/option&gt;
&lt;option value="36"&gt;36&lt;/option&gt;
&lt;option value="37"&gt;37&lt;/option&gt;
&lt;option value="38"&gt;38&lt;/option&gt;
&lt;option value="39"&gt;39&lt;/option&gt;
&lt;option value="40"&gt;40&lt;/option&gt;
&lt;option value="41"&gt;41&lt;/option&gt;
&lt;option value="42"&gt;42&lt;/option&gt;
&lt;option value="43"&gt;43&lt;/option&gt;
&lt;option value="44"&gt;44&lt;/option&gt;
&lt;option value="45"&gt;45&lt;/option&gt;
&lt;option value="46"&gt;46&lt;/option&gt;
&lt;option value="47"&gt;47&lt;/option&gt;
&lt;option value="48"&gt;48&lt;/option&gt;
&lt;option value="49"&gt;49&lt;/option&gt;
&lt;option value="50"&gt;50&lt;/option&gt;
&lt;option value="51"&gt;51&lt;/option&gt;
&lt;option value="52"&gt;52&lt;/option&gt;
&lt;option value="53"&gt;53&lt;/option&gt;
&lt;option value="54"&gt;54&lt;/option&gt;
&lt;option value="55"&gt;55&lt;/option&gt;
&lt;option value="56"&gt;56&lt;/option&gt;
&lt;option value="57"&gt;57&lt;/option&gt;
&lt;option value="58"&gt;58&lt;/option&gt;
&lt;option value="59"&gt;59&lt;/option&gt;
&lt;/select&gt;
&lt;select name="Time_Second"&gt;
&lt;option value="00"&gt;00&lt;/option&gt;
&lt;option value="01"&gt;01&lt;/option&gt;
&lt;option value="02"&gt;02&lt;/option&gt;
&lt;option value="03"&gt;03&lt;/option&gt;
&lt;option value="04"&gt;04&lt;/option&gt;
&lt;option value="05"&gt;05&lt;/option&gt;
&lt;option value="06"&gt;06&lt;/option&gt;
&lt;option value="07"&gt;07&lt;/option&gt;
&lt;option value="08"&gt;08&lt;/option&gt;
&lt;option value="09"&gt;09&lt;/option&gt;
&lt;option value="10"&gt;10&lt;/option&gt;
&lt;option value="11"&gt;11&lt;/option&gt;
&lt;option value="12"&gt;12&lt;/option&gt;
&lt;option value="13"&gt;13&lt;/option&gt;
&lt;option value="14"&gt;14&lt;/option&gt;
&lt;option value="15"&gt;15&lt;/option&gt;
&lt;option value="16"&gt;16&lt;/option&gt;
&lt;option value="17"&gt;17&lt;/option&gt;
&lt;option value="18"&gt;18&lt;/option&gt;
&lt;option value="19"&gt;19&lt;/option&gt;
&lt;option value="20"&gt;20&lt;/option&gt;
&lt;option value="21"&gt;21&lt;/option&gt;
&lt;option value="22"&gt;22&lt;/option&gt;
&lt;option value="23" selected&gt;23&lt;/option&gt;
&lt;option value="24"&gt;24&lt;/option&gt;
&lt;option value="25"&gt;25&lt;/option&gt;
&lt;option value="26"&gt;26&lt;/option&gt;
&lt;option value="27"&gt;27&lt;/option&gt;
&lt;option value="28"&gt;28&lt;/option&gt;
&lt;option value="29"&gt;29&lt;/option&gt;
&lt;option value="30"&gt;30&lt;/option&gt;
&lt;option value="31"&gt;31&lt;/option&gt;
&lt;option value="32"&gt;32&lt;/option&gt;
&lt;option value="33"&gt;33&lt;/option&gt;
&lt;option value="34"&gt;34&lt;/option&gt;
&lt;option value="35"&gt;35&lt;/option&gt;
&lt;option value="36"&gt;36&lt;/option&gt;
&lt;option value="37"&gt;37&lt;/option&gt;
&lt;option value="38"&gt;38&lt;/option&gt;
&lt;option value="39"&gt;39&lt;/option&gt;
&lt;option value="40"&gt;40&lt;/option&gt;
&lt;option value="41"&gt;41&lt;/option&gt;
&lt;option value="42"&gt;42&lt;/option&gt;
&lt;option value="43"&gt;43&lt;/option&gt;
&lt;option value="44"&gt;44&lt;/option&gt;
&lt;option value="45"&gt;45&lt;/option&gt;
&lt;option value="46"&gt;46&lt;/option&gt;
&lt;option value="47"&gt;47&lt;/option&gt;
&lt;option value="48"&gt;48&lt;/option&gt;
&lt;option value="49"&gt;49&lt;/option&gt;
&lt;option value="50"&gt;50&lt;/option&gt;
&lt;option value="51"&gt;51&lt;/option&gt;
&lt;option value="52"&gt;52&lt;/option&gt;
&lt;option value="53"&gt;53&lt;/option&gt;
&lt;option value="54"&gt;54&lt;/option&gt;
&lt;option value="55"&gt;55&lt;/option&gt;
&lt;option value="56"&gt;56&lt;/option&gt;
&lt;option value="57"&gt;57&lt;/option&gt;
&lt;option value="58"&gt;58&lt;/option&gt;
&lt;option value="59"&gt;59&lt;/option&gt;
&lt;/select&gt;
&lt;select name="Time_Meridian"&gt;
&lt;option value="am" selected&gt;AM&lt;/option&gt;
&lt;option value="pm"&gt;PM&lt;/option&gt;
&lt;/select&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.html.table">
			<title>html_table</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>loop</entry>
                        <entry>array</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>array de dados para ser feito o loop</entry>
                    </row>
                    <row>
                        <entry>cols</entry>
                        <entry>inteiro</entry>
                        <entry>Não</entry>
                        <entry><emphasis>3</emphasis></entry>
                        <entry>número de colunas na tabela</entry>
                    </row>
                    <row>
                        <entry>table_attr</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>border="1"</emphasis></entry>
                        <entry>atributos para a tag table</entry>
                    </row>
                    <row>
                        <entry>tr_attr</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>atributos para a tag  tr (arrays estão em ciclo)</entry>
                    </row>
                    <row>
                        <entry>td_attr</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>empty</emphasis></entry>
                        <entry>atributos para a tag (arrays estão em ciclo)</entry>
                    </row>
                    <row>
                        <entry>trailpad</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>&amp;nbsp;</emphasis></entry>
                        <entry>values to pad the trailing cells on last row with
						(se algum)</entry>
                    </row>

                    <row>
                        <entry>hdir</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>right</emphasis></entry>
                        <entry>direçao de uma linha para ser representada. Possíveis valores: <emphasis>left</emphasis>/<emphasis>right</emphasis></entry>
                    </row>
                    <row>
                        <entry>vdir</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>down</emphasis></entry>
                        <entry>direção das colunas para serem representadas. Possíveis valores: <emphasis>up</emphasis>/<emphasis>down</emphasis></entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			<emphasis>html_table</emphasis> é uma função customizada que transforma um array de dados
			em uma tabela HTML. O atributo <emphasis>cols</emphasis> determina com quantas colunas estarão
			na tabela. Os valores <emphasis>table_attr</emphasis>, <emphasis>tr_attr</emphasis> e
			<emphasis>td_attr</emphasis> determinam os atributos dados para a tabela, tags tr e td. Se <emphasis>tr_attr</emphasis> ou
			<emphasis>td_attr</emphasis> são arrays, eles entrarão em ciclo.
			<emphasis>trailpad</emphasis> é o 
			alor colocado dentro do trailing
			cells na última linha da tabela
			se há alguma presente.
			</para>
<example>
<title>html_table</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('data',array(1,2,3,4,5,6,7,8,9));
$smarty-&gt;assign('tr',array('bgcolor="#eeeeee"','bgcolor="#dddddd"'));
$smarty-&gt;display('index.tpl');

index.tpl:

{html_table loop=$data}
{html_table loop=$data cols=4 table_attr='border="0"'}
{html_table loop=$data cols=4 tr_attr=$tr}

MOSTRA:

&lt;table border="1"&gt;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;table border="0"&gt;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;table border="1"&gt;
&lt;tr bgcolor="#eeeeee"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
&lt;tr bgcolor="#dddddd"&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr bgcolor="#eeeeee"&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.math">
			<title>math</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Exigido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>equation</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>a equação para executar</entry>
                    </row>
                    <row>
                        <entry>format</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>o formato do resultado (sprintf)</entry>
                    </row>
                    <row>
                        <entry>var</entry>
                        <entry>numérico</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>valor da variável da equação</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>variável de template cuja saída será atribuida</entry>
                    </row>
                    <row>
                        <entry>[var ...]</entry>
                        <entry>numérica</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>valor da variável da equação</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
            math permite o desenhista de template fazer equações matemáticas no template.
            Qualquer variável de template numérica pode ser usada nas equações, e o resultado
            é exibido no lugar da tag. As variáveis usadas na equação são passadas como parâmetros,
            que podem ser variáveis de template
            ou valores estáticos.  +, -, /, *, abs, ceil, cos,
            exp, floor, log, log10, max, min, pi, pow, rand, round, sin, sqrt,
            srans and tan são todos os operadores válidos. Verifique a documentação do PHP para
            mais informações acerca destas funções matemáticas.
			</para>
			<para>
			Se você fornece o atributo especial "assign", a saída da função matemática será
			atribuído para esta variável
			de template ao invés de ser exibida para o template.
			</para>
			<note>
				<title>Nota Técnica</title>
				<para>
				math é uma função de performance cara devido ao uso da função do php eval().
				Fazendo a matemática no PHP é muito mais eficiente, então sempre é possível fazer
				os cálculos matemáticos no PHP e lançar os resultados para o template. Definitivamente
				evite chamadas de funções de 
				matemáticas repetitivamente, como dentro de loops de section.
            	</para>
			</note>
<example>
<title>math</title>
<programlisting>
{* $height=4, $width=5 *}

{math equation="x + y" x=$height y=$width}

OUTPUT:

9


{* $row_height = 10, $row_width = 20, #col_div# = 2, assigned in template *}

{math equation="height * width / division"
      height=$row_height
      width=$row_width
      division=#col_div#}

OUTPUT:

100


{* Você pode usar parenteses *}

{math equation="(( x + y ) / z )" x=2 y=10 z=2}

OUTPUT:

6


{* você pode fornecer um parâmetro de formato em sprintf *}

{math equation="x + y" x=4.4444 y=5.0000 format="%.2f"}

OUTPUT:

9.44</programlisting>
</example>
		</sect1>
				<sect1 id="language.function.mailto">
			<title>mailto</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>address</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O endereço de email</entry>
                    </row>
                    <row>
                        <entry>text</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O texto para mostrar, o padrão
                               é o endereço de email</entry>
                    </row>
                    <row>
                        <entry>encode</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>none</emphasis></entry>
                        <entry>Como codificar o e-mail.
                               Pode ser none,
							   hex ou javascript.</entry>
                    </row>
                    <row>
                        <entry>cc</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Endereço de e-mail para mandar uma cópia carbono(cc).
                               Separe os endereços por vírgula.</entry>
                    </row>
                    <row>
                        <entry>bcc</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Endereço de e-mail para mandar uma cópia carbono cega(bcc).
						       Separe os endereços por vírgula.</entry>
                    </row>
                    <row>
                        <entry>subject</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Assunto do e-mail.</entry>
                    </row>
                    <row>
                        <entry>newsgroups</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>newsgroup para postar.
						       Separe os endereços por vírgula.</entry>
                    </row>
                    <row>
                        <entry>followupto</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Endereço para acompanhar.
						       Separe os endereços por vírgula.</entry>
                    </row>
                    <row>
                        <entry>extra</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Qualquer outra informação que você
                               queira passar para o link, como
                               classes de planilhas de estilo</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			mailto automatiza o processo de criação de links de e-mail e opcionalmente
			codifica eles. Codificar e-mail torna mais difícil para
			web spiders pegarem endereços no seu site.
			</para>
			<note>
				<title>Nota Técnica</title>
				<para>
				javascript é provavelmente o meio de codificação mais
				utilizado, entretanto você pode usar codificação hexadecimal também.
            	</para>
			</note>
<example>
<title>mailto</title>
<programlisting>
{mailto address="me@domain.com"}
{mailto address="me@domain.com" text="send me some mail"}
{mailto address="me@domain.com" encode="javascript"}
{mailto address="me@domain.com" encode="hex"}
{mailto address="me@domain.com" subject="Hello to you!"}
{mailto address="me@domain.com" cc="you@domain.com,they@domain.com"}
{mailto address="me@domain.com" extra='class="email"'}

MOSTRA:

&lt;a href="mailto:me@domain.com" &gt;me@domain.com&lt;/a&gt;
&lt;a href="mailto:me@domain.com" &gt;send me some mail&lt;/a&gt;
&lt;SCRIPT language="javascript"&gt;eval(unescape('%64%6f%63%75%6d%65%6e%74%2e%77%72%6
9%74%65%28%27%3c%61%20%68%72%65%66%3d%22%6d%61%69%6c%74%6f%3a%6d%65%40%64%6f%6d%
61%69%6e%2e%63%6f%6d%22%20%3e%6d%65%40%64%6f%6d%61%69%6e%2e%63%6f%6d%3c%2f%61%3e
%27%29%3b'))&lt;/SCRIPT&gt;
&lt;a href="mailto:%6d%65@%64%6f%6d%61%69%6e.%63%6f%6d" &gt;&amp;#x6d;&amp;#x65;&amp;#x40;&amp;#x64;&amp;
#x6f;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6e;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&lt;/a&gt;
&lt;a href="mailto:me@domain.com?subject=Hello%20to%20you%21" &gt;me@domain.com&lt;/a&gt;
&lt;a href="mailto:me@domain.com?cc=you@domain.com%2Cthey@domain.com" &gt;me@domain.com&lt;/a&gt;
&lt;a href="mailto:me@domain.com" class="email"&gt;me@domain.com&lt;/a&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.popup.init">
			<title>popup_init</title>
			<para>
			popup é uma integração com overLib, uma biblioteca usada para janelas 
			popup. Esta é usada para informações sensíveis ao contexto, como
			janelas de ajuda ou dicas. popup_init deve ser usada uma vez ao
			topo de cada página que você planeje usar a função <link
			linkend="language.function.popup">popup</link>. overLib
			foi escrita por Erik Bosrup, e a página esta localizada em
			http://www.bosrup.com/web/overlib/.
			</para>
			<para>
			A partir da versão 2.1.2 do Smarty, overLib NÃO vem com a distribuição.
			Baixe o overLib, coloque o arquivo overlib.js dentro da sua arvore de
			documentos e indique o caminho relativo para o parâmetro "src"
			de popup_init.
			</para>
<example>
<title>popup_init</title>
<programlisting>
{* popup_init deve ser utilizada uma vez no topo da página *}
{popup_init src="/javascripts/overlib.js"}</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.popup">
			<title>popup</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>text</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O text/html para mostrar na janela popup</entry>
                    </row>
                    <row>
                        <entry>trigger</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>onMouseOver</emphasis></entry>
                        <entry>O que é usado para fazer a janela aparecer. Pode ser
                        onMouseOver ou onClick</entry>
                    </row>
                    <row>
                        <entry>sticky</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz a janela colar até que seja fechada</entry>
                    </row>
                    <row>
                        <entry>caption</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o texto para o título</entry>
                    </row>
                    <row>
                        <entry>fgcolor</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A cor usada dentro da caixa popup</entry>
                    </row>
                    <row>
                        <entry>bgcolor</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A cor da borda da caixa popup</entry>
                    </row>
                    <row>
                        <entry>textcolor</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a cor do texto dentro da caixa popup</entry>
                    </row>
                    <row>
                        <entry>capcolor</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a cor do título da caixa</entry>
                    </row>
                    <row>
                        <entry>closecolor</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a cor do texto para fechar</entry>
                    </row>
                    <row>
                        <entry>textfont</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a cor do texto para ser usado no texto principal</entry>
                    </row>
                    <row>
                        <entry>captionfont</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a fonte para ser usada no Título</entry>
                    </row>
                    <row>
                        <entry>closefont</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a fonte para o texto "Close"</entry>
                    </row>
                    <row>
                        <entry>textsize</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a fonte do texto principa</entry>
                    </row>
                    <row>
                        <entry>captionsize</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o tamanho da fonte do título</entry>
                    </row>
                    <row>
                        <entry>closesize</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o tamanho da fonte do texto "Close"</entry>
                    </row>
                    <row>
                        <entry>width</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a largura da caixa</entry>
                    </row>
                    <row>
                        <entry>height</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define a altura da caixa</entry>
                    </row>
                    <row>
                        <entry>left</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz os popups irem para a esquerda do mouse</entry>
                    </row>
                    <row>
                        <entry>right</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz os popups ir para a diresita do mouse</entry>
                    </row>
                    <row>
                        <entry>center</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz os popups ir para o centro do mouse</entry>
                    </row>
                    <row>
                        <entry>above</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz os popups irem para acima do mouse. NOTA: somente
                        possível se height foi definido</entry>
                    </row>
                    <row>
                        <entry>below</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Faz os popups irem abaixo do mouse</entry>
                    </row>
                    <row>
                        <entry>border</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Torna as bordas dos popups grossas ou finas</entry>
                    </row>
                    <row>
                        <entry>offsetx</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A que distancia do mouse o popup irá
                        aparecer, horizontalmente</entry>
                    </row>
                    <row>
                        <entry>offsety</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A que distancia do mouse o popup irá
                        aparecer, verticalmente</entry>
                    </row>
                    <row>
                        <entry>fgbackground</entry>
                        <entry>url para imagem</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define uma imagem para usar ao invés de uma
                        cor dentro do popup.</entry>
                    </row>
                    <row>
                        <entry>bgbackground</entry>
                        <entry>url to image</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>define uma imagem para ser usada como borda
                        ao invés de uma cor para o popup. Nota: você deve definir bgcolor
                        como "" ou a cor irá aparecer também. NOTA: quando tiver um
                        link "Close", o Netscape irá redesenhar as células da tabela,
                        fazendo as coisas aparecerem incorretamente</entry>
                    </row>
                    <row>
                        <entry>closetext</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o texto "Close" para qualquer outra coisa</entry>
                    </row>
                    <row>
                        <entry>noclose</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Não mostra o texto "Close" em coladas
                        com um título</entry>
                    </row>
                    <row>
                        <entry>status</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o texto na barra de status do browser</entry>
                    </row>
                    <row>
                        <entry>autostatus</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define o texto da barra de status para o texto do popup.
						NOTA: sobrescreve a definição de status</entry>
                    </row>
                    <row>
                        <entry>autostatuscap</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>define o texto da barra de status como o texto do título
                        NOTA: sobrescreve o status e autostatus</entry>
                    </row>
                    <row>
                        <entry>inarray</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
						<entry>Indica ao overLib para ler o texto deste índice
						na matriz ol_text array, localizada em overlib.js. Este
						parâmetro pode ser usado ao invés do texto</entry>
                    </row>
                    <row>
                        <entry>caparray</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>diz para overLib ler o título a partir deste índice
                        na matriz ol_caps</entry>
                    </row>
                    <row>
                        <entry>capicon</entry>
                        <entry>url</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Mostra a imagem antes do título</entry>
                    </row>
                    <row>
                        <entry>snapx</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>snaps the popup to an even position in a
						horizontal grid</entry>
                    </row>
                    <row>
                        <entry>snapy</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>snaps the popup to an even position in a
						vertical grid</entry>
                    </row>
                    <row>
                        <entry>fixx</entry>
                        <entry>integer</entry>
                        <entry>No</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>locks the popups horizontal position Note:
						overrides all other horizontal placement</entry>
                    </row>
                    <row>
                        <entry>fixy</entry>
                        <entry>integer</entry>
                        <entry>No</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>locks the popups vertical position Note:
						overrides all other vertical placement</entry>
                    </row>
                    <row>
                        <entry>background</entry>
                        <entry>url</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Define uma imagem para ser usada como
                        fundo ao invés da tabela</entry>
                    </row>
                    <row>
                        <entry>padx</entry>
                        <entry>integer,integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Prenche a imagem de fundo com espaços em branco horizontal
                        para colocação do texto. Nota: este é um comando
                        de dois parâmetros</entry>
                    </row>
                    <row>
                        <entry>pady</entry>
                        <entry>integer,integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Prenche a imagem de fundo com espaços em branco vertical
						para colocação do texto. Nota: este é um comando
                        de dois parâmetros</entry>
                    </row>
                    <row>
                        <entry>fullhtml</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Permite a você controlar o html sobre a figura
                        de fundo completamente. O código HTML é esperado
                        no atributo "text"</entry>
                    </row>
                    <row>
                        <entry>frame</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Controla popups em frames diferentes. Veja a página da
						overlib para maiores informações sobre esta função</entry>
                    </row>
                    <row>
                        <entry>timeout</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Utiliza uma função e pega o valor de retorno
                        como texto que deva ser mostrado 
                        na janela popup</entry>
                    </row>
                    <row>
                        <entry>delay</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Faz com que o popup funcione como um tooltip. Irá
                        aparecer apenas após um certo atraso em milésimos de segundo</entry>
                    </row>
                    <row>
                        <entry>hauto</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>Determina automaticamente se o popup deve aparecer
                        a esquerda ou direita do mouse.</entry>
                    </row>
                    <row>
                        <entry>vauto</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
						<entry>Determina automaticamente se o popup deve aparecer
						abaixo ou acima do mouse.</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			popup é usado para criar janelas popup com javascript.
			</para>
<example>
<title>popup</title>
<programlisting>
{* popup_init deve ser utilizada uma vez no topo da página *}
{popup_init src="/javascripts/overlib.js"}

{* cria um link com uma janela popup que aparece quando se passa o mouse sobre ele *}
&lt;A href="mypage.html" {popup text="This link takes you to my page!"}&gt;mypage&lt;/A&gt;

{* você pode usar html, links, etc no texto do popup *}
&lt;A href="mypage.html" {popup sticky=true caption="mypage contents"
text="&lt;UL&gt;&lt;LI&gt;links&lt;LI&gt;pages&lt;LI&gt;images&lt;/UL&gt;" snapx=10 snapy=10}&gt;mypage&lt;/A&gt;</programlisting>
</example>
		</sect1>
		<sect1 id="language.function.textformat">
			<title>textformat</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Requerido</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>style</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>estilo pré-definido</entry>
                    </row>
                    <row>
                        <entry>indent</entry>
                        <entry>number</entry>
                        <entry>Não</entry>
                        <entry><emphasis>0</emphasis></entry>
                        <entry>O número de caracteres para endentar cada linha.</entry>
                    </row>
                    <row>
                        <entry>indent_first</entry>
                        <entry>number</entry>
                        <entry>Não</entry>
                        <entry><emphasis>0</emphasis></entry>
                        <entry>O número de caracteres para endentar a primeira linha</entry>
                    </row>
                    <row>
                        <entry>indent_char</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>(single space)</emphasis></entry>
                        <entry>O caractere (ou string de caracteres) para indenta</entry>
                    </row>
                    <row>
                        <entry>wrap</entry>
                        <entry>number</entry>
                        <entry>Não</entry>
                        <entry><emphasis>80</emphasis></entry>
                        <entry>Em quantos caracteres quebrar cada linha</entry>
                    </row>
                    <row>
                        <entry>wrap_char</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>\n</emphasis></entry>
                        <entry>O caractere (ou string de caracteres) para usar
                        para quebrar cada linha</entry>
                    </row>
                    <row>
                        <entry>wrap_cut</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>false</emphasis></entry>
                        <entry>Se true, wrap irá quebrar a linha no caractere
                        exato em vez de quebrar ao final da palavra</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>No</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>A variável de template que irá
                        receber a saída</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			textformat é uma função de bloco usada para formatar texto. Basicamente
			limpa espaços e caracteres especiais, e formata os paragrafos
			quebrando o texto ao final de palavras e identando linhas.
			</para>
			<para>
			Você pode definir os parâmetros explicitamente, ou usar um estilo pré-definido.
			Atualmente o único estilo disponível é "email".
			</para>
<example>
<title>textformat</title>
<programlisting>
{textformat wrap=40}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

MOSTRA:

This is foo. This is foo. This is foo.
This is foo. This is foo. This is foo.

This is bar.

bar foo bar foo foo. bar foo bar foo
foo. bar foo bar foo foo. bar foo bar
foo foo. bar foo bar foo foo. bar foo
bar foo foo. bar foo bar foo foo.


{textformat wrap=40 indent=4}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

MOSTRA:

    This is foo. This is foo. This is
    foo. This is foo. This is foo. This
    is foo.

    This is bar.

    bar foo bar foo foo. bar foo bar foo
    foo. bar foo bar foo foo. bar foo
    bar foo foo. bar foo bar foo foo.
    bar foo bar foo foo. bar foo bar
    foo foo.

{textformat wrap=40 indent=4 indent_first=4}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

MOSTRA:

        This is foo. This is foo. This
    is foo. This is foo. This is foo.
    This is foo.

        This is bar.

        bar foo bar foo foo. bar foo bar
    foo foo. bar foo bar foo foo. bar
    foo bar foo foo. bar foo bar foo
    foo. bar foo bar foo foo. bar foo
    bar foo foo.

{textformat style="email"}

This is foo.
This is foo.
This is foo.
This is foo.
This is foo.
This is foo.

This is bar.

bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.
bar foo bar foo     foo.

{/textformat}

MOSTRA:

This is foo. This is foo. This is foo. This is foo. This is foo. This is
foo.

This is bar.

bar foo bar foo foo. bar foo bar foo foo. bar foo bar foo foo. bar foo
bar foo foo. bar foo bar foo foo. bar foo bar foo foo. bar foo bar foo
foo.

</programlisting>
</example>
		</sect1>
       </chapter>

  <chapter id="config.files">
   <title>Arquivos de Configuração</title>
   <para>
    Arquivos de configuração são úteis para designers gerenciarem váriaveis
    globais para os templates a partir de um arquivo. Um exemplo são as cores do template. Normalmente se
    se você quer mudar o tema de cores para uma aplicação, você deve ir
    em cada um dos arquivos de template e mudar as cores. Com
    um arquivo de configuração, as cores podem ser mantidas em um lugar, e apenas
    um arquivo precisa ser atualizado.
   </para>
   <example>
    <title>Examplo de sintaxe de um arquivo de configuração</title>
    <programlisting>
# global variables
pageTitle = "Main Menu"
bodyBgColor = #000000
tableBgColor = #000000
rowBgColor = #00ff00

[Customer]
pageTitle = "Customer Info"

[Login]
pageTitle = "Login"
focus = "username"
Intro = """este é um valor
           que se divide m mais de uma linha. deve
           estar dentro de três aspas."""

# hidden section
[.Database]
host=my.domain.com
db=ADDRESSBOOK
user=php-user
pass=foobar</programlisting>
   </example>
   <para>
    Valores de variáveis podem estar entre aspas, mas não é necessário.
    Você pode usar aspas simples ou duplas. Se você tiver um valor que 
    ocupe mais de uma linha, coloque todo o valor entre três aspas
    ("""). Você pode colocar comentários em um arquivo de configuração com qualquer sintaxe
    que não seja válida em um arquivo de configuração. Nós recomendamos usar um <literal>#</literal>
    (cancela) no ínicio de cada linha.
   </para>
   <para>
    Este arquivo de onfiguração tem duas seções. Nomes de seções devem estar entre conchetes
    []. Nomes de seção podem ser string arbritraria que não contenham os símbolos
    <literal>[</literal> ou <literal>]</literal>. As quatro variáveis no top são
    variáveis globais, ou variáveis sem seção.
    Estas variáveis são sempre carregadas do arquivo de configuração. Se uma seção em
    particular for carregada, então as variáveis globais e as variáveis desta seção são carregadas.
    Se uma variável existir como global e dentro de uma seção,
    a variável da seção será utilizada. Se você tiver duas variáveis na mesma seção com o mesmo nome,
    a última será utilizada.
   </para>
   <para>
    Arquivos de configuração são carregados no template com a função embutida
    <command>config_load</command>.
   </para>
   <para>
    Você pode esconder variáveis ou seções inteiras colocando um ponto
    antes do nome da variável. Isto é útil se a sua aplicação
    se arquivos de configuração e lê dados sensíveis a partir deles
    que a ferramenta de template não precisa. Se você tem terceiros fazendo a edição de templates,
    você terá certesa que eles não leiam dados sensíveis
    do arquivo de configuração carregando ele no template.
   </para>
  </chapter>

  <chapter id="chapter.debugging.console">
   <title>Debugging Console</title>
   <para>
    Há um console para debug incluso no Smarty. O console informa a você de 
    todos os templates incluídos, variáveis definidas e variáveis de arquivos de configuração
    da chamada atual do template. Um template chamado "debug.tpl"
    é incluso com a distribuição do Smarty o qual controla a formatação
    do console. Defina $debugging para true no Smarty, e se necessário defina $debug_tpl
	para o caminho de recurso de debug.tpl (isto é SMARTY_DIR por
	padrão.) Quando você carrega uma página, um console em javascript irá abrir uma
	janela popup e dar a você o nome de todos os templates incluídos e as variáveis definidas
	para a página atual. Para ver as variáveis disponíveis para um template
	em particular, veja a função <link linkend="language.function.debug">{debug}</link>.
	Para desabilitar o console de debug, defina $debugging para
	false. Você pode ativar temporariamente o console de debug colocando
	SMARTY_DEBUG na URL se você ativou esta opção com <link
	linkend="variable.debugging.ctrl">$debugging_ctrl</link>.
   </para>
   <note>
    <title>Nota Técnica</title>
    <para>
     O console de debug não funciona quando você usa a API fetch(),
     apenas quando estiver usando display(). É um conjunto de comandos javascript
     adicionados ao final do template gerado. Se você não gosta de javascript,
     você pode editar o template debug.tpl para formatar a saída como você quiser.
     Dados de debug não são guardados em cache e os dados de debug.tpl
     não são incluídos no console de debug.
    </para>
   </note>
   <note>
    <para>
     Os tempos de carregamento de cada template e arquivo de cofiguração são em segundos,
     ou então frações.
    </para>
   </note>
  </chapter>
 </part>
