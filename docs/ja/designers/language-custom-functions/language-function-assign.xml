<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.9 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<sect1 id="language.function.assign">
 <title>{assign}</title>
  <para>
   <varname>{assign}</varname> は、テンプレート変数を
   <emphasis role="bold">テンプレートの実行時に</emphasis>
   割り当てます。
 </para>

 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>属性名</entry>
     <entry>型</entry>
     <entry>必須</entry>
     <entry>デフォルト</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>var</entry>
     <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>割り当てられるテンプレート変数の名前</entry>
    </row>
    <row>
     <entry>value</entry>
     <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>テンプレート変数に割り当てる値</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>

 <example>
  <title>{assign}</title>
  <programlisting>
<![CDATA[
{assign var='name' value='Bob'}

The value of $name is {$name}.
]]>
  </programlisting>
  <para>
   上の例の出力
  </para>
  <screen>
<![CDATA[
The value of $name is Bob.
]]>
  </screen>
 </example>

<example>
  <title>{assign} での演算子の使用</title>
<para>この複雑な例では、変数を `バッククォート` で囲む必要があります。</para>
  <programlisting>
<![CDATA[
{assign var=running_total value=`$running_total+$some_array[row].some_value`}
]]>
  </programlisting>

 </example>

 <example>
  <title>PHP スクリプトからの {assign} 変数へのアクセス</title>
  <para>
    PHP スクリプトから <varname>{assign}</varname> 変数にアクセスするには
    <link linkend="api.get.template.vars">
    <varname>get_template_vars()</varname></link>
    を使用します。これは、変数 <parameter>$foo</parameter>
    を作成するテンプレートです。
  </para>
<programlisting>
<![CDATA[
{assign var='foo' value='Smarty'}
]]>
</programlisting>
<para>テンプレート変数は、以下のスクリプトのように
テンプレートの実行後か実行中にしか利用できません。
</para>
<programlisting role="php">
<![CDATA[
<?php

// これは何も出力しません。テンプレートがまだ実行されていないからです。
echo $smarty->get_template_vars('foo');

// テンプレートを変数に格納します。
$whole_page = $smarty->fetch('index.tpl');

// これは 'smarty' と出力します。テンプレートが実行されたからです。
echo $smarty->get_template_vars('foo');

$smarty->assign('foo','Even smarter');

// これは 'Even smarter' を出力します。
echo $smarty->get_template_vars('foo');

?>
]]>
</programlisting>
 </example>


 <para>
 次の関数も、<emphasis>オプションで</emphasis>
 テンプレート変数へ割り当てることができます。
  </para>

 <para>
  <link linkend="language.function.capture"><varname>{capture}</varname></link>、
  <link linkend="language.function.include"><varname>{include}</varname></link>、
  <link linkend="language.function.include.php"><varname>{include_php}</varname></link>、
  <link linkend="language.function.insert"><varname>{insert}</varname></link>、
 <link linkend="language.function.counter"><varname>{counter}</varname></link>、
 <link linkend="language.function.cycle"><varname>{cycle}</varname></link>、
 <link linkend="language.function.eval"><varname>{eval}</varname></link>、
 <link linkend="language.function.fetch"><varname>{fetch}</varname></link>、
 <link linkend="language.function.math"><varname>{math}</varname></link>、
 <link linkend="language.function.textformat"><varname>{textformat}</varname></link>
 </para>

 <para>
 <link linkend="api.assign"><varname>assign()</varname></link>
   および
  <link linkend="api.get.template.vars"><varname>get_template_vars()</varname></link>
  も参照してください。
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
