<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<refentry id="api.append.by.ref">
 <refnamediv>
  <refname>append_by_ref</refname>
  <refpurpose></refpurpose>
 </refnamediv>
 <refsect1>
  <title />
  <methodsynopsis>
   <type>void</type><methodname>append_by_ref</methodname>
   <methodparam><type>string</type><parameter>varname</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>merge</parameter></methodparam>
  </methodsynopsis>
  <para>
   This is used to
   <link linkend="api.append">append</link> values to the templates by reference.
   If you append a variable by reference then change its
   value, the appended value sees the change as well. For
   <link linkend="advanced.features.objects">objects</link>,
   append_by_ref() also avoids an in-memory copy of the appended object.
   See the PHP manual on variable referencing for an in-depth
   explanation. If you pass the optional third parameter of true,
   the value will be merged with the current array instead of appended.
  </para>
  &note.parameter.merge;
  <example>
   <title>append_by_ref</title>
   <programlisting role="php">
<![CDATA[
<?php
// appending name/value pairs
$smarty->append_by_ref('Name', $myname);
$smarty->append_by_ref('Address', $address);
?>
]]>
   </programlisting>
  </example>
<para>
   See also <link linkend="api.append">append()</link> and
  <link linkend="api.assign">assign()</link>.
</para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
