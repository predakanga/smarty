<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
		<sect1 id="api.register.function">
			<title>register_function</title>
			<funcsynopsis>
			<funcprototype>
			<funcdef>void <function>register_function</function></funcdef>
				<paramdef>string <parameter>name</parameter></paramdef>
				<paramdef>mixed <parameter>impl</parameter></paramdef>
				<paramdef>bool <parameter>cacheable</parameter></paramdef>
				<paramdef>array or null <parameter>cache_attrs</parameter></paramdef>
			</funcprototype>
			</funcsynopsis>
			<para>
             Use this to dynamically register template function plugins.
             Pass in the template function name, followed by the PHP
             function name that implements it.
			</para>
			<para>
             The php-function callback <parameter>impl</parameter> can be either (a) a string
             containing the function name or (b) an array of the form
	     <literal>array(&amp;$object, $method)</literal> with
             <literal>&amp;$object</literal> being a reference to an
             object and <literal>$method</literal> being a string
             containing the mehod-name or (c) an array of the form
             <literal>array(&amp;$class, $method)</literal> with
             <literal>$class</literal> being a classname and
             <literal>$method</literal> being a class method of that
             class.
                        </para>
			<para>
<parameter>$cacheable</parameter> and <parameter>$cache_attrs</parameter> can be omitted in most cases. See <link linkend="caching.cacheable">Controlling Cacheability of Plugins' Output</link> on how to use them properly.
			</para>
<example>
<title>register_function</title>
<programlisting role="php">
<![CDATA[
<?php
$smarty->register_function("date_now", "print_current_date");

function print_current_date ($params) {
    if(empty($params['format']))
        $format = "%b %e, %Y";
    else
        $format = $params['format'];
    return strftime($format,time());
}

// now you can use this in Smarty to print the current date: {date_now}
// or, {date_now format="%Y/%m/%d"} to format it.
?>
]]>
</programlisting>
</example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->