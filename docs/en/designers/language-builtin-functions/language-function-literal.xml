<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<sect1 id="language.function.literal">
 <title>{literal}</title>
 <para>
  {literal} tags allow a block of data to be taken literally. This is typically
  used around javascript or stylesheet blocks where curly braces would
  interfere with the template
  <link linkend="variable.left.delimiter">delimiter</link>
  syntax. Anything within
  {literal}{/literal} tags is not interpreted, but displayed as-is. If you
  need template tags embedded in your {literal} block, consider using <link
  linkend="language.function.ldelim">{ldelim}{rdelim}</link> to escape the
  individual delimiters instead.
 </para>
 
 <example>
  <title>{literal} tags</title>
  <programlisting>
<![CDATA[
{literal}
<script type="text/javascript">
<!--
  function isblank(field) {
    if (field.value == '')
      { return false; }
    else
      {
      document.loginform.submit();
      return true;
    }
  }
// -->
</script>
{/literal}
]]>
  </programlisting>
 </example>
 
 <example>
   <title>Javascript = ecma</title>
   <programlisting>
 <![CDATA[
<script language="JavaScript" type="text/javascript">
{literal}
function myJsFunction(name){
        if(name){
                alert('The servers name is: ' + name);
        }
        return false;
}
{/literal}
</script>
<a href="javascript:myJsFunction('{$smarty.server.SERVER_NAME}')">Click here for Server Name</a>
 ]]>
   </programlisting>
 </example>
 
 <para>
  See also
  <link linkend="language.escaping">Escaping Smarty Parsing</link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
