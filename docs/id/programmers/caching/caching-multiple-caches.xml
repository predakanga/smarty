<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
   <sect1 id="caching.multiple.caches">
    <title>Multipel Caches Per Halaman</title>
    <para>
     Anda dapat memiliki multipel file cache untuk satu panggilan ke
     <link linkend="api.display"><varname>display()</varname></link>
     atau <link linkend="api.fetch"><varname>fetch()</varname></link>.
     Katakanlah sebuah panggilan ke <literal>display('index.tpl')</literal> 
     memiliki beberapa konten output berbeda tergantung dari beberapa
     kondisi, dan anda ingin memisahkan cache masing-masing. Anda bisa
     melakukan ini dengan mengirimkan <parameter>$cache_id</parameter> 
     sebagai parameter kedua ke fungsi panggil.
    </para>
    <example>
     <title>Mengirimkan $cache_id untuk display()</title>
     <programlisting role="php">
<![CDATA[
<?php
require('Smarty.class.php');
$smarty = new Smarty;

$smarty->caching = 1;

$my_cache_id = $_GET['article_id'];

$smarty->display('index.tpl', $my_cache_id);
?>
]]>
     </programlisting>
    </example>
    <para>
     Di atas, kita mengirimkan variabel <literal>$my_cache_id</literal> ke
     <link linkend="api.display"><varname>display()</varname></link>
     sebagai <parameter>$cache_id</parameter>. Untuk setiap nilai unik dari
     <literal>$my_cache_id</literal>, cache terpisah akan dibuat untuk
     <filename>index.tpl</filename>. Dalam contoh ini,
     <literal>article_id</literal> dikirimpan dalam URL dan digunakan 
     sebagai <parameter>$cache_id</parameter>.
    </para>
    <note>
     <title>Catatan Teknis</title>
     <para>
      Harap berhati-hati saat mengirimkan nilai dari klien (web browser) ke
      dalam Smarty atau setiap aplikasi PHP. Meskipun contoh di atas menggunakan
      article_id dari URL terlihat mudah, ia dapat menimbulkan konsekuensi yang
      buruk. <parameter>$cache_id</parameter> dipakai untuk membuat direktori
      pada sistem file, maka jika pengguna memutuskan untuk mengirimkan nilai
      yang sangat besar untuk article_id, atau menulis naskah yang mengirimkan
      article_id acak dengan kecepatan tinggi, ini mungkin dapat menimbulkan
      masalah di tingkat server. Pastikan mengamankan setiap data yang 
      dikirimkan sebelum menggunakannya. Dalam contoh ini, mungkin anda 
      mengetahui article_id memiliki panjang sepuluh karakter dan hanya terdiri
      dari alfa-numerik, dan harus article_id yang benar dalam database. 
      Periksa hal ini!
     </para>
    </note>
    <para>
     Pastikan untuk mengirimkan <parameter>$cache_id</parameter> yang sama
     sebagai parameter kedua ke
     <link linkend="api.is.cached"><varname>is_cached()</varname></link> dan
     <link linkend="api.clear.cache"><varname>clear_cache()</varname></link>.
    </para>
    <example>
     <title>Mengirimkan cache_id ke is_cached()</title>
     <programlisting role="php">
<![CDATA[
<?php
require('Smarty.class.php');
$smarty = new Smarty;

$smarty->caching = 1;

$my_cache_id = $_GET['article_id'];

if(!$smarty->is_cached('index.tpl',$my_cache_id)) {
    // Cache tidak tersedia, lakukan penempatan variabel di sini.
    $contents = get_database_contents();
    $smarty->assign($contents);
}

$smarty->display('index.tpl',$my_cache_id);
?>
]]>
     </programlisting>
    </example>
    <para>
     Anda bisa membersihkan semua cache untul <parameter>$cache_id</parameter>
     tertentu dengan mengirimkan &null; sebagai parameter kedua ke
     <link linkend="api.clear.cache"><varname>clear_cache()</varname></link>.
    </para>
    <example>
     <title>Membersihkan semua cache untuk $cache_id tertentu</title>
     <programlisting role="php">
<![CDATA[
<?php
require('Smarty.class.php');
$smarty = new Smarty;

$smarty->caching = 1;

// bersihkan semua cache dengan "sports" sebagai $cache_id
$smarty->clear_cache(null,'sports');

$smarty->display('index.tpl','sports');
?>
]]>
     </programlisting>
    </example>
    <para>
     Dengan cara ini, anda bisa <quote>mengelompokan</quote> cache anda bersama
     dengan memberikannya <parameter>$cache_id</parameter> yang sama.
    </para>

   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
