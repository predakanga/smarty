<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.7 Maintainer: freespace Status: ready -->

<!ENTITY note.parameter.merge '<note>
 <title>Техническое замечание</title>
 <para>
  Пераметр <parameter>merge</parameter> учитывает ключи массива,
  поэтому если вы объединяете массивы с числовыми индексами, то они могут
  наложиться друг на друга или привести к непоследовательному порядку ключей.
  Результат отличается от действия функции PHP
  <ulink url="&url.php-manual;array_merge"><varname>array_merge()</varname></ulink>,
  которая заново нумерует элементы в массиве с числовоми ключами.
 </para>
</note>'>

<!ENTITY parameter.compileid '<para>
 В качестве необязательного третьего аргумента вы можете передать
 <parameter>$compile_id</parameter>.
 Это полезно в случае, если вы хотите
 скомпилировать несколько различных версий одного шаблона, например
 несколько версий одного шаблона на разных языках.
 Другое применение
 <parameter>$compile_id</parameter> можно найти,
 если вы используете несколько
 <link linkend="variable.template.dir"><parameter>$template_dir</parameter></link>,
 но только одну
 <link linkend="variable.compile.dir"><parameter>$compile_dir</parameter></link>.
 Устанавливайте свой <parameter>compile_id</parameter> для каждой
 <link linkend="variable.template.dir"><parameter>$template_dir</parameter></link>,
 иначе шаблоны с одинаковыми именами будут сохраняться поверх друг друга.
 Также вы можете один раз указать
 <link linkend="variable.compile.id"><parameter>$compile_id</parameter></link>,
 вместо того, чтобы каждый раз передавать его при вызове этой функции.
</para>'>

<!ENTITY api.register.snippet '<para>
 Callback-функция PHP может быть:
 <itemizedlist>
  <listitem>
   <para>
    Либо строкой, содержащей имя функции.
   </para>
  </listitem>
  <listitem>
   <para>
    Либо массивом вида <literal>array(&amp;$object, $method)</literal>,
    где <literal>&amp;$object</literal> - ссылка на объек, а
    <literal>$method</literal> - строка, содержащая имя метода.
   </para>
  </listitem>
  <listitem>
   <para>
    Либо массивом вида <literal>array($class, $method)</literal>,
    где <literal>$class</literal> - строка, содержащая имя класса, а
    <literal>$method</literal> - строка, содержащая имя метода этого класса.
   </para>
  </listitem>
 </itemizedlist>
</para>'>
