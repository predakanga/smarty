<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->

<sect1 id="language.variables.smarty">
 <title>Variable réservée {$smarty}</title>
 <para>
  La variable PHP réservée {$smarty} peut être utilisée pour accéder à plusieurs
  variables spéciales du template. En voici la liste complète.
 </para>

 <sect2 id="language.variables.smarty.request">
  <title>Variables de requête</title>
  <para>
   Les <ulink url="&url.php-manual;reserved.variables">variables de requête</ulink>
   comme $_GET, $_POST, $_COOKIE, $_SERVER, $_ENV and $_SESSION
   (voir <link linkend="variable.request.vars.order">$request_vars_order</link>
   et <link linkend="variable.request.use.auto.globals">$request_use_auto_globals</link>)
   peuvent être utilisées comme dans l'exemple suivant:
  </para>
  <example>
   <title>Afficher des variables de requête</title>
   <programlisting>
<![CDATA[
{* Affiche la valeur de page dans l'url ($_GET) http://www.example.com/index.php?page=foo *}
{$smarty.get.page}

{* affiche la variable "page" récupérée depuis un formulaire ($_POST['page']) *}
{$smarty.post.page}

{* affiche la valeur du cookie "utilisateur" ($_COOKIE['username']) *}
{$smarty.cookies.utilisateur}

{* affiche la variable serveur "SERVER_NAME" ($_SERVER['SERVER_NAME']) *}
{$smarty.server.SERVER_NAME}

{* affiche la variable d'environnement "PATH" *}
{$smarty.env.PATH}

{* affiche la variable de session PHP "id" ($_SESSION['id']) *}
{$smarty.session.id}

{* affiche la variable "utilisateur" du regroupement de get/post/cookies/server/env *}
{$smarty.request.utilisateur}
]]>
   </programlisting>
  </example>
  <note>
   <para>
    Pour des raisons historiques, {$SCRIPT_NAME} peut être accédé
    directement, cependant, {$smarty.server.SCRIPT_NAME} est
    la solution proposée pour accéder à cette valeur.
   </para>
  </note>
 </sect2>

 <sect2 id="language.variables.smarty.now">
  <title>{$smarty.now}</title>
  <para>
   Le <ulink url="&url.php-manual;function.time">timestamp</ulink>
   courant peut être récupéré grâce à {$smarty.now}.
   Le nombre obtenu correspond au nombre de secondes écoulées depuis
   Epoch (1 Janvier 1970) et peut être passé directement au modificateur
   de variable date <link linkend="language.modifier.date.format">date_format</link> 
   à des fins d'affichage.
  </para>
  <example>
   <title>Utilisation de {$smarty.now}</title>
   <programlisting>
<![CDATA[
{* utilise le modificateur de variable date_format pour afficher la date et heure *}
{$smarty.now|date_format:"%d-%m-%Y %H:%M:%S"}
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 id="language.variables.smarty.const">
  <title>{$smarty.const}</title>
  <para>
   Vous pouvez directement accéder aux constantes PHP.
   Voir aussi les <link linkend="smarty.constants">constantes smarty</link>.
  </para>
  <example>
   <title>Utiliser {$smarty.const}</title>
   <programlisting>
<![CDATA[
{$smarty.const._MA_CONSTANTE_}
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 id="language.variables.smarty.capture">
  <title>{$smarty.capture}</title>
  <para>
   La capture réalisée via
   <link linkend="language.function.capture">{capture}..{/capture}</link> 
   peut être récupérée par l'intermédiaire de la variable {$smarty}. Voir la section
   sur <link linkend="language.function.capture">{capture}</link> pour un
   exemple à ce sujet.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.config">
  <title>{$smarty.config}</title>
  <para>
   La variable {$smarty} peut être utilisée pour désigner une
   <link linkend="language.config.variables">variable d'un fichier de configuration</link>.
   {$smarty.config.foo} est un synonyme de {#foo#}. Voir la section
   <link linkend="language.function.config.load">{config_load}</link>
   pour un exemple à ce sujet.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.loops">
  <title>{$smarty.section}, {$smarty.foreach}</title>
  <para>
   La variable {$smarty} peut être utilisée pour accéder aux propriétés
   des boucles 'section' et 'foreach'. Voir la documentation de
   <link linkend="language.function.section">{section}</link> et
   <link linkend="language.function.foreach">{foreach}</link>.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.template">
  <title>{$smarty.template}</title>
  <para>
   Cette variable contient le nom du template en cours de traitement.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.version">
  <title>{$smarty.version}</title>
  <para>
   Cette variable contient la version de Smarty utilisée pour compiler un template.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.ldelim">
  <title>{$smarty.ldelim}, {$smarty.rdelim}</title>
  <para>
   Cette variable est utilisée pour afficher le délémiteur gauche et le délimiteur droit. Lisez aussi
   la partie <link linkend="language.function.ldelim">{ldelim},{rdelim}</link>.
  </para>
  <para>
   Voir aussi
   les <link linkend="language.syntax.variables">variables</link> et
   les <link linkend="language.config.variables">variables de configuration</link>.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->