<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<sect1 id="language.function.capture">
 <title>capture</title>
 <para>
  Capture est utilisé pour récupérer la sortie d'éléments dans une variable
  au lieu de les afficher. Tout contenu situé entre {capture
  name="foo"} et {/capture} est intercepté dans une variable dont le nom est
  spécifié dans l'attribut name. Le contenu capturé peut être utilisé dans
  le template par l'intermédiaire de la variable spéciale $smarty.capture.foo
  ou foo est la valeur de l'attribut name. Si vous ne donnez pas de valeur
  à l'attribut name, alors "default" est utilisé. Toutes les commandes
  {capture} doivent être utilisées de paire avec {/capture}. Vous pouvez
  imbriquer les demandes de captures.
 </para>
 <note>
  <title>Note technique</title>
  <para>
   Smarty 1.4.0 - 1.4.4 plaçait les contenus capturés dans une variable
   appelée $return. Depuis Smarty 1.4.5, ce comportement à été modifié et
   Smarty utilise maintenant l'attribut name en lieu et place.
   Veuillez donc mettre vos templates à jour selon cette règle.
  </para>
 </note>
 <caution>
  <para>
   Faites attention lorsque vous interceptez la sortie de commandes
   <command>insert</command>. Si vous avez configuré le cache pour que ce
   dernier soit actif, et que vous avez des commandes <command>insert</command>
   supposées s'exécuter dans un contenu en cache, ne tentez pas de capturer
   ce contenu.
  </para>
 </caution>
 <para>
  <example>
   <title>Capturer le contenu d'un template.</title>
   <programlisting>
<![CDATA[
{* nous ne voulons afficher une ligne que si cette dernière est activé. *}
{capture name=banner}
{include file="get_banner.tpl"}
{/capture}
{if $smarty.capture.banner ne ""}
	<tr>
		<td>
			{$smarty.capture.banner}
		</td>
	</tr>
{/if}
]]>
   </programlisting>
  </example>
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
