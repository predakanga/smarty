<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->

<sect1 id="language.modifier.truncate">
 <title>truncate</title>
 <para>
  Tronque une variable à une certaine longueur, par défaut 80.
  Un second paramètre optionnel permet de spécifier une chaîne à afficher
  à la fin de la variable une fois tronquée. Les caractères de fin sont
  inclus dans la longueur de la chaîne à tronquer. Par défaut,
  <varname>truncate</varname> tentera de couper la chaîne à la fin d'un mot.
  Si vous voulez tronquer la chaîne au caractère exact, donnez la valeur &true; au
  dernier paramètre optionnel.
 </para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc"/>
   <thead>
    <row>
     <entry>Position du paramètre</entry>
     <entry>Type</entry>
     <entry>Requis</entry>
     <entry>Defaut</entry>
     <entry>Description</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>1</entry>
     <entry>entier</entry>
     <entry>Non</entry>
     <entry>80</entry>
     <entry>Le nombre de caractères maximums au-delà duquel
     on effectue le troncage</entry>
    </row>
    <row>
     <entry>2</entry>
     <entry>chaîne de caractère</entry>
     <entry>Non</entry>
     <entry>...</entry>
     <entry>Le texte qui remplace le texte tronqué. Sa longueur n'est PAS
      incluse dans la configuration de la longueur à tronquer.</entry>
    </row>
    <row>
     <entry>3</entry>
     <entry>booléen</entry>
     <entry>Non</entry>
     <entry>&false;</entry>
     <entry>Détermine si le troncage est effectué sur
      le dernier mot (&false;), ou au caractère exact (&true;).
     </entry>
    </row>
    <row>
     <entry>4</entry>
     <entry>booléen</entry>
     <entry>Non</entry>
     <entry>&false;</entry>
     <entry>Ceci détermine si le troncage intervient à la fin de la
      chaîne (&false;), ou au milieu de la chaîne (&true;). Notez que si
      ceci vaut &true;, alors les limites de mots sont ignorées.</entry>
     </row>
   </tbody>
  </tgroup>
 </informaltable>
 <example>
  <title>truncate</title>
<programlisting role="php">
<![CDATA[
<?php

$smarty->assign('titreArticle', 'Deux soeurs réunies après 18 ans de séparation.');

?>
]]>
</programlisting>
<para>
Où le template est :
</para>
<programlisting>
<![CDATA[
{$titreArticle}
{$titreArticle|truncate}
{$titreArticle|truncate:30}
{$titreArticle|truncate:30:""}
{$titreArticle|truncate:30:"---"}
{$titreArticle|truncate:30:"":true}
{$titreArticle|truncate:30:"...":true}
{$articleTitle|truncate:30:'..':true:true}
]]>
</programlisting>
<para>
Ce qui donne en sortie :
</para>
<screen>
<![CDATA[
Deux soeurs réunies après 18 ans de séparation.
Deux soeurs réunies après...
Deux soeurs réunies après
Deux soeurs réunies après---
Deux soeurs réunies après 18 a
Deux soeurs réunies après 1...
Deux soeurs ... de séparation.
]]>
</screen>
 </example>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->