<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->

<sect1 id="language.function.eval">
 <title>{eval}</title>
 <para>
  <varname>{eval}</varname> évalue une variable comme si cette dernière
  était un template.
  Peut être utile pour embarquer des balises de templates ou des variables
  de template dans des variables ou des balises/variables dans des
  variables de fichiers de configuration.
 </para>
 <para>
  Si vous définissez l'attribut <parameter>assign</parameter>, la sortie sera assignée à la
  variable de template désignée plutôt que d'être affichée dans le
  template.
 </para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>Nom attribut</entry>
     <entry>Type</entry>
     <entry>Requis</entry>
     <entry>Defaut</entry>
     <entry>Description</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>var</entry>
     <entry>mixed</entry>
     <entry>Oui</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>Variable (ou chaîne de caractères) à évaluer</entry>
    </row>
    <row>
     <entry>assign</entry>
     <entry>chaîne de caractères</entry>
     <entry>Non</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>Le nom de la variable PHP dans laquelle la sortie
     sera assignée</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <note>
  <title>Note technique</title>
  <para>
   <itemizedlist>
  <listitem><para>
   Les variables évaluées sont traitées de la même façon que les templates.
   Elles suivent les mêmes règles de traitement et de sécurité, comme si
   elles étaient réellement des templates.
  </para></listitem>

  <listitem><para>
   Les variables évaluées sont compilées à chaque invocation, et la version
   compilée n'est pas sauvegardée ! Toutefois, si le 
   <link linkend="caching">cache</link> est activé, la sortie sera placée en
   cache avec le reste du template.
  </para></listitem>
</itemizedlist>
</para>
 </note>
 <example>
  <title>{eval}</title>
<para>Le contenu du fichier de configuration, <filename>setup.conf</filename>.</para>
  <programlisting>
<![CDATA[
#setup.conf
#----------
emphstart = <strong>
emphend = </strong>
titre = Bienvenue sur la homepage de {$company} !
ErrorVille = Vous devez spécifier un nom de {#emphstart#}ville{#emphend#}.
ErrorDept = Vous devez spécifier un {#emphstart#}département{#emphend#}.
]]>
  </programlisting>
  <para>
   Où le template est :
  </para>
  <programlisting>
<![CDATA[
{config_load file='setup.conf'}

{eval var=$foo}
{eval var=#titre#}
{eval var=#ErrorVille#}
{eval var=#ErrorDept# assign='state_error'}
{$state_error}
]]>
  </programlisting>
  <para>
   L'exemple ci-dessus affichera :
  </para>
  <screen>
<![CDATA[
Ceci est le contenu de foo.
Bienvenue sur la homepage de FictifLand.
Vous devez spécifier un nom de <strong>ville</strong>.
Vous devez spécifier un <strong>département</strong>.
]]>
  </screen>
 </example>

 <example>
  <title>un autre exemple avec {eval}</title>
  <para>
   Ceci va afficher le nom du serveur (en majuscule) et son IP.
   La variable <parameter>$str</parameter> également venir d'une requête de base de données.
  </para>
  <programlisting role="php">
<![CDATA[
<?php
$str = 'Le nom du serveur est {$smarty.server.SERVER_NAME|upper} '
.'at {$smarty.server.SERVER_ADDR}';
$smarty->assign('foo',$str);
?>
   ]]>
  </programlisting>
  <para>
   Où le template est :
  </para>
  <programlisting>
<![CDATA[
{eval var=$foo}
]]>
  </programlisting>
 </example>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->