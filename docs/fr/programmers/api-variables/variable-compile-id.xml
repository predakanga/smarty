<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<sect1 id="variable.compile.id">
 <title>$compile_id</title>
 <para>
  Identifiant persistant du compilateur. On peut passer le même compile_id
  a chaque appel de fonction mais une alternative consiste à régler ce
  compile_id, qui sera utilisé implicitement.
 </para>
 <para>
  Avec un compile_id, vous pouvez contourner la limitation qui fait
  que vous ne pouvez pas utiliser le même compile_id pour
  différents template_dirs. Si vous définissez un compile_id distinct pour
  chaque template_dir, alors Smarty indique aux templates compilés à part
  par leur compile_id.
 </para>
 <para>
  Si vous avez par exemple un pré-filtre qui traduit vos templates
  au moment de la compilation, alors, vous devriez utiliser le langage
  courant comme compile_id et vous devriez obtenir un jeu
  de templates compilés pour chaque langage que vous utiliserez.
 </para>
 <para>
  Un autre exemple serait d'utiliser le même dossier de compilation
  à travers de multiples domaines / vhosts. eg:
 </para>
 <example>
  <title>compile_id</title>
  <programlisting role="php">
<![CDATA[
$smarty->compile_id = $_SERVER['SERVER_NAME'];
$smarty->compile_dir = 'chemin/vers/shared_compile_dir';
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
