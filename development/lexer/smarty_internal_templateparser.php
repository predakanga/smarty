<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;
    private $last_taglineno = 0;
    private $last_taglineno_nocache = 0;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->prefix_number = 0;
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text) {
        return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') === false) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'"');
			 		$this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache;
			 		$this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 } else {
			    $var = '{'.$variable.'}';
			 }
			 return '$_smarty_tpl->tpl_vars->'. $var .'->value';
    }

    public function updateNocacheLineTrace() {
       if ($this->compiler->template->caching) {
           $this->compiler->has_code = true;
           $this->compiler->tag_nocache = true;
           $save = $this->template->has_nocache_code;
           $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>", true)));
           $this->template->has_nocache_code = $save;
       }
    }
#line 144 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_COMMENT                        =  4;
    const TP_PHPSTARTTAG                    =  5;
    const TP_PHPENDTAG                      =  6;
    const TP_ASPSTARTTAG                    =  7;
    const TP_ASPENDTAG                      =  8;
    const TP_FAKEPHPSTARTTAG                =  9;
    const TP_XMLTAG                         = 10;
    const TP_OTHER                          = 11;
    const TP_LINEBREAK                      = 12;
    const TP_LITERALSTART                   = 13;
    const TP_LITERALEND                     = 14;
    const TP_LITERAL                        = 15;
    const TP_LDEL                           = 16;
    const TP_RDEL                           = 17;
    const TP_DOLLAR                         = 18;
    const TP_ID                             = 19;
    const TP_EQUAL                          = 20;
    const TP_PTR                            = 21;
    const TP_LDELIF                         = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_INCDEC                         = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_SPACE                          = 29;
    const TP_AS                             = 30;
    const TP_APTR                           = 31;
    const TP_LDELSETFILTER                  = 32;
    const TP_SMARTYBLOCKCHILD               = 33;
    const TP_LDELSLASH                      = 34;
    const TP_INTEGER                        = 35;
    const TP_COMMA                          = 36;
    const TP_OPENP                          = 37;
    const TP_CLOSEP                         = 38;
    const TP_MATH                           = 39;
    const TP_UNIMATH                        = 40;
    const TP_ANDSYM                         = 41;
    const TP_ISIN                           = 42;
    const TP_ISDIVBY                        = 43;
    const TP_ISNOTDIVBY                     = 44;
    const TP_ISEVEN                         = 45;
    const TP_ISNOTEVEN                      = 46;
    const TP_ISEVENBY                       = 47;
    const TP_ISNOTEVENBY                    = 48;
    const TP_ISODD                          = 49;
    const TP_ISNOTODD                       = 50;
    const TP_ISODDBY                        = 51;
    const TP_ISNOTODDBY                     = 52;
    const TP_INSTANCEOF                     = 53;
    const TP_NAMESPACECLASS                 = 54;
    const TP_QMARK                          = 55;
    const TP_NOT                            = 56;
    const TP_TYPECAST                       = 57;
    const TP_HEX                            = 58;
    const TP_DOT                            = 59;
    const TP_SINGLEQUOTESTRING              = 60;
    const TP_DOUBLECOLON                    = 61;
    const TP_AT                             = 62;
    const TP_HATCH                          = 63;
    const TP_OPENB                          = 64;
    const TP_CLOSEB                         = 65;
    const TP_EQUALS                         = 66;
    const TP_NOTEQUALS                      = 67;
    const TP_GREATERTHAN                    = 68;
    const TP_LESSTHAN                       = 69;
    const TP_GREATEREQUAL                   = 70;
    const TP_LESSEQUAL                      = 71;
    const TP_IDENTITY                       = 72;
    const TP_NONEIDENTITY                   = 73;
    const TP_MOD                            = 74;
    const TP_LAND                           = 75;
    const TP_LOR                            = 76;
    const TP_LXOR                           = 77;
    const TP_QUOTE                          = 78;
    const TP_BACKTICK                       = 79;
    const TP_DOLLARID                       = 80;
    const YY_NO_ACTION = 598;
    const YY_ACCEPT_ACTION = 597;
    const YY_ERROR_ACTION = 596;

    const YY_SZ_ACTTAB = 2377;
static public $yy_action = array(
 /*     0 */   216,  320,  323,  319,  318,  314,  313,  315,  316,  317,
 /*    10 */   325,  194,   11,  183,   41,  287,  340,  242,  241,  223,
 /*    20 */     5,  108,  293,    9,  160,   15,  146,  235,   15,  289,
 /*    30 */   245,  290,  244,  597,   95,  264,  322,  324,   51,   49,
 /*    40 */    50,   45,   22,   23,  370,  371,   24,   10,  378,  379,
 /*    50 */    12,   28,  216,  333,  328,  327,  329,  332,  321,  322,
 /*    60 */   324,  194,  334,  337,  124,  387,  388,  389,  390,  386,
 /*    70 */   385,  381,  380,  382,  383,  384,  285,  164,   39,   11,
 /*    80 */    15,   31,  287,   20,    2,  190,  348,    2,  278,  347,
 /*    90 */    51,   49,   50,   45,   22,   23,  370,  371,   24,   10,
 /*   100 */   378,  379,   12,   28,  201,  289,  250,  161,  141,  195,
 /*   110 */    11,  141,  284,  287,   26,  216,  293,  387,  388,  389,
 /*   120 */   390,  386,  385,  381,  380,  382,  383,  384,  285,  216,
 /*   130 */   349,  298,  216,  205,  121,  237,  201,   75,  135,  100,
 /*   140 */   187,  460,  216,  457,   34,  343,  303,  366,  330,  293,
 /*   150 */   231,  373,  367,  460,  350,  457,  234,   15,  288,    7,
 /*   160 */    15,    2,   36,    2,  221,  279,  201,   51,   49,   50,
 /*   170 */    45,   22,   23,  370,  371,   24,   10,  378,  379,   12,
 /*   180 */    28,  106,  165,    4,   52,  141,   11,  141,  259,  287,
 /*   190 */    29,  293,  140,  163,  387,  388,  389,  390,  386,  385,
 /*   200 */   381,  380,  382,  383,  384,  285,  216,  349,  201,  107,
 /*   210 */   188,  143,  216,   11,   84,  135,  287,  236,   18,  293,
 /*   220 */   128,  376,  311,  303,  366,  160,  189,  231,  373,  367,
 /*   230 */    11,  350,  247,  287,   15,   16,  201,  377,  213,  145,
 /*   240 */   228,  125,   37,   15,   51,   49,   50,   45,   22,   23,
 /*   250 */   370,  371,   24,   10,  378,  379,   12,   28,  216,  234,
 /*   260 */   129,  306,   11,  208,   52,  287,   26,  216,    8,   14,
 /*   270 */   160,  387,  388,  389,  390,  386,  385,  381,  380,  382,
 /*   280 */   383,  384,  285,  342,  101,  179,  339,  227,  200,  348,
 /*   290 */   208,   13,  216,  280,  293,    8,   51,   49,   50,   45,
 /*   300 */    22,   23,  370,  371,   24,   10,  378,  379,   12,   28,
 /*   310 */   124,  205,  192,  348,   13,  357,  274,  160,    2,   52,
 /*   320 */    15,  216,   44,  387,  388,  389,  390,  386,  385,  381,
 /*   330 */   380,  382,  383,  384,  285,  216,  172,  286,  199,  349,
 /*   340 */   198,  166,  141,  143,  349,  293,   84,  135,  150,   13,
 /*   350 */   293,  275,  135,   27,   21,  303,  366,  291,  196,  231,
 /*   360 */   373,  367,  391,  350,  231,  373,  367,  201,  350,   11,
 /*   370 */   220,   44,  287,   51,   49,   50,   45,   22,   23,  370,
 /*   380 */   371,   24,   10,  378,  379,   12,   28,  216,  184,  253,
 /*   390 */   232,   11,  242,  240,  252,  242,  281,  293,  109,  265,
 /*   400 */   387,  388,  389,  390,  386,  385,  381,  380,  382,  383,
 /*   410 */   384,  285,  182,  369,  205,  162,  336,  171,  335,  291,
 /*   420 */   151,  293,  177,  308,  293,   51,   49,   50,   45,   22,
 /*   430 */    23,  370,  371,   24,   10,  378,  379,   12,   28,  216,
 /*   440 */   365,  205,  360,   11,  169,   11,  212,  151,  225,  112,
 /*   450 */   306,  300,  387,  388,  389,  390,  386,  385,  381,  380,
 /*   460 */   382,  383,  384,  285,  375,  356,  238,  302,  216,  170,
 /*   470 */   174,  201,  291,  205,  151,  103,  271,   51,   49,   50,
 /*   480 */    45,   22,   23,  370,  371,   24,   10,  378,  379,   12,
 /*   490 */    28,  216,  173,  193,   11,  202,  201,  233,  136,   40,
 /*   500 */   116,  293,  118,  159,  387,  388,  389,  390,  386,  385,
 /*   510 */   381,  380,  382,  383,  384,  285,  391,  375,  375,  132,
 /*   520 */    52,  126,    9,  374,  277,  191,   32,  254,  251,   51,
 /*   530 */    49,   50,   45,   22,   23,  370,  371,   24,   10,  378,
 /*   540 */   379,   12,   28,  216,   30,  256,  127,  301,  351,  123,
 /*   550 */   229,    3,  306,  354,  122,   98,  387,  388,  389,  390,
 /*   560 */   386,  385,  381,  380,  382,  383,  384,  285,  197,  375,
 /*   570 */   375,   15,  346,  144,    4,  307,  304,  138,  236,  339,
 /*   580 */   137,   51,   49,   50,   45,   22,   23,  370,  371,   24,
 /*   590 */    10,  378,  379,   12,   28,  312,  338,   94,  216,   25,
 /*   600 */    15,   35,  168,  257,  102,  291,  110,   97,  387,  388,
 /*   610 */   389,  390,  386,  385,  381,  380,  382,  383,  384,  285,
 /*   620 */   216,  349,  375,  216,  283,  143,  186,  329,   65,  120,
 /*   630 */   240,   11,  216,  216,  287,  293,  260,  303,  366,  462,
 /*   640 */   229,  231,  373,  367,   15,  350,  246,  291,  310,  299,
 /*   650 */   326,  462,  243,  329,   17,  329,  329,  142,   51,   49,
 /*   660 */    50,   45,   22,   23,  370,  371,   24,   10,  378,  379,
 /*   670 */    12,   28,  375,  329,  329,   52,  239,  329,  329,  160,
 /*   680 */   329,  329,  329,  329,  147,  387,  388,  389,  390,  386,
 /*   690 */   385,  381,  380,  382,  383,  384,  285,  216,  291,  329,
 /*   700 */   329,  329,  198,  349,  329,  345,  148,  153,  329,  282,
 /*   710 */   329,  135,  329,  273,   43,   27,   21,   15,  226,  124,
 /*   720 */     5,  108,  350,  231,  373,  367,  146,  350,  329,  201,
 /*   730 */   245,  290,  244,  216,  216,   51,   49,   50,   45,   22,
 /*   740 */    23,  370,  371,   24,   10,  378,  379,   12,   28,  462,
 /*   750 */   309,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*   760 */   329,  462,  387,  388,  389,  390,  386,  385,  381,  380,
 /*   770 */   382,  383,  384,  285,  216,  349,  355,   42,  358,  143,
 /*   780 */   185,  363,   53,  120,  130,   52,  294,  329,  353,  293,
 /*   790 */   203,  303,  366,   15,  362,  231,  373,  367,   15,  350,
 /*   800 */    15,  291,  329,  329,  329,  329,   15,  329,  329,  329,
 /*   810 */   329,  329,   51,   49,   50,   45,   22,   23,  370,  371,
 /*   820 */    24,   10,  378,  379,   12,   28,  216,  329,  329,  329,
 /*   830 */   329,  329,  329,  329,  329,  329,  114,  104,  105,  387,
 /*   840 */   388,  389,  390,  386,  385,  381,  380,  382,  383,  384,
 /*   850 */   285,  375,  375,  375,  329,  329,  329,  329,  329,  329,
 /*   860 */   329,  329,  329,  329,   51,   49,   50,   45,   22,   23,
 /*   870 */   370,  371,   24,   10,  378,  379,   12,   28,  216,   33,
 /*   880 */   329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*   890 */   262,  387,  388,  389,  390,  386,  385,  381,  380,  382,
 /*   900 */   383,  384,  285,  329,  329,  329,  329,  329,  329,  329,
 /*   910 */   329,  329,  329,  329,  329,  329,   51,   49,   50,   45,
 /*   920 */    22,   23,  370,  371,   24,   10,  378,  379,   12,   28,
 /*   930 */   329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*   940 */   329,  329,  329,  387,  388,  389,  390,  386,  385,  381,
 /*   950 */   380,  382,  383,  384,  285,  216,  349,  329,  216,  329,
 /*   960 */   121,  349,  329,   75,  135,  149,  180,  295,  329,  135,
 /*   970 */   329,  204,  303,  366,  459,  293,  231,  373,  367,   15,
 /*   980 */   350,  231,  373,  367,  329,  350,  459,  291,  329,  329,
 /*   990 */   329,  269,  329,   51,   49,   50,   45,   22,   23,  370,
 /*  1000 */   371,   24,   10,  378,  379,   12,   28,  216,  329,  329,
 /*  1010 */    52,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*  1020 */   387,  388,  389,  390,  386,  385,  381,  380,  382,  383,
 /*  1030 */   384,  285,  329,  329,  329,  329,  329,  329,  329,  329,
 /*  1040 */   329,  329,  329,  329,  329,   51,   49,   50,   45,   22,
 /*  1050 */    23,  370,  371,   24,   10,  378,  379,   12,   28,  329,
 /*  1060 */   329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*  1070 */   329,  329,  387,  388,  389,  390,  386,  385,  381,  380,
 /*  1080 */   382,  383,  384,  285,  329,   51,   49,   50,   45,   22,
 /*  1090 */    23,  370,  371,   24,   10,  378,  379,   12,   28,  341,
 /*  1100 */   329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*  1110 */   329,   15,  387,  388,  389,  390,  386,  385,  381,  380,
 /*  1120 */   382,  383,  384,  285,  216,  329,  329,  329,  329,   41,
 /*  1130 */   329,  139,  209,  329,  349,    5,  108,  344,  154,  329,
 /*  1140 */   456,  146,  135,  329,  329,  245,  290,  244,  230,   15,
 /*  1150 */    38,  372,   15,   48,  231,  373,  367,  329,  350,  329,
 /*  1160 */   349,  329,  329,  329,  152,  329,  329,  255,  135,   47,
 /*  1170 */    46,  305,  248,  368,  329,  349,  101,    1,  272,  155,
 /*  1180 */   231,  373,  367,  135,  350,  329,   41,  329,  139,  215,
 /*  1190 */   329,   96,    5,  108,  263,  231,  373,  367,  146,  350,
 /*  1200 */   352,  276,  245,  290,  244,  230,   15,   38,  329,  331,
 /*  1210 */    48,  329,   15,   15,  329,  349,  329,  329,  329,  143,
 /*  1220 */   329,   15,   59,  135,  255,  329,   47,   46,  305,  248,
 /*  1230 */   368,  303,  366,  101,    1,  231,  373,  367,  216,  350,
 /*  1240 */   364,  266,  329,   41,  329,  139,  210,  329,   96,    5,
 /*  1250 */   108,  297,   15,   15,  361,  146,  267,  292,  224,  245,
 /*  1260 */   290,  244,  230,   15,   38,  329,   15,   48,   15,   15,
 /*  1270 */   258,  329,  349,  329,    2,  329,  143,  329,  329,   90,
 /*  1280 */   135,  255,   15,   47,   46,  305,  248,  368,  303,  366,
 /*  1290 */   101,    1,  231,  373,  367,  329,  350,  261,  141,  268,
 /*  1300 */    41,  329,  131,  215,  329,   96,    5,  108,  296,   15,
 /*  1310 */   329,   15,  146,  329,  329,  329,  245,  290,  244,  230,
 /*  1320 */    15,   38,  329,  329,   48,  329,  329,  329,  329,  349,
 /*  1330 */   329,  329,  329,  143,  329,  329,   78,  135,  255,  329,
 /*  1340 */    47,   46,  305,  248,  368,  303,  366,  101,    1,  231,
 /*  1350 */   373,  367,  329,  350,  329,  329,  329,   41,  329,  139,
 /*  1360 */   206,  329,   96,    5,  108,  329,  329,  329,  329,  146,
 /*  1370 */   329,  329,  329,  245,  290,  244,  230,  329,   38,  329,
 /*  1380 */   329,   48,  329,  329,  329,  329,  349,  329,  329,  329,
 /*  1390 */   113,  329,  329,   74,  135,  255,  329,   47,   46,  305,
 /*  1400 */   248,  368,  303,  366,  101,    1,  231,  373,  367,  329,
 /*  1410 */   350,  329,  329,  329,   41,  329,  133,   92,  329,   96,
 /*  1420 */     5,  108,  329,  329,  329,  329,  146,  329,  329,  329,
 /*  1430 */   245,  290,  244,  230,  329,   38,  329,  329,   48,  329,
 /*  1440 */   329,  329,  329,  349,  329,  329,  329,  143,  329,  329,
 /*  1450 */    62,  135,  255,  329,   47,   46,  305,  248,  368,  303,
 /*  1460 */   366,  101,    1,  231,  373,  367,  329,  350,  329,  329,
 /*  1470 */   329,   41,  329,  145,  215,  329,   96,    5,  108,  329,
 /*  1480 */   329,  329,  329,  146,  329,  329,  329,  245,  290,  244,
 /*  1490 */   230,  329,   19,  329,  329,   48,  329,  329,  329,  329,
 /*  1500 */   349,  329,  329,  329,  111,  329,  329,   63,  135,  255,
 /*  1510 */   329,   47,   46,  305,  248,  368,  303,  366,  101,    1,
 /*  1520 */   231,  373,  367,  329,  350,  329,  329,  329,   41,  329,
 /*  1530 */   139,  211,  329,   96,    5,  108,  329,  329,  329,  329,
 /*  1540 */   146,  329,  329,  329,  245,  290,  244,  230,  329,   38,
 /*  1550 */   329,  329,   48,  329,  329,  329,  329,  349,  329,  329,
 /*  1560 */   329,  143,  329,  329,   70,  135,  255,  329,   47,   46,
 /*  1570 */   305,  248,  368,  303,  366,  101,    1,  231,  373,  367,
 /*  1580 */   329,  350,  329,  329,  329,   41,  329,  139,  207,  329,
 /*  1590 */    96,    5,  108,  329,  329,  329,  329,  146,  329,  329,
 /*  1600 */   329,  245,  290,  244,  217,  329,   38,  329,  329,   48,
 /*  1610 */   329,  329,  329,  329,  349,  329,  329,  329,  143,  329,
 /*  1620 */   329,   68,  135,  255,  329,   47,   46,  305,  248,  368,
 /*  1630 */   303,  366,  101,    1,  231,  373,  367,  329,  350,  329,
 /*  1640 */   329,  329,   41,  329,  134,  215,  329,   96,    5,  108,
 /*  1650 */   329,  329,  329,  329,  146,  329,  329,  329,  245,  290,
 /*  1660 */   244,  230,  329,    6,  329,  329,   48,  329,  329,  329,
 /*  1670 */   329,  349,  329,  329,  329,  143,  329,  329,   87,  135,
 /*  1680 */   255,  329,   47,   46,  305,  248,  368,  303,  366,  101,
 /*  1690 */     1,  231,  373,  367,  329,  350,  329,  329,  329,   41,
 /*  1700 */   329,  145,  215,  329,   96,    5,  108,  329,  329,  329,
 /*  1710 */   329,  146,  329,  329,  329,  245,  290,  244,  230,  329,
 /*  1720 */    19,  329,  329,   48,  329,  329,  329,  329,  349,  329,
 /*  1730 */   329,  329,  143,  329,  329,   73,  135,  255,  329,   47,
 /*  1740 */    46,  305,  248,  368,  303,  366,  101,  329,  231,  373,
 /*  1750 */   367,  329,  350,  329,  329,  329,   41,  329,  145,  214,
 /*  1760 */   329,   96,    5,  108,  329,  329,  329,  329,  146,  329,
 /*  1770 */   329,  329,  245,  290,  244,  230,  329,   19,  329,  329,
 /*  1780 */    48,  329,  329,  329,  329,  329,  329,  329,  329,  329,
 /*  1790 */   329,  329,  329,  329,  249,  506,   47,   46,  305,  248,
 /*  1800 */   368,  329,  506,  101,  506,  506,  329,  506,  506,  329,
 /*  1810 */   329,  198,  175,  329,  506,    2,  506,  329,   96,  329,
 /*  1820 */   329,  293,  329,  329,   27,   21,  329,  329,  349,  329,
 /*  1830 */   329,  506,  143,  329,  329,   84,  135,  329,  201,  141,
 /*  1840 */   329,  329,  329,  506,  303,  366,  329,  329,  231,  373,
 /*  1850 */   367,  282,  350,  329,  329,  329,   43,  506,  329,  222,
 /*  1860 */   329,  349,    5,  108,  329,  158,  329,  329,  146,  135,
 /*  1870 */   329,  329,  245,  290,  244,  329,  329,  329,  270,  329,
 /*  1880 */   349,  231,  373,  367,  143,  350,  329,   82,  135,  329,
 /*  1890 */   329,  349,  329,  329,  329,  143,  303,  366,   71,  135,
 /*  1900 */   231,  373,  367,  329,  350,  329,  329,  303,  366,  329,
 /*  1910 */   329,  231,  373,  367,  329,  350,  329,  349,  359,   42,
 /*  1920 */   358,  143,  329,  329,   83,  135,  329,  329,  329,  329,
 /*  1930 */   329,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  1940 */   143,  350,  329,   86,  135,  329,  329,  329,  329,  329,
 /*  1950 */   329,  329,  303,  366,  329,  329,  231,  373,  367,  349,
 /*  1960 */   350,  329,  329,  143,  329,  329,   67,  135,  329,  329,
 /*  1970 */   349,  329,  329,  329,  143,  303,  366,   91,  135,  231,
 /*  1980 */   373,  367,  329,  350,  329,  329,  303,  366,  329,  329,
 /*  1990 */   231,  373,  367,  349,  350,  329,  329,  143,  329,  329,
 /*  2000 */    60,  135,  329,  329,  349,  329,  329,  329,  143,  303,
 /*  2010 */   366,   81,  135,  231,  373,  367,  329,  350,  329,  329,
 /*  2020 */   303,  366,  329,  349,  231,  373,  367,  143,  350,  329,
 /*  2030 */    54,  135,  329,  329,  329,  329,  329,  329,  329,  303,
 /*  2040 */   366,  329,  349,  231,  373,  367,  143,  350,  329,   77,
 /*  2050 */   135,  329,  329,  349,  329,  329,  329,   93,  303,  366,
 /*  2060 */    55,  119,  231,  373,  367,  329,  350,  329,  329,  303,
 /*  2070 */   366,  329,  349,  218,  373,  367,  143,  350,  329,   85,
 /*  2080 */   135,  329,  329,  349,  329,  329,  329,   93,  303,  366,
 /*  2090 */    57,  119,  231,  373,  367,  329,  350,  329,  329,  303,
 /*  2100 */   366,  329,  329,  231,  373,  367,  349,  350,  329,  329,
 /*  2110 */   143,  329,  329,   79,  135,  329,  329,  349,  329,  329,
 /*  2120 */   329,  143,  303,  366,   66,  135,  231,  373,  367,  329,
 /*  2130 */   350,  329,  329,  303,  366,  329,  349,  219,  373,  367,
 /*  2140 */   117,  350,  329,   56,  135,  329,  329,  349,  329,  329,
 /*  2150 */   329,  143,  303,  366,   69,  135,  231,  373,  367,  329,
 /*  2160 */   350,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  2170 */   143,  350,  329,   58,  135,  329,  329,  349,  329,  329,
 /*  2180 */   329,  143,  303,  366,   64,  135,  231,  373,  367,  329,
 /*  2190 */   350,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  2200 */   115,  350,  329,   89,  135,  329,  329,  349,  329,  329,
 /*  2210 */   329,  143,  303,  366,   76,  135,  231,  373,  367,  329,
 /*  2220 */   350,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  2230 */   143,  350,  329,   80,  135,  329,  329,  349,  329,  329,
 /*  2240 */   329,  143,  303,  366,   72,  135,  231,  373,  367,  329,
 /*  2250 */   350,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  2260 */   143,  350,  329,   88,  135,  329,  329,  349,  329,  329,
 /*  2270 */   329,  143,  303,  366,   61,  135,  231,  373,  367,  329,
 /*  2280 */   350,  329,  329,  303,  366,  329,  349,  231,  373,  367,
 /*  2290 */   143,  350,  329,   65,  135,  329,  329,  349,  329,  329,
 /*  2300 */   329,  156,  303,  366,  329,  135,  231,  373,  367,  329,
 /*  2310 */   350,  329,  349,  329,   99,  176,  157,  231,  373,  367,
 /*  2320 */   135,  350,  329,  329,  293,  198,  178,   27,   21,  329,
 /*  2330 */   329,  329,  231,  373,  367,  293,  350,  329,   27,   21,
 /*  2340 */   329,  201,  329,  329,  198,  181,  329,  329,  329,  198,
 /*  2350 */   167,  329,  201,  329,  293,  329,  329,   27,   21,  293,
 /*  2360 */   329,  329,   27,   21,  329,  329,  329,  329,  329,  329,
 /*  2370 */   329,  201,  329,  329,  329,  329,  201,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    3,    4,    5,    6,    7,    8,    9,   10,   11,
 /*    10 */    12,   13,   16,   91,   16,   19,   17,   93,   94,   95,
 /*    20 */    22,   23,  100,   20,   21,   29,   28,   31,   29,  118,
 /*    30 */    32,   33,   34,   82,   83,   84,   85,   86,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,    1,    5,    6,    7,    8,    9,   84,   85,
 /*    60 */    86,   13,   14,   15,   61,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,   77,   90,   27,   16,
 /*    80 */    29,   31,   19,   20,   37,  113,  114,   37,   25,  114,
 /*    90 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   100 */    49,   50,   51,   52,  117,  118,   59,   91,   61,   90,
 /*   110 */    16,   61,   65,   19,   20,    1,  100,   66,   67,   68,
 /*   120 */    69,   70,   71,   72,   73,   74,   75,   76,   77,    1,
 /*   130 */    85,   17,    1,  117,   89,   21,  117,   92,   93,   90,
 /*   140 */    91,   17,    1,   17,   20,   17,  101,  102,   17,  100,
 /*   150 */   105,  106,  107,   29,  109,   29,   62,   29,   17,   36,
 /*   160 */    29,   37,   16,   37,  119,  120,  117,   39,   40,   41,
 /*   170 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   180 */    52,   90,   91,   37,   53,   61,   16,   61,   65,   19,
 /*   190 */    16,  100,   18,   19,   66,   67,   68,   69,   70,   71,
 /*   200 */    72,   73,   74,   75,   76,   77,    1,   85,  117,   90,
 /*   210 */    91,   89,    1,   16,   92,   93,   19,    2,   16,  100,
 /*   220 */    18,   19,   17,  101,  102,   21,  110,  105,  106,  107,
 /*   230 */    16,  109,   62,   19,   29,   20,  117,   35,  116,   18,
 /*   240 */    19,   18,   31,   29,   39,   40,   41,   42,   43,   44,
 /*   250 */    45,   46,   47,   48,   49,   50,   51,   52,    1,   62,
 /*   260 */    37,   25,   16,   59,   53,   19,   20,    1,   64,   20,
 /*   270 */    21,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   280 */    75,   76,   77,   17,   63,   91,  111,   30,  113,  114,
 /*   290 */    59,   36,    1,   38,  100,   64,   39,   40,   41,   42,
 /*   300 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   310 */    61,  117,  113,  114,   36,   79,   38,   21,   37,   53,
 /*   320 */    29,    1,    2,   66,   67,   68,   69,   70,   71,   72,
 /*   330 */    73,   74,   75,   76,   77,    1,   91,   17,   99,   85,
 /*   340 */    90,   91,   61,   89,   85,  100,   92,   93,   89,   36,
 /*   350 */   100,   38,   93,  103,  104,  101,  102,  112,   24,  105,
 /*   360 */   106,  107,   85,  109,  105,  106,  107,  117,  109,   16,
 /*   370 */   116,    2,   19,   39,   40,   41,   42,   43,   44,   45,
 /*   380 */    46,   47,   48,   49,   50,   51,   52,    1,   91,   18,
 /*   390 */    19,   16,   93,   94,   19,   93,   94,  100,  121,  122,
 /*   400 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   410 */    76,   77,   91,  108,  117,   91,   86,  110,   88,  112,
 /*   420 */   115,  100,  110,   19,  100,   39,   40,   41,   42,   43,
 /*   430 */    44,   45,   46,   47,   48,   49,   50,   51,   52,    1,
 /*   440 */   108,  117,   17,   16,   90,   16,   19,  115,   19,   97,
 /*   450 */    25,   35,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   460 */    74,   75,   76,   77,  112,   79,   62,  108,    1,   90,
 /*   470 */   110,  117,  112,  117,  115,   99,   38,   39,   40,   41,
 /*   480 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   490 */    52,    1,   91,   99,   16,   19,  117,   19,   18,   26,
 /*   500 */    19,  100,   97,   97,   66,   67,   68,   69,   70,   71,
 /*   510 */    72,   73,   74,   75,   76,   77,   85,  112,  112,   18,
 /*   520 */    53,   61,   20,   19,   65,   19,    2,   19,   38,   39,
 /*   530 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   540 */    50,   51,   52,    1,   55,   38,   18,   35,   63,   18,
 /*   550 */    59,   37,   25,  122,   97,   97,   66,   67,   68,   69,
 /*   560 */    70,   71,   72,   73,   74,   75,   76,   77,   24,  112,
 /*   570 */   112,   29,   63,   19,   37,   19,   19,   18,    2,  111,
 /*   580 */    36,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   590 */    48,   49,   50,   51,   52,  100,   19,   19,    1,   29,
 /*   600 */    29,   20,  110,  115,  110,  112,   87,   97,   66,   67,
 /*   610 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   620 */     1,   85,  112,    1,   29,   89,   91,  123,   92,   93,
 /*   630 */    94,   16,    1,    1,   19,  100,   17,  101,  102,   17,
 /*   640 */    59,  105,  106,  107,   29,  109,   31,  112,   17,   17,
 /*   650 */    14,   29,   30,  123,   96,  123,  123,   97,   39,   40,
 /*   660 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   670 */    51,   52,  112,  123,  123,   53,   96,  123,  123,   21,
 /*   680 */   123,  123,  123,  123,   98,   66,   67,   68,   69,   70,
 /*   690 */    71,   72,   73,   74,   75,   76,   77,    1,  112,  123,
 /*   700 */   123,  123,   90,   85,  123,   17,   93,   89,  123,   11,
 /*   710 */   123,   93,  123,   17,   16,  103,  104,   29,  105,   61,
 /*   720 */    22,   23,  109,  105,  106,  107,   28,  109,  123,  117,
 /*   730 */    32,   33,   34,    1,    1,   39,   40,   41,   42,   43,
 /*   740 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   17,
 /*   750 */    17,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   760 */   123,   29,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   770 */    74,   75,   76,   77,    1,   85,   78,   79,   80,   89,
 /*   780 */    91,   17,   92,   93,   94,   53,   17,  123,   17,  100,
 /*   790 */    17,  101,  102,   29,   17,  105,  106,  107,   29,  109,
 /*   800 */    29,  112,  123,  123,  123,  123,   29,  123,  123,  123,
 /*   810 */   123,  123,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   820 */    47,   48,   49,   50,   51,   52,    1,  123,  123,  123,
 /*   830 */   123,  123,  123,  123,  123,  123,   97,   97,   97,   66,
 /*   840 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   850 */    77,  112,  112,  112,  123,  123,  123,  123,  123,  123,
 /*   860 */   123,  123,  123,  123,   39,   40,   41,   42,   43,   44,
 /*   870 */    45,   46,   47,   48,   49,   50,   51,   52,    1,    2,
 /*   880 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   890 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   900 */    75,   76,   77,  123,  123,  123,  123,  123,  123,  123,
 /*   910 */   123,  123,  123,  123,  123,  123,   39,   40,   41,   42,
 /*   920 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   930 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   940 */   123,  123,  123,   66,   67,   68,   69,   70,   71,   72,
 /*   950 */    73,   74,   75,   76,   77,    1,   85,  123,    1,  123,
 /*   960 */    89,   85,  123,   92,   93,   89,   91,   17,  123,   93,
 /*   970 */   123,   17,  101,  102,   17,  100,  105,  106,  107,   29,
 /*   980 */   109,  105,  106,  107,  123,  109,   29,  112,  123,  123,
 /*   990 */   123,  120,  123,   39,   40,   41,   42,   43,   44,   45,
 /*  1000 */    46,   47,   48,   49,   50,   51,   52,    1,  123,  123,
 /*  1010 */    53,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1020 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*  1030 */    76,   77,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1040 */   123,  123,  123,  123,  123,   39,   40,   41,   42,   43,
 /*  1050 */    44,   45,   46,   47,   48,   49,   50,   51,   52,  123,
 /*  1060 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1070 */   123,  123,   66,   67,   68,   69,   70,   71,   72,   73,
 /*  1080 */    74,   75,   76,   77,  123,   39,   40,   41,   42,   43,
 /*  1090 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   17,
 /*  1100 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1110 */   123,   29,   66,   67,   68,   69,   70,   71,   72,   73,
 /*  1120 */    74,   75,   76,   77,    1,  123,  123,  123,  123,   16,
 /*  1130 */   123,   18,   19,  123,   85,   22,   23,   17,   89,  123,
 /*  1140 */    17,   28,   93,  123,  123,   32,   33,   34,   35,   29,
 /*  1150 */    37,  102,   29,   40,  105,  106,  107,  123,  109,  123,
 /*  1160 */    85,  123,  123,  123,   89,  123,  123,   54,   93,   56,
 /*  1170 */    57,   58,   59,   60,  123,   85,   63,   64,   65,   89,
 /*  1180 */   105,  106,  107,   93,  109,  123,   16,  123,   18,   19,
 /*  1190 */   123,   78,   22,   23,   17,  105,  106,  107,   28,  109,
 /*  1200 */    17,   17,   32,   33,   34,   35,   29,   37,  123,   17,
 /*  1210 */    40,  123,   29,   29,  123,   85,  123,  123,  123,   89,
 /*  1220 */   123,   29,   92,   93,   54,  123,   56,   57,   58,   59,
 /*  1230 */    60,  101,  102,   63,   64,  105,  106,  107,    1,  109,
 /*  1240 */    17,   17,  123,   16,  123,   18,   19,  123,   78,   22,
 /*  1250 */    23,   17,   29,   29,   17,   28,   17,   17,   21,   32,
 /*  1260 */    33,   34,   35,   29,   37,  123,   29,   40,   29,   29,
 /*  1270 */    17,  123,   85,  123,   37,  123,   89,  123,  123,   92,
 /*  1280 */    93,   54,   29,   56,   57,   58,   59,   60,  101,  102,
 /*  1290 */    63,   64,  105,  106,  107,  123,  109,   17,   61,   17,
 /*  1300 */    16,  123,   18,   19,  123,   78,   22,   23,   17,   29,
 /*  1310 */   123,   29,   28,  123,  123,  123,   32,   33,   34,   35,
 /*  1320 */    29,   37,  123,  123,   40,  123,  123,  123,  123,   85,
 /*  1330 */   123,  123,  123,   89,  123,  123,   92,   93,   54,  123,
 /*  1340 */    56,   57,   58,   59,   60,  101,  102,   63,   64,  105,
 /*  1350 */   106,  107,  123,  109,  123,  123,  123,   16,  123,   18,
 /*  1360 */    19,  123,   78,   22,   23,  123,  123,  123,  123,   28,
 /*  1370 */   123,  123,  123,   32,   33,   34,   35,  123,   37,  123,
 /*  1380 */   123,   40,  123,  123,  123,  123,   85,  123,  123,  123,
 /*  1390 */    89,  123,  123,   92,   93,   54,  123,   56,   57,   58,
 /*  1400 */    59,   60,  101,  102,   63,   64,  105,  106,  107,  123,
 /*  1410 */   109,  123,  123,  123,   16,  123,   18,   19,  123,   78,
 /*  1420 */    22,   23,  123,  123,  123,  123,   28,  123,  123,  123,
 /*  1430 */    32,   33,   34,   35,  123,   37,  123,  123,   40,  123,
 /*  1440 */   123,  123,  123,   85,  123,  123,  123,   89,  123,  123,
 /*  1450 */    92,   93,   54,  123,   56,   57,   58,   59,   60,  101,
 /*  1460 */   102,   63,   64,  105,  106,  107,  123,  109,  123,  123,
 /*  1470 */   123,   16,  123,   18,   19,  123,   78,   22,   23,  123,
 /*  1480 */   123,  123,  123,   28,  123,  123,  123,   32,   33,   34,
 /*  1490 */    35,  123,   37,  123,  123,   40,  123,  123,  123,  123,
 /*  1500 */    85,  123,  123,  123,   89,  123,  123,   92,   93,   54,
 /*  1510 */   123,   56,   57,   58,   59,   60,  101,  102,   63,   64,
 /*  1520 */   105,  106,  107,  123,  109,  123,  123,  123,   16,  123,
 /*  1530 */    18,   19,  123,   78,   22,   23,  123,  123,  123,  123,
 /*  1540 */    28,  123,  123,  123,   32,   33,   34,   35,  123,   37,
 /*  1550 */   123,  123,   40,  123,  123,  123,  123,   85,  123,  123,
 /*  1560 */   123,   89,  123,  123,   92,   93,   54,  123,   56,   57,
 /*  1570 */    58,   59,   60,  101,  102,   63,   64,  105,  106,  107,
 /*  1580 */   123,  109,  123,  123,  123,   16,  123,   18,   19,  123,
 /*  1590 */    78,   22,   23,  123,  123,  123,  123,   28,  123,  123,
 /*  1600 */   123,   32,   33,   34,   35,  123,   37,  123,  123,   40,
 /*  1610 */   123,  123,  123,  123,   85,  123,  123,  123,   89,  123,
 /*  1620 */   123,   92,   93,   54,  123,   56,   57,   58,   59,   60,
 /*  1630 */   101,  102,   63,   64,  105,  106,  107,  123,  109,  123,
 /*  1640 */   123,  123,   16,  123,   18,   19,  123,   78,   22,   23,
 /*  1650 */   123,  123,  123,  123,   28,  123,  123,  123,   32,   33,
 /*  1660 */    34,   35,  123,   37,  123,  123,   40,  123,  123,  123,
 /*  1670 */   123,   85,  123,  123,  123,   89,  123,  123,   92,   93,
 /*  1680 */    54,  123,   56,   57,   58,   59,   60,  101,  102,   63,
 /*  1690 */    64,  105,  106,  107,  123,  109,  123,  123,  123,   16,
 /*  1700 */   123,   18,   19,  123,   78,   22,   23,  123,  123,  123,
 /*  1710 */   123,   28,  123,  123,  123,   32,   33,   34,   35,  123,
 /*  1720 */    37,  123,  123,   40,  123,  123,  123,  123,   85,  123,
 /*  1730 */   123,  123,   89,  123,  123,   92,   93,   54,  123,   56,
 /*  1740 */    57,   58,   59,   60,  101,  102,   63,  123,  105,  106,
 /*  1750 */   107,  123,  109,  123,  123,  123,   16,  123,   18,   19,
 /*  1760 */   123,   78,   22,   23,  123,  123,  123,  123,   28,  123,
 /*  1770 */   123,  123,   32,   33,   34,   35,  123,   37,  123,  123,
 /*  1780 */    40,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1790 */   123,  123,  123,  123,   54,   17,   56,   57,   58,   59,
 /*  1800 */    60,  123,   24,   63,   26,   27,  123,   29,   30,  123,
 /*  1810 */   123,   90,   91,  123,   36,   37,   38,  123,   78,  123,
 /*  1820 */   123,  100,  123,  123,  103,  104,  123,  123,   85,  123,
 /*  1830 */   123,   53,   89,  123,  123,   92,   93,  123,  117,   61,
 /*  1840 */   123,  123,  123,   65,  101,  102,  123,  123,  105,  106,
 /*  1850 */   107,   11,  109,  123,  123,  123,   16,   79,  123,  116,
 /*  1860 */   123,   85,   22,   23,  123,   89,  123,  123,   28,   93,
 /*  1870 */   123,  123,   32,   33,   34,  123,  123,  123,  102,  123,
 /*  1880 */    85,  105,  106,  107,   89,  109,  123,   92,   93,  123,
 /*  1890 */   123,   85,  123,  123,  123,   89,  101,  102,   92,   93,
 /*  1900 */   105,  106,  107,  123,  109,  123,  123,  101,  102,  123,
 /*  1910 */   123,  105,  106,  107,  123,  109,  123,   85,   78,   79,
 /*  1920 */    80,   89,  123,  123,   92,   93,  123,  123,  123,  123,
 /*  1930 */   123,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  1940 */    89,  109,  123,   92,   93,  123,  123,  123,  123,  123,
 /*  1950 */   123,  123,  101,  102,  123,  123,  105,  106,  107,   85,
 /*  1960 */   109,  123,  123,   89,  123,  123,   92,   93,  123,  123,
 /*  1970 */    85,  123,  123,  123,   89,  101,  102,   92,   93,  105,
 /*  1980 */   106,  107,  123,  109,  123,  123,  101,  102,  123,  123,
 /*  1990 */   105,  106,  107,   85,  109,  123,  123,   89,  123,  123,
 /*  2000 */    92,   93,  123,  123,   85,  123,  123,  123,   89,  101,
 /*  2010 */   102,   92,   93,  105,  106,  107,  123,  109,  123,  123,
 /*  2020 */   101,  102,  123,   85,  105,  106,  107,   89,  109,  123,
 /*  2030 */    92,   93,  123,  123,  123,  123,  123,  123,  123,  101,
 /*  2040 */   102,  123,   85,  105,  106,  107,   89,  109,  123,   92,
 /*  2050 */    93,  123,  123,   85,  123,  123,  123,   89,  101,  102,
 /*  2060 */    92,   93,  105,  106,  107,  123,  109,  123,  123,  101,
 /*  2070 */   102,  123,   85,  105,  106,  107,   89,  109,  123,   92,
 /*  2080 */    93,  123,  123,   85,  123,  123,  123,   89,  101,  102,
 /*  2090 */    92,   93,  105,  106,  107,  123,  109,  123,  123,  101,
 /*  2100 */   102,  123,  123,  105,  106,  107,   85,  109,  123,  123,
 /*  2110 */    89,  123,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2120 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2130 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2140 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2150 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2160 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2170 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2180 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2190 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2200 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2210 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2220 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2230 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2240 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2250 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2260 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2270 */   123,   89,  101,  102,   92,   93,  105,  106,  107,  123,
 /*  2280 */   109,  123,  123,  101,  102,  123,   85,  105,  106,  107,
 /*  2290 */    89,  109,  123,   92,   93,  123,  123,   85,  123,  123,
 /*  2300 */   123,   89,  101,  102,  123,   93,  105,  106,  107,  123,
 /*  2310 */   109,  123,   85,  123,   90,   91,   89,  105,  106,  107,
 /*  2320 */    93,  109,  123,  123,  100,   90,   91,  103,  104,  123,
 /*  2330 */   123,  123,  105,  106,  107,  100,  109,  123,  103,  104,
 /*  2340 */   123,  117,  123,  123,   90,   91,  123,  123,  123,   90,
 /*  2350 */    91,  123,  117,  123,  100,  123,  123,  103,  104,  100,
 /*  2360 */   123,  123,  103,  104,  123,  123,  123,  123,  123,  123,
 /*  2370 */   123,  117,  123,  123,  123,  123,  117,
);
    const YY_SHIFT_USE_DFLT = -5;
    const YY_SHIFT_MAX = 255;
    static public $yy_shift_ofst = array(
 /*     0 */    -2, 1512, 1170, 1170, 1170, 1626, 1626, 1512, 1113, 1170,
 /*    10 */  1170, 1170, 1170, 1170, 1170, 1569, 1170, 1170, 1170, 1170,
 /*    20 */  1170, 1170, 1170, 1170, 1170, 1569, 1170, 1170, 1170, 1170,
 /*    30 */  1284, 1170, 1341, 1170, 1227, 1170, 1170, 1170, 1170, 1170,
 /*    40 */  1170, 1398, 1170, 1398, 1455, 1455, 1683, 1683, 1683, 1683,
 /*    50 */  1683, 1683, 1740,  205,   51,   -1,  128,  542,  542,  542,
 /*    60 */   696,  438,  773,  257,  334,  490,  386,  619,  877,  954,
 /*    70 */   825, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,
 /*    80 */  1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,
 /*    90 */  1046, 1046, 1237,  131,  291,   -2, 1840,  615,   -4, 1123,
 /*   100 */  1123,  221,  204,  320,  214,  214,  291,  291,  223,  698,
 /*   110 */    48,  622,   63,  732,   94,  957,  114,  266,  246,  249,
 /*   120 */     3,  211,  197,  353,  371,  353,  371,  353,  353,  223,
 /*   130 */  1282,  375,  353,  427,  478,  658,  353,  223,  353,  478,
 /*   140 */   429,  371,  353,  467,  733,  353,  570,  571,  296,  597,
 /*   150 */   597,  296,  597,  597,  597,  597,  597,  597,   -5,  170,
 /*   160 */   174,  688,  764,  146,  141,  771,  769, 1280,  231,  632,
 /*   170 */   631,  231, 1253, 1239,  231, 1120, 1082,  231, 1177, 1192,
 /*   180 */  1184, 1183, 1291,  950, 1223, 1240, 1234, 1224,  777,  231,
 /*   190 */   296,  514,  296,  369,  636,  597,  595,  595,  597,  369,
 /*   200 */   296,   -5,   -5,   -5,   -5,   -5, 1778,  124,  202,   47,
 /*   210 */   126,   50,  215,  255,  281,  281,  404,  581,  425,  236,
 /*   220 */   278,  123,  313,  544,  578,  514,  509,  531,  485,  512,
 /*   230 */   491,  527,  537,  576,  577,  559,  557,  554,  556,  528,
 /*   240 */   507,  473,  502,  501,  481,  476,  480,  504,  416,  460,
 /*   250 */   508,  489,  524,  506,  459,  460,
);
    const YY_REDUCE_USE_DFLT = -90;
    const YY_REDUCE_MAX = 205;
    static public $yy_reduce_ofst = array(
 /*     0 */   -49,   45,  254,  122, 1743,  690,  536,  871, 1472, 1586,
 /*    10 */  1851, 1874, 1806, 1244, 1130, 1301, 2051, 2092, 1908, 2182,
 /*    20 */  1919, 2021, 2141, 1987, 2171, 1415, 1832, 1795, 2152, 1358,
 /*    30 */  1529, 1643, 1885, 1187, 2111, 2122, 2062, 1957, 2201, 2081,
 /*    40 */  1938, 1998, 2032, 1968, 1776, 1049,  876,  618, 1075, 1090,
 /*    50 */  2227,  259, 2212,  250, 2259, 2224, 1721, 2224, 2235, 2254,
 /*    60 */   612,  612,  612,  612,  612,  612,  612,  612,  612,  612,
 /*    70 */   612,  612,  612,  612,  612,  612,  612,  612,  612,  612,
 /*    80 */   612,  612,  612,  612,  612,  612,  612,  612,  612,  612,
 /*    90 */   612,  612,   91,   49,  119,  -26,  277,  535,  245,   16,
 /*   100 */   194,  613,  175,  -13,  875,  689,  297,  324,  -76,  431,
 /*   110 */   330,   19,  586,   19,  307,   19,  354,   19,  307,  -28,
 /*   120 */   -28,   19,  307,  458,  332,  405,  305,  352,  406,  299,
 /*   130 */   401,  457,  510,  457,  739,  -28,  741,  302,  740,  457,
 /*   140 */   560,  359,  360,   19,  379,  457,  321,  -78,  -28,   19,
 /*   150 */    19,  199,   19,   19,   19,   19,   19,   19,   19,  493,
 /*   160 */   488,  495,  495,  492,  356,  495,  495,  495,  468,  356,
 /*   170 */   356,  468,  495,  495,  468,  495,  495,  468,  495,  495,
 /*   180 */   495,  495,  495,  495,  495,  495,  495,  495,  495,  468,
 /*   190 */   -25,  494,  -25,  -89,  519,  356,  580,  558,  356,  -89,
 /*   200 */   -25,  394,  376,  312,  116,  239,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 28, 32, 33, 34, ),
        /* 1 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 2 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 3 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 4 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 5 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 6 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 7 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 8 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 65, 78, ),
        /* 9 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 10 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 11 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 12 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 13 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 14 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 15 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 16 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 17 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 18 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 19 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 20 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 21 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 22 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 23 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 24 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 25 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 26 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 27 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 28 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 29 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 30 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 31 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 32 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 33 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 34 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 35 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 36 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 37 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 38 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 39 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 40 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 41 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 42 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 43 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 44 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 45 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 64, 78, ),
        /* 46 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 47 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 48 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 49 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 50 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 51 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 52 */ array(16, 18, 19, 22, 23, 28, 32, 33, 34, 35, 37, 40, 54, 56, 57, 58, 59, 60, 63, 78, ),
        /* 53 */ array(1, 17, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 54 */ array(1, 27, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 55 */ array(1, 17, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 56 */ array(1, 17, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 57 */ array(1, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 58 */ array(1, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 59 */ array(1, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 60 */ array(1, 17, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 61 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 62 */ array(1, 17, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 63 */ array(1, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 64 */ array(1, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 65 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 66 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, ),
        /* 67 */ array(1, 17, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 68 */ array(1, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 69 */ array(1, 17, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 70 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 71 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 72 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 73 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 74 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 75 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 76 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 77 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 78 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 79 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 80 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 81 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 82 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 83 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 84 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 85 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 86 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 87 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 88 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 89 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 90 */ array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 91 */ array(39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, ),
        /* 92 */ array(1, 17, 21, 29, 37, 61, ),
        /* 93 */ array(1, 17, 29, 53, ),
        /* 94 */ array(1, 29, ),
        /* 95 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 28, 32, 33, 34, ),
        /* 96 */ array(11, 16, 22, 23, 28, 32, 33, 34, 78, 79, 80, ),
        /* 97 */ array(16, 19, 29, 31, ),
        /* 98 */ array(16, 19, 29, 31, ),
        /* 99 */ array(1, 17, 29, ),
        /* 100 */ array(1, 17, 29, ),
        /* 101 */ array(18, 19, 63, ),
        /* 102 */ array(21, 59, 64, ),
        /* 103 */ array(1, 2, 17, ),
        /* 104 */ array(16, 19, 29, ),
        /* 105 */ array(16, 19, 29, ),
        /* 106 */ array(1, 29, ),
        /* 107 */ array(1, 29, ),
        /* 108 */ array(18, 37, ),
        /* 109 */ array(11, 16, 22, 23, 28, 32, 33, 34, 78, 79, 80, ),
        /* 110 */ array(5, 6, 7, 8, 9, 13, 14, 15, ),
        /* 111 */ array(1, 17, 29, 30, 53, ),
        /* 112 */ array(16, 19, 20, 25, ),
        /* 113 */ array(1, 17, 29, 53, ),
        /* 114 */ array(16, 19, 20, 62, ),
        /* 115 */ array(1, 17, 29, 53, ),
        /* 116 */ array(1, 17, 21, ),
        /* 117 */ array(1, 17, 53, ),
        /* 118 */ array(16, 19, 20, ),
        /* 119 */ array(20, 21, 61, ),
        /* 120 */ array(20, 21, 61, ),
        /* 121 */ array(1, 31, 53, ),
        /* 122 */ array(16, 19, 62, ),
        /* 123 */ array(16, 19, ),
        /* 124 */ array(18, 19, ),
        /* 125 */ array(16, 19, ),
        /* 126 */ array(18, 19, ),
        /* 127 */ array(16, 19, ),
        /* 128 */ array(16, 19, ),
        /* 129 */ array(18, 37, ),
        /* 130 */ array(17, 29, ),
        /* 131 */ array(16, 19, ),
        /* 132 */ array(16, 19, ),
        /* 133 */ array(16, 19, ),
        /* 134 */ array(16, 19, ),
        /* 135 */ array(21, 61, ),
        /* 136 */ array(16, 19, ),
        /* 137 */ array(18, 37, ),
        /* 138 */ array(16, 19, ),
        /* 139 */ array(16, 19, ),
        /* 140 */ array(16, 19, ),
        /* 141 */ array(18, 19, ),
        /* 142 */ array(16, 19, ),
        /* 143 */ array(1, 53, ),
        /* 144 */ array(1, 17, ),
        /* 145 */ array(16, 19, ),
        /* 146 */ array(29, ),
        /* 147 */ array(29, ),
        /* 148 */ array(21, ),
        /* 149 */ array(1, ),
        /* 150 */ array(1, ),
        /* 151 */ array(21, ),
        /* 152 */ array(1, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(1, ),
        /* 157 */ array(1, ),
        /* 158 */ array(),
        /* 159 */ array(16, 19, 62, ),
        /* 160 */ array(16, 18, 19, ),
        /* 161 */ array(17, 29, ),
        /* 162 */ array(17, 29, ),
        /* 163 */ array(16, 37, ),
        /* 164 */ array(1, 17, ),
        /* 165 */ array(17, 29, ),
        /* 166 */ array(17, 29, ),
        /* 167 */ array(17, 29, ),
        /* 168 */ array(59, 64, ),
        /* 169 */ array(1, 17, ),
        /* 170 */ array(1, 17, ),
        /* 171 */ array(59, 64, ),
        /* 172 */ array(17, 29, ),
        /* 173 */ array(17, 29, ),
        /* 174 */ array(59, 64, ),
        /* 175 */ array(17, 29, ),
        /* 176 */ array(17, 29, ),
        /* 177 */ array(59, 64, ),
        /* 178 */ array(17, 29, ),
        /* 179 */ array(17, 29, ),
        /* 180 */ array(17, 29, ),
        /* 181 */ array(17, 29, ),
        /* 182 */ array(17, 29, ),
        /* 183 */ array(17, 29, ),
        /* 184 */ array(17, 29, ),
        /* 185 */ array(17, 29, ),
        /* 186 */ array(17, 29, ),
        /* 187 */ array(17, 29, ),
        /* 188 */ array(17, 29, ),
        /* 189 */ array(59, 64, ),
        /* 190 */ array(21, ),
        /* 191 */ array(37, ),
        /* 192 */ array(21, ),
        /* 193 */ array(2, ),
        /* 194 */ array(14, ),
        /* 195 */ array(1, ),
        /* 196 */ array(29, ),
        /* 197 */ array(29, ),
        /* 198 */ array(1, ),
        /* 199 */ array(2, ),
        /* 200 */ array(21, ),
        /* 201 */ array(),
        /* 202 */ array(),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(17, 24, 26, 27, 29, 30, 36, 37, 38, 53, 61, 65, 79, ),
        /* 207 */ array(17, 20, 29, 37, 61, ),
        /* 208 */ array(16, 18, 19, 35, ),
        /* 209 */ array(37, 59, 61, 65, ),
        /* 210 */ array(17, 29, 37, 61, ),
        /* 211 */ array(31, 37, 61, ),
        /* 212 */ array(2, 20, ),
        /* 213 */ array(36, 38, ),
        /* 214 */ array(37, 61, ),
        /* 215 */ array(37, 61, ),
        /* 216 */ array(19, 62, ),
        /* 217 */ array(20, 59, ),
        /* 218 */ array(17, 25, ),
        /* 219 */ array(25, 79, ),
        /* 220 */ array(36, 38, ),
        /* 221 */ array(36, 65, ),
        /* 222 */ array(36, 38, ),
        /* 223 */ array(24, 36, ),
        /* 224 */ array(19, ),
        /* 225 */ array(37, ),
        /* 226 */ array(63, ),
        /* 227 */ array(18, ),
        /* 228 */ array(63, ),
        /* 229 */ array(35, ),
        /* 230 */ array(59, ),
        /* 231 */ array(25, ),
        /* 232 */ array(37, ),
        /* 233 */ array(2, ),
        /* 234 */ array(19, ),
        /* 235 */ array(18, ),
        /* 236 */ array(19, ),
        /* 237 */ array(19, ),
        /* 238 */ array(19, ),
        /* 239 */ array(18, ),
        /* 240 */ array(38, ),
        /* 241 */ array(26, ),
        /* 242 */ array(20, ),
        /* 243 */ array(18, ),
        /* 244 */ array(19, ),
        /* 245 */ array(19, ),
        /* 246 */ array(18, ),
        /* 247 */ array(19, ),
        /* 248 */ array(35, ),
        /* 249 */ array(61, ),
        /* 250 */ array(19, ),
        /* 251 */ array(55, ),
        /* 252 */ array(2, ),
        /* 253 */ array(19, ),
        /* 254 */ array(65, ),
        /* 255 */ array(61, ),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
        /* 391 */ array(),
);
    static public $yy_default = array(
 /*     0 */   395,  579,  550,  550,  550,  596,  596,  596,  596,  596,
 /*    10 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    20 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    30 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    40 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    50 */   596,  596,  596,  596,  456,  596,  596,  456,  456,  456,
 /*    60 */   596,  596,  596,  461,  596,  596,  596,  596,  596,  596,
 /*    70 */   596,  489,  490,  581,  461,  582,  463,  580,  548,  480,
 /*    80 */   481,  438,  477,  466,  549,  482,  486,  467,  485,  458,
 /*    90 */   495,  494,  506,  469,  456,  392,  596,  456,  456,  476,
 /*   100 */   515,  596,  562,  596,  456,  456,  456,  456,  596,  596,
 /*   110 */   596,  469,  596,  469,  523,  469,  596,  469,  523,  516,
 /*   120 */   516,  469,  523,  596,  596,  596,  596,  596,  596,  596,
 /*   130 */   596,  596,  596,  596,  596,  516,  596,  596,  596,  596,
 /*   140 */   596,  596,  523,  469,  596,  596,  456,  456,  516,  499,
 /*   150 */   472,  559,  497,  498,  479,  473,  493,  474,  557,  524,
 /*   160 */   596,  596,  596,  523,  596,  596,  596,  596,  540,  596,
 /*   170 */   596,  521,  596,  596,  541,  596,  596,  542,  596,  596,
 /*   180 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  543,
 /*   190 */   537,  523,  560,  552,  411,  515,  595,  595,  476,  551,
 /*   200 */   563,  556,  556,  523,  523,  556,  471,  506,  596,  506,
 /*   210 */   506,  506,  535,  596,  491,  506,  596,  502,  496,  496,
 /*   220 */   596,  596,  596,  596,  596,  535,  596,  596,  596,  504,
 /*   230 */   502,  496,  561,  535,  596,  596,  596,  596,  596,  596,
 /*   240 */   596,  464,  596,  596,  596,  596,  596,  596,  596,  492,
 /*   250 */   596,  508,  535,  596,  596,  596,  468,  544,  445,  576,
 /*   260 */   536,  440,  531,  441,  393,  586,  421,  436,  435,  578,
 /*   270 */   558,  508,  532,  528,  545,  546,  446,  530,  439,  577,
 /*   280 */   547,  465,  593,  594,  529,  575,  447,  535,  448,  555,
 /*   290 */   449,  534,  444,  455,  434,  437,  442,  443,  450,  451,
 /*   300 */   505,  503,  511,  470,  471,  501,  500,  553,  554,  452,
 /*   310 */   453,  433,  454,  403,  402,  404,  405,  406,  401,  400,
 /*   320 */   396,  394,  397,  398,  399,  407,  408,  417,  416,  418,
 /*   330 */   419,  420,  415,  414,  409,  410,  412,  413,  517,  522,
 /*   340 */   591,  423,  424,  425,  426,  422,  520,  539,  538,  514,
 /*   350 */   518,  519,  427,  428,  585,  584,  588,  587,  589,  583,
 /*   360 */   590,  429,  430,  432,  431,  513,  475,  510,  509,  512,
 /*   370 */   483,  484,  478,  507,  525,  533,  526,  527,  487,  488,
 /*   380 */   571,  570,  572,  573,  574,  569,  568,  564,  565,  566,
 /*   390 */   567,  592,
);
    const YYNOCODE = 124;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 392;
    const YYNRULE = 204;
    const YYERRORSYMBOL = 81;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',
  'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',
  'LINEBREAK',     'LITERALSTART',  'LITERALEND',    'LITERAL',
  'LDEL',          'RDEL',          'DOLLAR',        'ID',
  'EQUAL',         'PTR',           'LDELIF',        'LDELFOR',
  'SEMICOLON',     'INCDEC',        'TO',            'STEP',
  'LDELFOREACH',   'SPACE',         'AS',            'APTR',
  'LDELSETFILTER',  'SMARTYBLOCKCHILD',  'LDELSLASH',     'INTEGER',
  'COMMA',         'OPENP',         'CLOSEP',        'MATH',
  'UNIMATH',       'ANDSYM',        'ISIN',          'ISDIVBY',
  'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',
  'ISNOTEVENBY',   'ISODD',         'ISNOTODD',      'ISODDBY',
  'ISNOTODDBY',    'INSTANCEOF',    'NAMESPACECLASS',  'QMARK',
  'NOT',           'TYPECAST',      'HEX',           'DOT',
  'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',            'HATCH',
  'OPENB',         'CLOSEB',        'EQUALS',        'NOTEQUALS',
  'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',
  'IDENTITY',      'NONEIDENTITY',  'MOD',           'LAND',
  'LOR',           'LXOR',          'QUOTE',         'BACKTICK',
  'DOLLARID',      'error',         'start',         'template',
  'template_element',  'smartytag',     'literal',       'literal_elements',
  'literal_element',  'value',         'modifierlist',  'attributes',
  'expr',          'varindexed',    'statement',     'statements',
  'optspace',      'varvar',        'foraction',     'modparameters',
  'attribute',     'ternary',       'array',         'ifcond',
  'lop',           'variable',      'function',      'doublequoted_with_quotes',
  'static_class_access',  'object',        'arrayindex',    'indexdef',
  'varvarele',     'objectchain',   'objectelement',  'method',
  'params',        'modifier',      'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= OTHER",
 /*  15 */ "template_element ::= LINEBREAK",
 /*  16 */ "literal ::= LITERALSTART LITERALEND",
 /*  17 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  18 */ "literal_elements ::= literal_elements literal_element",
 /*  19 */ "literal_elements ::=",
 /*  20 */ "literal_element ::= literal",
 /*  21 */ "literal_element ::= LITERAL",
 /*  22 */ "literal_element ::= PHPSTARTTAG",
 /*  23 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  24 */ "literal_element ::= PHPENDTAG",
 /*  25 */ "literal_element ::= ASPSTARTTAG",
 /*  26 */ "literal_element ::= ASPENDTAG",
 /*  27 */ "smartytag ::= LDEL value RDEL",
 /*  28 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  29 */ "smartytag ::= LDEL value attributes RDEL",
 /*  30 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  32 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  35 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID RDEL",
 /*  38 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDELIF expr RDEL",
 /*  42 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  43 */ "smartytag ::= LDELIF statement RDEL",
 /*  44 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  45 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes RDEL",
 /*  46 */ "foraction ::= EQUAL expr",
 /*  47 */ "foraction ::= INCDEC",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  57 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  58 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  61 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  62 */ "attributes ::= attributes attribute",
 /*  63 */ "attributes ::= attribute",
 /*  64 */ "attributes ::=",
 /*  65 */ "attribute ::= SPACE ID EQUAL ID",
 /*  66 */ "attribute ::= SPACE ID EQUAL expr",
 /*  67 */ "attribute ::= SPACE ID EQUAL value",
 /*  68 */ "attribute ::= SPACE ID",
 /*  69 */ "attribute ::= SPACE expr",
 /*  70 */ "attribute ::= SPACE value",
 /*  71 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  72 */ "statements ::= statement",
 /*  73 */ "statements ::= statements COMMA statement",
 /*  74 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  75 */ "statement ::= varindexed EQUAL expr",
 /*  76 */ "statement ::= OPENP statement CLOSEP",
 /*  77 */ "expr ::= value",
 /*  78 */ "expr ::= ternary",
 /*  79 */ "expr ::= DOLLAR ID COLON ID",
 /*  80 */ "expr ::= expr MATH value",
 /*  81 */ "expr ::= expr UNIMATH value",
 /*  82 */ "expr ::= expr ANDSYM value",
 /*  83 */ "expr ::= array",
 /*  84 */ "expr ::= expr modifierlist",
 /*  85 */ "expr ::= expr ifcond expr",
 /*  86 */ "expr ::= expr ISIN array",
 /*  87 */ "expr ::= expr ISIN value",
 /*  88 */ "expr ::= expr lop expr",
 /*  89 */ "expr ::= expr ISDIVBY expr",
 /*  90 */ "expr ::= expr ISNOTDIVBY expr",
 /*  91 */ "expr ::= expr ISEVEN",
 /*  92 */ "expr ::= expr ISNOTEVEN",
 /*  93 */ "expr ::= expr ISEVENBY expr",
 /*  94 */ "expr ::= expr ISNOTEVENBY expr",
 /*  95 */ "expr ::= expr ISODD",
 /*  96 */ "expr ::= expr ISNOTODD",
 /*  97 */ "expr ::= expr ISODDBY expr",
 /*  98 */ "expr ::= expr ISNOTODDBY expr",
 /*  99 */ "expr ::= value INSTANCEOF ID",
 /* 100 */ "expr ::= value INSTANCEOF NAMESPACECLASS",
 /* 101 */ "expr ::= value INSTANCEOF value",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 103 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 104 */ "value ::= variable",
 /* 105 */ "value ::= UNIMATH value",
 /* 106 */ "value ::= NOT value",
 /* 107 */ "value ::= TYPECAST value",
 /* 108 */ "value ::= variable INCDEC",
 /* 109 */ "value ::= HEX",
 /* 110 */ "value ::= INTEGER",
 /* 111 */ "value ::= INTEGER DOT INTEGER",
 /* 112 */ "value ::= INTEGER DOT",
 /* 113 */ "value ::= DOT INTEGER",
 /* 114 */ "value ::= ID",
 /* 115 */ "value ::= function",
 /* 116 */ "value ::= OPENP expr CLOSEP",
 /* 117 */ "value ::= SINGLEQUOTESTRING",
 /* 118 */ "value ::= doublequoted_with_quotes",
 /* 119 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 120 */ "value ::= NAMESPACECLASS DOUBLECOLON static_class_access",
 /* 121 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 122 */ "value ::= smartytag",
 /* 123 */ "value ::= value modifierlist",
 /* 124 */ "variable ::= varindexed",
 /* 125 */ "variable ::= DOLLAR varvar AT ID",
 /* 126 */ "variable ::= object",
 /* 127 */ "variable ::= HATCH ID HATCH",
 /* 128 */ "variable ::= HATCH variable HATCH",
 /* 129 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 130 */ "arrayindex ::= arrayindex indexdef",
 /* 131 */ "arrayindex ::=",
 /* 132 */ "indexdef ::= DOT DOLLAR varvar",
 /* 133 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 134 */ "indexdef ::= DOT ID",
 /* 135 */ "indexdef ::= DOT INTEGER",
 /* 136 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 137 */ "indexdef ::= OPENB ID CLOSEB",
 /* 138 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 139 */ "indexdef ::= OPENB expr CLOSEB",
 /* 140 */ "indexdef ::= OPENB CLOSEB",
 /* 141 */ "varvar ::= varvarele",
 /* 142 */ "varvar ::= varvar varvarele",
 /* 143 */ "varvarele ::= ID",
 /* 144 */ "varvarele ::= LDEL expr RDEL",
 /* 145 */ "object ::= varindexed objectchain",
 /* 146 */ "objectchain ::= objectelement",
 /* 147 */ "objectchain ::= objectchain objectelement",
 /* 148 */ "objectelement ::= PTR ID arrayindex",
 /* 149 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 150 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 151 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 152 */ "objectelement ::= PTR method",
 /* 153 */ "function ::= ID OPENP params CLOSEP",
 /* 154 */ "method ::= ID OPENP params CLOSEP",
 /* 155 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 156 */ "params ::= params COMMA expr",
 /* 157 */ "params ::= expr",
 /* 158 */ "params ::=",
 /* 159 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 160 */ "modifierlist ::= modifier modparameters",
 /* 161 */ "modifier ::= VERT AT ID",
 /* 162 */ "modifier ::= VERT ID",
 /* 163 */ "modparameters ::= modparameters modparameter",
 /* 164 */ "modparameters ::=",
 /* 165 */ "modparameter ::= COLON value",
 /* 166 */ "modparameter ::= COLON array",
 /* 167 */ "static_class_access ::= method",
 /* 168 */ "static_class_access ::= method objectchain",
 /* 169 */ "static_class_access ::= ID",
 /* 170 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 171 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 172 */ "ifcond ::= EQUALS",
 /* 173 */ "ifcond ::= NOTEQUALS",
 /* 174 */ "ifcond ::= GREATERTHAN",
 /* 175 */ "ifcond ::= LESSTHAN",
 /* 176 */ "ifcond ::= GREATEREQUAL",
 /* 177 */ "ifcond ::= LESSEQUAL",
 /* 178 */ "ifcond ::= IDENTITY",
 /* 179 */ "ifcond ::= NONEIDENTITY",
 /* 180 */ "ifcond ::= MOD",
 /* 181 */ "lop ::= LAND",
 /* 182 */ "lop ::= LOR",
 /* 183 */ "lop ::= LXOR",
 /* 184 */ "array ::= OPENB arrayelements CLOSEB",
 /* 185 */ "arrayelements ::= arrayelement",
 /* 186 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 187 */ "arrayelements ::=",
 /* 188 */ "arrayelement ::= value APTR expr",
 /* 189 */ "arrayelement ::= ID APTR expr",
 /* 190 */ "arrayelement ::= expr",
 /* 191 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 192 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 193 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 194 */ "doublequoted ::= doublequotedcontent",
 /* 195 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 196 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 197 */ "doublequotedcontent ::= DOLLARID",
 /* 198 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 199 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 200 */ "doublequotedcontent ::= smartytag",
 /* 201 */ "doublequotedcontent ::= OTHER",
 /* 202 */ "optspace ::= SPACE",
 /* 203 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 96 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1735 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 0 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 85, 'rhs' => 7 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 85, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 7 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 12 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 85, 'rhs' => 8 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 8 ),
  array( 'lhs' => 85, 'rhs' => 11 ),
  array( 'lhs' => 85, 'rhs' => 8 ),
  array( 'lhs' => 85, 'rhs' => 11 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 6 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 8 ),
  array( 'lhs' => 101, 'rhs' => 7 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 5 ),
  array( 'lhs' => 114, 'rhs' => 6 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 5 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 0 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 2 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        19 => 16,
        203 => 16,
        17 => 17,
        76 => 17,
        18 => 18,
        105 => 18,
        107 => 18,
        108 => 18,
        130 => 18,
        168 => 18,
        20 => 20,
        21 => 20,
        47 => 20,
        69 => 20,
        70 => 20,
        77 => 20,
        78 => 20,
        83 => 20,
        104 => 20,
        109 => 20,
        110 => 20,
        115 => 20,
        117 => 20,
        118 => 20,
        126 => 20,
        141 => 20,
        167 => 20,
        169 => 20,
        185 => 20,
        190 => 20,
        202 => 20,
        22 => 22,
        23 => 22,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        31 => 29,
        30 => 30,
        32 => 32,
        33 => 32,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        44 => 42,
        43 => 43,
        45 => 45,
        46 => 46,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        63 => 63,
        72 => 63,
        157 => 63,
        161 => 63,
        165 => 63,
        166 => 63,
        64 => 64,
        158 => 64,
        164 => 64,
        65 => 65,
        66 => 66,
        67 => 66,
        71 => 66,
        68 => 68,
        73 => 73,
        74 => 74,
        75 => 74,
        79 => 79,
        80 => 80,
        81 => 80,
        82 => 80,
        84 => 84,
        123 => 84,
        85 => 85,
        88 => 85,
        99 => 85,
        100 => 85,
        86 => 86,
        87 => 87,
        89 => 89,
        90 => 90,
        91 => 91,
        96 => 91,
        92 => 92,
        95 => 92,
        93 => 93,
        98 => 93,
        94 => 94,
        97 => 94,
        101 => 101,
        102 => 102,
        103 => 103,
        106 => 106,
        111 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        116 => 116,
        119 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        127 => 127,
        128 => 128,
        129 => 129,
        131 => 131,
        187 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        139 => 136,
        137 => 137,
        138 => 138,
        140 => 140,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        159 => 159,
        160 => 160,
        162 => 162,
        163 => 163,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        186 => 186,
        188 => 188,
        189 => 189,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
        195 => 195,
        196 => 195,
        198 => 195,
        197 => 197,
        199 => 199,
        200 => 200,
        201 => 201,
    );
#line 107 "smarty_internal_templateparser.y"
    function yy_r0(){
   // execute end of template
   $this->current_buffer->append_subtree(new _smarty_text($this, "<?php array_shift(\$_smarty_tpl->trace_call_stack)?>"));
   if ($this->compiler->template->caching) {
       $this->compiler->has_code = true;
       $this->compiler->tag_nocache = true;
       $save = $this->template->has_nocache_code;
       $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php array_shift(\$_smarty_tpl->trace_call_stack)?>", true)));
       $this->template->has_nocache_code = $save;
   }
   // merge all buffer to output
   $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2181 "smarty_internal_templateparser.php"
#line 125 "smarty_internal_templateparser.y"
    function yy_r1(){
    $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2186 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->template->source->type == 'eval' || $this->compiler->template->source->type == 'string') {
        $resource = $this->compiler->template->source->type;
    } else {
        $resource = $this->compiler->template->template_resource;
    }
    $code = "<?php array_unshift(\$_smarty_tpl->trace_call_stack, array('{$resource}', 0, '{$this->compiler->template->source->type}'));?>";
    $this->_retvalue = new _smarty_tag($this, $code);
    if ($this->compiler->template->caching) {
        $this->compiler->has_code = true;
        $this->compiler->tag_nocache = true;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($code, true) . $code);
        $this->template->has_nocache_code = $save;
    }
    }
#line 2204 "smarty_internal_templateparser.php"
#line 160 "smarty_internal_templateparser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $tmp ='';
        if ((!$this->compiler->nocache && !$this->compiler->tag_nocache) && $this->last_taglineno != $this->lex->taglineno ||
            (($this->compiler->nocache || $this->compiler->tag_nocache) && $this->last_taglineno_nocache != $this->lex->taglineno)) {
            $tmp = "<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>";
            if (!$this->compiler->nocache && !$this->compiler->tag_nocache) {
                $this->last_taglineno = $this->lex->taglineno;
            } else {
                $this->last_taglineno_nocache = $this->lex->taglineno;
            }
        }
        foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
    } else {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2226 "smarty_internal_templateparser.php"
#line 182 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_tag($this, '');
    }
#line 2231 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r7(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2236 "smarty_internal_templateparser.php"
#line 192 "smarty_internal_templateparser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2252 "smarty_internal_templateparser.php"
#line 208 "smarty_internal_templateparser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->compiler->tag_nocache = true;
        $this->is_xml = false;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", true));
        $this->template->has_nocache_code = $save;
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2271 "smarty_internal_templateparser.php"
#line 227 "smarty_internal_templateparser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    }
#line 2295 "smarty_internal_templateparser.php"
#line 251 "smarty_internal_templateparser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    }
#line 2316 "smarty_internal_templateparser.php"
#line 271 "smarty_internal_templateparser.y"
    function yy_r12(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    }
    }
#line 2325 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r13(){
    $this->compiler->tag_nocache = true;
    $this->is_xml = true;
    $save = $this->template->has_nocache_code;
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", true));
    $this->template->has_nocache_code = $save;
    }
#line 2334 "smarty_internal_templateparser.php"
#line 289 "smarty_internal_templateparser.y"
    function yy_r14(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
    } else {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2343 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2348 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r16(){
    $this->_retvalue = '';
    }
#line 2353 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2358 "smarty_internal_templateparser.php"
#line 310 "smarty_internal_templateparser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2363 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r20(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2368 "smarty_internal_templateparser.php"
#line 326 "smarty_internal_templateparser.y"
    function yy_r22(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2373 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r24(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2378 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = '<<?php ?>%';
    }
#line 2383 "smarty_internal_templateparser.php"
#line 342 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = '%<?php ?>>';
    }
#line 2388 "smarty_internal_templateparser.php"
#line 352 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2393 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2398 "smarty_internal_templateparser.php"
#line 360 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2403 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2408 "smarty_internal_templateparser.php"
#line 377 "smarty_internal_templateparser.y"
    function yy_r32(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));
    }
#line 2413 "smarty_internal_templateparser.php"
#line 385 "smarty_internal_templateparser.y"
    function yy_r34(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2418 "smarty_internal_templateparser.php"
#line 389 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }
#line 2423 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2428 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());
    }
#line 2433 "smarty_internal_templateparser.php"
#line 403 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2438 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2444 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r40(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2450 "smarty_internal_templateparser.php"
#line 420 "smarty_internal_templateparser.y"
    function yy_r41(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2456 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2462 "smarty_internal_templateparser.php"
#line 430 "smarty_internal_templateparser.y"
    function yy_r43(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2468 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),1);
    }
#line 2473 "smarty_internal_templateparser.php"
#line 445 "smarty_internal_templateparser.y"
    function yy_r46(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2478 "smarty_internal_templateparser.php"
#line 453 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2483 "smarty_internal_templateparser.php"
#line 457 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2488 "smarty_internal_templateparser.php"
#line 462 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2493 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2498 "smarty_internal_templateparser.php"
#line 471 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2503 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2508 "smarty_internal_templateparser.php"
#line 479 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2513 "smarty_internal_templateparser.php"
#line 484 "smarty_internal_templateparser.y"
    function yy_r55(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2518 "smarty_internal_templateparser.php"
#line 488 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2523 "smarty_internal_templateparser.php"
#line 493 "smarty_internal_templateparser.y"
    function yy_r57(){
    $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    }
#line 2528 "smarty_internal_templateparser.php"
#line 499 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());
    }
#line 2533 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2538 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2543 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2548 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r62(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2554 "smarty_internal_templateparser.php"
#line 526 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2559 "smarty_internal_templateparser.php"
#line 531 "smarty_internal_templateparser.y"
    function yy_r64(){
    $this->_retvalue = array();
    }
#line 2564 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r65(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2577 "smarty_internal_templateparser.php"
#line 548 "smarty_internal_templateparser.y"
    function yy_r66(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2582 "smarty_internal_templateparser.php"
#line 556 "smarty_internal_templateparser.y"
    function yy_r68(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2587 "smarty_internal_templateparser.php"
#line 581 "smarty_internal_templateparser.y"
    function yy_r73(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2593 "smarty_internal_templateparser.php"
#line 586 "smarty_internal_templateparser.y"
    function yy_r74(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2598 "smarty_internal_templateparser.php"
#line 614 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2603 "smarty_internal_templateparser.php"
#line 619 "smarty_internal_templateparser.y"
    function yy_r80(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2608 "smarty_internal_templateparser.php"
#line 638 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2613 "smarty_internal_templateparser.php"
#line 644 "smarty_internal_templateparser.y"
    function yy_r85(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2618 "smarty_internal_templateparser.php"
#line 648 "smarty_internal_templateparser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2623 "smarty_internal_templateparser.php"
#line 652 "smarty_internal_templateparser.y"
    function yy_r87(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2628 "smarty_internal_templateparser.php"
#line 660 "smarty_internal_templateparser.y"
    function yy_r89(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2633 "smarty_internal_templateparser.php"
#line 664 "smarty_internal_templateparser.y"
    function yy_r90(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2638 "smarty_internal_templateparser.php"
#line 668 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2643 "smarty_internal_templateparser.php"
#line 672 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2648 "smarty_internal_templateparser.php"
#line 676 "smarty_internal_templateparser.y"
    function yy_r93(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2653 "smarty_internal_templateparser.php"
#line 680 "smarty_internal_templateparser.y"
    function yy_r94(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2658 "smarty_internal_templateparser.php"
#line 708 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2665 "smarty_internal_templateparser.php"
#line 717 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2670 "smarty_internal_templateparser.php"
#line 721 "smarty_internal_templateparser.y"
    function yy_r103(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2675 "smarty_internal_templateparser.php"
#line 736 "smarty_internal_templateparser.y"
    function yy_r106(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2680 "smarty_internal_templateparser.php"
#line 757 "smarty_internal_templateparser.y"
    function yy_r111(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2685 "smarty_internal_templateparser.php"
#line 761 "smarty_internal_templateparser.y"
    function yy_r112(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2690 "smarty_internal_templateparser.php"
#line 765 "smarty_internal_templateparser.y"
    function yy_r113(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2695 "smarty_internal_templateparser.php"
#line 770 "smarty_internal_templateparser.y"
    function yy_r114(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2708 "smarty_internal_templateparser.php"
#line 788 "smarty_internal_templateparser.y"
    function yy_r116(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2713 "smarty_internal_templateparser.php"
#line 803 "smarty_internal_templateparser.y"
    function yy_r119(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        }
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2726 "smarty_internal_templateparser.php"
#line 816 "smarty_internal_templateparser.y"
    function yy_r120(){
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2731 "smarty_internal_templateparser.php"
#line 820 "smarty_internal_templateparser.y"
    function yy_r121(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2740 "smarty_internal_templateparser.php"
#line 829 "smarty_internal_templateparser.y"
    function yy_r122(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2747 "smarty_internal_templateparser.php"
#line 844 "smarty_internal_templateparser.y"
    function yy_r124(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2760 "smarty_internal_templateparser.php"
#line 857 "smarty_internal_templateparser.y"
    function yy_r125(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars->'. trim($this->yystack[$this->yyidx + -2]->minor,"'") .'->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2765 "smarty_internal_templateparser.php"
#line 867 "smarty_internal_templateparser.y"
    function yy_r127(){
    $this->_retvalue = '$_smarty_tpl->config_vars->'. $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2770 "smarty_internal_templateparser.php"
#line 871 "smarty_internal_templateparser.y"
    function yy_r128(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
#line 2775 "smarty_internal_templateparser.php"
#line 875 "smarty_internal_templateparser.y"
    function yy_r129(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2780 "smarty_internal_templateparser.php"
#line 888 "smarty_internal_templateparser.y"
    function yy_r131(){
    return;
    }
#line 2785 "smarty_internal_templateparser.php"
#line 894 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2790 "smarty_internal_templateparser.php"
#line 898 "smarty_internal_templateparser.y"
    function yy_r133(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2795 "smarty_internal_templateparser.php"
#line 902 "smarty_internal_templateparser.y"
    function yy_r134(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2800 "smarty_internal_templateparser.php"
#line 906 "smarty_internal_templateparser.y"
    function yy_r135(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2805 "smarty_internal_templateparser.php"
#line 910 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2810 "smarty_internal_templateparser.php"
#line 915 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2815 "smarty_internal_templateparser.php"
#line 919 "smarty_internal_templateparser.y"
    function yy_r138(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2820 "smarty_internal_templateparser.php"
#line 929 "smarty_internal_templateparser.y"
    function yy_r140(){
    $this->_retvalue = '[]';
    }
#line 2825 "smarty_internal_templateparser.php"
#line 942 "smarty_internal_templateparser.y"
    function yy_r142(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2830 "smarty_internal_templateparser.php"
#line 947 "smarty_internal_templateparser.y"
    function yy_r143(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2835 "smarty_internal_templateparser.php"
#line 952 "smarty_internal_templateparser.y"
    function yy_r144(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2840 "smarty_internal_templateparser.php"
#line 959 "smarty_internal_templateparser.y"
    function yy_r145(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2849 "smarty_internal_templateparser.php"
#line 968 "smarty_internal_templateparser.y"
    function yy_r146(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2854 "smarty_internal_templateparser.php"
#line 973 "smarty_internal_templateparser.y"
    function yy_r147(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2859 "smarty_internal_templateparser.php"
#line 978 "smarty_internal_templateparser.y"
    function yy_r148(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2867 "smarty_internal_templateparser.php"
#line 985 "smarty_internal_templateparser.y"
    function yy_r149(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2875 "smarty_internal_templateparser.php"
#line 992 "smarty_internal_templateparser.y"
    function yy_r150(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2883 "smarty_internal_templateparser.php"
#line 999 "smarty_internal_templateparser.y"
    function yy_r151(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2891 "smarty_internal_templateparser.php"
#line 1007 "smarty_internal_templateparser.y"
    function yy_r152(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2896 "smarty_internal_templateparser.php"
#line 1015 "smarty_internal_templateparser.y"
    function yy_r153(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                if (strncasecmp($par,'$_smarty_tpl->config_vars',strlen('$_smarty_tpl->config_vars')) === 0) {
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.preg_replace('/\$_smarty_tpl->config_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getConfigVariable(\'\1\', null, true, false)',$par).';?>';
                    $isset_par = '$_tmp'.$this->prefix_number;
                } else {
                    $isset_par = preg_replace('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getVariable(\'\1\', null, true, false)',$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2932 "smarty_internal_templateparser.php"
#line 1053 "smarty_internal_templateparser.y"
    function yy_r154(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2940 "smarty_internal_templateparser.php"
#line 1060 "smarty_internal_templateparser.y"
    function yy_r155(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2950 "smarty_internal_templateparser.php"
#line 1071 "smarty_internal_templateparser.y"
    function yy_r156(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2955 "smarty_internal_templateparser.php"
#line 1088 "smarty_internal_templateparser.y"
    function yy_r159(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2960 "smarty_internal_templateparser.php"
#line 1092 "smarty_internal_templateparser.y"
    function yy_r160(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2965 "smarty_internal_templateparser.php"
#line 1100 "smarty_internal_templateparser.y"
    function yy_r162(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2970 "smarty_internal_templateparser.php"
#line 1108 "smarty_internal_templateparser.y"
    function yy_r163(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2975 "smarty_internal_templateparser.php"
#line 1142 "smarty_internal_templateparser.y"
    function yy_r170(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2980 "smarty_internal_templateparser.php"
#line 1147 "smarty_internal_templateparser.y"
    function yy_r171(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2985 "smarty_internal_templateparser.php"
#line 1153 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = '==';
    }
#line 2990 "smarty_internal_templateparser.php"
#line 1157 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->_retvalue = '!=';
    }
#line 2995 "smarty_internal_templateparser.php"
#line 1161 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = '>';
    }
#line 3000 "smarty_internal_templateparser.php"
#line 1165 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = '<';
    }
#line 3005 "smarty_internal_templateparser.php"
#line 1169 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = '>=';
    }
#line 3010 "smarty_internal_templateparser.php"
#line 1173 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = '<=';
    }
#line 3015 "smarty_internal_templateparser.php"
#line 1177 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = '===';
    }
#line 3020 "smarty_internal_templateparser.php"
#line 1181 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '!==';
    }
#line 3025 "smarty_internal_templateparser.php"
#line 1185 "smarty_internal_templateparser.y"
    function yy_r180(){
    $this->_retvalue = '%';
    }
#line 3030 "smarty_internal_templateparser.php"
#line 1189 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = '&&';
    }
#line 3035 "smarty_internal_templateparser.php"
#line 1193 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = '||';
    }
#line 3040 "smarty_internal_templateparser.php"
#line 1197 "smarty_internal_templateparser.y"
    function yy_r183(){
    $this->_retvalue = ' XOR ';
    }
#line 3045 "smarty_internal_templateparser.php"
#line 1204 "smarty_internal_templateparser.y"
    function yy_r184(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 3050 "smarty_internal_templateparser.php"
#line 1212 "smarty_internal_templateparser.y"
    function yy_r186(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3055 "smarty_internal_templateparser.php"
#line 1220 "smarty_internal_templateparser.y"
    function yy_r188(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3060 "smarty_internal_templateparser.php"
#line 1224 "smarty_internal_templateparser.y"
    function yy_r189(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3065 "smarty_internal_templateparser.php"
#line 1236 "smarty_internal_templateparser.y"
    function yy_r191(){
    $this->_retvalue = "''";
    }
#line 3070 "smarty_internal_templateparser.php"
#line 1240 "smarty_internal_templateparser.y"
    function yy_r192(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 3075 "smarty_internal_templateparser.php"
#line 1245 "smarty_internal_templateparser.y"
    function yy_r193(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 3081 "smarty_internal_templateparser.php"
#line 1250 "smarty_internal_templateparser.y"
    function yy_r194(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3086 "smarty_internal_templateparser.php"
#line 1254 "smarty_internal_templateparser.y"
    function yy_r195(){
    $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);
    }
#line 3091 "smarty_internal_templateparser.php"
#line 1262 "smarty_internal_templateparser.y"
    function yy_r197(){
    $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars->'. substr($this->yystack[$this->yyidx + 0]->minor,1) .'->value');
    }
#line 3096 "smarty_internal_templateparser.php"
#line 1270 "smarty_internal_templateparser.y"
    function yy_r199(){
    $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 3101 "smarty_internal_templateparser.php"
#line 1274 "smarty_internal_templateparser.y"
    function yy_r200(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3106 "smarty_internal_templateparser.php"
#line 1278 "smarty_internal_templateparser.y"
    function yy_r201(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3111 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 89 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 3174 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 81 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3192 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>