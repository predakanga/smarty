<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

	  const Err1 = "Security error: Call to private object member not allowed";
	  const Err2 = "Security error: Call to dynamic object member not allowed";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
				$this->compiler->prefix_code = array();
				$this->prefix_number = 0;
				$this->block_nesting_level = 0;
				if ($this->security = isset($this->smarty->security_policy)) {
              $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
              $this->php_handling = $this->smarty->php_handling;
        }
				$this->is_xml = false;
				$this->asp_tags = (ini_get('asp_tags') != '0');
				$this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') == 0) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'');
			 		$this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache;
			 		$this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 }
//			 return '(isset($_smarty_tpl->tpl_vars['. $variable .'])?$_smarty_tpl->tpl_vars['. $variable .']->value:$_smarty_tpl->getVariable('. $variable .')->value)';
			 return '$_smarty_tpl->tpl_vars['. $variable .']->value';
    }
#line 130 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_SPACE                          = 22;
    const TP_LDELFOR                        = 23;
    const TP_SEMICOLON                      = 24;
    const TP_INCDEC                         = 25;
    const TP_TO                             = 26;
    const TP_STEP                           = 27;
    const TP_LDELFOREACH                    = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_SMARTYBLOCKCHILD               = 31;
    const TP_LDELSLASH                      = 32;
    const TP_INTEGER                        = 33;
    const TP_COMMA                          = 34;
    const TP_OPENP                          = 35;
    const TP_CLOSEP                         = 36;
    const TP_MATH                           = 37;
    const TP_UNIMATH                        = 38;
    const TP_ANDSYM                         = 39;
    const TP_ISIN                           = 40;
    const TP_ISDIVBY                        = 41;
    const TP_ISNOTDIVBY                     = 42;
    const TP_ISEVEN                         = 43;
    const TP_ISNOTEVEN                      = 44;
    const TP_ISEVENBY                       = 45;
    const TP_ISNOTEVENBY                    = 46;
    const TP_ISODD                          = 47;
    const TP_ISNOTODD                       = 48;
    const TP_ISODDBY                        = 49;
    const TP_ISNOTODDBY                     = 50;
    const TP_INSTANCEOF                     = 51;
    const TP_QMARK                          = 52;
    const TP_NOT                            = 53;
    const TP_TYPECAST                       = 54;
    const TP_HEX                            = 55;
    const TP_DOT                            = 56;
    const TP_SINGLEQUOTESTRING              = 57;
    const TP_DOUBLECOLON                    = 58;
    const TP_AT                             = 59;
    const TP_HATCH                          = 60;
    const TP_OPENB                          = 61;
    const TP_CLOSEB                         = 62;
    const TP_EQUALS                         = 63;
    const TP_NOTEQUALS                      = 64;
    const TP_GREATERTHAN                    = 65;
    const TP_LESSTHAN                       = 66;
    const TP_GREATEREQUAL                   = 67;
    const TP_LESSEQUAL                      = 68;
    const TP_IDENTITY                       = 69;
    const TP_NONEIDENTITY                   = 70;
    const TP_MOD                            = 71;
    const TP_LAND                           = 72;
    const TP_LOR                            = 73;
    const TP_LXOR                           = 74;
    const TP_QUOTE                          = 75;
    const TP_BACKTICK                       = 76;
    const TP_DOLLARID                       = 77;
    const YY_NO_ACTION = 592;
    const YY_ACCEPT_ACTION = 591;
    const YY_ERROR_ACTION = 590;

    const YY_SZ_ACTTAB = 2580;
static public $yy_action = array(
 /*     0 */   213,  201,  194,   23,  269,  264,  276,  286,  260,  266,
 /*    10 */   388,  356,  358,  193,   17,   16,   42,   31,  376,  141,
 /*    20 */   164,   43,  227,    7,  244,  210,   29,  203,  203,  152,
 /*    30 */     8,   21,  319,  229,  318,   27,   51,   49,   48,   44,
 /*    40 */    15,   10,  304,  311,    9,   11,  312,  313,   12,   13,
 /*    50 */   377,  366,  310,  314,  367,  230,  234,  215,  193,  380,
 /*    60 */   384,   24,  309,  305,  306,  307,  308,  339,  340,  372,
 /*    70 */   373,  374,  375,  371,  213,  238,  368,  201,  177,  213,
 /*    80 */   145,  213,  387,  249,   64,  120,  228,  324,   43,  365,
 /*    90 */    17,   16,  331,  370,  458,   43,  298,  294,  240,  369,
 /*   100 */   458,  200,  349,  203,  591,   97,  283,  273,  263,  213,
 /*   110 */    51,   49,   48,   44,   15,   10,  304,  311,    9,   11,
 /*   120 */   312,  313,   12,   13,  383,  262,  273,  263,   21,   46,
 /*   130 */    43,  318,   32,  335,  357,  161,  309,  305,  306,  307,
 /*   140 */   308,  339,  340,  372,  373,  374,  375,  371,  213,  168,
 /*   150 */   368,  201,  185,  213,  145,    5,  270,  249,   56,  120,
 /*   160 */   134,  324,   43,  330,   17,   16,  331,  370,  458,   43,
 /*   170 */   298,  294,  239,  369,  458,  203,  251,  203,  128,  198,
 /*   180 */   213,  226,  255,  105,   51,   49,   48,   44,   15,   10,
 /*   190 */   304,  311,    9,   11,  312,  313,   12,   13,   21,  196,
 /*   200 */   349,  318,   14,   46,  315,  130,  199,  349,  275,   34,
 /*   210 */   309,  305,  306,  307,  308,  339,  340,  372,  373,  374,
 /*   220 */   375,  371,  213,  144,  368,  101,  186,  213,  145,   38,
 /*   230 */    46,  249,   77,  125,    5,  324,  167,  379,   17,   16,
 /*   240 */   331,  370,  455,   43,  298,  294,   21,  369,  455,  318,
 /*   250 */    27,  203,  335,    5,  216,  231,  236,  128,   51,   49,
 /*   260 */    48,   44,   15,   10,  304,  311,    9,   11,  312,  313,
 /*   270 */    12,   13,  108,  175,  189,   21,  128,   46,  318,   32,
 /*   280 */   197,  279,  324,  324,  309,  305,  306,  307,  308,  339,
 /*   290 */   340,  372,  373,  374,  375,  371,  213,  368,  203,  204,
 /*   300 */   242,  145,  156,  353,  249,   77,  125,  337,  213,  456,
 /*   310 */   213,  205,   25,  331,  370,  456,  369,  298,  294,  238,
 /*   320 */   369,  107,  172,  452,  322,  289,    6,  218,    5,   43,
 /*   330 */    43,  324,   51,   49,   48,   44,   15,   10,  304,  311,
 /*   340 */     9,   11,  312,  313,   12,   13,  213,  203,  245,  176,
 /*   350 */     3,  128,   22,  213,  143,  301,  213,  213,  309,  305,
 /*   360 */   306,  307,  308,  339,  340,  372,  373,  374,  375,  371,
 /*   370 */   302,  303,  320,   32,   43,  277,  246,   43,  359,  137,
 /*   380 */   250,  253,   51,   49,   48,   44,   15,   10,  304,  311,
 /*   390 */     9,   11,  312,  313,   12,   13,  213,  103,  191,  285,
 /*   400 */   187,  385,  317,  291,  110,   43,   46,  324,  309,  305,
 /*   410 */   306,  307,  308,  339,  340,  372,  373,  374,  375,  371,
 /*   420 */   109,  181,  102,  203,   21,   21,   21,  318,  318,  220,
 /*   430 */   324,   43,   51,   49,   48,   44,   15,   10,  304,  311,
 /*   440 */     9,   11,  312,  313,   12,   13,  203,  178,  382,  317,
 /*   450 */   334,  287,   28,  161,   43,   37,  161,   43,  309,  305,
 /*   460 */   306,  307,  308,  339,  340,  372,  373,  374,  375,  371,
 /*   470 */   213,  352,  368,  201,  190,   21,  145,  329,  318,  249,
 /*   480 */    77,  125,   43,  324,  157,  288,   17,   16,  331,  370,
 /*   490 */   241,  126,  298,  294,  126,  369,  163,  323,  325,  203,
 /*   500 */   180,  213,  223,   43,   43,  324,   51,   49,   48,   44,
 /*   510 */    15,   10,  304,  311,    9,   11,  312,  313,   12,   13,
 /*   520 */   213,  204,  166,  386,  121,   21,  203,   21,  235,   43,
 /*   530 */   233,  324,  309,  305,  306,  307,  308,  339,  340,  372,
 /*   540 */   373,  374,  375,  371,  361,  182,  321,  204,  136,  230,
 /*   550 */   228,   46,   43,  204,  324,  282,   51,   49,   48,   44,
 /*   560 */    15,   10,  304,  311,    9,   11,  312,  313,   12,   13,
 /*   570 */   204,  213,  378,  274,   21,  230,  265,  248,   43,   43,
 /*   580 */   111,  363,  309,  305,  306,  307,  308,  339,  340,  372,
 /*   590 */   373,  374,  375,  371,  192,  346,  184,  171,  296,  336,
 /*   600 */   257,   43,  140,  129,   43,  324,  324,   51,   49,   48,
 /*   610 */    44,   15,   10,  304,  311,    9,   11,  312,  313,   12,
 /*   620 */    13,  204,  169,  364,  272,   40,  348,  132,  133,   43,
 /*   630 */    43,  324,   43,  309,  305,  306,  307,  308,  339,  340,
 /*   640 */   372,  373,  374,  375,  371,  213,  326,  368,  201,  183,
 /*   650 */   224,  145,   43,  258,  249,   75,  125,  213,  324,  453,
 /*   660 */   165,   17,   16,  331,  370,  453,   43,  298,  294,  324,
 /*   670 */   369,  342,  327,  347,  203,   41,  335,   43,    5,   43,
 /*   680 */   317,   51,   49,   48,   44,   15,   10,  304,  311,    9,
 /*   690 */    11,  312,  313,   12,   13,  213,  261,  350,  333,  271,
 /*   700 */   268,  128,   43,   43,  237,   43,  299,  309,  305,  306,
 /*   710 */   307,  308,  339,  340,  372,  373,  374,  375,  371,  195,
 /*   720 */   295,   36,  316,  247,   28,    2,   96,  157,  202,  139,
 /*   730 */   135,   51,   49,   48,   44,   15,   10,  304,  311,    9,
 /*   740 */    11,  312,  313,   12,   13,  213,   26,  240,  332,    7,
 /*   750 */   237,   30,  290,  173,  267,  297,  104,  309,  305,  306,
 /*   760 */   307,  308,  339,  340,  372,  373,  374,  375,  371,  300,
 /*   770 */   170,  345,   35,  315,   45,  328,  112,   43,  243,  324,
 /*   780 */   317,   51,   49,   48,   44,   15,   10,  304,  311,    9,
 /*   790 */    11,  312,  313,   12,   13,  213,  259,   20,  323,  323,
 /*   800 */   323,  323,  323,  323,  323,  323,  114,  309,  305,  306,
 /*   810 */   307,  308,  339,  340,  372,  373,  374,  375,  371,  300,
 /*   820 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*   830 */   323,   51,   49,   48,   44,   15,   10,  304,  311,    9,
 /*   840 */    11,  312,  313,   12,   13,  323,  323,  323,  323,  323,
 /*   850 */   323,  323,  361,  323,  323,  323,  256,  309,  305,  306,
 /*   860 */   307,  308,  339,  340,  372,  373,  374,  375,  371,  213,
 /*   870 */   323,  323,   21,  323,  368,  318,  158,  213,  153,   43,
 /*   880 */   362,  249,  161,  125,  206,   33,  100,  252,  317,  344,
 /*   890 */   123,  227,  381,  244,  298,  294,  323,  369,  152,  300,
 /*   900 */   323,  319,  229,  300,  213,   51,   49,   48,   44,   15,
 /*   910 */    10,  304,  311,    9,   11,  312,  313,   12,   13,  452,
 /*   920 */   126,  323,  323,  323,  323,   43,  323,   46,  335,  213,
 /*   930 */   323,  309,  305,  306,  307,  308,  339,  340,  372,  373,
 /*   940 */   374,  375,  371,  213,  284,  341,   39,  360,  368,  323,
 /*   950 */   323,  323,  151,  188,  362,  249,  323,  125,  280,   33,
 /*   960 */   161,  323,  324,  323,   99,  227,  323,  244,  298,  294,
 /*   970 */   323,  369,  152,  317,  323,  319,  229,  300,  323,   51,
 /*   980 */    49,   48,   44,   15,   10,  304,  311,    9,   11,  312,
 /*   990 */   313,   12,   13,  213,  323,  323,  210,  323,  323,  323,
 /*  1000 */   323,    8,  323,  323,  118,  309,  305,  306,  307,  308,
 /*  1010 */   339,  340,  372,  373,  374,  375,  371,  300,  323,  343,
 /*  1020 */    39,  360,  323,  323,  323,  323,  323,  323,  323,   51,
 /*  1030 */    49,   48,   44,   15,   10,  304,  311,    9,   11,  312,
 /*  1040 */   313,   12,   13,  323,  323,  323,  323,  323,  323,  323,
 /*  1050 */   323,  323,  323,  323,  323,  309,  305,  306,  307,  308,
 /*  1060 */   339,  340,  372,  373,  374,  375,  371,   51,   49,   48,
 /*  1070 */    44,   15,   10,  304,  311,    9,   11,  312,  313,   12,
 /*  1080 */    13,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1090 */   323,  323,  160,  309,  305,  306,  307,  308,  339,  340,
 /*  1100 */   372,  373,  374,  375,  371,  300,  323,  115,  323,   42,
 /*  1110 */   174,  142,  211,  323,  368,  227,  323,  244,  155,  324,
 /*  1120 */   300,  249,  152,  125,  162,  319,  229,  232,  106,   19,
 /*  1130 */   317,  293,   47,  324,  298,  294,  323,  369,  323,  323,
 /*  1140 */   323,  300,  323,  323,  317,  323,  323,   52,   50,  338,
 /*  1150 */   254,  292,  131,  368,  102,    1,  281,  150,  323,  323,
 /*  1160 */   249,  323,  125,  323,   42,  300,  142,  221,  323,   98,
 /*  1170 */   227,  323,  244,  298,  294,  323,  369,  152,  323,  323,
 /*  1180 */   319,  229,  232,  323,   19,  323,  323,   47,  323,  323,
 /*  1190 */   323,  323,  368,  323,  323,  323,  148,  323,  323,  249,
 /*  1200 */   323,  125,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1210 */     1,  323,  298,  294,  323,  369,  323,  323,  323,   42,
 /*  1220 */   323,  137,  221,  323,   98,  227,  323,  244,  323,  213,
 /*  1230 */   323,  323,  152,  323,  323,  319,  229,  232,  323,   18,
 /*  1240 */   323,  323,   47,  323,  351,  323,  323,  368,  225,  323,
 /*  1250 */    43,  154,  323,  323,  249,  323,  125,   52,   50,  338,
 /*  1260 */   254,  292,  323,    5,  102,    1,  323,  298,  294,  323,
 /*  1270 */   369,  323,  323,  323,   42,  323,  142,  212,  323,   98,
 /*  1280 */   227,  323,  244,  323,  323,  323,  128,  152,  323,  323,
 /*  1290 */   319,  229,  232,  323,   19,  323,  323,   47,  323,  323,
 /*  1300 */   323,  323,  368,  323,  323,  323,  147,  323,  323,  249,
 /*  1310 */   323,  125,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1320 */     1,  323,  298,  294,  323,  369,  323,  323,  323,   42,
 /*  1330 */   323,  127,   92,  323,   98,  227,  323,  244,  323,  323,
 /*  1340 */   323,  323,  152,  323,  323,  319,  229,  232,  323,   19,
 /*  1350 */   323,  323,   47,  323,  323,  323,  323,  368,  323,  323,
 /*  1360 */   323,  149,  323,  323,  249,  323,  125,   52,   50,  338,
 /*  1370 */   254,  292,  323,  323,  102,    1,  323,  298,  294,  323,
 /*  1380 */   369,  323,  323,  323,   42,  323,  142,  208,  323,   98,
 /*  1390 */   227,  323,  244,  323,  323,  323,  323,  152,  323,  323,
 /*  1400 */   319,  229,  222,  323,   19,  323,  323,   47,  323,  323,
 /*  1410 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1420 */   323,  323,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1430 */     1,  323,  323,  323,  323,  323,  323,  323,  323,   42,
 /*  1440 */   323,  138,  221,  323,   98,  227,  323,  244,  323,  323,
 /*  1450 */   323,  323,  152,  323,  323,  319,  229,  232,  323,   19,
 /*  1460 */   323,  323,   47,  323,  323,  323,  323,  323,  323,  323,
 /*  1470 */   323,  323,  323,  323,  323,  323,  323,   52,   50,  338,
 /*  1480 */   254,  292,  323,  323,  102,    1,  323,  323,  323,  323,
 /*  1490 */   323,  323,  323,  323,   42,  323,  142,  207,  323,   98,
 /*  1500 */   227,  323,  244,  323,  323,  323,  323,  152,  323,  323,
 /*  1510 */   319,  229,  232,  323,   19,  323,  323,   47,  323,  323,
 /*  1520 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1530 */   323,  323,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1540 */     1,  323,  323,  323,  323,  323,  323,  323,  323,   42,
 /*  1550 */   323,  146,  221,  323,   98,  227,  323,  244,  323,  323,
 /*  1560 */   323,  323,  152,  323,  323,  319,  229,  232,  323,    4,
 /*  1570 */   323,  323,   47,  323,  323,  323,  323,  323,  323,  323,
 /*  1580 */   323,  323,  323,  323,  323,  323,  323,   52,   50,  338,
 /*  1590 */   254,  292,  323,  323,  102,    1,  323,  323,  323,  323,
 /*  1600 */   323,  323,  323,  323,   42,  323,  142,  209,  323,   98,
 /*  1610 */   227,  323,  244,  323,  323,  323,  323,  152,  323,  323,
 /*  1620 */   319,  229,  232,  323,   19,  323,  323,   47,  323,  323,
 /*  1630 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1640 */   323,  323,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1650 */     1,  323,  323,  323,  323,  323,  323,  323,  323,   42,
 /*  1660 */   323,  137,  221,  323,   98,  227,  323,  244,  323,  323,
 /*  1670 */   323,  323,  152,  323,  323,  319,  229,  232,  323,   18,
 /*  1680 */   323,  323,   47,  323,  323,  323,  323,  323,  323,  323,
 /*  1690 */   323,  323,  201,  179,  323,  323,  323,   52,   50,  338,
 /*  1700 */   254,  292,  324,  323,  102,   17,   16,  323,  323,  323,
 /*  1710 */   323,  323,  323,  323,   42,  323,  137,  217,  203,   98,
 /*  1720 */   227,  323,  244,  323,  323,  323,  323,  152,  323,  323,
 /*  1730 */   319,  229,  232,  323,   18,  323,  323,   47,  323,  323,
 /*  1740 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1750 */   323,  323,   52,   50,  338,  254,  292,  323,  323,  102,
 /*  1760 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  501,
 /*  1770 */   323,  323,  323,  323,   98,  501,  323,  501,  323,  501,
 /*  1780 */   501,  323,  501,  323,  323,  323,  323,  501,    5,  501,
 /*  1790 */   323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
 /*  1800 */   323,  323,  323,  323,  501,  368,  323,  323,  323,  124,
 /*  1810 */   323,  128,  249,   74,  125,  501,  323,  323,  323,  323,
 /*  1820 */   323,  331,  370,  323,  323,  298,  294,  323,  369,  501,
 /*  1830 */   323,  323,  323,  323,  323,  323,  323,  368,  323,  219,
 /*  1840 */   355,  124,  323,  323,  249,   74,  125,  323,  323,  323,
 /*  1850 */   323,  323,  323,  331,  370,  323,  323,  298,  294,  323,
 /*  1860 */   369,  323,  368,  323,  323,  323,  145,  323,  323,  249,
 /*  1870 */    64,  125,  354,  323,  323,  323,  323,  323,  331,  370,
 /*  1880 */   323,  323,  298,  294,  323,  369,  323,  368,  323,  323,
 /*  1890 */   323,  145,  323,  323,  249,   63,  125,  323,  323,  323,
 /*  1900 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  1910 */   369,  323,  249,   71,  125,  323,  323,  323,  323,  323,
 /*  1920 */   323,  331,  370,  368,  323,  298,  294,  113,  369,  323,
 /*  1930 */   249,   70,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  1940 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   67,
 /*  1950 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  1960 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  145,
 /*  1970 */   323,  323,  249,   65,  125,  323,  323,  323,  323,  323,
 /*  1980 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  1990 */   323,  145,  323,  323,  249,   62,  125,  323,  323,  323,
 /*  2000 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  2010 */   369,  323,  249,   82,  125,  323,  323,  323,  323,  323,
 /*  2020 */   323,  331,  370,  368,  323,  298,  294,  145,  369,  323,
 /*  2030 */   249,   81,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  2040 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   83,
 /*  2050 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  2060 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  145,
 /*  2070 */   323,  323,  249,   87,  125,  323,  323,  323,  323,  323,
 /*  2080 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  2090 */   323,  145,  323,  323,  249,   60,  125,  323,  323,  323,
 /*  2100 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  2110 */   369,  323,  249,   84,  125,  323,  323,  323,  323,  323,
 /*  2120 */   323,  331,  370,  368,  323,  298,  294,  145,  369,  323,
 /*  2130 */   249,   73,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  2140 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   88,
 /*  2150 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  2160 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  145,
 /*  2170 */   323,  323,  249,   80,  125,  323,  323,  323,  323,  323,
 /*  2180 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  2190 */   323,  145,  323,  323,  249,   85,  125,  323,  323,  323,
 /*  2200 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  116,
 /*  2210 */   369,  323,  249,   79,  125,  323,  323,  323,  323,  323,
 /*  2220 */   323,  331,  370,  368,  323,  298,  294,  145,  369,  323,
 /*  2230 */   249,   76,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  2240 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   59,
 /*  2250 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  2260 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  122,
 /*  2270 */   323,  323,  249,   54,  125,  323,  323,  323,  323,  323,
 /*  2280 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  2290 */   323,  145,  323,  323,  214,   66,  125,  323,  323,  323,
 /*  2300 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  2310 */   369,  323,  249,   69,  125,  323,  323,  323,  323,  323,
 /*  2320 */   323,  331,  370,  368,  323,  298,  294,   95,  369,  323,
 /*  2330 */    94,   58,  119,  323,  323,  323,  323,  323,  323,  331,
 /*  2340 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   90,
 /*  2350 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  2360 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  145,
 /*  2370 */   323,  323,  249,   68,  125,  323,  323,  323,  323,  323,
 /*  2380 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  2390 */   323,   95,  323,  323,   93,   53,  119,  323,  323,  323,
 /*  2400 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  2410 */   369,  323,  249,   72,  125,  323,  323,  323,  323,  323,
 /*  2420 */   323,  331,  370,  368,  323,  298,  294,  145,  369,  323,
 /*  2430 */   249,   86,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  2440 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   91,
 /*  2450 */   125,  323,  323,  323,  323,  323,  323,  331,  370,  323,
 /*  2460 */   323,  298,  294,  323,  369,  368,  323,  323,  323,  117,
 /*  2470 */   323,  323,  249,   89,  125,  323,  323,  323,  323,  323,
 /*  2480 */   323,  331,  370,  323,  323,  298,  294,  368,  369,  323,
 /*  2490 */   323,  145,  323,  323,  249,   57,  125,  323,  323,  323,
 /*  2500 */   323,  323,  323,  331,  370,  368,  323,  298,  294,  145,
 /*  2510 */   369,  323,  249,   61,  125,  323,  323,  323,  323,  323,
 /*  2520 */   323,  331,  370,  368,  323,  298,  294,  145,  369,  323,
 /*  2530 */   249,   55,  125,  323,  323,  323,  323,  323,  323,  331,
 /*  2540 */   370,  368,  323,  298,  294,  145,  369,  323,  249,   78,
 /*  2550 */   125,  323,  323,  323,  323,  323,  368,  331,  370,  323,
 /*  2560 */   159,  298,  294,  249,  369,  125,  323,  323,  323,  323,
 /*  2570 */   323,  323,  323,  278,  323,  323,  298,  294,  323,  369,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   87,   87,   15,    3,    4,    5,    6,    7,    8,
 /*    10 */     9,   10,   11,   12,  100,  101,   15,   15,  110,   17,
 /*    20 */    18,   22,   21,   35,   23,   56,   27,  113,  113,   28,
 /*    30 */    61,   15,   31,   32,   18,   19,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */     4,    5,    6,    7,    8,   91,   92,   93,   12,   13,
 /*    60 */    14,   19,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,    1,   59,   82,   87,   88,    1,
 /*    80 */    86,    1,   16,   89,   90,   91,   92,   97,   22,   16,
 /*    90 */   100,  101,   98,   99,   16,   22,  102,  103,   56,  105,
 /*   100 */    22,  109,  110,  113,   79,   80,   81,   82,   83,    1,
 /*   110 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   120 */    47,   48,   49,   50,   16,   81,   82,   83,   15,   51,
 /*   130 */    22,   18,   34,   25,   36,   20,   63,   64,   65,   66,
 /*   140 */    67,   68,   69,   70,   71,   72,   73,   74,    1,   87,
 /*   150 */    82,   87,   88,    1,   86,   35,   16,   89,   90,   91,
 /*   160 */    92,   97,   22,   16,  100,  101,   98,   99,   16,   22,
 /*   170 */   102,  103,   59,  105,   22,  113,   56,  113,   58,  114,
 /*   180 */     1,   29,   62,  106,   37,   38,   39,   40,   41,   42,
 /*   190 */    43,   44,   45,   46,   47,   48,   49,   50,   15,  109,
 /*   200 */   110,   18,   19,   51,  107,   17,  109,  110,   25,   30,
 /*   210 */    63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
 /*   220 */    73,   74,    1,   35,   82,   87,   88,    1,   86,   30,
 /*   230 */    51,   89,   90,   91,   35,   97,  106,   16,  100,  101,
 /*   240 */    98,   99,   16,   22,  102,  103,   15,  105,   22,   18,
 /*   250 */    19,  113,   25,   35,  112,   17,   18,   58,   37,   38,
 /*   260 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   270 */    49,   50,   87,   88,   88,   15,   58,   51,   18,   34,
 /*   280 */   114,   36,   97,   97,   63,   64,   65,   66,   67,   68,
 /*   290 */    69,   70,   71,   72,   73,   74,    1,   82,  113,  113,
 /*   300 */    89,   86,   91,   76,   89,   90,   91,   18,    1,   16,
 /*   310 */     1,   16,   19,   98,   99,   22,  105,  102,  103,   59,
 /*   320 */   105,   87,   88,   16,   16,   16,   35,  112,   35,   22,
 /*   330 */    22,   97,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   340 */    45,   46,   47,   48,   49,   50,    1,  113,   59,  106,
 /*   350 */    34,   58,   15,    1,   17,   18,    1,    1,   63,   64,
 /*   360 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   370 */    33,   16,   16,   34,   22,   36,   20,   22,   62,   17,
 /*   380 */    18,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   390 */    45,   46,   47,   48,   49,   50,    1,   87,   88,   16,
 /*   400 */   106,   83,  108,   85,   22,   22,   51,   97,   63,   64,
 /*   410 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   420 */    87,   88,   60,  113,   15,   15,   15,   18,   18,   18,
 /*   430 */    97,   22,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   440 */    45,   46,   47,   48,   49,   50,  113,  106,   16,  108,
 /*   450 */    33,   16,   19,   20,   22,   19,   20,   22,   63,   64,
 /*   460 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   470 */     1,   76,   82,   87,   88,   15,   86,  104,   18,   89,
 /*   480 */    90,   91,   22,   97,  111,   16,  100,  101,   98,   99,
 /*   490 */    30,   58,  102,  103,   58,  105,   88,   16,   16,  113,
 /*   500 */    87,    1,  112,   22,   22,   97,   37,   38,   39,   40,
 /*   510 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   520 */     1,  113,   88,   16,   18,   15,  113,   15,   18,   22,
 /*   530 */    18,   97,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   540 */    71,   72,   73,   74,   82,   88,   16,  113,   17,   91,
 /*   550 */    92,   51,   22,  113,   97,   36,   37,   38,   39,   40,
 /*   560 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   570 */   113,    1,   16,   16,   15,   91,   92,   18,   22,   22,
 /*   580 */   118,  119,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   590 */    71,   72,   73,   74,   24,   16,   88,   88,   16,   18,
 /*   600 */    60,   22,   17,   17,   22,   97,   97,   37,   38,   39,
 /*   610 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   620 */    50,  113,   88,   16,   16,   52,   16,   18,   17,   22,
 /*   630 */    22,   97,   22,   63,   64,   65,   66,   67,   68,   69,
 /*   640 */    70,   71,   72,   73,   74,    1,   16,   82,   87,   88,
 /*   650 */    18,   86,   22,   60,   89,   90,   91,    1,   97,   16,
 /*   660 */    88,  100,  101,   98,   99,   22,   22,  102,  103,   97,
 /*   670 */   105,   16,   16,   16,  113,    2,   25,   22,   35,   22,
 /*   680 */   108,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   690 */    46,   47,   48,   49,   50,    1,   16,   16,   33,   16,
 /*   700 */    36,   58,   22,   22,    2,   22,   18,   63,   64,   65,
 /*   710 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   24,
 /*   720 */   104,   19,   18,   29,   19,   22,   18,  111,   18,   34,
 /*   730 */    17,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   740 */    46,   47,   48,   49,   50,    1,    2,   56,   18,   35,
 /*   750 */     2,   26,   62,  106,   22,   97,   95,   63,   64,   65,
 /*   760 */    66,   67,   68,   69,   70,   71,   72,   73,   74,  108,
 /*   770 */    88,   13,   94,  107,    2,  115,   84,   22,   94,   97,
 /*   780 */   108,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   790 */    46,   47,   48,   49,   50,    1,  111,   22,  120,  120,
 /*   800 */   120,  120,  120,  120,  120,  120,   95,   63,   64,   65,
 /*   810 */    66,   67,   68,   69,   70,   71,   72,   73,   74,  108,
 /*   820 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*   830 */   120,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   840 */    46,   47,   48,   49,   50,  120,  120,  120,  120,  120,
 /*   850 */   120,  120,   82,  120,  120,  120,   62,   63,   64,   65,
 /*   860 */    66,   67,   68,   69,   70,   71,   72,   73,   74,    1,
 /*   870 */   120,  120,   15,  120,   82,   18,   96,    1,   86,   22,
 /*   880 */    10,   89,   20,   91,   16,   15,   95,   30,  108,  119,
 /*   890 */    95,   21,   16,   23,  102,  103,  120,  105,   28,  108,
 /*   900 */   120,   31,   32,  108,    1,   37,   38,   39,   40,   41,
 /*   910 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   16,
 /*   920 */    58,  120,  120,  120,  120,   22,  120,   51,   25,    1,
 /*   930 */   120,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   940 */    72,   73,   74,    1,   16,   75,   76,   77,   82,  120,
 /*   950 */   120,  120,   86,   88,   10,   89,  120,   91,   16,   15,
 /*   960 */    20,  120,   97,  120,   95,   21,  120,   23,  102,  103,
 /*   970 */   120,  105,   28,  108,  120,   31,   32,  108,  120,   37,
 /*   980 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   990 */    48,   49,   50,    1,  120,  120,   56,  120,  120,  120,
 /*  1000 */   120,   61,  120,  120,   95,   63,   64,   65,   66,   67,
 /*  1010 */    68,   69,   70,   71,   72,   73,   74,  108,  120,   75,
 /*  1020 */    76,   77,  120,  120,  120,  120,  120,  120,  120,   37,
 /*  1030 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*  1040 */    48,   49,   50,  120,  120,  120,  120,  120,  120,  120,
 /*  1050 */   120,  120,  120,  120,  120,   63,   64,   65,   66,   67,
 /*  1060 */    68,   69,   70,   71,   72,   73,   74,   37,   38,   39,
 /*  1070 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  1080 */    50,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1090 */   120,  120,   95,   63,   64,   65,   66,   67,   68,   69,
 /*  1100 */    70,   71,   72,   73,   74,  108,  120,   95,  120,   15,
 /*  1110 */    88,   17,   18,  120,   82,   21,  120,   23,   86,   97,
 /*  1120 */   108,   89,   28,   91,   88,   31,   32,   33,   95,   35,
 /*  1130 */   108,   99,   38,   97,  102,  103,  120,  105,  120,  120,
 /*  1140 */   120,  108,  120,  120,  108,  120,  120,   53,   54,   55,
 /*  1150 */    56,   57,   95,   82,   60,   61,   62,   86,  120,  120,
 /*  1160 */    89,  120,   91,  120,   15,  108,   17,   18,  120,   75,
 /*  1170 */    21,  120,   23,  102,  103,  120,  105,   28,  120,  120,
 /*  1180 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1190 */   120,  120,   82,  120,  120,  120,   86,  120,  120,   89,
 /*  1200 */   120,   91,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1210 */    61,  120,  102,  103,  120,  105,  120,  120,  120,   15,
 /*  1220 */   120,   17,   18,  120,   75,   21,  120,   23,  120,    1,
 /*  1230 */   120,  120,   28,  120,  120,   31,   32,   33,  120,   35,
 /*  1240 */   120,  120,   38,  120,   16,  120,  120,   82,   20,  120,
 /*  1250 */    22,   86,  120,  120,   89,  120,   91,   53,   54,   55,
 /*  1260 */    56,   57,  120,   35,   60,   61,  120,  102,  103,  120,
 /*  1270 */   105,  120,  120,  120,   15,  120,   17,   18,  120,   75,
 /*  1280 */    21,  120,   23,  120,  120,  120,   58,   28,  120,  120,
 /*  1290 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1300 */   120,  120,   82,  120,  120,  120,   86,  120,  120,   89,
 /*  1310 */   120,   91,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1320 */    61,  120,  102,  103,  120,  105,  120,  120,  120,   15,
 /*  1330 */   120,   17,   18,  120,   75,   21,  120,   23,  120,  120,
 /*  1340 */   120,  120,   28,  120,  120,   31,   32,   33,  120,   35,
 /*  1350 */   120,  120,   38,  120,  120,  120,  120,   82,  120,  120,
 /*  1360 */   120,   86,  120,  120,   89,  120,   91,   53,   54,   55,
 /*  1370 */    56,   57,  120,  120,   60,   61,  120,  102,  103,  120,
 /*  1380 */   105,  120,  120,  120,   15,  120,   17,   18,  120,   75,
 /*  1390 */    21,  120,   23,  120,  120,  120,  120,   28,  120,  120,
 /*  1400 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1410 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1420 */   120,  120,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1430 */    61,  120,  120,  120,  120,  120,  120,  120,  120,   15,
 /*  1440 */   120,   17,   18,  120,   75,   21,  120,   23,  120,  120,
 /*  1450 */   120,  120,   28,  120,  120,   31,   32,   33,  120,   35,
 /*  1460 */   120,  120,   38,  120,  120,  120,  120,  120,  120,  120,
 /*  1470 */   120,  120,  120,  120,  120,  120,  120,   53,   54,   55,
 /*  1480 */    56,   57,  120,  120,   60,   61,  120,  120,  120,  120,
 /*  1490 */   120,  120,  120,  120,   15,  120,   17,   18,  120,   75,
 /*  1500 */    21,  120,   23,  120,  120,  120,  120,   28,  120,  120,
 /*  1510 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1520 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1530 */   120,  120,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1540 */    61,  120,  120,  120,  120,  120,  120,  120,  120,   15,
 /*  1550 */   120,   17,   18,  120,   75,   21,  120,   23,  120,  120,
 /*  1560 */   120,  120,   28,  120,  120,   31,   32,   33,  120,   35,
 /*  1570 */   120,  120,   38,  120,  120,  120,  120,  120,  120,  120,
 /*  1580 */   120,  120,  120,  120,  120,  120,  120,   53,   54,   55,
 /*  1590 */    56,   57,  120,  120,   60,   61,  120,  120,  120,  120,
 /*  1600 */   120,  120,  120,  120,   15,  120,   17,   18,  120,   75,
 /*  1610 */    21,  120,   23,  120,  120,  120,  120,   28,  120,  120,
 /*  1620 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1630 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1640 */   120,  120,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1650 */    61,  120,  120,  120,  120,  120,  120,  120,  120,   15,
 /*  1660 */   120,   17,   18,  120,   75,   21,  120,   23,  120,  120,
 /*  1670 */   120,  120,   28,  120,  120,   31,   32,   33,  120,   35,
 /*  1680 */   120,  120,   38,  120,  120,  120,  120,  120,  120,  120,
 /*  1690 */   120,  120,   87,   88,  120,  120,  120,   53,   54,   55,
 /*  1700 */    56,   57,   97,  120,   60,  100,  101,  120,  120,  120,
 /*  1710 */   120,  120,  120,  120,   15,  120,   17,   18,  113,   75,
 /*  1720 */    21,  120,   23,  120,  120,  120,  120,   28,  120,  120,
 /*  1730 */    31,   32,   33,  120,   35,  120,  120,   38,  120,  120,
 /*  1740 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1750 */   120,  120,   53,   54,   55,   56,   57,  120,  120,   60,
 /*  1760 */   120,  120,  120,  120,  120,  120,  120,  120,  120,   16,
 /*  1770 */   120,  120,  120,  120,   75,   22,  120,   24,  120,   26,
 /*  1780 */    27,  120,   29,  120,  120,  120,  120,   34,   35,   36,
 /*  1790 */   120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
 /*  1800 */   120,  120,  120,  120,   51,   82,  120,  120,  120,   86,
 /*  1810 */   120,   58,   89,   90,   91,   62,  120,  120,  120,  120,
 /*  1820 */   120,   98,   99,  120,  120,  102,  103,  120,  105,   76,
 /*  1830 */   120,  120,  120,  120,  120,  120,  120,   82,  120,  116,
 /*  1840 */   117,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  1850 */   120,  120,  120,   98,   99,  120,  120,  102,  103,  120,
 /*  1860 */   105,  120,   82,  120,  120,  120,   86,  120,  120,   89,
 /*  1870 */    90,   91,  117,  120,  120,  120,  120,  120,   98,   99,
 /*  1880 */   120,  120,  102,  103,  120,  105,  120,   82,  120,  120,
 /*  1890 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  1900 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  1910 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  1920 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  1930 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  1940 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  1950 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  1960 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  1970 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  1980 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  1990 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2000 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2010 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2020 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2030 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2040 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2050 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  2060 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  2070 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2080 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  2090 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2100 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2110 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2120 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2130 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2140 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2150 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  2160 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  2170 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2180 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  2190 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2200 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2210 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2220 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2230 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2240 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2250 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  2260 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  2270 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2280 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  2290 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2300 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2310 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2320 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2330 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2340 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2350 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  2360 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  2370 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2380 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  2390 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2400 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2410 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2420 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2430 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2440 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2450 */    91,  120,  120,  120,  120,  120,  120,   98,   99,  120,
 /*  2460 */   120,  102,  103,  120,  105,   82,  120,  120,  120,   86,
 /*  2470 */   120,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2480 */   120,   98,   99,  120,  120,  102,  103,   82,  105,  120,
 /*  2490 */   120,   86,  120,  120,   89,   90,   91,  120,  120,  120,
 /*  2500 */   120,  120,  120,   98,   99,   82,  120,  102,  103,   86,
 /*  2510 */   105,  120,   89,   90,   91,  120,  120,  120,  120,  120,
 /*  2520 */   120,   98,   99,   82,  120,  102,  103,   86,  105,  120,
 /*  2530 */    89,   90,   91,  120,  120,  120,  120,  120,  120,   98,
 /*  2540 */    99,   82,  120,  102,  103,   86,  105,  120,   89,   90,
 /*  2550 */    91,  120,  120,  120,  120,  120,   82,   98,   99,  120,
 /*  2560 */    86,  102,  103,   89,  105,   91,  120,  120,  120,  120,
 /*  2570 */   120,  120,  120,   99,  120,  120,  102,  103,  120,  105,
);
    const YY_SHIFT_USE_DFLT = -32;
    const YY_SHIFT_MAX = 254;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1259, 1534, 1259, 1534, 1149, 1149, 1149, 1094, 1149,
 /*    10 */  1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
 /*    20 */  1369, 1149, 1149, 1149, 1149, 1589, 1149, 1149, 1149, 1149,
 /*    30 */  1149, 1149, 1149, 1314, 1149, 1149, 1149, 1149, 1149, 1149,
 /*    40 */  1424, 1479, 1314, 1369, 1204, 1204, 1699, 1644, 1644, 1644,
 /*    50 */  1644, 1644, 1644,  221,   73,   -1,  147,  644,  644,  644,
 /*    60 */   794,  868,  942,  519,  345,  295,  395,  469,  570,  744,
 /*    70 */   694,  992,  992,  992,  992,  992,  992,  992,  992,  992,
 /*    80 */   992,  992,  992,  992,  992,  992,  992,  992,  992,  992,
 /*    90 */  1030, 1030, 1228,  108,  903,  355,  352,    1,  870,  857,
 /*   100 */   460,  307,  362,  307,  409,  940,  409,  352,  352,  352,
 /*   110 */   188,  944,   46,  152,  183,   16,  226,   78,  231,  436,
 /*   120 */   433,  356,  876,  260,  179,  862,  238,  411,  238,  410,
 /*   130 */   410,  410,  928,  410,  683,  410,  410,  410,  559,  188,
 /*   140 */   410,  512,  510,  410,  188,  500,  510,   80,   80,   80,
 /*   150 */    80,   80,  775,   80,   80,   80,  115,  115,  755,  -32,
 /*   160 */   113,    2,  383,  432,  -12,  435,  507,  -31,  309,  481,
 /*   170 */   140,  482,   66,  -31,  530,  681,  -31,  630,  -31,  610,
 /*   180 */   656,  657,  655,  608,  579,  557,  556,  -31,  308,  582,
 /*   190 */   607,  680,  732,  758,   80,  732,  115,  772,  772,  115,
 /*   200 */   115,   80,  291,  -32,  -32,  -32,  -32, 1753,  293,  643,
 /*   210 */   337,  120,  199,  289,  227,  695,   98,  218,  245,  316,
 /*   220 */   702,  218,   42,  339,  690,  708,  713,  703,  664,  506,
 /*   230 */   705,  710,  691,  291,  725,  748,  714,  730,  704,  688,
 /*   240 */   417,  585,  540,  531,  382,  581,  609,  586,  673,  651,
 /*   250 */   593,  632,  611,  573,  665,
);
    const YY_REDUCE_USE_DFLT = -93;
    const YY_REDUCE_MAX = 206;
    static public $yy_reduce_ofst = array(
 /*     0 */    25, 1723,   68, 1755,   -6,  215,  142,  390, 2005, 1983,
 /*    10 */  1959, 2023, 2041, 2083, 2059, 1941, 1923, 1823, 1805, 1780,
 /*    20 */  1841, 1859, 1905, 1883, 2105, 2123, 2359, 2341, 2323, 2405,
 /*    30 */  2441, 2423, 2459, 2305,  565, 2283, 2183, 2159, 2141, 2205,
 /*    40 */  2223, 2259, 2241, 2383, 1032, 2474, 1110, 1165,  792, 1071,
 /*    50 */   866, 1220, 1275,  138,  386,   64,  -10,  561,  138, 1605,
 /*    60 */   -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
 /*    70 */   -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
 /*    80 */   -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
 /*    90 */   -86,  -86,  185,  234,  234,  310,  333,   44,  462,  572,
 /*   100 */   865,  408,  211,  186, 1036,   97, 1022,  434,  457,  508,
 /*   110 */   -36,  770,  318,  -85,  780,  294,  -85,  -85,  294,   90,
 /*   120 */    90,  413,  -85,  294,  -85,   90,  616,  795,  373,  869,
 /*   130 */   909,  341,   62,  661,  682,  791,  711,  795,  795,  484,
 /*   140 */  1033, 1057,  795,  997,  458,  -85, 1012,  -85,  -85,  -85,
 /*   150 */   -85,  -85,  509,  -85,  -85,  -85,   90,   -8,  534,  -85,
 /*   160 */   672,  685,  658,  658,  647,  658,  658,  666,  440,  658,
 /*   170 */   658,  658,  658,  666,  658,  658,  666,  658,  666,  658,
 /*   180 */   440,  658,  658,  658,  658,  658,  658,  666,  658,  658,
 /*   190 */   658,  658,  684,  692,  440,  678,  -92,  660,  660,  -92,
 /*   200 */   -92,  440,   77,  166,   65,  130,  243,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, 32, ),
        /* 1 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 2 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 3 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 4 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 5 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 6 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 7 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 8 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 62, 75, ),
        /* 9 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 10 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 11 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 12 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 13 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 14 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 15 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 16 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 17 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 18 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 19 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 20 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 21 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 22 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 23 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 24 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 25 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 26 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 27 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 28 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 29 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 30 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 31 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 32 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 33 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 34 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 35 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 36 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 37 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 38 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 39 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 40 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 41 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 42 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 43 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 44 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 45 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 61, 75, ),
        /* 46 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 47 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 48 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 49 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 50 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 51 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 52 */ array(15, 17, 18, 21, 23, 28, 31, 32, 33, 35, 38, 53, 54, 55, 56, 57, 60, 75, ),
        /* 53 */ array(1, 16, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 54 */ array(1, 16, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 55 */ array(1, 22, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 56 */ array(1, 16, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 57 */ array(1, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 58 */ array(1, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 59 */ array(1, 22, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 60 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 61 */ array(1, 16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 62 */ array(1, 16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 63 */ array(1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 64 */ array(1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 65 */ array(1, 16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 66 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, ),
        /* 67 */ array(1, 16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 68 */ array(1, 24, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 69 */ array(1, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 70 */ array(1, 29, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 71 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 72 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 73 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 74 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 75 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 76 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 77 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 78 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 79 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 80 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 81 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 82 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 83 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 84 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 85 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 86 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 87 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 88 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 89 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 90 */ array(37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 91 */ array(37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ),
        /* 92 */ array(1, 16, 20, 22, 35, 58, ),
        /* 93 */ array(1, 16, 22, 25, ),
        /* 94 */ array(1, 16, 22, 25, ),
        /* 95 */ array(1, 16, 22, 51, ),
        /* 96 */ array(1, 22, ),
        /* 97 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 23, 28, 31, 32, ),
        /* 98 */ array(10, 15, 21, 23, 28, 31, 32, 75, 76, 77, ),
        /* 99 */ array(15, 18, 22, 30, ),
        /* 100 */ array(15, 18, 22, 30, ),
        /* 101 */ array(1, 16, 22, ),
        /* 102 */ array(17, 18, 60, ),
        /* 103 */ array(1, 16, 22, ),
        /* 104 */ array(15, 18, 22, ),
        /* 105 */ array(20, 56, 61, ),
        /* 106 */ array(15, 18, 22, ),
        /* 107 */ array(1, 22, ),
        /* 108 */ array(1, 22, ),
        /* 109 */ array(1, 22, ),
        /* 110 */ array(17, 35, ),
        /* 111 */ array(10, 15, 21, 23, 28, 31, 32, 75, 76, 77, ),
        /* 112 */ array(4, 5, 6, 7, 8, 12, 13, 14, ),
        /* 113 */ array(1, 16, 22, 29, 51, ),
        /* 114 */ array(15, 18, 19, 25, ),
        /* 115 */ array(15, 18, 19, 59, ),
        /* 116 */ array(1, 16, 22, 51, ),
        /* 117 */ array(1, 16, 22, 51, ),
        /* 118 */ array(15, 18, 19, ),
        /* 119 */ array(19, 20, 58, ),
        /* 120 */ array(19, 20, 58, ),
        /* 121 */ array(1, 16, 20, ),
        /* 122 */ array(1, 16, 51, ),
        /* 123 */ array(15, 18, 59, ),
        /* 124 */ array(1, 30, 51, ),
        /* 125 */ array(20, 58, ),
        /* 126 */ array(17, 18, ),
        /* 127 */ array(15, 18, ),
        /* 128 */ array(17, 18, ),
        /* 129 */ array(15, 18, ),
        /* 130 */ array(15, 18, ),
        /* 131 */ array(15, 18, ),
        /* 132 */ array(1, 16, ),
        /* 133 */ array(15, 18, ),
        /* 134 */ array(16, 22, ),
        /* 135 */ array(15, 18, ),
        /* 136 */ array(15, 18, ),
        /* 137 */ array(15, 18, ),
        /* 138 */ array(15, 18, ),
        /* 139 */ array(17, 35, ),
        /* 140 */ array(15, 18, ),
        /* 141 */ array(15, 18, ),
        /* 142 */ array(15, 18, ),
        /* 143 */ array(15, 18, ),
        /* 144 */ array(17, 35, ),
        /* 145 */ array(1, 51, ),
        /* 146 */ array(15, 18, ),
        /* 147 */ array(1, ),
        /* 148 */ array(1, ),
        /* 149 */ array(1, ),
        /* 150 */ array(1, ),
        /* 151 */ array(1, ),
        /* 152 */ array(22, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(20, ),
        /* 157 */ array(20, ),
        /* 158 */ array(22, ),
        /* 159 */ array(),
        /* 160 */ array(15, 18, 59, ),
        /* 161 */ array(15, 17, 18, ),
        /* 162 */ array(16, 22, ),
        /* 163 */ array(16, 22, ),
        /* 164 */ array(15, 35, ),
        /* 165 */ array(16, 22, ),
        /* 166 */ array(16, 22, ),
        /* 167 */ array(56, 61, ),
        /* 168 */ array(1, 16, ),
        /* 169 */ array(16, 22, ),
        /* 170 */ array(16, 22, ),
        /* 171 */ array(16, 22, ),
        /* 172 */ array(16, 22, ),
        /* 173 */ array(56, 61, ),
        /* 174 */ array(16, 22, ),
        /* 175 */ array(16, 22, ),
        /* 176 */ array(56, 61, ),
        /* 177 */ array(16, 22, ),
        /* 178 */ array(56, 61, ),
        /* 179 */ array(16, 22, ),
        /* 180 */ array(1, 16, ),
        /* 181 */ array(16, 22, ),
        /* 182 */ array(16, 22, ),
        /* 183 */ array(16, 22, ),
        /* 184 */ array(16, 22, ),
        /* 185 */ array(16, 22, ),
        /* 186 */ array(16, 22, ),
        /* 187 */ array(56, 61, ),
        /* 188 */ array(16, 22, ),
        /* 189 */ array(16, 22, ),
        /* 190 */ array(16, 22, ),
        /* 191 */ array(16, 22, ),
        /* 192 */ array(22, ),
        /* 193 */ array(13, ),
        /* 194 */ array(1, ),
        /* 195 */ array(22, ),
        /* 196 */ array(20, ),
        /* 197 */ array(2, ),
        /* 198 */ array(2, ),
        /* 199 */ array(20, ),
        /* 200 */ array(20, ),
        /* 201 */ array(1, ),
        /* 202 */ array(35, ),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(),
        /* 207 */ array(16, 22, 24, 26, 27, 29, 34, 35, 36, 51, 58, 62, 76, ),
        /* 208 */ array(16, 19, 22, 35, 58, ),
        /* 209 */ array(16, 22, 35, 58, ),
        /* 210 */ array(15, 17, 18, 33, ),
        /* 211 */ array(35, 56, 58, 62, ),
        /* 212 */ array(30, 35, 58, ),
        /* 213 */ array(18, 59, ),
        /* 214 */ array(25, 76, ),
        /* 215 */ array(24, 34, ),
        /* 216 */ array(34, 36, ),
        /* 217 */ array(35, 58, ),
        /* 218 */ array(34, 36, ),
        /* 219 */ array(34, 62, ),
        /* 220 */ array(2, 19, ),
        /* 221 */ array(35, 58, ),
        /* 222 */ array(19, 56, ),
        /* 223 */ array(34, 36, ),
        /* 224 */ array(62, ),
        /* 225 */ array(18, ),
        /* 226 */ array(17, ),
        /* 227 */ array(22, ),
        /* 228 */ array(36, ),
        /* 229 */ array(18, ),
        /* 230 */ array(19, ),
        /* 231 */ array(18, ),
        /* 232 */ array(56, ),
        /* 233 */ array(35, ),
        /* 234 */ array(26, ),
        /* 235 */ array(2, ),
        /* 236 */ array(35, ),
        /* 237 */ array(18, ),
        /* 238 */ array(18, ),
        /* 239 */ array(18, ),
        /* 240 */ array(33, ),
        /* 241 */ array(17, ),
        /* 242 */ array(60, ),
        /* 243 */ array(17, ),
        /* 244 */ array(22, ),
        /* 245 */ array(18, ),
        /* 246 */ array(18, ),
        /* 247 */ array(17, ),
        /* 248 */ array(2, ),
        /* 249 */ array(25, ),
        /* 250 */ array(60, ),
        /* 251 */ array(18, ),
        /* 252 */ array(17, ),
        /* 253 */ array(52, ),
        /* 254 */ array(33, ),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
);
    static public $yy_default = array(
 /*     0 */   392,  573,  590,  590,  590,  544,  544,  544,  590,  590,
 /*    10 */   590,  590,  590,  590,  590,  590,  590,  590,  590,  590,
 /*    20 */   590,  590,  590,  590,  590,  590,  590,  590,  590,  590,
 /*    30 */   590,  590,  590,  590,  590,  590,  590,  590,  590,  590,
 /*    40 */   590,  590,  590,  590,  590,  590,  590,  590,  590,  590,
 /*    50 */   590,  590,  590,  590,  590,  452,  590,  452,  452,  452,
 /*    60 */   590,  590,  590,  590,  590,  590,  590,  590,  590,  590,
 /*    70 */   457,  473,  463,  485,  576,  574,  575,  543,  542,  454,
 /*    80 */   486,  477,  476,  478,  482,  459,  462,  481,  436,  457,
 /*    90 */   489,  490,  501,  491,  491,  465,  452,  389,  590,  452,
 /*   100 */   452,  472,  590,  509,  452,  556,  452,  452,  452,  452,
 /*   110 */   590,  590,  590,  465,  590,  517,  465,  465,  517,  510,
 /*   120 */   510,  590,  465,  517,  465,  510,  590,  590,  590,  590,
 /*   130 */   590,  517,  590,  590,  590,  590,  590,  590,  590,  590,
 /*   140 */   590,  590,  590,  590,  590,  465,  590,  468,  488,  493,
 /*   150 */   469,  494,  452,  470,  492,  475,  510,  553,  452,  551,
 /*   160 */   518,  590,  590,  590,  517,  590,  590,  537,  590,  590,
 /*   170 */   590,  590,  590,  534,  590,  590,  536,  590,  535,  590,
 /*   180 */   590,  590,  590,  590,  590,  590,  590,  515,  590,  590,
 /*   190 */   590,  590,  589,  407,  509,  589,  531,  546,  545,  557,
 /*   200 */   554,  472,  517,  550,  550,  517,  517,  467,  501,  501,
 /*   210 */   590,  501,  501,  590,  491,  590,  590,  487,  590,  590,
 /*   220 */   529,  501,  497,  590,  590,  590,  590,  590,  590,  590,
 /*   230 */   590,  590,  497,  529,  460,  529,  555,  590,  590,  590,
 /*   240 */   499,  590,  590,  590,  590,  590,  590,  590,  529,  491,
 /*   250 */   590,  590,  590,  503,  590,  523,  525,  514,  513,  538,
 /*   260 */   399,  417,  391,  395,  396,  461,  400,  588,  464,  394,
 /*   270 */   434,  433,  439,  393,  438,  437,  397,  540,  552,  539,
 /*   280 */   522,  526,  503,  390,  448,  444,  398,  443,  530,  449,
 /*   290 */   524,  406,  504,  474,  505,  507,  416,  450,  502,  519,
 /*   300 */   527,  520,  521,  415,  479,  559,  560,  561,  562,  558,
 /*   310 */   413,  480,  483,  484,  414,  516,  511,  528,  529,  445,
 /*   320 */   446,  442,  441,  435,  451,  440,  432,  447,  549,  506,
 /*   330 */   431,  466,  467,  500,  498,  495,  547,  548,  496,  563,
 /*   340 */   564,  577,  429,  578,  579,  404,  430,  428,  425,  532,
 /*   350 */   426,  427,  582,  581,  572,  571,  402,  541,  403,  570,
 /*   360 */   583,  586,  587,  580,  424,  423,  412,  411,  508,  512,
 /*   370 */   471,  569,  565,  566,  567,  568,  533,  410,  421,  585,
 /*   380 */   405,  422,  420,  584,  409,  408,  418,  419,  401,
);
    const YYNOCODE = 121;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 389;
    const YYNRULE = 201;
    const YYERRORSYMBOL = 78;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'COMMENT',
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',
  'PTR',           'LDELIF',        'SPACE',         'LDELFOR',
  'SEMICOLON',     'INCDEC',        'TO',            'STEP',
  'LDELFOREACH',   'AS',            'APTR',          'SMARTYBLOCKCHILD',
  'LDELSLASH',     'INTEGER',       'COMMA',         'OPENP',
  'CLOSEP',        'MATH',          'UNIMATH',       'ANDSYM',
  'ISIN',          'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',
  'QMARK',         'NOT',           'TYPECAST',      'HEX',
  'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',
  'HATCH',         'OPENB',         'CLOSEB',        'EQUALS',
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',
  'LAND',          'LOR',           'LXOR',          'QUOTE',
  'BACKTICK',      'DOLLARID',      'error',         'start',
  'template',      'template_element',  'smartytag',     'literal',
  'literal_elements',  'literal_element',  'value',         'modifierlist',
  'attributes',    'variable',      'expr',          'varindexed',
  'statement',     'statements',    'optspace',      'varvar',
  'foraction',     'attribute',     'ternary',       'array',
  'ifcond',        'lop',           'function',      'doublequoted_with_quotes',
  'static_class_access',  'object',        'arrayindex',    'indexdef',
  'varvarele',     'objectchain',   'objectelement',  'method',
  'params',        'modifier',      'modparameters',  'modparameter',
  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "literal_element ::= ASPSTARTTAG",
 /*  25 */ "literal_element ::= ASPENDTAG",
 /*  26 */ "smartytag ::= LDEL value RDEL",
 /*  27 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  28 */ "smartytag ::= LDEL value attributes RDEL",
 /*  29 */ "smartytag ::= LDEL variable modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  32 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF SPACE expr RDEL",
 /*  43 */ "smartytag ::= LDELIF SPACE expr attributes RDEL",
 /*  44 */ "smartytag ::= LDELIF SPACE statement RDEL",
 /*  45 */ "smartytag ::= LDELIF SPACE statement attributes RDEL",
 /*  46 */ "smartytag ::= LDELFOR SPACE statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes RDEL",
 /*  47 */ "foraction ::= EQUAL expr",
 /*  48 */ "foraction ::= INCDEC",
 /*  49 */ "smartytag ::= LDELFOR SPACE statement TO expr attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOR SPACE statement TO expr STEP expr attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  55 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  56 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  57 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  61 */ "attributes ::= attributes attribute",
 /*  62 */ "attributes ::= attribute",
 /*  63 */ "attributes ::=",
 /*  64 */ "attribute ::= SPACE ID EQUAL ID",
 /*  65 */ "attribute ::= SPACE ID EQUAL expr",
 /*  66 */ "attribute ::= SPACE ID EQUAL value",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE expr",
 /*  69 */ "attribute ::= SPACE value",
 /*  70 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  71 */ "statements ::= statement",
 /*  72 */ "statements ::= statements COMMA statement",
 /*  73 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  74 */ "statement ::= varindexed EQUAL expr",
 /*  75 */ "statement ::= OPENP statement CLOSEP",
 /*  76 */ "expr ::= value",
 /*  77 */ "expr ::= ternary",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "expr ::= expr MATH value",
 /*  80 */ "expr ::= expr UNIMATH value",
 /*  81 */ "expr ::= expr ANDSYM value",
 /*  82 */ "expr ::= array",
 /*  83 */ "expr ::= expr modifierlist",
 /*  84 */ "expr ::= expr ifcond expr",
 /*  85 */ "expr ::= expr ISIN array",
 /*  86 */ "expr ::= expr ISIN value",
 /*  87 */ "expr ::= expr lop expr",
 /*  88 */ "expr ::= expr ISDIVBY expr",
 /*  89 */ "expr ::= expr ISNOTDIVBY expr",
 /*  90 */ "expr ::= expr ISEVEN",
 /*  91 */ "expr ::= expr ISNOTEVEN",
 /*  92 */ "expr ::= expr ISEVENBY expr",
 /*  93 */ "expr ::= expr ISNOTEVENBY expr",
 /*  94 */ "expr ::= expr ISODD",
 /*  95 */ "expr ::= expr ISNOTODD",
 /*  96 */ "expr ::= expr ISODDBY expr",
 /*  97 */ "expr ::= expr ISNOTODDBY expr",
 /*  98 */ "expr ::= value INSTANCEOF ID",
 /*  99 */ "expr ::= value INSTANCEOF value",
 /* 100 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 101 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 102 */ "value ::= variable",
 /* 103 */ "value ::= UNIMATH value",
 /* 104 */ "value ::= NOT value",
 /* 105 */ "value ::= TYPECAST value",
 /* 106 */ "value ::= variable INCDEC",
 /* 107 */ "value ::= HEX",
 /* 108 */ "value ::= INTEGER",
 /* 109 */ "value ::= INTEGER DOT INTEGER",
 /* 110 */ "value ::= INTEGER DOT",
 /* 111 */ "value ::= DOT INTEGER",
 /* 112 */ "value ::= ID",
 /* 113 */ "value ::= function",
 /* 114 */ "value ::= OPENP expr CLOSEP",
 /* 115 */ "value ::= SINGLEQUOTESTRING",
 /* 116 */ "value ::= doublequoted_with_quotes",
 /* 117 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 118 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 119 */ "value ::= smartytag",
 /* 120 */ "value ::= value modifierlist",
 /* 121 */ "variable ::= varindexed",
 /* 122 */ "variable ::= DOLLAR varvar AT ID",
 /* 123 */ "variable ::= object",
 /* 124 */ "variable ::= HATCH ID HATCH",
 /* 125 */ "variable ::= HATCH variable HATCH",
 /* 126 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 127 */ "arrayindex ::= arrayindex indexdef",
 /* 128 */ "arrayindex ::=",
 /* 129 */ "indexdef ::= DOT DOLLAR varvar",
 /* 130 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 131 */ "indexdef ::= DOT ID",
 /* 132 */ "indexdef ::= DOT INTEGER",
 /* 133 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 134 */ "indexdef ::= OPENB ID CLOSEB",
 /* 135 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 136 */ "indexdef ::= OPENB expr CLOSEB",
 /* 137 */ "indexdef ::= OPENB CLOSEB",
 /* 138 */ "varvar ::= varvarele",
 /* 139 */ "varvar ::= varvar varvarele",
 /* 140 */ "varvarele ::= ID",
 /* 141 */ "varvarele ::= LDEL expr RDEL",
 /* 142 */ "object ::= varindexed objectchain",
 /* 143 */ "objectchain ::= objectelement",
 /* 144 */ "objectchain ::= objectchain objectelement",
 /* 145 */ "objectelement ::= PTR ID arrayindex",
 /* 146 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 147 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 148 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 149 */ "objectelement ::= PTR method",
 /* 150 */ "function ::= ID OPENP params CLOSEP",
 /* 151 */ "method ::= ID OPENP params CLOSEP",
 /* 152 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 153 */ "params ::= params COMMA expr",
 /* 154 */ "params ::= expr",
 /* 155 */ "params ::=",
 /* 156 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 157 */ "modifierlist ::= modifier modparameters",
 /* 158 */ "modifier ::= VERT AT ID",
 /* 159 */ "modifier ::= VERT ID",
 /* 160 */ "modparameters ::= modparameters modparameter",
 /* 161 */ "modparameters ::=",
 /* 162 */ "modparameter ::= COLON value",
 /* 163 */ "modparameter ::= COLON array",
 /* 164 */ "static_class_access ::= method",
 /* 165 */ "static_class_access ::= method objectchain",
 /* 166 */ "static_class_access ::= ID",
 /* 167 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 168 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 169 */ "ifcond ::= EQUALS",
 /* 170 */ "ifcond ::= NOTEQUALS",
 /* 171 */ "ifcond ::= GREATERTHAN",
 /* 172 */ "ifcond ::= LESSTHAN",
 /* 173 */ "ifcond ::= GREATEREQUAL",
 /* 174 */ "ifcond ::= LESSEQUAL",
 /* 175 */ "ifcond ::= IDENTITY",
 /* 176 */ "ifcond ::= NONEIDENTITY",
 /* 177 */ "ifcond ::= MOD",
 /* 178 */ "lop ::= LAND",
 /* 179 */ "lop ::= LOR",
 /* 180 */ "lop ::= LXOR",
 /* 181 */ "array ::= OPENB arrayelements CLOSEB",
 /* 182 */ "arrayelements ::= arrayelement",
 /* 183 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 184 */ "arrayelements ::=",
 /* 185 */ "arrayelement ::= value APTR expr",
 /* 186 */ "arrayelement ::= ID APTR expr",
 /* 187 */ "arrayelement ::= expr",
 /* 188 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 189 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 190 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 191 */ "doublequoted ::= doublequotedcontent",
 /* 192 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 193 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 194 */ "doublequotedcontent ::= DOLLARID",
 /* 195 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 196 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 197 */ "doublequotedcontent ::= smartytag",
 /* 198 */ "doublequotedcontent ::= OTHER",
 /* 199 */ "optspace ::= SPACE",
 /* 200 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 82 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1750 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 79, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 0 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 82, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 13 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 9 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 8 ),
  array( 'lhs' => 82, 'rhs' => 11 ),
  array( 'lhs' => 82, 'rhs' => 8 ),
  array( 'lhs' => 82, 'rhs' => 11 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 4 ),
  array( 'lhs' => 82, 'rhs' => 5 ),
  array( 'lhs' => 82, 'rhs' => 6 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 0 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 4 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 98, 'rhs' => 8 ),
  array( 'lhs' => 98, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 5 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 4 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 6 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 0 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 0 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 0 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        16 => 16,
        17 => 17,
        103 => 17,
        105 => 17,
        106 => 17,
        165 => 17,
        19 => 19,
        20 => 19,
        76 => 19,
        77 => 19,
        102 => 19,
        107 => 19,
        108 => 19,
        113 => 19,
        115 => 19,
        116 => 19,
        123 => 19,
        164 => 19,
        182 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        29 => 27,
        28 => 28,
        30 => 28,
        32 => 28,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        44 => 42,
        43 => 43,
        45 => 43,
        46 => 46,
        47 => 47,
        48 => 48,
        68 => 48,
        69 => 48,
        166 => 48,
        187 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        71 => 62,
        154 => 62,
        158 => 62,
        63 => 63,
        155 => 63,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 67,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 73,
        75 => 75,
        78 => 78,
        79 => 79,
        80 => 79,
        81 => 79,
        82 => 82,
        138 => 82,
        199 => 82,
        83 => 83,
        120 => 83,
        84 => 84,
        87 => 84,
        98 => 84,
        85 => 85,
        86 => 86,
        88 => 88,
        89 => 89,
        90 => 90,
        95 => 90,
        91 => 91,
        94 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        99 => 99,
        100 => 100,
        101 => 101,
        104 => 104,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        117 => 117,
        118 => 118,
        119 => 119,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        136 => 133,
        134 => 134,
        135 => 135,
        137 => 137,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        156 => 156,
        157 => 157,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 162,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        188 => 188,
        189 => 189,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 192,
        195 => 192,
        194 => 194,
        196 => 196,
        197 => 197,
        198 => 198,
        200 => 200,
    );
#line 93 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->root_buffer->to_smarty_php();     }
#line 2178 "smarty_internal_templateparser.php"
#line 99 "smarty_internal_templateparser.y"
    function yy_r1(){ $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);     }
#line 2181 "smarty_internal_templateparser.php"
#line 111 "smarty_internal_templateparser.y"
    function yy_r4(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
                                         } else {
                                           $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
                                         }
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 2193 "smarty_internal_templateparser.php"
#line 123 "smarty_internal_templateparser.y"
    function yy_r5(){ $this->_retvalue = new _smarty_tag($this, '');    }
#line 2196 "smarty_internal_templateparser.php"
#line 126 "smarty_internal_templateparser.y"
    function yy_r6(){ $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2199 "smarty_internal_templateparser.php"
#line 129 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2212 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true;
                                       $this->is_xml = true;
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
                                      }elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2228 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r9(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }
                                        }
#line 2249 "smarty_internal_templateparser.php"
#line 178 "smarty_internal_templateparser.y"
    function yy_r10(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
					                             $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }
                                        }
#line 2270 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r11(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                     }
                                        }
#line 2278 "smarty_internal_templateparser.php"
#line 206 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));    }
#line 2281 "smarty_internal_templateparser.php"
#line 209 "smarty_internal_templateparser.y"
    function yy_r13(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
                                     }
                                        }
#line 2289 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r14(){
                                     $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
                                       }
#line 2294 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = '';     }
#line 2297 "smarty_internal_templateparser.php"
#line 221 "smarty_internal_templateparser.y"
    function yy_r16(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2300 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2303 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2306 "smarty_internal_templateparser.php"
#line 228 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2309 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2312 "smarty_internal_templateparser.php"
#line 231 "smarty_internal_templateparser.y"
    function yy_r24(){ $this->_retvalue = '<<?php ?>%';     }
#line 2315 "smarty_internal_templateparser.php"
#line 232 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = '%<?php ?>>';     }
#line 2318 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r26(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2321 "smarty_internal_templateparser.php"
#line 241 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2324 "smarty_internal_templateparser.php"
#line 242 "smarty_internal_templateparser.y"
    function yy_r28(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2327 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r31(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2330 "smarty_internal_templateparser.php"
#line 253 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));    }
#line 2333 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2336 "smarty_internal_templateparser.php"
#line 256 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));    }
#line 2339 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2342 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r38(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2345 "smarty_internal_templateparser.php"
#line 261 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2348 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r40(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                     }
#line 2353 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r41(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                                }
#line 2358 "smarty_internal_templateparser.php"
#line 271 "smarty_internal_templateparser.y"
    function yy_r42(){ $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2361 "smarty_internal_templateparser.php"
#line 272 "smarty_internal_templateparser.y"
    function yy_r43(){ $tag = trim(substr($this->yystack[$this->yyidx + -4]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2364 "smarty_internal_templateparser.php"
#line 276 "smarty_internal_templateparser.y"
    function yy_r46(){
                                                             $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),1);    }
#line 2368 "smarty_internal_templateparser.php"
#line 279 "smarty_internal_templateparser.y"
    function yy_r47(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2371 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2374 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);    }
#line 2377 "smarty_internal_templateparser.php"
#line 282 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);    }
#line 2380 "smarty_internal_templateparser.php"
#line 284 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2383 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r52(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));    }
#line 2387 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r53(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));    }
#line 2391 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r54(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));    }
#line 2395 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r55(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));    }
#line 2399 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r56(){ $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);    }
#line 2402 "smarty_internal_templateparser.php"
#line 300 "smarty_internal_templateparser.y"
    function yy_r57(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2405 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r58(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
                                                                                          }
#line 2409 "smarty_internal_templateparser.php"
#line 305 "smarty_internal_templateparser.y"
    function yy_r59(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2412 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r60(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2415 "smarty_internal_templateparser.php"
#line 312 "smarty_internal_templateparser.y"
    function yy_r61(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2418 "smarty_internal_templateparser.php"
#line 314 "smarty_internal_templateparser.y"
    function yy_r62(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2421 "smarty_internal_templateparser.php"
#line 316 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = array();    }
#line 2424 "smarty_internal_templateparser.php"
#line 319 "smarty_internal_templateparser.y"
    function yy_r64(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2434 "smarty_internal_templateparser.php"
#line 327 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2437 "smarty_internal_templateparser.php"
#line 329 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";    }
#line 2440 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r70(){$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2443 "smarty_internal_templateparser.php"
#line 339 "smarty_internal_templateparser.y"
    function yy_r72(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2446 "smarty_internal_templateparser.php"
#line 341 "smarty_internal_templateparser.y"
    function yy_r73(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2449 "smarty_internal_templateparser.php"
#line 343 "smarty_internal_templateparser.y"
    function yy_r75(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;    }
#line 2452 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r78(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2455 "smarty_internal_templateparser.php"
#line 356 "smarty_internal_templateparser.y"
    function yy_r79(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2458 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r82(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2461 "smarty_internal_templateparser.php"
#line 365 "smarty_internal_templateparser.y"
    function yy_r83(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));     }
#line 2464 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2467 "smarty_internal_templateparser.php"
#line 370 "smarty_internal_templateparser.y"
    function yy_r85(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2470 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r86(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2473 "smarty_internal_templateparser.php"
#line 373 "smarty_internal_templateparser.y"
    function yy_r88(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2476 "smarty_internal_templateparser.php"
#line 374 "smarty_internal_templateparser.y"
    function yy_r89(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2479 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r90(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2482 "smarty_internal_templateparser.php"
#line 376 "smarty_internal_templateparser.y"
    function yy_r91(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2485 "smarty_internal_templateparser.php"
#line 377 "smarty_internal_templateparser.y"
    function yy_r92(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2488 "smarty_internal_templateparser.php"
#line 378 "smarty_internal_templateparser.y"
    function yy_r93(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2491 "smarty_internal_templateparser.php"
#line 384 "smarty_internal_templateparser.y"
    function yy_r99(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2494 "smarty_internal_templateparser.php"
#line 390 "smarty_internal_templateparser.y"
    function yy_r100(){ $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2497 "smarty_internal_templateparser.php"
#line 391 "smarty_internal_templateparser.y"
    function yy_r101(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2500 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r104(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2503 "smarty_internal_templateparser.php"
#line 404 "smarty_internal_templateparser.y"
    function yy_r109(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2506 "smarty_internal_templateparser.php"
#line 405 "smarty_internal_templateparser.y"
    function yy_r110(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';     }
#line 2509 "smarty_internal_templateparser.php"
#line 406 "smarty_internal_templateparser.y"
    function yy_r111(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2512 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r112(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2522 "smarty_internal_templateparser.php"
#line 419 "smarty_internal_templateparser.y"
    function yy_r114(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2525 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r117(){if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
                      																				   if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                                                                  $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
                      																				   } else {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
                                                                 }
                                                                } else {
                                                                 $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
                                                                }
                                                                   }
#line 2537 "smarty_internal_templateparser.php"
#line 435 "smarty_internal_templateparser.y"
    function yy_r118(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;}    }
#line 2541 "smarty_internal_templateparser.php"
#line 438 "smarty_internal_templateparser.y"
    function yy_r119(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2544 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r121(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
																				$smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
																				$this->_retvalue = $smarty_var;
                                      } else {
                                      	// used for array reset,next,prev,end,current
                                      	$this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
                                      	$this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                      }
                                        }
#line 2556 "smarty_internal_templateparser.php"
#line 459 "smarty_internal_templateparser.y"
    function yy_r122(){$this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2559 "smarty_internal_templateparser.php"
#line 463 "smarty_internal_templateparser.y"
    function yy_r124(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2562 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r125(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2565 "smarty_internal_templateparser.php"
#line 467 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2568 "smarty_internal_templateparser.php"
#line 473 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2571 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r128(){return;    }
#line 2574 "smarty_internal_templateparser.php"
#line 479 "smarty_internal_templateparser.y"
    function yy_r129(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';    }
#line 2577 "smarty_internal_templateparser.php"
#line 480 "smarty_internal_templateparser.y"
    function yy_r130(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';    }
#line 2580 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2583 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2586 "smarty_internal_templateparser.php"
#line 483 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2589 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2592 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2595 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r137(){$this->_retvalue = '[]';    }
#line 2598 "smarty_internal_templateparser.php"
#line 498 "smarty_internal_templateparser.y"
    function yy_r139(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2601 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r140(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2604 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r141(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2607 "smarty_internal_templateparser.php"
#line 507 "smarty_internal_templateparser.y"
    function yy_r142(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;}    }
#line 2611 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r143(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2614 "smarty_internal_templateparser.php"
#line 512 "smarty_internal_templateparser.y"
    function yy_r144(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2617 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r145(){if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
                                                      $this->compiler->trigger_template_error (self::Err1);
																									   }
                                                     $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                         }
#line 2624 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r146(){if ($this->security) {
                                                                 $this->compiler->trigger_template_error (self::Err2);
																															 }
                                                               $this->_retvalue = '->{'.$this->compileVariable("'".$this->yystack[$this->yyidx + -1]->minor."'").$this->yystack[$this->yyidx + 0]->minor.'}';
                                                                   }
#line 2631 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r147(){if ($this->security) {
                                                                 $this->compiler->trigger_template_error (self::Err2);
																															   }
                     																						 $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
                     																						    }
#line 2638 "smarty_internal_templateparser.php"
#line 529 "smarty_internal_templateparser.y"
    function yy_r148(){if ($this->security) {
                                                                         $this->compiler->trigger_template_error (self::Err2);
																															         }
                                                                       $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
                                                                          }
#line 2645 "smarty_internal_templateparser.php"
#line 535 "smarty_internal_templateparser.y"
    function yy_r149(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2648 "smarty_internal_templateparser.php"
#line 541 "smarty_internal_templateparser.y"
    function yy_r150(){if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
																					            if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
																					                $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
																					                if ($func_name == 'isset') {
																					                  if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
																					                   $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
																					                  }
																					                  $isset_par=str_replace("')->value","',null,true,false)->value",implode(',',$this->yystack[$this->yyidx + -1]->minor));
																					                  $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
																						              } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
																					                  if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
																					                   $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
																					                  }
																					                  if ($func_name == 'empty') {
																					                  	$this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
																					                  } else {
																					                  	$this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
																					                  }
																					                } else {
																					                  $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
																					                }
																					            } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                     }
                                                        }
#line 2676 "smarty_internal_templateparser.php"
#line 571 "smarty_internal_templateparser.y"
    function yy_r151(){if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
                                                      $this->compiler->trigger_template_error (self::Err1);
																									 }
                                                   $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
                                                      }
#line 2683 "smarty_internal_templateparser.php"
#line 576 "smarty_internal_templateparser.y"
    function yy_r152(){if ($this->security) {
                                                              $this->compiler->trigger_template_error (self::Err2);
																													 }
                                                           $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
                                                              }
#line 2690 "smarty_internal_templateparser.php"
#line 584 "smarty_internal_templateparser.y"
    function yy_r153(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));    }
#line 2693 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r156(){$this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));    }
#line 2696 "smarty_internal_templateparser.php"
#line 594 "smarty_internal_templateparser.y"
    function yy_r157(){$this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));    }
#line 2699 "smarty_internal_templateparser.php"
#line 597 "smarty_internal_templateparser.y"
    function yy_r159(){ $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2702 "smarty_internal_templateparser.php"
#line 602 "smarty_internal_templateparser.y"
    function yy_r160(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2705 "smarty_internal_templateparser.php"
#line 604 "smarty_internal_templateparser.y"
    function yy_r161(){$this->_retvalue = array();    }
#line 2708 "smarty_internal_templateparser.php"
#line 606 "smarty_internal_templateparser.y"
    function yy_r162(){$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2711 "smarty_internal_templateparser.php"
#line 616 "smarty_internal_templateparser.y"
    function yy_r167(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2714 "smarty_internal_templateparser.php"
#line 618 "smarty_internal_templateparser.y"
    function yy_r168(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2717 "smarty_internal_templateparser.php"
#line 627 "smarty_internal_templateparser.y"
    function yy_r169(){$this->_retvalue = '==';    }
#line 2720 "smarty_internal_templateparser.php"
#line 628 "smarty_internal_templateparser.y"
    function yy_r170(){$this->_retvalue = '!=';    }
#line 2723 "smarty_internal_templateparser.php"
#line 629 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '>';    }
#line 2726 "smarty_internal_templateparser.php"
#line 630 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '<';    }
#line 2729 "smarty_internal_templateparser.php"
#line 631 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '>=';    }
#line 2732 "smarty_internal_templateparser.php"
#line 632 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '<=';    }
#line 2735 "smarty_internal_templateparser.php"
#line 633 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '===';    }
#line 2738 "smarty_internal_templateparser.php"
#line 634 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '!==';    }
#line 2741 "smarty_internal_templateparser.php"
#line 635 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '%';    }
#line 2744 "smarty_internal_templateparser.php"
#line 637 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = '&&';    }
#line 2747 "smarty_internal_templateparser.php"
#line 638 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = '||';    }
#line 2750 "smarty_internal_templateparser.php"
#line 639 "smarty_internal_templateparser.y"
    function yy_r180(){$this->_retvalue = ' XOR ';    }
#line 2753 "smarty_internal_templateparser.php"
#line 644 "smarty_internal_templateparser.y"
    function yy_r181(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2756 "smarty_internal_templateparser.php"
#line 646 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2759 "smarty_internal_templateparser.php"
#line 647 "smarty_internal_templateparser.y"
    function yy_r184(){ return;     }
#line 2762 "smarty_internal_templateparser.php"
#line 648 "smarty_internal_templateparser.y"
    function yy_r185(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2765 "smarty_internal_templateparser.php"
#line 649 "smarty_internal_templateparser.y"
    function yy_r186(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2768 "smarty_internal_templateparser.php"
#line 656 "smarty_internal_templateparser.y"
    function yy_r188(){ $this->_retvalue = "''";     }
#line 2771 "smarty_internal_templateparser.php"
#line 657 "smarty_internal_templateparser.y"
    function yy_r189(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2774 "smarty_internal_templateparser.php"
#line 659 "smarty_internal_templateparser.y"
    function yy_r190(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2777 "smarty_internal_templateparser.php"
#line 660 "smarty_internal_templateparser.y"
    function yy_r191(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2780 "smarty_internal_templateparser.php"
#line 662 "smarty_internal_templateparser.y"
    function yy_r192(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2783 "smarty_internal_templateparser.php"
#line 664 "smarty_internal_templateparser.y"
    function yy_r194(){$this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');    }
#line 2786 "smarty_internal_templateparser.php"
#line 666 "smarty_internal_templateparser.y"
    function yy_r196(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2789 "smarty_internal_templateparser.php"
#line 667 "smarty_internal_templateparser.y"
    function yy_r197(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2794 "smarty_internal_templateparser.php"
#line 670 "smarty_internal_templateparser.y"
    function yy_r198(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2797 "smarty_internal_templateparser.php"
#line 677 "smarty_internal_templateparser.y"
    function yy_r200(){$this->_retvalue = '';    }
#line 2800 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 75 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2863 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 67 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2881 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>