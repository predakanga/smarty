<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->prefix_number = 0;
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text) {
        return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') == 0) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'"');
			 		$this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache;
			 		$this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 } else {
			    $var = '{'.$variable.'}';
			 }
			 return '$_smarty_tpl->tpl_vars->'. $var .'->value';
    }
#line 132 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_LDELFOR                        = 22;
    const TP_SEMICOLON                      = 23;
    const TP_INCDEC                         = 24;
    const TP_TO                             = 25;
    const TP_STEP                           = 26;
    const TP_LDELFOREACH                    = 27;
    const TP_SPACE                          = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_LDELSETFILTER                  = 31;
    const TP_SMARTYBLOCKCHILD               = 32;
    const TP_LDELSLASH                      = 33;
    const TP_INTEGER                        = 34;
    const TP_COMMA                          = 35;
    const TP_OPENP                          = 36;
    const TP_CLOSEP                         = 37;
    const TP_MATH                           = 38;
    const TP_UNIMATH                        = 39;
    const TP_ANDSYM                         = 40;
    const TP_ISIN                           = 41;
    const TP_ISDIVBY                        = 42;
    const TP_ISNOTDIVBY                     = 43;
    const TP_ISEVEN                         = 44;
    const TP_ISNOTEVEN                      = 45;
    const TP_ISEVENBY                       = 46;
    const TP_ISNOTEVENBY                    = 47;
    const TP_ISODD                          = 48;
    const TP_ISNOTODD                       = 49;
    const TP_ISODDBY                        = 50;
    const TP_ISNOTODDBY                     = 51;
    const TP_INSTANCEOF                     = 52;
    const TP_QMARK                          = 53;
    const TP_NOT                            = 54;
    const TP_TYPECAST                       = 55;
    const TP_HEX                            = 56;
    const TP_DOT                            = 57;
    const TP_SINGLEQUOTESTRING              = 58;
    const TP_DOUBLECOLON                    = 59;
    const TP_NAMESPACECLASS                 = 60;
    const TP_AT                             = 61;
    const TP_HATCH                          = 62;
    const TP_OPENB                          = 63;
    const TP_CLOSEB                         = 64;
    const TP_EQUALS                         = 65;
    const TP_NOTEQUALS                      = 66;
    const TP_GREATERTHAN                    = 67;
    const TP_LESSTHAN                       = 68;
    const TP_GREATEREQUAL                   = 69;
    const TP_LESSEQUAL                      = 70;
    const TP_IDENTITY                       = 71;
    const TP_NONEIDENTITY                   = 72;
    const TP_MOD                            = 73;
    const TP_LAND                           = 74;
    const TP_LOR                            = 75;
    const TP_LXOR                           = 76;
    const TP_QUOTE                          = 77;
    const TP_BACKTICK                       = 78;
    const TP_DOLLARID                       = 79;
    const YY_NO_ACTION = 593;
    const YY_ACCEPT_ACTION = 592;
    const YY_ERROR_ACTION = 591;

    const YY_SZ_ACTTAB = 2626;
static public $yy_action = array(
 /*     0 */   221,  320,  317,  316,  312,  311,  313,  314,  315,  322,
 /*    10 */   200,  270,  260,   39,  228,  337,   20,  187,  243,    7,
 /*    20 */   108,  221,    7,  108,   13,  147,  291,   13,  147,  251,
 /*    30 */   288,  230,  251,  288,  230,   17,  286,   48,   47,   46,
 /*    40 */    44,   15,   10,  367,  368,   11,   18,  375,  376,   25,
 /*    50 */    23,  330,  325,  324,  326,  329,  227,  226,  219,  200,
 /*    60 */   331,  334,   28,  159,  384,  385,  386,  387,  383,  382,
 /*    70 */   378,  377,  379,  380,  381,  283,  221,  346,  352,   36,
 /*    80 */   355,  119,  194,  345,   80,  126,  592,   95,  254,  319,
 /*    90 */   321,  309,   34,  301,  363,  285,  278,  236,  370,  364,
 /*   100 */   287,  347,  125,   13,   33,   13,   29,  246,  129,  173,
 /*   110 */     2,  222,  258,   48,   47,   46,   44,   15,   10,  367,
 /*   120 */   368,   11,   18,  375,  376,   25,   23,  221,   99,  180,
 /*   130 */   221,  304,  166,  138,   30,    2,  131,  373,  291,    2,
 /*   140 */   384,  385,  386,  387,  383,  382,  378,  377,  379,  380,
 /*   150 */   381,  283,   43,  374,   13,  203,  250,   34,  138,   16,
 /*   160 */   285,   12,  138,  279,   48,   47,   46,   44,   15,   10,
 /*   170 */   367,  368,   11,   18,  375,  376,   25,   23,  107,  165,
 /*   180 */    26,   52,  263,   21,  159,  354,   34,  178,  291,  285,
 /*   190 */    12,  384,  385,  386,  387,  383,  382,  378,  377,  379,
 /*   200 */   380,  381,  283,  221,  346,  203,   34,  221,  119,  285,
 /*   210 */    14,   80,  126,   34,   34,  281,  285,  285,  340,  290,
 /*   220 */   301,  363,  458,  125,  236,  370,  364,   13,  347,  240,
 /*   230 */    13,   13,  241,  336,  458,  197,  345,  142,  170,  256,
 /*   240 */    48,   47,   46,   44,   15,   10,  367,  368,   11,   18,
 /*   250 */   375,  376,   25,   23,  106,  168,  140,   34,   52,  239,
 /*   260 */   285,  318,  319,  321,  291,  203,  287,  384,  385,  386,
 /*   270 */   387,  383,  382,  378,  377,  379,  380,  381,  283,  221,
 /*   280 */   346,  203,  169,  221,  137,  346,  210,   83,  126,  149,
 /*   290 */    45,  291,    8,  126,  271,  159,  301,  363,  455,  388,
 /*   300 */   236,  370,  364,  241,  347,  236,  370,  364,  202,  347,
 /*   310 */   455,  217,  123,  247,  195,  198,   48,   47,   46,   44,
 /*   320 */    15,   10,  367,  368,   11,   18,  375,  376,   25,   23,
 /*   330 */   221,   37,  210,  181,   52,  109,  255,   35,    8,  221,
 /*   340 */   221,  203,  291,  384,  385,  386,  387,  383,  382,  378,
 /*   350 */   377,  379,  380,  381,  283,  308,  188,  104,    6,  202,
 /*   360 */    26,    3,  264,  306,  323,  291,   13,   48,   47,   46,
 /*   370 */    44,   15,   10,  367,  368,   11,   18,  375,  376,   25,
 /*   380 */    23,  221,  202,  357,  172,   26,  177,  274,  192,  345,
 /*   390 */   257,  304,  221,  291,  384,  385,  386,  387,  383,  382,
 /*   400 */   378,  377,  379,  380,  381,  283,  244,  297,  185,  242,
 /*   410 */   202,   34,   34,  203,  238,  285,  110,  291,   48,   47,
 /*   420 */    46,   44,   15,   10,  367,  368,   11,   18,  375,  376,
 /*   430 */    25,   23,  221,  171,  191,  289,  161,  186,  289,  232,
 /*   440 */   237,  103,  113,   97,  221,  384,  385,  386,  387,  383,
 /*   450 */   382,  378,  377,  379,  380,  381,  283,  372,  372,  307,
 /*   460 */   362,  333,   34,  332,  203,  248,  221,  146,  266,   48,
 /*   470 */    47,   46,   44,   15,   10,  367,  368,   11,   18,  375,
 /*   480 */   376,   25,   23,  221,  164,  366,   34,   34,  305,  220,
 /*   490 */   225,  143,  146,  291,  134,  152,  384,  385,  386,  387,
 /*   500 */   383,  382,  378,  377,  379,  380,  381,  283,  300,  289,
 /*   510 */   227,  229,  227,  262,  302,  146,  335,   52,  132,  249,
 /*   520 */    48,   47,   46,   44,   15,   10,  367,  368,   11,   18,
 /*   530 */   375,  376,   25,   23,  221,  141,  139,  348,  205,  252,
 /*   540 */     9,  273,   41,  371,  160,  117,  243,  384,  385,  386,
 /*   550 */   387,  383,  382,  378,  377,  379,  380,  381,  283,  372,
 /*   560 */   372,   13,   21,  275,  118,  343,    4,   27,  298,  193,
 /*   570 */   233,   48,   47,   46,   44,   15,   10,  367,  368,   11,
 /*   580 */    18,  375,  376,   25,   23,  221,  304,  144,    6,  299,
 /*   590 */    94,  159,  310,  336,  202,  127,  105,  159,  384,  385,
 /*   600 */   386,  387,  383,  382,  378,  377,  379,  380,  381,  283,
 /*   610 */   372,  372,  221,  167,   13,  344,   38,  289,   24,  277,
 /*   620 */   102,  326,   48,   47,   46,   44,   15,   10,  367,  368,
 /*   630 */    11,   18,  375,  376,   25,   23,  125,  388,  326,  326,
 /*   640 */   326,  326,  326,  326,  326,  326,  326,  326,  280,  384,
 /*   650 */   385,  386,  387,  383,  382,  378,  377,  379,  380,  381,
 /*   660 */   283,  221,  346,  326,  175,  326,  137,  346,  326,   83,
 /*   670 */   126,  153,  326,  291,  351,  126,  265,  221,  301,  363,
 /*   680 */   221,   45,  236,  370,  364,  289,  347,  236,  370,  364,
 /*   690 */   326,  347,  296,  213,  326,  284,  245,  221,   48,   47,
 /*   700 */    46,   44,   15,   10,  367,  368,   11,   18,  375,  376,
 /*   710 */    25,   23,  452,   22,  326,  326,  326,  326,  326,  326,
 /*   720 */   326,  326,  326,  326,   13,  384,  385,  386,  387,  383,
 /*   730 */   382,  378,  377,  379,  380,  381,  283,  221,  346,  326,
 /*   740 */   326,  326,  137,  326,  326,   65,  122,  229,  221,  453,
 /*   750 */   326,  233,  201,  456,  301,  363,   40,  121,  236,  370,
 /*   760 */   364,  453,  347,  339,  326,  456,  326,  326,  326,    2,
 /*   770 */   326,  326,  372,    2,   48,   47,   46,   44,   15,   10,
 /*   780 */   367,  368,   11,   18,  375,  376,   25,   23,  221,  326,
 /*   790 */   326,  326,  138,  326,  326,  326,  138,  326,   98,   52,
 /*   800 */   115,  384,  385,  386,  387,  383,  382,  378,  377,  379,
 /*   810 */   380,  381,  283,  372,  326,  372,  326,  326,  326,  326,
 /*   820 */   326,  326,  326,  326,  101,   48,   47,   46,   44,   15,
 /*   830 */    10,  367,  368,   11,   18,  375,  376,   25,   23,  372,
 /*   840 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*   850 */   326,  326,  384,  385,  386,  387,  383,  382,  378,  377,
 /*   860 */   379,  380,  381,  283,  221,  353,  346,  326,  326,  155,
 /*   870 */   137,  326,  346,   54,  122,  135,  158,  326,  326,  204,
 /*   880 */   126,  253,  301,  363,  326,  347,  236,  370,  364,  268,
 /*   890 */   347,  326,  236,  370,  364,  326,  347,  326,  326,  326,
 /*   900 */   326,   48,   47,   46,   44,   15,   10,  367,  368,   11,
 /*   910 */    18,  375,  376,   25,   23,  326,  326,  326,  326,  326,
 /*   920 */   326,  326,  326,  326,  326,  326,  326,  326,  384,  385,
 /*   930 */   386,  387,  383,  382,  378,  377,  379,  380,  381,  283,
 /*   940 */   221,  221,  326,  346,  326,   34,  326,  137,  285,  346,
 /*   950 */    83,  126,  326,  151,  326,  326,  327,  126,   13,  301,
 /*   960 */   363,  326,  199,  236,  370,  364,  369,  347,   13,  236,
 /*   970 */   370,  364,  326,  347,  218,  326,  326,   48,   47,   46,
 /*   980 */    44,   15,   10,  367,  368,   11,   18,  375,  376,   25,
 /*   990 */    23,  221,   52,  326,  326,  326,  326,  326,  326,  326,
 /*  1000 */   326,  326,  326,  326,  384,  385,  386,  387,  383,  382,
 /*  1010 */   378,  377,  379,  380,  381,  283,  326,  326,  326,  326,
 /*  1020 */   326,  326,  326,  326,  326,  326,  326,  326,   48,   47,
 /*  1030 */    46,   44,   15,   10,  367,  368,   11,   18,  375,  376,
 /*  1040 */    25,   23,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1050 */   326,  326,  326,  326,  326,  384,  385,  386,  387,  383,
 /*  1060 */   382,  378,  377,  379,  380,  381,  283,   48,   47,   46,
 /*  1070 */    44,   15,   10,  367,  368,   11,   18,  375,  376,   25,
 /*  1080 */    23,  269,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1090 */   326,  326,  326,   13,  384,  385,  386,  387,  383,  382,
 /*  1100 */   378,  377,  379,  380,  381,  283,  326,  326,  326,  326,
 /*  1110 */    39,  326,  136,  208,  326,  346,    7,  108,  350,  156,
 /*  1120 */   361,  326,  147,  126,  163,  326,  251,  288,  230,  234,
 /*  1130 */    13,   19,   13,  291,   50,  236,  370,  364,  326,  347,
 /*  1140 */   346,  326,  326,  326,  157,  289,  326,  326,  126,   49,
 /*  1150 */    51,  303,  231,  365,  162,  124,  184,  104,    1,  272,
 /*  1160 */   236,  370,  364,  291,  347,  291,  342,   39,  190,  136,
 /*  1170 */   215,  326,   96,    7,  108,  289,  326,  289,   13,  147,
 /*  1180 */   359,   32,   42,  251,  288,  230,  234,  326,   19,  190,
 /*  1190 */   182,   50,   13,  326,  326,  203,  326,  346,  326,  291,
 /*  1200 */   326,  148,   32,   42,  326,  126,   49,   51,  303,  231,
 /*  1210 */   365,  326,  124,  196,  104,    1,  203,  236,  370,  364,
 /*  1220 */   282,  347,  259,  293,   39,  145,  123,  215,  326,   96,
 /*  1230 */     7,  108,   13,  326,   13,   13,  147,  267,  349,  276,
 /*  1240 */   251,  288,  230,  234,  328,   31,  326,  294,   50,   13,
 /*  1250 */    13,   13,  326,  326,  346,  326,   13,  326,  154,   13,
 /*  1260 */   326,  341,  126,   49,   51,  303,  231,  365,  338,  124,
 /*  1270 */   326,  104,    1,   13,  236,  370,  364,  326,  347,  292,
 /*  1280 */    13,   39,  326,  136,  206,  326,   96,    7,  108,  360,
 /*  1290 */   326,   13,  295,  147,  326,  261,  326,  251,  288,  230,
 /*  1300 */   234,   13,   19,  326,   13,   50,  326,   13,  326,  326,
 /*  1310 */   326,  346,  326,  326,  326,  150,  326,  326,  326,  126,
 /*  1320 */    49,   51,  303,  231,  365,  326,  124,  326,  104,    1,
 /*  1330 */   326,  236,  370,  364,  221,  347,  221,  326,   39,  326,
 /*  1340 */   130,   92,  326,   96,    7,  108,  326,  326,  326,  358,
 /*  1350 */   147,  458,  326,  224,  251,  288,  230,  234,  326,   19,
 /*  1360 */   326,   13,   50,  458,  235,  326,  326,  326,  326,    2,
 /*  1370 */   326,  326,  326,  326,  326,  326,  326,   49,   51,  303,
 /*  1380 */   231,  365,  326,  124,  326,  104,    1,   52,  326,  326,
 /*  1390 */   326,  326,  138,  326,  326,   39,  326,  136,  209,  326,
 /*  1400 */    96,    7,  108,  326,  326,  326,  326,  147,  326,  326,
 /*  1410 */   326,  251,  288,  230,  234,  326,   19,  326,  326,   50,
 /*  1420 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1430 */   326,  326,  326,  326,   49,   51,  303,  231,  365,  326,
 /*  1440 */   124,  326,  104,    1,  326,  326,  326,  326,  326,  326,
 /*  1450 */   326,  326,   39,  326,  136,  207,  326,   96,    7,  108,
 /*  1460 */   326,  326,  326,  326,  147,  326,  326,  326,  251,  288,
 /*  1470 */   230,  212,  326,   19,  326,  326,   50,  326,  326,  326,
 /*  1480 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1490 */   326,   49,   51,  303,  231,  365,  326,  124,  326,  104,
 /*  1500 */     1,  326,  326,  326,  326,  326,  326,  326,  326,   39,
 /*  1510 */   326,  136,  211,  326,   96,    7,  108,  326,  326,  326,
 /*  1520 */   326,  147,  326,  326,  326,  251,  288,  230,  234,  326,
 /*  1530 */    19,  326,  326,   50,  326,  326,  326,  326,  326,  326,
 /*  1540 */   326,  326,  326,  326,  326,  326,  326,  326,   49,   51,
 /*  1550 */   303,  231,  365,  326,  124,  326,  104,    1,  326,  326,
 /*  1560 */   326,  326,  326,  326,  326,  326,   39,  326,  128,  215,
 /*  1570 */   326,   96,    7,  108,  326,  326,  326,  326,  147,  326,
 /*  1580 */   326,  326,  251,  288,  230,  234,  326,   19,  326,  326,
 /*  1590 */    50,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1600 */   326,  326,  326,  326,  326,   49,   51,  303,  231,  365,
 /*  1610 */   326,  124,  326,  104,    1,  326,  326,  326,  326,  326,
 /*  1620 */   326,  326,  326,   39,  326,  133,  215,  326,   96,    7,
 /*  1630 */   108,  326,  326,  326,  326,  147,  326,  326,  326,  251,
 /*  1640 */   288,  230,  234,  326,    5,  326,  326,   50,  326,  326,
 /*  1650 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1660 */   326,  326,   49,   51,  303,  231,  365,  326,  124,  326,
 /*  1670 */   104,    1,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1680 */    39,  326,  123,  215,  326,   96,    7,  108,  326,  326,
 /*  1690 */   326,  326,  147,  326,  326,  326,  251,  288,  230,  234,
 /*  1700 */   326,   31,  326,  326,   50,  326,  326,  326,  326,  326,
 /*  1710 */   326,  326,  326,  326,  326,  326,  326,  326,  326,   49,
 /*  1720 */    51,  303,  231,  365,  326,  124,  326,  104,  326,  326,
 /*  1730 */   326,  326,  326,  326,  326,  326,  326,   39,  326,  123,
 /*  1740 */   216,  326,   96,    7,  108,  326,  326,  326,  326,  147,
 /*  1750 */   326,  326,  326,  251,  288,  230,  234,  326,   31,  326,
 /*  1760 */   326,   50,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1770 */   326,  326,  326,  326,  326,  326,   49,   51,  303,  231,
 /*  1780 */   365,  326,  124,  326,  104,  326,  326,  326,  326,  326,
 /*  1790 */   326,  326,  326,  501,  326,  326,  326,  326,  326,   96,
 /*  1800 */   501,  326,  501,  501,  270,  501,  501,  326,  326,   20,
 /*  1810 */   190,  189,  501,    2,  501,    7,  108,  326,  326,  326,
 /*  1820 */   291,  147,  326,   32,   42,  251,  288,  230,  326,  501,
 /*  1830 */   326,  326,  190,  174,  326,  326,  138,  203,  326,  326,
 /*  1840 */   346,  501,  291,  326,  137,   32,   42,   88,  126,  326,
 /*  1850 */   326,  326,  326,  326,  326,  501,  301,  363,  326,  203,
 /*  1860 */   236,  370,  364,  326,  347,  326,  326,  190,  183,  100,
 /*  1870 */   176,  356,   36,  355,  326,  326,  326,  291,  326,  291,
 /*  1880 */    32,   42,   32,   42,  346,  326,  326,  326,  137,  326,
 /*  1890 */   326,   81,  126,  326,  203,  326,  203,  326,  326,  326,
 /*  1900 */   301,  363,  326,  326,  236,  370,  364,  326,  347,  326,
 /*  1910 */   346,  326,  326,  326,  112,  326,  326,   79,  126,  326,
 /*  1920 */   326,  346,  326,  326,  326,  137,  301,  363,   78,  126,
 /*  1930 */   236,  370,  364,  326,  347,  326,  326,  301,  363,  326,
 /*  1940 */   346,  236,  370,  364,  137,  347,  326,   68,  126,  326,
 /*  1950 */   326,  326,  326,  326,  326,  326,  301,  363,  326,  326,
 /*  1960 */   236,  370,  364,  326,  347,  326,  326,  326,  326,  346,
 /*  1970 */   190,  179,  326,  137,  326,  326,   74,  126,  326,  326,
 /*  1980 */   291,  326,  326,   32,   42,  301,  363,  326,  326,  236,
 /*  1990 */   370,  364,  326,  347,  326,  346,  326,  203,  326,  137,
 /*  2000 */   326,  326,   67,  126,  326,  326,  346,  326,  326,  326,
 /*  2010 */   137,  301,  363,   60,  126,  236,  370,  364,  326,  347,
 /*  2020 */   326,  326,  301,  363,  326,  346,  236,  370,  364,  137,
 /*  2030 */   347,  326,   64,  126,  326,  326,  326,  326,  326,  326,
 /*  2040 */   326,  301,  363,  326,  326,  236,  370,  364,  326,  347,
 /*  2050 */   326,  326,  326,  326,  346,  326,  326,  326,  137,  326,
 /*  2060 */   326,   61,  126,  326,  326,  326,  326,  326,  326,  326,
 /*  2070 */   301,  363,  326,  326,  236,  370,  364,  326,  347,  326,
 /*  2080 */   346,  326,  326,  326,  137,  326,  326,   56,  126,  326,
 /*  2090 */   326,  346,  326,  326,  326,  137,  301,  363,   89,  126,
 /*  2100 */   236,  370,  364,  326,  347,  326,  326,  301,  363,  326,
 /*  2110 */   346,  236,  370,  364,  137,  347,  326,   76,  126,  326,
 /*  2120 */   326,  326,  326,  326,  326,  326,  301,  363,  326,  326,
 /*  2130 */   236,  370,  364,  326,  347,  326,  326,  326,  326,  346,
 /*  2140 */   326,  326,  326,  137,  326,  326,   73,  126,  326,  326,
 /*  2150 */   326,  326,  326,  326,  326,  301,  363,  326,  326,  236,
 /*  2160 */   370,  364,  326,  347,  326,  346,  326,  326,  326,  137,
 /*  2170 */   326,  326,   86,  126,  326,  326,  346,  326,  326,  326,
 /*  2180 */   137,  301,  363,   82,  126,  236,  370,  364,  326,  347,
 /*  2190 */   326,  326,  301,  363,  326,  346,  236,  370,  364,  137,
 /*  2200 */   347,  326,   71,  126,  326,  326,  326,  326,  326,  326,
 /*  2210 */   326,  301,  363,  326,  326,  236,  370,  364,  326,  347,
 /*  2220 */   326,  326,  326,  326,  346,  326,  326,  326,   93,  326,
 /*  2230 */   326,   55,  120,  326,  326,  326,  326,  326,  326,  326,
 /*  2240 */   301,  363,  326,  326,  223,  370,  364,  326,  347,  326,
 /*  2250 */   346,  326,  326,  326,  114,  326,  326,   72,  126,  326,
 /*  2260 */   326,  346,  326,  326,  326,  137,  301,  363,   90,  126,
 /*  2270 */   236,  370,  364,  326,  347,  326,  326,  301,  363,  326,
 /*  2280 */   346,  236,  370,  364,  137,  347,  326,   57,  126,  326,
 /*  2290 */   326,  326,  326,  326,  326,  326,  301,  363,  326,  326,
 /*  2300 */   236,  370,  364,  326,  347,  326,  326,  326,  326,  346,
 /*  2310 */   326,  326,  326,  137,  326,  326,   75,  126,  326,  326,
 /*  2320 */   326,  326,  326,  326,  326,  301,  363,  326,  326,  236,
 /*  2330 */   370,  364,  326,  347,  326,  346,  326,  326,  326,  137,
 /*  2340 */   326,  326,   91,  126,  326,  326,  346,  326,  326,  326,
 /*  2350 */   137,  301,  363,   77,  126,  236,  370,  364,  326,  347,
 /*  2360 */   326,  326,  301,  363,  326,  346,  236,  370,  364,  137,
 /*  2370 */   347,  326,   84,  126,  326,  326,  326,  326,  326,  326,
 /*  2380 */   326,  301,  363,  326,  326,  236,  370,  364,  326,  347,
 /*  2390 */   326,  326,  326,  326,  346,  326,  326,  326,  137,  326,
 /*  2400 */   326,   87,  126,  326,  326,  326,  326,  326,  326,  326,
 /*  2410 */   301,  363,  326,  326,  236,  370,  364,  326,  347,  326,
 /*  2420 */   346,  326,  326,  326,  137,  326,  326,   70,  126,  326,
 /*  2430 */   326,  346,  326,  326,  326,   93,  301,  363,   59,  120,
 /*  2440 */   214,  370,  364,  326,  347,  326,  326,  301,  363,  326,
 /*  2450 */   346,  236,  370,  364,  116,  347,  326,   53,  126,  326,
 /*  2460 */   326,  326,  326,  326,  326,  326,  301,  363,  326,  326,
 /*  2470 */   236,  370,  364,  326,  347,  326,  326,  326,  326,  346,
 /*  2480 */   326,  326,  326,  137,  326,  326,   63,  126,  326,  326,
 /*  2490 */   326,  326,  326,  326,  326,  301,  363,  326,  326,  236,
 /*  2500 */   370,  364,  326,  347,  326,  346,  326,  326,  326,  137,
 /*  2510 */   326,  326,   62,  126,  326,  326,  346,  326,  326,  326,
 /*  2520 */   137,  301,  363,   85,  126,  236,  370,  364,  326,  347,
 /*  2530 */   326,  326,  301,  363,  326,  346,  236,  370,  364,  137,
 /*  2540 */   347,  326,   58,  126,  326,  326,  326,  326,  326,  326,
 /*  2550 */   326,  301,  363,  326,  326,  236,  370,  364,  326,  347,
 /*  2560 */   326,  326,  326,  326,  346,  326,  326,  326,  137,  326,
 /*  2570 */   326,   69,  126,  326,  326,  326,  326,  326,  326,  326,
 /*  2580 */   301,  363,  326,  326,  236,  370,  364,  326,  347,  326,
 /*  2590 */   346,  326,  326,  326,  137,  326,  326,   65,  126,  326,
 /*  2600 */   326,  346,  326,  326,  326,  111,  301,  363,   66,  126,
 /*  2610 */   236,  370,  364,  326,  347,  326,  326,  301,  363,  326,
 /*  2620 */   326,  236,  370,  364,  326,  347,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    3,    4,    5,    6,    7,    8,    9,   10,   11,
 /*    10 */    12,   10,   16,   15,   95,   16,   15,   90,    2,   21,
 /*    20 */    22,    1,   21,   22,   28,   27,   99,   28,   27,   31,
 /*    30 */    32,   33,   31,   32,   33,   19,   16,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,    4,    5,    6,    7,    8,   92,   93,   94,   12,
 /*    60 */    13,   14,   19,   20,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,    1,   84,   77,   78,
 /*    80 */    79,   88,  112,  113,   91,   92,   81,   82,   83,   84,
 /*    90 */    85,   16,   15,  100,  101,   18,   28,  104,  105,  106,
 /*   100 */   117,  108,   59,   28,   30,   28,   15,   30,   17,   18,
 /*   110 */    36,  118,  119,   38,   39,   40,   41,   42,   43,   44,
 /*   120 */    45,   46,   47,   48,   49,   50,   51,    1,   89,   90,
 /*   130 */     1,   24,  109,   59,   15,   36,   17,   18,   99,   36,
 /*   140 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   150 */    75,   76,   26,   34,   28,  116,   57,   15,   59,   30,
 /*   160 */    18,   19,   59,   64,   38,   39,   40,   41,   42,   43,
 /*   170 */    44,   45,   46,   47,   48,   49,   50,   51,   89,   90,
 /*   180 */    35,   52,   37,   19,   20,   78,   15,  109,   99,   18,
 /*   190 */    19,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   200 */    74,   75,   76,    1,   84,  116,   15,    1,   88,   18,
 /*   210 */    19,   91,   92,   15,   15,   24,   18,   18,   16,   16,
 /*   220 */   100,  101,   16,   59,  104,  105,  106,   28,  108,   30,
 /*   230 */    28,   28,   61,  110,   28,  112,  113,   17,   89,  119,
 /*   240 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   250 */    48,   49,   50,   51,   89,   90,   36,   15,   52,   61,
 /*   260 */    18,   83,   84,   85,   99,  116,  117,   65,   66,   67,
 /*   270 */    68,   69,   70,   71,   72,   73,   74,   75,   76,    1,
 /*   280 */    84,  116,   90,    1,   88,   84,   57,   91,   92,   88,
 /*   290 */     2,   99,   63,   92,   16,   20,  100,  101,   16,   84,
 /*   300 */   104,  105,  106,   61,  108,  104,  105,  106,  116,  108,
 /*   310 */    28,  115,   17,   18,   89,   98,   38,   39,   40,   41,
 /*   320 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   330 */     1,    2,   57,   90,   52,  120,  121,   15,   63,    1,
 /*   340 */     1,  116,   99,   65,   66,   67,   68,   69,   70,   71,
 /*   350 */    72,   73,   74,   75,   76,   16,   90,   62,   36,  116,
 /*   360 */    35,   35,   37,   18,   13,   99,   28,   38,   39,   40,
 /*   370 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   380 */    51,    1,  116,   16,   90,   35,   89,   37,  112,  113,
 /*   390 */    64,   24,    1,   99,   65,   66,   67,   68,   69,   70,
 /*   400 */    71,   72,   73,   74,   75,   76,   61,   16,   90,   29,
 /*   410 */   116,   15,   15,  116,   18,   18,   86,   99,   38,   39,
 /*   420 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   430 */    50,   51,    1,  109,   98,  111,  109,   89,  111,   17,
 /*   440 */    18,   98,   96,   96,    1,   65,   66,   67,   68,   69,
 /*   450 */    70,   71,   72,   73,   74,   75,   76,  111,  111,   16,
 /*   460 */   107,   85,   15,   87,  116,   18,    1,  114,   37,   38,
 /*   470 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   480 */    49,   50,   51,    1,   90,  107,   15,   15,   18,   18,
 /*   490 */    18,   17,  114,   99,   18,   97,   65,   66,   67,   68,
 /*   500 */    69,   70,   71,   72,   73,   74,   75,   76,  107,  111,
 /*   510 */    92,   93,   92,   93,   18,  114,   18,   52,   17,   37,
 /*   520 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   530 */    48,   49,   50,   51,    1,   17,   17,   62,   18,   18,
 /*   540 */    53,   64,    2,   18,   96,   96,    2,   65,   66,   67,
 /*   550 */    68,   69,   70,   71,   72,   73,   74,   75,   76,  111,
 /*   560 */   111,   28,   19,   37,   18,   62,   36,   25,   34,   18,
 /*   570 */    57,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   580 */    47,   48,   49,   50,   51,    1,   24,   17,   36,   34,
 /*   590 */    18,   20,   99,  110,  116,   96,   96,   20,   65,   66,
 /*   600 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   610 */   111,  111,    1,  109,   28,  113,   28,  111,   95,  114,
 /*   620 */   109,  122,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   630 */    46,   47,   48,   49,   50,   51,   59,   84,  122,  122,
 /*   640 */   122,  122,  122,  122,  122,  122,  122,  122,   64,   65,
 /*   650 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   660 */    76,    1,   84,  122,   90,  122,   88,   84,  122,   91,
 /*   670 */    92,   88,  122,   99,  121,   92,   16,    1,  100,  101,
 /*   680 */     1,    2,  104,  105,  106,  111,  108,  104,  105,  106,
 /*   690 */   122,  108,   16,  115,  122,   16,   20,    1,   38,   39,
 /*   700 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   710 */    50,   51,   16,   19,  122,  122,  122,  122,  122,  122,
 /*   720 */   122,  122,  122,  122,   28,   65,   66,   67,   68,   69,
 /*   730 */    70,   71,   72,   73,   74,   75,   76,    1,   84,  122,
 /*   740 */   122,  122,   88,  122,  122,   91,   92,   93,    1,   16,
 /*   750 */   122,   57,   16,   16,  100,  101,   19,   96,  104,  105,
 /*   760 */   106,   28,  108,   16,  122,   28,  122,  122,  122,   36,
 /*   770 */   122,  122,  111,   36,   38,   39,   40,   41,   42,   43,
 /*   780 */    44,   45,   46,   47,   48,   49,   50,   51,    1,  122,
 /*   790 */   122,  122,   59,  122,  122,  122,   59,  122,   96,   52,
 /*   800 */    96,   65,   66,   67,   68,   69,   70,   71,   72,   73,
 /*   810 */    74,   75,   76,  111,  122,  111,  122,  122,  122,  122,
 /*   820 */   122,  122,  122,  122,   96,   38,   39,   40,   41,   42,
 /*   830 */    43,   44,   45,   46,   47,   48,   49,   50,   51,  111,
 /*   840 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*   850 */   122,  122,   65,   66,   67,   68,   69,   70,   71,   72,
 /*   860 */    73,   74,   75,   76,    1,   78,   84,  122,  122,   92,
 /*   870 */    88,  122,   84,   91,   92,   93,   88,  122,  122,   16,
 /*   880 */    92,  104,  100,  101,  122,  108,  104,  105,  106,  101,
 /*   890 */   108,  122,  104,  105,  106,  122,  108,  122,  122,  122,
 /*   900 */   122,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   910 */    47,   48,   49,   50,   51,  122,  122,  122,  122,  122,
 /*   920 */   122,  122,  122,  122,  122,  122,  122,  122,   65,   66,
 /*   930 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   940 */     1,    1,  122,   84,  122,   15,  122,   88,   18,   84,
 /*   950 */    91,   92,  122,   88,  122,  122,   16,   92,   28,  100,
 /*   960 */   101,  122,   23,  104,  105,  106,  101,  108,   28,  104,
 /*   970 */   105,  106,  122,  108,  115,  122,  122,   38,   39,   40,
 /*   980 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   990 */    51,    1,   52,  122,  122,  122,  122,  122,  122,  122,
 /*  1000 */   122,  122,  122,  122,   65,   66,   67,   68,   69,   70,
 /*  1010 */    71,   72,   73,   74,   75,   76,  122,  122,  122,  122,
 /*  1020 */   122,  122,  122,  122,  122,  122,  122,  122,   38,   39,
 /*  1030 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  1040 */    50,   51,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1050 */   122,  122,  122,  122,  122,   65,   66,   67,   68,   69,
 /*  1060 */    70,   71,   72,   73,   74,   75,   76,   38,   39,   40,
 /*  1070 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  1080 */    51,   16,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1090 */   122,  122,  122,   28,   65,   66,   67,   68,   69,   70,
 /*  1100 */    71,   72,   73,   74,   75,   76,  122,  122,  122,  122,
 /*  1110 */    15,  122,   17,   18,  122,   84,   21,   22,   16,   88,
 /*  1120 */    16,  122,   27,   92,   90,  122,   31,   32,   33,   34,
 /*  1130 */    28,   36,   28,   99,   39,  104,  105,  106,  122,  108,
 /*  1140 */    84,  122,  122,  122,   88,  111,  122,  122,   92,   54,
 /*  1150 */    55,   56,   57,   58,   90,   60,   90,   62,   63,   64,
 /*  1160 */   104,  105,  106,   99,  108,   99,   16,   15,   89,   17,
 /*  1170 */    18,  122,   77,   21,   22,  111,  122,  111,   28,   27,
 /*  1180 */    16,  102,  103,   31,   32,   33,   34,  122,   36,   89,
 /*  1190 */    90,   39,   28,  122,  122,  116,  122,   84,  122,   99,
 /*  1200 */   122,   88,  102,  103,  122,   92,   54,   55,   56,   57,
 /*  1210 */    58,  122,   60,   23,   62,   63,  116,  104,  105,  106,
 /*  1220 */    16,  108,   16,   16,   15,   35,   17,   18,  122,   77,
 /*  1230 */    21,   22,   28,  122,   28,   28,   27,   16,   16,   16,
 /*  1240 */    31,   32,   33,   34,   16,   36,  122,   16,   39,   28,
 /*  1250 */    28,   28,  122,  122,   84,  122,   28,  122,   88,   28,
 /*  1260 */   122,   16,   92,   54,   55,   56,   57,   58,   16,   60,
 /*  1270 */   122,   62,   63,   28,  104,  105,  106,  122,  108,   16,
 /*  1280 */    28,   15,  122,   17,   18,  122,   77,   21,   22,   16,
 /*  1290 */   122,   28,   16,   27,  122,   16,  122,   31,   32,   33,
 /*  1300 */    34,   28,   36,  122,   28,   39,  122,   28,  122,  122,
 /*  1310 */   122,   84,  122,  122,  122,   88,  122,  122,  122,   92,
 /*  1320 */    54,   55,   56,   57,   58,  122,   60,  122,   62,   63,
 /*  1330 */   122,  104,  105,  106,    1,  108,    1,  122,   15,  122,
 /*  1340 */    17,   18,  122,   77,   21,   22,  122,  122,  122,   16,
 /*  1350 */    27,   16,  122,   20,   31,   32,   33,   34,  122,   36,
 /*  1360 */   122,   28,   39,   28,   29,  122,  122,  122,  122,   36,
 /*  1370 */   122,  122,  122,  122,  122,  122,  122,   54,   55,   56,
 /*  1380 */    57,   58,  122,   60,  122,   62,   63,   52,  122,  122,
 /*  1390 */   122,  122,   59,  122,  122,   15,  122,   17,   18,  122,
 /*  1400 */    77,   21,   22,  122,  122,  122,  122,   27,  122,  122,
 /*  1410 */   122,   31,   32,   33,   34,  122,   36,  122,  122,   39,
 /*  1420 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1430 */   122,  122,  122,  122,   54,   55,   56,   57,   58,  122,
 /*  1440 */    60,  122,   62,   63,  122,  122,  122,  122,  122,  122,
 /*  1450 */   122,  122,   15,  122,   17,   18,  122,   77,   21,   22,
 /*  1460 */   122,  122,  122,  122,   27,  122,  122,  122,   31,   32,
 /*  1470 */    33,   34,  122,   36,  122,  122,   39,  122,  122,  122,
 /*  1480 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1490 */   122,   54,   55,   56,   57,   58,  122,   60,  122,   62,
 /*  1500 */    63,  122,  122,  122,  122,  122,  122,  122,  122,   15,
 /*  1510 */   122,   17,   18,  122,   77,   21,   22,  122,  122,  122,
 /*  1520 */   122,   27,  122,  122,  122,   31,   32,   33,   34,  122,
 /*  1530 */    36,  122,  122,   39,  122,  122,  122,  122,  122,  122,
 /*  1540 */   122,  122,  122,  122,  122,  122,  122,  122,   54,   55,
 /*  1550 */    56,   57,   58,  122,   60,  122,   62,   63,  122,  122,
 /*  1560 */   122,  122,  122,  122,  122,  122,   15,  122,   17,   18,
 /*  1570 */   122,   77,   21,   22,  122,  122,  122,  122,   27,  122,
 /*  1580 */   122,  122,   31,   32,   33,   34,  122,   36,  122,  122,
 /*  1590 */    39,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1600 */   122,  122,  122,  122,  122,   54,   55,   56,   57,   58,
 /*  1610 */   122,   60,  122,   62,   63,  122,  122,  122,  122,  122,
 /*  1620 */   122,  122,  122,   15,  122,   17,   18,  122,   77,   21,
 /*  1630 */    22,  122,  122,  122,  122,   27,  122,  122,  122,   31,
 /*  1640 */    32,   33,   34,  122,   36,  122,  122,   39,  122,  122,
 /*  1650 */   122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1660 */   122,  122,   54,   55,   56,   57,   58,  122,   60,  122,
 /*  1670 */    62,   63,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1680 */    15,  122,   17,   18,  122,   77,   21,   22,  122,  122,
 /*  1690 */   122,  122,   27,  122,  122,  122,   31,   32,   33,   34,
 /*  1700 */   122,   36,  122,  122,   39,  122,  122,  122,  122,  122,
 /*  1710 */   122,  122,  122,  122,  122,  122,  122,  122,  122,   54,
 /*  1720 */    55,   56,   57,   58,  122,   60,  122,   62,  122,  122,
 /*  1730 */   122,  122,  122,  122,  122,  122,  122,   15,  122,   17,
 /*  1740 */    18,  122,   77,   21,   22,  122,  122,  122,  122,   27,
 /*  1750 */   122,  122,  122,   31,   32,   33,   34,  122,   36,  122,
 /*  1760 */   122,   39,  122,  122,  122,  122,  122,  122,  122,  122,
 /*  1770 */   122,  122,  122,  122,  122,  122,   54,   55,   56,   57,
 /*  1780 */    58,  122,   60,  122,   62,  122,  122,  122,  122,  122,
 /*  1790 */   122,  122,  122,   16,  122,  122,  122,  122,  122,   77,
 /*  1800 */    23,  122,   25,   26,   10,   28,   29,  122,  122,   15,
 /*  1810 */    89,   90,   35,   36,   37,   21,   22,  122,  122,  122,
 /*  1820 */    99,   27,  122,  102,  103,   31,   32,   33,  122,   52,
 /*  1830 */   122,  122,   89,   90,  122,  122,   59,  116,  122,  122,
 /*  1840 */    84,   64,   99,  122,   88,  102,  103,   91,   92,  122,
 /*  1850 */   122,  122,  122,  122,  122,   78,  100,  101,  122,  116,
 /*  1860 */   104,  105,  106,  122,  108,  122,  122,   89,   90,   89,
 /*  1870 */    90,   77,   78,   79,  122,  122,  122,   99,  122,   99,
 /*  1880 */   102,  103,  102,  103,   84,  122,  122,  122,   88,  122,
 /*  1890 */   122,   91,   92,  122,  116,  122,  116,  122,  122,  122,
 /*  1900 */   100,  101,  122,  122,  104,  105,  106,  122,  108,  122,
 /*  1910 */    84,  122,  122,  122,   88,  122,  122,   91,   92,  122,
 /*  1920 */   122,   84,  122,  122,  122,   88,  100,  101,   91,   92,
 /*  1930 */   104,  105,  106,  122,  108,  122,  122,  100,  101,  122,
 /*  1940 */    84,  104,  105,  106,   88,  108,  122,   91,   92,  122,
 /*  1950 */   122,  122,  122,  122,  122,  122,  100,  101,  122,  122,
 /*  1960 */   104,  105,  106,  122,  108,  122,  122,  122,  122,   84,
 /*  1970 */    89,   90,  122,   88,  122,  122,   91,   92,  122,  122,
 /*  1980 */    99,  122,  122,  102,  103,  100,  101,  122,  122,  104,
 /*  1990 */   105,  106,  122,  108,  122,   84,  122,  116,  122,   88,
 /*  2000 */   122,  122,   91,   92,  122,  122,   84,  122,  122,  122,
 /*  2010 */    88,  100,  101,   91,   92,  104,  105,  106,  122,  108,
 /*  2020 */   122,  122,  100,  101,  122,   84,  104,  105,  106,   88,
 /*  2030 */   108,  122,   91,   92,  122,  122,  122,  122,  122,  122,
 /*  2040 */   122,  100,  101,  122,  122,  104,  105,  106,  122,  108,
 /*  2050 */   122,  122,  122,  122,   84,  122,  122,  122,   88,  122,
 /*  2060 */   122,   91,   92,  122,  122,  122,  122,  122,  122,  122,
 /*  2070 */   100,  101,  122,  122,  104,  105,  106,  122,  108,  122,
 /*  2080 */    84,  122,  122,  122,   88,  122,  122,   91,   92,  122,
 /*  2090 */   122,   84,  122,  122,  122,   88,  100,  101,   91,   92,
 /*  2100 */   104,  105,  106,  122,  108,  122,  122,  100,  101,  122,
 /*  2110 */    84,  104,  105,  106,   88,  108,  122,   91,   92,  122,
 /*  2120 */   122,  122,  122,  122,  122,  122,  100,  101,  122,  122,
 /*  2130 */   104,  105,  106,  122,  108,  122,  122,  122,  122,   84,
 /*  2140 */   122,  122,  122,   88,  122,  122,   91,   92,  122,  122,
 /*  2150 */   122,  122,  122,  122,  122,  100,  101,  122,  122,  104,
 /*  2160 */   105,  106,  122,  108,  122,   84,  122,  122,  122,   88,
 /*  2170 */   122,  122,   91,   92,  122,  122,   84,  122,  122,  122,
 /*  2180 */    88,  100,  101,   91,   92,  104,  105,  106,  122,  108,
 /*  2190 */   122,  122,  100,  101,  122,   84,  104,  105,  106,   88,
 /*  2200 */   108,  122,   91,   92,  122,  122,  122,  122,  122,  122,
 /*  2210 */   122,  100,  101,  122,  122,  104,  105,  106,  122,  108,
 /*  2220 */   122,  122,  122,  122,   84,  122,  122,  122,   88,  122,
 /*  2230 */   122,   91,   92,  122,  122,  122,  122,  122,  122,  122,
 /*  2240 */   100,  101,  122,  122,  104,  105,  106,  122,  108,  122,
 /*  2250 */    84,  122,  122,  122,   88,  122,  122,   91,   92,  122,
 /*  2260 */   122,   84,  122,  122,  122,   88,  100,  101,   91,   92,
 /*  2270 */   104,  105,  106,  122,  108,  122,  122,  100,  101,  122,
 /*  2280 */    84,  104,  105,  106,   88,  108,  122,   91,   92,  122,
 /*  2290 */   122,  122,  122,  122,  122,  122,  100,  101,  122,  122,
 /*  2300 */   104,  105,  106,  122,  108,  122,  122,  122,  122,   84,
 /*  2310 */   122,  122,  122,   88,  122,  122,   91,   92,  122,  122,
 /*  2320 */   122,  122,  122,  122,  122,  100,  101,  122,  122,  104,
 /*  2330 */   105,  106,  122,  108,  122,   84,  122,  122,  122,   88,
 /*  2340 */   122,  122,   91,   92,  122,  122,   84,  122,  122,  122,
 /*  2350 */    88,  100,  101,   91,   92,  104,  105,  106,  122,  108,
 /*  2360 */   122,  122,  100,  101,  122,   84,  104,  105,  106,   88,
 /*  2370 */   108,  122,   91,   92,  122,  122,  122,  122,  122,  122,
 /*  2380 */   122,  100,  101,  122,  122,  104,  105,  106,  122,  108,
 /*  2390 */   122,  122,  122,  122,   84,  122,  122,  122,   88,  122,
 /*  2400 */   122,   91,   92,  122,  122,  122,  122,  122,  122,  122,
 /*  2410 */   100,  101,  122,  122,  104,  105,  106,  122,  108,  122,
 /*  2420 */    84,  122,  122,  122,   88,  122,  122,   91,   92,  122,
 /*  2430 */   122,   84,  122,  122,  122,   88,  100,  101,   91,   92,
 /*  2440 */   104,  105,  106,  122,  108,  122,  122,  100,  101,  122,
 /*  2450 */    84,  104,  105,  106,   88,  108,  122,   91,   92,  122,
 /*  2460 */   122,  122,  122,  122,  122,  122,  100,  101,  122,  122,
 /*  2470 */   104,  105,  106,  122,  108,  122,  122,  122,  122,   84,
 /*  2480 */   122,  122,  122,   88,  122,  122,   91,   92,  122,  122,
 /*  2490 */   122,  122,  122,  122,  122,  100,  101,  122,  122,  104,
 /*  2500 */   105,  106,  122,  108,  122,   84,  122,  122,  122,   88,
 /*  2510 */   122,  122,   91,   92,  122,  122,   84,  122,  122,  122,
 /*  2520 */    88,  100,  101,   91,   92,  104,  105,  106,  122,  108,
 /*  2530 */   122,  122,  100,  101,  122,   84,  104,  105,  106,   88,
 /*  2540 */   108,  122,   91,   92,  122,  122,  122,  122,  122,  122,
 /*  2550 */   122,  100,  101,  122,  122,  104,  105,  106,  122,  108,
 /*  2560 */   122,  122,  122,  122,   84,  122,  122,  122,   88,  122,
 /*  2570 */   122,   91,   92,  122,  122,  122,  122,  122,  122,  122,
 /*  2580 */   100,  101,  122,  122,  104,  105,  106,  122,  108,  122,
 /*  2590 */    84,  122,  122,  122,   88,  122,  122,   91,   92,  122,
 /*  2600 */   122,   84,  122,  122,  122,   88,  100,  101,   91,   92,
 /*  2610 */   104,  105,  106,  122,  108,  122,  122,  100,  101,  122,
 /*  2620 */   122,  104,  105,  106,  122,  108,
);
    const YY_SHIFT_USE_DFLT = -5;
    const YY_SHIFT_MAX = 253;
    static public $yy_shift_ofst = array(
 /*     0 */    -2, 1494, 1152, 1494, 1152, 1608, 1152, 1608, 1095, 1551,
 /*    10 */  1152, 1152, 1152, 1437, 1152, 1152, 1152, 1152, 1152, 1152,
 /*    20 */  1323, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
 /*    30 */  1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1437, 1323,
 /*    40 */  1380, 1266, 1152, 1152, 1209, 1209, 1665, 1665, 1665, 1665,
 /*    50 */  1665, 1665, 1722,  202,   75,   -1,  126,  533,  533,  533,
 /*    60 */   660,  431,  736,  278,  329,  482,  380,  584,  863,  939,
 /*    70 */   787,  990,  990,  990,  990,  990,  990,  990,  990,  990,
 /*    80 */   990,  990,  990,  990,  990,  990,  990,  990,  990,  990,
 /*    90 */  1029, 1029, 1333,  940,  338,   -2, 1794,  199,   77,  696,
 /*   100 */   696,  930,  275,  679,  295,  930,  338,  338,  220,    1,
 /*   110 */    47, 1335,  206,  171,  282,  191,  747,  242,  676,  129,
 /*   120 */    43,  142,  164,  397,  422,  422,  577,  397,  447,  472,
 /*   130 */   471,  397,  397,  396,  443, 1279,  396,  465,  422,  397,
 /*   140 */   220,  397,  397,  397,  397,  220,  571,  588,  611,  611,
 /*   150 */   611,  611,  586,  611,  611,  571,  611,  611,   -5,   91,
 /*   160 */   198,  229, 1065,  203,   -4, 1102,  229,  229, 1164, 1150,
 /*   170 */    20,  229, 1104,  322, 1204, 1276, 1252,  391,  229, 1263,
 /*   180 */  1206, 1273, 1245, 1222, 1221, 1207,  339, 1231, 1228, 1223,
 /*   190 */   611,  288,  571,  530,  571,  611,   68,  571,  288,   68,
 /*   200 */   351,   -5,   -5,   -5,   -5,   -5, 1777,  737,   99,  733,
 /*   210 */   119,   74,  694,  145,  107,  103,  103,  325,  350, 1190,
 /*   220 */    16,  345,  326,  367,  572,  530,  542,  543,  474,  526,
 /*   230 */   546,  534,  551,  555,  513,  570,  562,  552,  544,  525,
 /*   240 */   518,  498,  501,  496,  470,  476,  519,  475,  540,  487,
 /*   250 */   521,  520,  477,  503,
);
    const YY_REDUCE_USE_DFLT = -82;
    const YY_REDUCE_MAX = 205;
    static public $yy_reduce_ofst = array(
 /*     0 */     5,   -7,  196,  120,  859,  654,  578,  782, 1911, 1941,
 /*    10 */  2055, 2081, 2007, 1826, 1756, 1837, 2310, 2366, 2111, 2506,
 /*    20 */  2140, 2262, 2432, 2225, 2480, 1885, 2026, 1996, 2451, 1856,
 /*    30 */  1922, 1970, 2092, 1800, 2395, 2421, 2336, 2177, 2517, 2347,
 /*    40 */  2166, 2251, 2281, 2196,  865,  788, 1031,  583, 1056, 1113,
 /*    50 */  1227,  201, 1170, 1100, 1881, 1780, 1721, 1743, 1778, 1780,
 /*    60 */  1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
 /*    70 */  1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
 /*    80 */  1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
 /*    90 */  1079, 1079,   89,   39,  165,  178,  215, 1064,  574,  266,
 /*   100 */   192, 1034,  123,  149,  777, 1066,  243,  294,  -36,  553,
 /*   110 */   376,  225,  225,  324,  225,  398,  225,  324,  297,  225,
 /*   120 */   -30,  324,  -30,  449,  378,  353,  -30,  327,  449,  499,
 /*   130 */   449,  448,  347,  346,  348,  394,  449,  225,  401,  728,
 /*   140 */   418,  500,  661,  704,  702,  420,  276,  -73,  225,  225,
 /*   150 */   225,  225,  318,  225,  225,  -30,  225,  225,  225,  505,
 /*   160 */   506,  483,  493,  493,  493,  493,  483,  483,  493,  493,
 /*   170 */   478,  483,  493,  504,  493,  493,  493,  478,  483,  493,
 /*   180 */   493,  493,  493,  493,  493,  493,  478,  493,  493,  493,
 /*   190 */   478,  -17,  502,  511,  502,  478,  523,  502,  -17,  -81,
 /*   200 */   330,   23,  336,  217,   78,  343,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 1 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 2 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 3 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 4 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 5 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 6 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 7 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 8 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 64, 77, ),
        /* 9 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 10 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 11 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 12 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 13 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 14 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 15 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 16 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 17 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 18 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 19 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 20 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 21 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 22 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 23 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 24 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 25 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 26 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 27 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 28 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 29 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 30 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 31 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 32 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 33 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 34 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 35 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 36 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 37 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 38 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 39 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 40 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 41 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 42 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 43 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 44 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 45 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 63, 77, ),
        /* 46 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 47 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 48 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 49 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 50 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 51 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 52 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 60, 62, 77, ),
        /* 53 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 54 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 55 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 56 */ array(1, 26, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 57 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 58 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 59 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 60 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 61 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 62 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 63 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 64 */ array(1, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 65 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 66 */ array(1, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 67 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 68 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 69 */ array(1, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 70 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, ),
        /* 71 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 72 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 73 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 74 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 75 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 76 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 77 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 78 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 79 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 80 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 81 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 82 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 83 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 84 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 85 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 86 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 87 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 88 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 89 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 90 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 91 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, ),
        /* 92 */ array(1, 16, 20, 28, 36, 59, ),
        /* 93 */ array(1, 16, 28, 52, ),
        /* 94 */ array(1, 28, ),
        /* 95 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 96 */ array(10, 15, 21, 22, 27, 31, 32, 33, 77, 78, 79, ),
        /* 97 */ array(15, 18, 28, 30, ),
        /* 98 */ array(15, 18, 28, 30, ),
        /* 99 */ array(1, 16, 28, ),
        /* 100 */ array(1, 16, 28, ),
        /* 101 */ array(15, 18, 28, ),
        /* 102 */ array(20, 57, 63, ),
        /* 103 */ array(1, 2, 16, ),
        /* 104 */ array(17, 18, 62, ),
        /* 105 */ array(15, 18, 28, ),
        /* 106 */ array(1, 28, ),
        /* 107 */ array(1, 28, ),
        /* 108 */ array(17, 36, ),
        /* 109 */ array(10, 15, 21, 22, 27, 31, 32, 33, 77, 78, 79, ),
        /* 110 */ array(4, 5, 6, 7, 8, 12, 13, 14, ),
        /* 111 */ array(1, 16, 28, 29, 52, ),
        /* 112 */ array(1, 16, 28, 52, ),
        /* 113 */ array(15, 18, 19, 61, ),
        /* 114 */ array(1, 16, 28, 52, ),
        /* 115 */ array(15, 18, 19, 24, ),
        /* 116 */ array(1, 16, 52, ),
        /* 117 */ array(15, 18, 61, ),
        /* 118 */ array(1, 16, 20, ),
        /* 119 */ array(1, 30, 52, ),
        /* 120 */ array(19, 20, 59, ),
        /* 121 */ array(15, 18, 19, ),
        /* 122 */ array(19, 20, 59, ),
        /* 123 */ array(15, 18, ),
        /* 124 */ array(17, 18, ),
        /* 125 */ array(17, 18, ),
        /* 126 */ array(20, 59, ),
        /* 127 */ array(15, 18, ),
        /* 128 */ array(15, 18, ),
        /* 129 */ array(15, 18, ),
        /* 130 */ array(15, 18, ),
        /* 131 */ array(15, 18, ),
        /* 132 */ array(15, 18, ),
        /* 133 */ array(15, 18, ),
        /* 134 */ array(1, 16, ),
        /* 135 */ array(16, 28, ),
        /* 136 */ array(15, 18, ),
        /* 137 */ array(1, 52, ),
        /* 138 */ array(17, 18, ),
        /* 139 */ array(15, 18, ),
        /* 140 */ array(17, 36, ),
        /* 141 */ array(15, 18, ),
        /* 142 */ array(15, 18, ),
        /* 143 */ array(15, 18, ),
        /* 144 */ array(15, 18, ),
        /* 145 */ array(17, 36, ),
        /* 146 */ array(20, ),
        /* 147 */ array(28, ),
        /* 148 */ array(1, ),
        /* 149 */ array(1, ),
        /* 150 */ array(1, ),
        /* 151 */ array(1, ),
        /* 152 */ array(28, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(20, ),
        /* 156 */ array(1, ),
        /* 157 */ array(1, ),
        /* 158 */ array(),
        /* 159 */ array(15, 17, 18, ),
        /* 160 */ array(15, 18, 61, ),
        /* 161 */ array(57, 63, ),
        /* 162 */ array(16, 28, ),
        /* 163 */ array(16, 28, ),
        /* 164 */ array(16, 28, ),
        /* 165 */ array(16, 28, ),
        /* 166 */ array(57, 63, ),
        /* 167 */ array(57, 63, ),
        /* 168 */ array(16, 28, ),
        /* 169 */ array(16, 28, ),
        /* 170 */ array(1, 16, ),
        /* 171 */ array(57, 63, ),
        /* 172 */ array(16, 28, ),
        /* 173 */ array(15, 36, ),
        /* 174 */ array(16, 28, ),
        /* 175 */ array(16, 28, ),
        /* 176 */ array(16, 28, ),
        /* 177 */ array(1, 16, ),
        /* 178 */ array(57, 63, ),
        /* 179 */ array(16, 28, ),
        /* 180 */ array(16, 28, ),
        /* 181 */ array(16, 28, ),
        /* 182 */ array(16, 28, ),
        /* 183 */ array(16, 28, ),
        /* 184 */ array(16, 28, ),
        /* 185 */ array(16, 28, ),
        /* 186 */ array(1, 16, ),
        /* 187 */ array(16, 28, ),
        /* 188 */ array(16, 28, ),
        /* 189 */ array(16, 28, ),
        /* 190 */ array(1, ),
        /* 191 */ array(2, ),
        /* 192 */ array(20, ),
        /* 193 */ array(36, ),
        /* 194 */ array(20, ),
        /* 195 */ array(1, ),
        /* 196 */ array(28, ),
        /* 197 */ array(20, ),
        /* 198 */ array(2, ),
        /* 199 */ array(28, ),
        /* 200 */ array(13, ),
        /* 201 */ array(),
        /* 202 */ array(),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(16, 23, 25, 26, 28, 29, 35, 36, 37, 52, 59, 64, 78, ),
        /* 207 */ array(16, 19, 28, 36, 59, ),
        /* 208 */ array(36, 57, 59, 64, ),
        /* 209 */ array(16, 28, 36, 59, ),
        /* 210 */ array(15, 17, 18, 34, ),
        /* 211 */ array(30, 36, 59, ),
        /* 212 */ array(19, 57, ),
        /* 213 */ array(35, 37, ),
        /* 214 */ array(24, 78, ),
        /* 215 */ array(36, 59, ),
        /* 216 */ array(36, 59, ),
        /* 217 */ array(35, 37, ),
        /* 218 */ array(35, 37, ),
        /* 219 */ array(23, 35, ),
        /* 220 */ array(2, 19, ),
        /* 221 */ array(18, 61, ),
        /* 222 */ array(35, 64, ),
        /* 223 */ array(16, 24, ),
        /* 224 */ array(18, ),
        /* 225 */ array(36, ),
        /* 226 */ array(25, ),
        /* 227 */ array(19, ),
        /* 228 */ array(17, ),
        /* 229 */ array(37, ),
        /* 230 */ array(18, ),
        /* 231 */ array(34, ),
        /* 232 */ array(18, ),
        /* 233 */ array(34, ),
        /* 234 */ array(57, ),
        /* 235 */ array(17, ),
        /* 236 */ array(24, ),
        /* 237 */ array(36, ),
        /* 238 */ array(2, ),
        /* 239 */ array(18, ),
        /* 240 */ array(17, ),
        /* 241 */ array(18, ),
        /* 242 */ array(17, ),
        /* 243 */ array(18, ),
        /* 244 */ array(18, ),
        /* 245 */ array(18, ),
        /* 246 */ array(17, ),
        /* 247 */ array(62, ),
        /* 248 */ array(2, ),
        /* 249 */ array(53, ),
        /* 250 */ array(18, ),
        /* 251 */ array(18, ),
        /* 252 */ array(64, ),
        /* 253 */ array(62, ),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
);
    static public $yy_default = array(
 /*     0 */   392,  574,  545,  591,  545,  591,  545,  591,  591,  591,
 /*    10 */   591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
 /*    20 */   591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
 /*    30 */   591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
 /*    40 */   591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
 /*    50 */   591,  591,  591,  591,  591,  591,  452,  452,  452,  452,
 /*    60 */   591,  591,  591,  591,  591,  591,  457,  591,  591,  591,
 /*    70 */   591,  482,  454,  478,  485,  486,  543,  463,  477,  457,
 /*    80 */   577,  576,  473,  544,  476,  459,  481,  575,  434,  462,
 /*    90 */   490,  489,  501,  465,  452,  389,  591,  452,  452,  510,
 /*   100 */   472,  452,  557,  591,  591,  452,  452,  452,  591,  591,
 /*   110 */   591,  465,  465,  518,  465,  591,  465,  518,  591,  465,
 /*   120 */   511,  518,  511,  591,  591,  591,  511,  518,  591,  591,
 /*   130 */   591,  591,  591,  591,  591,  591,  591,  465,  591,  591,
 /*   140 */   591,  591,  591,  591,  591,  591,  554,  452,  493,  494,
 /*   150 */   492,  475,  452,  469,  488,  511,  470,  468,  552,  591,
 /*   160 */   519,  536,  591,  591,  591,  591,  538,  535,  591,  591,
 /*   170 */   591,  516,  591,  518,  591,  591,  591,  591,  537,  591,
 /*   180 */   591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
 /*   190 */   472,  546,  555,  518,  532,  510,  590,  558,  547,  590,
 /*   200 */   407,  518,  551,  551,  518,  551,  467,  501,  501,  501,
 /*   210 */   591,  501,  497,  591,  491,  501,  487,  591,  591,  591,
 /*   220 */   530,  591,  591,  491,  591,  530,  460,  591,  591,  591,
 /*   230 */   591,  591,  591,  499,  497,  591,  491,  556,  530,  591,
 /*   240 */   591,  591,  591,  591,  591,  591,  591,  591,  530,  503,
 /*   250 */   591,  591,  591,  591,  390,  581,  573,  571,  572,  417,
 /*   260 */   432,  431,  461,  541,  540,  523,  503,  442,  553,  441,
 /*   270 */   588,  531,  527,  525,  542,  464,  436,  539,  589,  524,
 /*   280 */   526,  435,  437,  570,  443,  530,  444,  550,  445,  529,
 /*   290 */   440,  451,  430,  433,  438,  439,  446,  447,  500,  498,
 /*   300 */   506,  466,  467,  496,  495,  548,  549,  448,  449,  429,
 /*   310 */   450,  399,  398,  400,  401,  402,  397,  396,  391,  393,
 /*   320 */   394,  395,  403,  404,  413,  412,  414,  415,  416,  411,
 /*   330 */   410,  405,  406,  408,  409,  512,  517,  586,  419,  420,
 /*   340 */   421,  422,  418,  515,  534,  533,  509,  513,  514,  423,
 /*   350 */   424,  580,  579,  583,  582,  584,  578,  585,  425,  426,
 /*   360 */   428,  427,  508,  471,  505,  504,  507,  479,  480,  474,
 /*   370 */   502,  520,  528,  521,  522,  483,  484,  566,  565,  567,
 /*   380 */   568,  569,  564,  563,  559,  560,  561,  562,  587,
);
    const YYNOCODE = 123;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 389;
    const YYNRULE = 202;
    const YYERRORSYMBOL = 80;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array( 
  '$',             'VERT',          'COLON',         'COMMENT',     
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',   
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',   
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',        
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',       
  'PTR',           'LDELIF',        'LDELFOR',       'SEMICOLON',   
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH', 
  'SPACE',         'AS',            'APTR',          'LDELSETFILTER',
  'SMARTYBLOCKCHILD',  'LDELSLASH',     'INTEGER',       'COMMA',       
  'OPENP',         'CLOSEP',        'MATH',          'UNIMATH',     
  'ANDSYM',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',  
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY', 
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',  
  'INSTANCEOF',    'QMARK',         'NOT',           'TYPECAST',    
  'HEX',           'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON', 
  'NAMESPACECLASS',  'AT',            'HATCH',         'OPENB',       
  'CLOSEB',        'EQUALS',        'NOTEQUALS',     'GREATERTHAN', 
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',    
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',         
  'LXOR',          'QUOTE',         'BACKTICK',      'DOLLARID',    
  'error',         'start',         'template',      'template_element',
  'smartytag',     'literal',       'literal_elements',  'literal_element',
  'value',         'modifierlist',  'attributes',    'expr',        
  'varindexed',    'statement',     'statements',    'optspace',    
  'varvar',        'foraction',     'modparameters',  'attribute',   
  'ternary',       'array',         'ifcond',        'lop',         
  'variable',      'function',      'doublequoted_with_quotes',  'static_class_access',
  'object',        'arrayindex',    'indexdef',      'varvarele',   
  'objectchain',   'objectelement',  'method',        'params',      
  'modifier',      'modparameter',  'arrayelements',  'arrayelement',
  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "literal_element ::= ASPSTARTTAG",
 /*  25 */ "literal_element ::= ASPENDTAG",
 /*  26 */ "smartytag ::= LDEL value RDEL",
 /*  27 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  28 */ "smartytag ::= LDEL value attributes RDEL",
 /*  29 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  31 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  32 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  34 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  35 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  36 */ "smartytag ::= LDEL ID RDEL",
 /*  37 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  40 */ "smartytag ::= LDELIF expr RDEL",
 /*  41 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF statement RDEL",
 /*  43 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  44 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes RDEL",
 /*  45 */ "foraction ::= EQUAL expr",
 /*  46 */ "foraction ::= INCDEC",
 /*  47 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  56 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  57 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  58 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  61 */ "attributes ::= attributes attribute",
 /*  62 */ "attributes ::= attribute",
 /*  63 */ "attributes ::=",
 /*  64 */ "attribute ::= SPACE ID EQUAL ID",
 /*  65 */ "attribute ::= SPACE ID EQUAL expr",
 /*  66 */ "attribute ::= SPACE ID EQUAL value",
 /*  67 */ "attribute ::= SPACE ID",
 /*  68 */ "attribute ::= SPACE expr",
 /*  69 */ "attribute ::= SPACE value",
 /*  70 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  71 */ "statements ::= statement",
 /*  72 */ "statements ::= statements COMMA statement",
 /*  73 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  74 */ "statement ::= varindexed EQUAL expr",
 /*  75 */ "statement ::= OPENP statement CLOSEP",
 /*  76 */ "expr ::= value",
 /*  77 */ "expr ::= ternary",
 /*  78 */ "expr ::= DOLLAR ID COLON ID",
 /*  79 */ "expr ::= expr MATH value",
 /*  80 */ "expr ::= expr UNIMATH value",
 /*  81 */ "expr ::= expr ANDSYM value",
 /*  82 */ "expr ::= array",
 /*  83 */ "expr ::= expr modifierlist",
 /*  84 */ "expr ::= expr ifcond expr",
 /*  85 */ "expr ::= expr ISIN array",
 /*  86 */ "expr ::= expr ISIN value",
 /*  87 */ "expr ::= expr lop expr",
 /*  88 */ "expr ::= expr ISDIVBY expr",
 /*  89 */ "expr ::= expr ISNOTDIVBY expr",
 /*  90 */ "expr ::= expr ISEVEN",
 /*  91 */ "expr ::= expr ISNOTEVEN",
 /*  92 */ "expr ::= expr ISEVENBY expr",
 /*  93 */ "expr ::= expr ISNOTEVENBY expr",
 /*  94 */ "expr ::= expr ISODD",
 /*  95 */ "expr ::= expr ISNOTODD",
 /*  96 */ "expr ::= expr ISODDBY expr",
 /*  97 */ "expr ::= expr ISNOTODDBY expr",
 /*  98 */ "expr ::= value INSTANCEOF ID",
 /*  99 */ "expr ::= value INSTANCEOF value",
 /* 100 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 101 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 102 */ "value ::= variable",
 /* 103 */ "value ::= UNIMATH value",
 /* 104 */ "value ::= NOT value",
 /* 105 */ "value ::= TYPECAST value",
 /* 106 */ "value ::= variable INCDEC",
 /* 107 */ "value ::= HEX",
 /* 108 */ "value ::= INTEGER",
 /* 109 */ "value ::= INTEGER DOT INTEGER",
 /* 110 */ "value ::= INTEGER DOT",
 /* 111 */ "value ::= DOT INTEGER",
 /* 112 */ "value ::= ID",
 /* 113 */ "value ::= function",
 /* 114 */ "value ::= OPENP expr CLOSEP",
 /* 115 */ "value ::= SINGLEQUOTESTRING",
 /* 116 */ "value ::= doublequoted_with_quotes",
 /* 117 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 118 */ "value ::= NAMESPACECLASS static_class_access",
 /* 119 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 120 */ "value ::= smartytag",
 /* 121 */ "value ::= value modifierlist",
 /* 122 */ "variable ::= varindexed",
 /* 123 */ "variable ::= DOLLAR varvar AT ID",
 /* 124 */ "variable ::= object",
 /* 125 */ "variable ::= HATCH ID HATCH",
 /* 126 */ "variable ::= HATCH variable HATCH",
 /* 127 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 128 */ "arrayindex ::= arrayindex indexdef",
 /* 129 */ "arrayindex ::=",
 /* 130 */ "indexdef ::= DOT DOLLAR varvar",
 /* 131 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 132 */ "indexdef ::= DOT ID",
 /* 133 */ "indexdef ::= DOT INTEGER",
 /* 134 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 135 */ "indexdef ::= OPENB ID CLOSEB",
 /* 136 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 137 */ "indexdef ::= OPENB expr CLOSEB",
 /* 138 */ "indexdef ::= OPENB CLOSEB",
 /* 139 */ "varvar ::= varvarele",
 /* 140 */ "varvar ::= varvar varvarele",
 /* 141 */ "varvarele ::= ID",
 /* 142 */ "varvarele ::= LDEL expr RDEL",
 /* 143 */ "object ::= varindexed objectchain",
 /* 144 */ "objectchain ::= objectelement",
 /* 145 */ "objectchain ::= objectchain objectelement",
 /* 146 */ "objectelement ::= PTR ID arrayindex",
 /* 147 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 148 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 149 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 150 */ "objectelement ::= PTR method",
 /* 151 */ "function ::= ID OPENP params CLOSEP",
 /* 152 */ "method ::= ID OPENP params CLOSEP",
 /* 153 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 154 */ "params ::= params COMMA expr",
 /* 155 */ "params ::= expr",
 /* 156 */ "params ::=",
 /* 157 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 158 */ "modifierlist ::= modifier modparameters",
 /* 159 */ "modifier ::= VERT AT ID",
 /* 160 */ "modifier ::= VERT ID",
 /* 161 */ "modparameters ::= modparameters modparameter",
 /* 162 */ "modparameters ::=",
 /* 163 */ "modparameter ::= COLON value",
 /* 164 */ "modparameter ::= COLON array",
 /* 165 */ "static_class_access ::= method",
 /* 166 */ "static_class_access ::= method objectchain",
 /* 167 */ "static_class_access ::= ID",
 /* 168 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 169 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 170 */ "ifcond ::= EQUALS",
 /* 171 */ "ifcond ::= NOTEQUALS",
 /* 172 */ "ifcond ::= GREATERTHAN",
 /* 173 */ "ifcond ::= LESSTHAN",
 /* 174 */ "ifcond ::= GREATEREQUAL",
 /* 175 */ "ifcond ::= LESSEQUAL",
 /* 176 */ "ifcond ::= IDENTITY",
 /* 177 */ "ifcond ::= NONEIDENTITY",
 /* 178 */ "ifcond ::= MOD",
 /* 179 */ "lop ::= LAND",
 /* 180 */ "lop ::= LOR",
 /* 181 */ "lop ::= LXOR",
 /* 182 */ "array ::= OPENB arrayelements CLOSEB",
 /* 183 */ "arrayelements ::= arrayelement",
 /* 184 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 185 */ "arrayelements ::=",
 /* 186 */ "arrayelement ::= value APTR expr",
 /* 187 */ "arrayelement ::= ID APTR expr",
 /* 188 */ "arrayelement ::= expr",
 /* 189 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 190 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 191 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 192 */ "doublequoted ::= doublequotedcontent",
 /* 193 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 194 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 195 */ "doublequotedcontent ::= DOLLARID",
 /* 196 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 197 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 198 */ "doublequotedcontent ::= smartytag",
 /* 199 */ "doublequotedcontent ::= OTHER",
 /* 200 */ "optspace ::= SPACE",
 /* 201 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 84 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1766 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 0 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 0 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 7 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 7 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 12 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 11 ),
  array( 'lhs' => 84, 'rhs' => 8 ),
  array( 'lhs' => 84, 'rhs' => 11 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 4 ),
  array( 'lhs' => 84, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 6 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 8 ),
  array( 'lhs' => 100, 'rhs' => 7 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 4 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 5 ),
  array( 'lhs' => 113, 'rhs' => 6 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 5 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 115, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 0 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 0 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 2 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        201 => 15,
        16 => 16,
        75 => 16,
        17 => 17,
        103 => 17,
        105 => 17,
        106 => 17,
        128 => 17,
        166 => 17,
        19 => 19,
        20 => 19,
        46 => 19,
        68 => 19,
        69 => 19,
        76 => 19,
        77 => 19,
        82 => 19,
        102 => 19,
        107 => 19,
        108 => 19,
        113 => 19,
        115 => 19,
        116 => 19,
        124 => 19,
        139 => 19,
        165 => 19,
        167 => 19,
        183 => 19,
        188 => 19,
        200 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        30 => 28,
        29 => 29,
        31 => 31,
        32 => 31,
        33 => 33,
        34 => 34,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        43 => 41,
        42 => 42,
        44 => 44,
        45 => 45,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        71 => 62,
        155 => 62,
        159 => 62,
        163 => 62,
        164 => 62,
        63 => 63,
        156 => 63,
        162 => 63,
        64 => 64,
        65 => 65,
        66 => 65,
        70 => 65,
        67 => 67,
        72 => 72,
        73 => 73,
        74 => 73,
        78 => 78,
        79 => 79,
        80 => 79,
        81 => 79,
        83 => 83,
        121 => 83,
        84 => 84,
        87 => 84,
        98 => 84,
        85 => 85,
        86 => 86,
        88 => 88,
        89 => 89,
        90 => 90,
        95 => 90,
        91 => 91,
        94 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        99 => 99,
        100 => 100,
        101 => 101,
        104 => 104,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        123 => 123,
        125 => 125,
        126 => 126,
        127 => 127,
        129 => 129,
        185 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        137 => 134,
        135 => 135,
        136 => 136,
        138 => 138,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        157 => 157,
        158 => 158,
        160 => 160,
        161 => 161,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        184 => 184,
        186 => 186,
        187 => 187,
        189 => 189,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 193,
        196 => 193,
        195 => 195,
        197 => 197,
        198 => 198,
        199 => 199,
    );
#line 95 "smarty_internal_templateparser.y"
    function yy_r0(){
    $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2198 "smarty_internal_templateparser.php"
#line 103 "smarty_internal_templateparser.y"
    function yy_r1(){
    $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2203 "smarty_internal_templateparser.php"
#line 119 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->has_code) {
        $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
    } else { 
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }  
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2215 "smarty_internal_templateparser.php"
#line 131 "smarty_internal_templateparser.y"
    function yy_r5(){
    $this->_retvalue = new _smarty_tag($this, '');
    }
#line 2220 "smarty_internal_templateparser.php"
#line 136 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2225 "smarty_internal_templateparser.php"
#line 141 "smarty_internal_templateparser.y"
    function yy_r7(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2241 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r8(){
    if ($this->is_xml) {
        $this->compiler->tag_nocache = true; 
        $this->is_xml = false;
        $save = $this->template->has_nocache_code; 
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
        $this->template->has_nocache_code = $save; 
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2260 "smarty_internal_templateparser.php"
#line 176 "smarty_internal_templateparser.y"
    function yy_r9(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    }
#line 2284 "smarty_internal_templateparser.php"
#line 200 "smarty_internal_templateparser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    }
#line 2305 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r11(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor))); 
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));  
    }
    }
#line 2314 "smarty_internal_templateparser.php"
#line 229 "smarty_internal_templateparser.y"
    function yy_r12(){
    $this->compiler->tag_nocache = true;
    $this->is_xml = true; 
    $save = $this->template->has_nocache_code; 
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
    $this->template->has_nocache_code = $save;
    }
#line 2323 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r13(){
    if ($this->lex->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor)); 
    } else {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);  
    }
    }
#line 2332 "smarty_internal_templateparser.php"
#line 246 "smarty_internal_templateparser.y"
    function yy_r14(){
    $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2337 "smarty_internal_templateparser.php"
#line 251 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->_retvalue = '';
    }
#line 2342 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r16(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2347 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2352 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2357 "smarty_internal_templateparser.php"
#line 275 "smarty_internal_templateparser.y"
    function yy_r21(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2362 "smarty_internal_templateparser.php"
#line 283 "smarty_internal_templateparser.y"
    function yy_r23(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2367 "smarty_internal_templateparser.php"
#line 287 "smarty_internal_templateparser.y"
    function yy_r24(){
    $this->_retvalue = '<<?php ?>%';
    }
#line 2372 "smarty_internal_templateparser.php"
#line 291 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = '%<?php ?>>';
    }
#line 2377 "smarty_internal_templateparser.php"
#line 301 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2382 "smarty_internal_templateparser.php"
#line 305 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2387 "smarty_internal_templateparser.php"
#line 309 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2392 "smarty_internal_templateparser.php"
#line 313 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2397 "smarty_internal_templateparser.php"
#line 326 "smarty_internal_templateparser.y"
    function yy_r31(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));
    }
#line 2402 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r33(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2407 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r34(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }
#line 2412 "smarty_internal_templateparser.php"
#line 343 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2417 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());
    }
#line 2422 "smarty_internal_templateparser.php"
#line 352 "smarty_internal_templateparser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2427 "smarty_internal_templateparser.php"
#line 357 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2433 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
    }
#line 2439 "smarty_internal_templateparser.php"
#line 369 "smarty_internal_templateparser.y"
    function yy_r40(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length)); 
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2445 "smarty_internal_templateparser.php"
#line 374 "smarty_internal_templateparser.y"
    function yy_r41(){
    $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2451 "smarty_internal_templateparser.php"
#line 379 "smarty_internal_templateparser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2457 "smarty_internal_templateparser.php"
#line 390 "smarty_internal_templateparser.y"
    function yy_r44(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),1);
    }
#line 2462 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r45(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2467 "smarty_internal_templateparser.php"
#line 402 "smarty_internal_templateparser.y"
    function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2472 "smarty_internal_templateparser.php"
#line 406 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2477 "smarty_internal_templateparser.php"
#line 411 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2482 "smarty_internal_templateparser.php"
#line 416 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2487 "smarty_internal_templateparser.php"
#line 420 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2492 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r52(){ 
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2497 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r53(){ 
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2502 "smarty_internal_templateparser.php"
#line 433 "smarty_internal_templateparser.y"
    function yy_r54(){ 
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2507 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r55(){ 
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2512 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    }
#line 2517 "smarty_internal_templateparser.php"
#line 448 "smarty_internal_templateparser.y"
    function yy_r57(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());
    }
#line 2522 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2527 "smarty_internal_templateparser.php"
#line 457 "smarty_internal_templateparser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2532 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2537 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2543 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r62(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2548 "smarty_internal_templateparser.php"
#line 480 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->_retvalue = array();
    }
#line 2553 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r64(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2566 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r65(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2571 "smarty_internal_templateparser.php"
#line 505 "smarty_internal_templateparser.y"
    function yy_r67(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2576 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r72(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2582 "smarty_internal_templateparser.php"
#line 535 "smarty_internal_templateparser.y"
    function yy_r73(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2587 "smarty_internal_templateparser.php"
#line 563 "smarty_internal_templateparser.y"
    function yy_r78(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2592 "smarty_internal_templateparser.php"
#line 568 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2597 "smarty_internal_templateparser.php"
#line 587 "smarty_internal_templateparser.y"
    function yy_r83(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2602 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2607 "smarty_internal_templateparser.php"
#line 597 "smarty_internal_templateparser.y"
    function yy_r85(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2612 "smarty_internal_templateparser.php"
#line 601 "smarty_internal_templateparser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2617 "smarty_internal_templateparser.php"
#line 609 "smarty_internal_templateparser.y"
    function yy_r88(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2622 "smarty_internal_templateparser.php"
#line 613 "smarty_internal_templateparser.y"
    function yy_r89(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2627 "smarty_internal_templateparser.php"
#line 617 "smarty_internal_templateparser.y"
    function yy_r90(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2632 "smarty_internal_templateparser.php"
#line 621 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2637 "smarty_internal_templateparser.php"
#line 625 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2642 "smarty_internal_templateparser.php"
#line 629 "smarty_internal_templateparser.y"
    function yy_r93(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2647 "smarty_internal_templateparser.php"
#line 653 "smarty_internal_templateparser.y"
    function yy_r99(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2654 "smarty_internal_templateparser.php"
#line 662 "smarty_internal_templateparser.y"
    function yy_r100(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2659 "smarty_internal_templateparser.php"
#line 666 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2664 "smarty_internal_templateparser.php"
#line 681 "smarty_internal_templateparser.y"
    function yy_r104(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2669 "smarty_internal_templateparser.php"
#line 702 "smarty_internal_templateparser.y"
    function yy_r109(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2674 "smarty_internal_templateparser.php"
#line 706 "smarty_internal_templateparser.y"
    function yy_r110(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2679 "smarty_internal_templateparser.php"
#line 710 "smarty_internal_templateparser.y"
    function yy_r111(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2684 "smarty_internal_templateparser.php"
#line 715 "smarty_internal_templateparser.y"
    function yy_r112(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2697 "smarty_internal_templateparser.php"
#line 733 "smarty_internal_templateparser.y"
    function yy_r114(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2702 "smarty_internal_templateparser.php"
#line 748 "smarty_internal_templateparser.y"
    function yy_r117(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2715 "smarty_internal_templateparser.php"
#line 761 "smarty_internal_templateparser.y"
    function yy_r118(){
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2720 "smarty_internal_templateparser.php"
#line 765 "smarty_internal_templateparser.y"
    function yy_r119(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2729 "smarty_internal_templateparser.php"
#line 774 "smarty_internal_templateparser.y"
    function yy_r120(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2736 "smarty_internal_templateparser.php"
#line 789 "smarty_internal_templateparser.y"
    function yy_r122(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current 
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2749 "smarty_internal_templateparser.php"
#line 802 "smarty_internal_templateparser.y"
    function yy_r123(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars->'. trim($this->yystack[$this->yyidx + -2]->minor,"'") .'->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2754 "smarty_internal_templateparser.php"
#line 812 "smarty_internal_templateparser.y"
    function yy_r125(){
    $this->_retvalue = '$_smarty_tpl->config_vars->'. $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2759 "smarty_internal_templateparser.php"
#line 816 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
#line 2764 "smarty_internal_templateparser.php"
#line 820 "smarty_internal_templateparser.y"
    function yy_r127(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2769 "smarty_internal_templateparser.php"
#line 833 "smarty_internal_templateparser.y"
    function yy_r129(){
    return;
    }
#line 2774 "smarty_internal_templateparser.php"
#line 839 "smarty_internal_templateparser.y"
    function yy_r130(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2779 "smarty_internal_templateparser.php"
#line 843 "smarty_internal_templateparser.y"
    function yy_r131(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2784 "smarty_internal_templateparser.php"
#line 847 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2789 "smarty_internal_templateparser.php"
#line 851 "smarty_internal_templateparser.y"
    function yy_r133(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2794 "smarty_internal_templateparser.php"
#line 855 "smarty_internal_templateparser.y"
    function yy_r134(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2799 "smarty_internal_templateparser.php"
#line 860 "smarty_internal_templateparser.y"
    function yy_r135(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2804 "smarty_internal_templateparser.php"
#line 864 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2809 "smarty_internal_templateparser.php"
#line 874 "smarty_internal_templateparser.y"
    function yy_r138(){
    $this->_retvalue = '[]';
    }
#line 2814 "smarty_internal_templateparser.php"
#line 887 "smarty_internal_templateparser.y"
    function yy_r140(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2819 "smarty_internal_templateparser.php"
#line 892 "smarty_internal_templateparser.y"
    function yy_r141(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2824 "smarty_internal_templateparser.php"
#line 897 "smarty_internal_templateparser.y"
    function yy_r142(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2829 "smarty_internal_templateparser.php"
#line 904 "smarty_internal_templateparser.y"
    function yy_r143(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2838 "smarty_internal_templateparser.php"
#line 913 "smarty_internal_templateparser.y"
    function yy_r144(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2843 "smarty_internal_templateparser.php"
#line 918 "smarty_internal_templateparser.y"
    function yy_r145(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2848 "smarty_internal_templateparser.php"
#line 923 "smarty_internal_templateparser.y"
    function yy_r146(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2856 "smarty_internal_templateparser.php"
#line 930 "smarty_internal_templateparser.y"
    function yy_r147(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2864 "smarty_internal_templateparser.php"
#line 937 "smarty_internal_templateparser.y"
    function yy_r148(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2872 "smarty_internal_templateparser.php"
#line 944 "smarty_internal_templateparser.y"
    function yy_r149(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2880 "smarty_internal_templateparser.php"
#line 952 "smarty_internal_templateparser.y"
    function yy_r150(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2885 "smarty_internal_templateparser.php"
#line 960 "smarty_internal_templateparser.y"
    function yy_r151(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                if (strncasecmp($par,'$_smarty_tpl->config_vars',strlen('$_smarty_tpl->config_vars')) === 0) {
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.preg_replace('/\$_smarty_tpl->config_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getConfigVariable(\'\1\', null, true, false)',$par).';?>';
                    $isset_par = '$_tmp'.$this->prefix_number;
                } else {
                    $isset_par = preg_replace('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)/','$_smarty_tpl->getVariable(\'\1\', null, true, false)',$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2921 "smarty_internal_templateparser.php"
#line 998 "smarty_internal_templateparser.y"
    function yy_r152(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2929 "smarty_internal_templateparser.php"
#line 1005 "smarty_internal_templateparser.y"
    function yy_r153(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2939 "smarty_internal_templateparser.php"
#line 1016 "smarty_internal_templateparser.y"
    function yy_r154(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2944 "smarty_internal_templateparser.php"
#line 1033 "smarty_internal_templateparser.y"
    function yy_r157(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2949 "smarty_internal_templateparser.php"
#line 1037 "smarty_internal_templateparser.y"
    function yy_r158(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2954 "smarty_internal_templateparser.php"
#line 1045 "smarty_internal_templateparser.y"
    function yy_r160(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2959 "smarty_internal_templateparser.php"
#line 1053 "smarty_internal_templateparser.y"
    function yy_r161(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2964 "smarty_internal_templateparser.php"
#line 1087 "smarty_internal_templateparser.y"
    function yy_r168(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2969 "smarty_internal_templateparser.php"
#line 1092 "smarty_internal_templateparser.y"
    function yy_r169(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2974 "smarty_internal_templateparser.php"
#line 1098 "smarty_internal_templateparser.y"
    function yy_r170(){
    $this->_retvalue = '==';
    }
#line 2979 "smarty_internal_templateparser.php"
#line 1102 "smarty_internal_templateparser.y"
    function yy_r171(){
    $this->_retvalue = '!=';
    }
#line 2984 "smarty_internal_templateparser.php"
#line 1106 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = '>';
    }
#line 2989 "smarty_internal_templateparser.php"
#line 1110 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->_retvalue = '<';
    }
#line 2994 "smarty_internal_templateparser.php"
#line 1114 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = '>=';
    }
#line 2999 "smarty_internal_templateparser.php"
#line 1118 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = '<=';
    }
#line 3004 "smarty_internal_templateparser.php"
#line 1122 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = '===';
    }
#line 3009 "smarty_internal_templateparser.php"
#line 1126 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = '!==';
    }
#line 3014 "smarty_internal_templateparser.php"
#line 1130 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = '%';
    }
#line 3019 "smarty_internal_templateparser.php"
#line 1134 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '&&';
    }
#line 3024 "smarty_internal_templateparser.php"
#line 1138 "smarty_internal_templateparser.y"
    function yy_r180(){
    $this->_retvalue = '||';
    }
#line 3029 "smarty_internal_templateparser.php"
#line 1142 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = ' XOR ';
    }
#line 3034 "smarty_internal_templateparser.php"
#line 1149 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 3039 "smarty_internal_templateparser.php"
#line 1157 "smarty_internal_templateparser.y"
    function yy_r184(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3044 "smarty_internal_templateparser.php"
#line 1165 "smarty_internal_templateparser.y"
    function yy_r186(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3049 "smarty_internal_templateparser.php"
#line 1169 "smarty_internal_templateparser.y"
    function yy_r187(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3054 "smarty_internal_templateparser.php"
#line 1181 "smarty_internal_templateparser.y"
    function yy_r189(){
    $this->_retvalue = "''";
    }
#line 3059 "smarty_internal_templateparser.php"
#line 1185 "smarty_internal_templateparser.y"
    function yy_r190(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 3064 "smarty_internal_templateparser.php"
#line 1190 "smarty_internal_templateparser.y"
    function yy_r191(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 3070 "smarty_internal_templateparser.php"
#line 1195 "smarty_internal_templateparser.y"
    function yy_r192(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3075 "smarty_internal_templateparser.php"
#line 1199 "smarty_internal_templateparser.y"
    function yy_r193(){
    $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);
    }
#line 3080 "smarty_internal_templateparser.php"
#line 1207 "smarty_internal_templateparser.y"
    function yy_r195(){
    $this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars->'. substr($this->yystack[$this->yyidx + 0]->minor,1) .'->value');
    }
#line 3085 "smarty_internal_templateparser.php"
#line 1215 "smarty_internal_templateparser.y"
    function yy_r197(){
    $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 3090 "smarty_internal_templateparser.php"
#line 1219 "smarty_internal_templateparser.y"
    function yy_r198(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3095 "smarty_internal_templateparser.php"
#line 1223 "smarty_internal_templateparser.y"
    function yy_r199(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3100 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 77 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 3163 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 69 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3181 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>