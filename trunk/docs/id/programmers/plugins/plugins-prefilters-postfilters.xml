<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
   <sect1 id="plugins.prefilters.postfilters">
    <title>Prefilters/Postfilters</title>
    <para>
     Plugin prefilter dan postfilter sangat mirip dalam konsep; di mana
     keduanya berbeda dalam eksekusi -- lebih tepatnya waktu eksekusinya.
    </para>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>smarty_prefilter_<replaceable>name</replaceable></function></funcdef>
      <paramdef>string <parameter>$source</parameter></paramdef>
      <paramdef>object <parameter>&amp;$smarty</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Prefilters dipakai untuk memproses sumber template segera sebelum
     kompilasi. Parameter pertama ke fungsi prefilter adalah sumber
     template, kemungkinan diubah oleh beberapa prefilters lain. Plugin 
     seharusnya mengembalikan sumber yang diubah.  Catatan bahwa sumber
     ini tidak disimpan di mana pun, hanya dipakai untuk kompilasi.
    </para>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>smarty_postfilter_<replaceable>name</replaceable></function></funcdef>
      <paramdef>string <parameter>$compiled</parameter></paramdef>
      <paramdef>object <parameter>&amp;$smarty</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Postfilters dipakai untuk memproses output terkompilasi dari template
     (kode PHP) segera setelah kompilasi dikerjakan sebelum template 
     terkompilasi disimpan ke sistem file. Parameter pertama ke fungsi
     postfilter adalah kode template terkompilasi, kemungkinan diubah oleh
     postfilters lainnya. Plugin seharusnya mengembalikan versi yang diubah
     atas kode ini.
    </para>
    <example>
     <title>plugin prefilter</title>
     <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * File:     prefilter.pre01.php
 * Tipe:     prefilter
 * Nama:     pre01
 * Kegunaan: Mengubah tag html ke huruf kecil.
 * -------------------------------------------------------------
 */
 function smarty_prefilter_pre01($source, &$smarty)
 {
     return preg_replace('!<(\w+)[^>]+>!e', 'strtolower("$1")', $source);
 }
?>
]]>
     </programlisting>
    </example>
    <para></para>
    <example>
     <title>plugin postfilter</title>
     <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * File:     postfilter.post01.php
 * Tipe:     postfilter
 * Nama:     post01
 * Kegunaan: Kode output yang mendaftarkan semua var template saat
 *					 ini.
 * -------------------------------------------------------------
 */
 function smarty_postfilter_post01($compiled, &$smarty)
 {
     $compiled = "<pre>\n<?php print_r(\$this->get_template_vars()); ?>\n</pre>" . $compiled;
     return $compiled;
 }
?>
]]>
     </programlisting>
    </example>
        <para>
     Lihat juga
     <link linkend="api.register.prefilter">
     <varname>register_prefilter()</varname></link>,
     <link linkend="api.unregister.prefilter">
     <varname>unregister_prefilter()</varname></link>
        <link linkend="api.register.postfilter">
     <varname>register_postfilter()</varname></link>,
     <link linkend="api.unregister.postfilter">
     <varname>unregister_postfilter()</varname></link>.
    </para>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
