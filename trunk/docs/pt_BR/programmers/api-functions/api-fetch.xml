<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: ready -->		
<sect1 id="api.fetch">
			<title>fetch</title>
   <methodsynopsis>
   <type>string</type><methodname>fetch</methodname>
    <methodparam><type>string</type><parameter>template</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>cache_id</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>compile_id</parameter></methodparam>
   </methodsynopsis>
			<para>
                Isso retorna a saída do template ao invés de mostrá-lo.
		Fornecendo um tipo ou path válido  <link
                linkend="template.resources">template resource</link>. 
		Como um segundo parâmetro opcional, você pode passar o cache id.
		Veja o <link linkend="caching">caching
                section</link> para maiores informações.
			</para>
			<para>
				Como um terceiro parâmetro opcional, você pode passar um compile id.
				Isso está no evento que você quer compilar diferentes versões do
				mesmo template, como ter templates compilados separadamente para
				diferentes linguagens. Outro uso para compile_id é quando você
				usa mais do que um $template_dir mas somente um $compile_dir. Seta
				um compile_id em separado para cada $template_dir, de outra maneira
				templates com mesmo nome irão sobrescrever-se uns aos outros. Você
				pode também setar a variável <link
				linkend="variable.compile.id">$compile_id</link> ao invés
				de passá-la para cada chamada de fetch().
			</para>
<example>
<title>fetch</title>
<programlisting>
include("Smarty.class.php");
$smarty = new Smarty;

$smarty->caching = true;

// only do db calls if cache doesn't exist
if(!$smarty->is_cached("index.tpl"))
{

    // dummy up some data
    $address = "245 N 50th";
    $db_data = array(
	    "City" => "Lincoln",
	    "State" => "Nebraska",
	    "Zip" = > "68502"
	    );

    $smarty->assign("Name","Fred");
    $smarty->assign("Address",$address);
    $smarty->assign($db_data);

}

// capture the output
$output = $smarty->fetch("index.tpl");

// do something with $output here

echo $output;</programlisting>
</example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->