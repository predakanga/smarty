<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.2 Maintainer: thomasgm Status: ready -->
     <sect1 id="language.function.capture">
      <title>capture</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do Atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Obrigatório</entry>
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>default</emphasis></entry>
                        <entry>O nome do bloco capturado</entry>
                    </row>
                    <row>
                        <entry>assign</entry>
                        <entry>string</entry>
                        <entry>Não</entry>
                        <entry><emphasis>n/a</emphasis></entry>
                        <entry>O nome da variável para dar o valor da saída capturada</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
      <para>
       capture é usado para coletar toda a saída do template em uma variável ao invés
       de mostra-lo. Qualquer conteúdo entre {capture
       name="foo"} e {/capture} coletado na variável especificada no atributo name.
       O conteúdo capturado pode ser usado no template a partir da variável especial
       $smarty.capture.foo aonde foo é o valor passado para o atributo name. Se você não
       passar um atributo name, então será usado "default". Todos os comandos
       {capture} devem ter o seu {/capture}. Você pode aninhar(colocar um dentro de outro)
       comandos capture.
      </para>
	  <note>
	  <title>Nota Tecnica</title>
      <para>
       Smarty 1.4.0 - 1.4.4 coloca o conteúdo capturado dentro da variável
       chamada $return. A partir do 1.4.5, este funcionamento foi mudado
       para usar o atributo name, então atualize os seus templates de acordo.
      </para>
	  </note>
      <caution>
       <para>
        Tenha cuidado quando capturar a saída do comando <command>insert</command>.
        Se você tiver o cache em on e você tiver comandos <command>insert</command>
        que você espera que funcione com conteúdo do cache, 
        não capture este conteúdo.
       </para>
      </caution>
      <para>
       <example>
        <title>capturando conteúdo do template</title>
        <programlisting>
<![CDATA[
{* nós não queremos mostrar uma linha de tabela à não ser que haja conteúdo para ela *}
{capture name=banner}
{include file="pegar_banner.tpl"}
{/capture}
{if $smarty.capture.banner ne ""}
	<tr>
		<td>
			{$smarty.capture.banner}
		</td>
	</tr>
{/if}
]]>
</programlisting>
       </example>
      </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->