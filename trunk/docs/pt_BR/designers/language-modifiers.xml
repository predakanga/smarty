<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.3 Maintainer: thomasgm Status: ready -->
    <chapter id="language.modifiers">
     <title>Modificadores de variáveis</title>
     <para>
      Modificadores de variáveis podem ser aplicados a variáveis, funções personalizadas 
      ou strings. Para aplicar um modificador, especifique o valor seguido por
      <literal>|</literal>(pipe) e o nome do modificador. Um modificador aceita
      parâmetros adicionais que afetam o seu comportamento. Estes parâmetros vem após 
      o nome do modificador e são separados por <literal>:</literal> (dois pontos).
     </para>
     <example>
      <title>Exemplo de modificador</title>
      <programlisting>
<![CDATA[
{* Faz o título ficar com letras maiúsculas *}
<h2>{$titulo|upper}</h2>

{* Faz com que $topico use somente 40 caracteres, e coloca ... no fim da frase *}

Tópico: {$topico|truncate:40:"..."}

{* transforma a data em um formato legível *}
{"agora"|date_format:"%Y/%m/%d"}

{* aplica um modificador à uma função personalizada *}
{mailto|upper address="eu@dominio.dom"}
]]>
</programlisting>
     </example>
     <para>
      Se você aplicar um modificador à uma matriz ao invés de aplicar ao valor de uma variável, 
	  o modificador vai ser aplicado à cada valor da matriz especificada. Se você quer que o modificador 
	  use a matriz inteira como um valor, você deve colocar o símbolo <literal>@</literal> antes do 
	  nome do modificador, como a seguir: <literal>{$tituloArtigo|@count}</literal> 
	  (isto irá mostrar o número de elementos na matriz $tituloArtigo).
     </para>
     <para>
      Modificadores podem ser carregados automaticamente à partir do seu <link
      linkend="variable.plugins.dir">$plugins_dir</link> (veja: 
	  <link linkend="plugins.naming.conventions">Nomes sugeridos</link>) ou podem ser 
	  registrados explicitamente (veja: <link
      linkend="api.register.modifier">register_modifier</link>). Adicionalmente, 
	  todas as funções php podem ser utiliadas como modificadores implicitamente. (O 
	  exemplo do <literal>@count</literal> acima usa a função count do php e não 
	  um modificador do Smarty). Usar funções do php como modificadores tem dois 
	  pequenos problemas: Primeiro: às vezes a ordem dos parâmetros da função 
	  não é a desejada (<literal>{"%2.f"|sprintf:$float}</literal> atualmente funciona, 
	  mas o melhor seria algo mais intuitivo. Por exemplo: <literal>{$float|string_format:"%2.f"}</literal> 
	  que é disponibilizado na distribuição do Smarty). Segundo: com a variável 
	  <link linkend="variable.security">$security</link> ativada em todas as funções do 
	  php que são usadas como modificadores precisam ser declaradas como confiáveis (trusted) 
	  na matriz <link linkend="variable.security.settings">$security_settings['MODIFIER_FUNCS']</link>.
     </para>

&designers.language-modifiers.language-modifier-capitalize;
&designers.language-modifiers.language-modifier-count-characters;
&designers.language-modifiers.language-modifier-cat;
&designers.language-modifiers.language-modifier-count-paragraphs;
&designers.language-modifiers.language-modifier-count-sentences;
&designers.language-modifiers.language-modifier-count-words;
&designers.language-modifiers.language-modifier-date-format;
&designers.language-modifiers.language-modifier-default;
&designers.language-modifiers.language-modifier-escape;
&designers.language-modifiers.language-modifier-indent;
&designers.language-modifiers.language-modifier-lower;
&designers.language-modifiers.language-modifier-nl2br;
&designers.language-modifiers.language-modifier-regex-replace;
&designers.language-modifiers.language-modifier-replace;
&designers.language-modifiers.language-modifier-spacify;
&designers.language-modifiers.language-modifier-string-format;
&designers.language-modifiers.language-modifier-strip;
&designers.language-modifiers.language-modifier-strip-tags;
&designers.language-modifiers.language-modifier-truncate;
&designers.language-modifiers.language-modifier-upper;
&designers.language-modifiers.language-modifier-wordwrap;

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->