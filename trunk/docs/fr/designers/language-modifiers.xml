<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.25 Maintainer: gerald Status: ready -->

<chapter id="language.modifiers">
 <title>Modificateurs de variables</title>
 <para>
  Les modificateurs de variables peuvent être appliqués aux
  <link linkend="language.syntax.variables">variables</link>,
  <link linkend="language.custom.functions">fonctions utilisateurs</link>
  ou chaînes de caractères. Pour appliquer un modificateur
  de variable, tappez une valeure suivie de <literal>|</literal>
  (pipe) et du nom du modificateur. Un modificateur de variable
  est succeptible d'accepter des paramètres additionnels, qui en affectent
  le comportement. Ces paramètres suivent le nom du modificateur et
  sont séparés par un <literal>:</literal> (deux points).
  <emphasis>Toutes les fonctions PHP peuvent être utilisées en tant que modifieurs
   implicitement</emphasis> (plus d'informations ci-dessous) et les modificateurs peuvent
  être <link linkend="language.combining.modifiers">combinés</link>.
 </para>
 <example>
  <title>Exemple de modificateur</title>
  <programlisting>
<![CDATA[
{* applique un modificateur à une variable *}
{$titre|upper}

{* modificateur avec paramètres *}
{$titre|truncate:40:'...'}

{* applique un modificateur à un paramètre de fonction *}
{html_table loop=$mavariable|upper}
{* avec paramètres *}
{html_table loop=$mavariable|truncate:40:'...'}

{* applique un modificateur à une chaine de caractères *}
{'foobar'|upper}

{* utilise date_format pour mettre en forme la date *}
{$smarty.now|date_format:"%d/%m/%Y"}

{* applique un modificateur à une fonction utilisateur *}
{mailto|upper address='smarty@example.com'}

{* utilisation de la fonction PHP str_repeat *}
{'='|str_repeat:80}

{* Compteur PHP *}
{$myArray|@count}

{* mélange aléatoire des IP du serveur grâce à PHP *}
{$smarty.server.SERVER_ADDR|shuffle}

(* ceci va mettre en majuscule et tronque le tableau *}
<select name="name_id">
 {html_options output=$myArray|upper|truncate:20}
</select>
]]>
  </programlisting>
 </example>
 <itemizedlist>
 <listitem>
 <para>
  Si vous appliquez un modificateur de variable à un tableau plutôt qu'à une
  variable simple, le modificateur sera appliqué à chaque valeur du tableau.
  Si vous souhaitez que le modificateur travaille réellement avec le tableau
  en tant que tel, vous devez préfixer le nom du modificateur avec un symbole
  <literal>@</literal>
  <note>
   <title>Exemple</title>
   <para><literal>{$articleTitle|@count}</literal> - affichera le nombre
    d'éléments dans le tableau <parameter>$articleTitle</parameter> en utilisant
    la fonction PHP <ulink url="&url.php-manual;count"><varname>count()</varname></ulink>
    comme modificateur.
   </para>
  </note>
 </para>
</listitem>

 <listitem>
  <para>
  Les modificateurs sont chargés automatiquement depuis votre répertoire
  de plugin <link linkend="variable.plugins.dir"><parameter>$plugins_dir</parameter></link>
  ou peuvent être enregistrés explicitement avec
  <link linkend="api.register.modifier"><varname>register_modifier()</varname></link> ;
  ceci est utile pour partager une fonction dans un scirpt PHP et les templates Smarty.
 </para>
</listitem>

  <listitem>
 <para>
  Toutes les fonction PHP peuvent être utilisées comme modificateur,
  sans autre déclaration, tel que dans l'exemple ci-dessus.
  Cepdendant, l'utilisation de fonctions PHP comme modificateurs
  contient deux petits pièges à éviter :
  <itemizedlist>
   <listitem><para>Le premier - quelques fois, l'ordre des paramètres de la fonction
     n'est pas celui attendu. Le formattage de <literal>$foo</literal>  avec
     <literal>{"%2.f"|sprintf:$foo}</literal> fonctionne actuellement, mais
     n'est pas aussi intuitif que
     <literal>{$foo|string_format:"%2.f"}</literal>, ce qui est fournit par Smarty.
    </para></listitem>
   <listitem><para>
     Le deuxième - Si <link linkend="variable.security">
      <parameter>$security</parameter></link> est activé, toutes les fonctions PHP
     qui devront être utilisées comme modificateurs, doivent être déclarées dans l'élément
     <literal>MODIFIER_FUNCS</literal> du tableau
     <link linkend="variable.security.settings">
      <parameter>$security_settings</parameter></link>.
    </para></listitem>
  </itemizedlist>
 </para></listitem>
  </itemizedlist>
 <para>
  Voir aussi
  <link linkend="api.register.modifier"><varname>register_modifier()</varname></link>,
  <link linkend="language.combining.modifiers">les modificateurs combinés</link>.
  et <link linkend="plugins">étendre Smarty avec des plugins</link>.
 </para>

 &designers.language-modifiers.language-modifier-capitalize;
 &designers.language-modifiers.language-modifier-cat;
 &designers.language-modifiers.language-modifier-count-characters;
 &designers.language-modifiers.language-modifier-count-paragraphs;
 &designers.language-modifiers.language-modifier-count-sentences;
 &designers.language-modifiers.language-modifier-count-words;
 &designers.language-modifiers.language-modifier-date-format;
 &designers.language-modifiers.language-modifier-default;
 &designers.language-modifiers.language-modifier-escape;
 &designers.language-modifiers.language-modifier-indent;
 &designers.language-modifiers.language-modifier-lower;
 &designers.language-modifiers.language-modifier-nl2br;
 &designers.language-modifiers.language-modifier-regex-replace;
 &designers.language-modifiers.language-modifier-replace;
 &designers.language-modifiers.language-modifier-spacify;
 &designers.language-modifiers.language-modifier-string-format;
 &designers.language-modifiers.language-modifier-strip;
 &designers.language-modifiers.language-modifier-strip-tags;
 &designers.language-modifiers.language-modifier-truncate;
 &designers.language-modifiers.language-modifier-upper;
 &designers.language-modifiers.language-modifier-wordwrap;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->