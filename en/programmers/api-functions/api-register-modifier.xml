<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<refentry id="api.register.modifier">
 <refnamediv>
  <refname>register_modifier()</refname>
  <refpurpose>dynamically register modifier plugin</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>register_modifier</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>impl</parameter></methodparam>
  </methodsynopsis>
  <para>
   Pass in the
   template modifier name, followed by the PHP function that it
   implements it.
  </para>
  <para>
   The php-function callback <parameter>impl</parameter> can be either
  </para>
  <orderedlist numeration="loweralpha">
  <listitem>
    <para>a string containing the function name
    </para>
  </listitem><listitem>
    <para>an array of the form <literal>array(&amp;$object,
    $method)</literal> with   <literal>&amp;$object</literal>
    being a reference to an
    object and <literal>$method</literal> being a string
    containing the method-name
    </para>
  </listitem><listitem>
     <para>
     an array of the form
     <literal>array(&amp;$class, $method)</literal> with
     <literal>$class</literal> being a classname and
     <literal>$method</literal> being a class method of that
     class.
    </para>
  </listitem>
  </orderedlist>

  <example>
   <title>register_modifier()</title>
<programlisting role="php">
<![CDATA[
<?php

// let's map PHP's stripslashes function to a Smarty modifier.
$smarty->register_modifier('sslash', 'stripslashes');

?>
]]>
</programlisting>
<para>template</para>
<programlisting>
<![CDATA[
<?php
{* use 'sslash' to strip slashes from variables *}
{$var|sslash}
?>
]]>
</programlisting>

  </example>
   <para>
    See also
    <link linkend="api.unregister.modifier">unregister_modifier()</link>,
    <link linkend="api.register.function">register_function()</link>,
    <link linkend="language.modifiers">modifiers</link>,
    <link linkend="plugins">Extending Smarty with plugins</link>
    and
    <link linkend="plugins.modifiers">Creating Plugin modifiers</link>,
 </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
