<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<sect1 id="language.escaping">
 <title>Escaping Penguraian Smarty</title>
 <para>
  Ada kalanya diinginkan atau bahkan perlu agar Smarty mengabaikan seksi
  atau sebaliknya akan diuraikan. Contoh klasi adalah melengketkan kode 
  Javascript atau CSS dalam sebuah template. Masalah muncul karena bahasa
  tersebut menggunakan karakter { dan } yang juga merupakan 
  <link linkend="language.function.ldelim">pembatas</link> standar untuk
  Smarty.
 </para>

 <para>
  Hal paling sederhana untuk menghindari situasi sekaligus adalah dengan 
  memisahkan kode Javascript dan CSS anda ke dalam filenya sendiri dan
  kemudian menggunakan metode standar HTML untuk mengaksesnya.
 </para>

 <para>
  Menyertakan konten literal dimungkinkan dengan menggunakan blok <link
  linkend="language.function.literal">
  <varname>{literal}..{/literal}</varname></link>.
  Mirip dengan penggunaan entitas HTML, anda bisa memakai <link
  linkend="language.function.ldelim"><varname>{ldelim}</varname></link>,<link
  linkend="language.function.ldelim"><varname>{rdelim}</varname></link> atau
  <link linkend="language.variables.smarty.ldelim">
  <varname>{$smarty.ldelim}</varname></link> untuk menampilkan pembatas saat 
  ini.
 </para>

 <para>
  Seringkali lebih nyaman dengan cukup mengubah <link
  linkend="variable.left.delimiter">
  <parameter>$left_delimiter</parameter></link> dan
  <link linkend="variable.right.delimiter">
  <parameter>$right_delimiter</parameter></link> Smarty.
 </para>
 <example>
  <title>contoh mengubah pembatas</title>
  <programlisting role="php">
<![CDATA[
<?php

$smarty->left_delimiter = '<!--{';
$smarty->right_delimiter = '}-->';

$smarty->assign('foo', 'bar');
$smarty->assign('name', 'Albert');
$smarty->display('example.tpl');

?>
]]>
  </programlisting>
  <para>
   Di mana template adalah:
  </para>
  <programlisting>
<![CDATA[
Welcome <!--{$name}--> to Smarty
<script language="javascript">
  var foo = <!--{$foo}-->;
  function dosomething() {
    alert("foo is " + foo);
  }
  dosomething();
</script>
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
