<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<sect1 id="language.variables.smarty">
 <title>variabel terpakai {$smarty}</title>
 <para>
  variabel PHP terpakai <parameter>{$smarty}</parameter> bisa digunakan untuk
  mengakses beberapa lingkungan dan variabel permintaan. Daftar lengkapnya 
  sebagai berikut.
 </para>

 <sect2 id="language.variables.smarty.request">
  <title>Variabel permintaan</title>
  <para>
   <ulink url="&url.php-manual;reserved.variables">variabel permintaan
   </ulink> seperti <literal>$_GET</literal>, <literal>$_POST</literal>,
   <literal>$_COOKIE</literal>, <literal>$_SERVER</literal>,
   <literal>$_ENV</literal> dan <literal>$_SESSION</literal>
   (lihat <link linkend="variable.request.vars.order">
   <varname>$request_vars_order</varname></link>
   dan <link  linkend="variable.request.use.auto.globals">
   <varname>$request_use_auto_globals</varname></link>)
   bisa diakses seperti diperlihatkan dalam contoh di bawah ini:
  </para>
  <example>
   <title>Menampilkan variabel permintaan</title>
   <programlisting>
<![CDATA[
{* menampilkan nilai halaman dari URL ($_GET) http://www.example.com/index.php?page=foo *}
{$smarty.get.page}

{* menampilkan variabel "page" dari sebuah formulir ($_POST['page']) *}
{$smarty.post.page}

{* menampilkan nilai cookie "username" ($_COOKIE['username']) *}
{$smarty.cookies.username}

{* menampilkan variabel server "SERVER_NAME" ($_SERVER['SERVER_NAME'])*}
{$smarty.server.SERVER_NAME}

{* menampilkan variabel lingkungan sistem "PATH" *}
{$smarty.env.PATH}

{* menampilkan variabel sesi php "id" ($_SESSION['id']) *}
{$smarty.session.id}

{* menampilkan "username" dari gabungan get/post/cookies/server/env *}
{$smarty.request.username}
]]>
   </programlisting>
  </example>
  <note>
   <para>
    Untuk alasan historis <parameter>{$SCRIPT_NAME}</parameter> dapat diakses
    secara langsung, meskipun <parameter>{$smarty.server.SCRIPT_NAME}</parameter> 
    adalah cara yang diusulkan untuk mengakses nilai ini.
   </para>
<programlisting>
<![CDATA[
<a href="{$SCRIPT_NAME}?page=smarty">click me</a>
<a href="{$smarty.server.SCRIPT_NAME}?page=smarty">click me</a>
]]>
</programlisting>
  </note>
 </sect2>

 <sect2 id="language.variables.smarty.now">
  <title>{$smarty.now}</title>
  <para>
   <ulink url="&url.php-manual;function.time">Cap waktu</ulink> saat ini
   bisa diakses dengan <parameter>{$smarty.now}</parameter>.
   Nilai merefleksikan jumlah detik berlalu sejak apa yang disebut
   Epoch pada 1 Januari 1970, dan dapat dikirimkan secara langsung ke
   pengubah
   <link linkend="language.modifier.date.format"><varname>date_format</varname>
   </link> untuk ditampilkan. Catatan bahwa
   <ulink url="&url.php-manual;function.time"><varname>time()</varname></ulink>
    dipanggil setiap kali ada permintaan; misalnya naskah yang mengambil
    tiga detik untuk dijalankan dengan sebuah panggilan ke
    <parameter>$smarty.now</parameter> di awal dan akhir akan menampilkan
    perbedaan tiga detik.
  <informalexample>
   <programlisting>
<![CDATA[
{* gunakan pengubah date_format untuk menampilkan tangal dan jam saat ini *}
{$smarty.now|date_format:'%Y-%m-%d %H:%M:%S'}
]]>
   </programlisting>
  </informalexample>
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.const">
  <title>{$smarty.const}</title>
  <para>
   Anda dapat mengakses nilai konstan  PHP secara langsung. Lihat juga <link
   linkend="smarty.constants">konstan smarty</link>.
   </para>
  <informalexample>
<programlisting role="php">
<![CDATA[
<?php
// konstan yang didefinisikan dalam php
define('MY_CONST_VAL','CHERRIES');
?>
]]>
</programlisting>
</informalexample>
<para>Output konstan dalam template</para>
<informalexample>
<programlisting>
<![CDATA[
{$smarty.const.MY_CONST_VAL}
]]>
</programlisting>
</informalexample>
 </sect2>

 <sect2 id="language.variables.smarty.capture">
  <title>{$smarty.capture}</title>
  <para>
   Output template ditangkap melalui fungsi built-in
   <link linkend="language.function.capture">
   <varname>{capture}..{/capture}</varname></link> bisa diakses menggunakan
   variabel <parameter>{$smarty.capture}</parameter>.
    Lihat halaman <link linkend="language.function.capture">
    <varname>{capture}</varname></link> untuk informasi lebih jauh.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.config">
  <title>{$smarty.config}</title>
  <para>
   Variabel <parameter>{$smarty.config}</parameter> bisa digunakan untuk
   merujuk ke <link linkend="language.config.variables">variabel config</link>
   yang diambil.
   <parameter>{$smarty.config.foo}</parameter> adalah sinonim untuk
   <parameter>{#foo#}</parameter>. Lihat halaman
   <link linkend="language.function.config.load">{config_load}</link> untuk
   informasi lebih jauh.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.loops">
  <title>{$smarty.section}, {$smarty.foreach}</title>
  <para>
   Variabel <parameter>{$smarty.section}</parameter> dan
   <parameter>{$smarty.foreach}</parameter> dapat digunakan untuk merujuk ke
   masing-masing properti pengulangan
   <link linkend="language.function.section"><varname>{section}</varname></link>
   dan
   <link linkend="language.function.foreach"><varname>{foreach}</varname></link>.
   Ini memiliki beberapa nilai kegunaan seperti
   <varname>.first</varname>, <varname>.index</varname>, dll.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.template">
  <title>{$smarty.template}</title>
  <para>
   Mengembalikan nama template yang sedang diproses saat ini. Contoh berikut
   memperlihatkan <filename>container.tpl</filename> dan
   <filename>banner.tpl</filename> yang disertakan dengan
   <parameter>{$smarty.template}</parameter> di dalam keduanya.
  </para>
<programlisting>
<![CDATA[
<b>Main container is {$smarty.template}</b>
{include file='banner.tpl'}
]]>
</programlisting>
    <para>
    akan menampilkan
    </para>
<programlisting>
<![CDATA[
<b>Main page is container.tpl</b>
banner.tpl
]]>
</programlisting>
 </sect2>

 <sect2 id="language.variables.smarty.version">
  <title>{$smarty.version}</title>
  <para>
   Mengembalikan versi Smarty di mana template sudah dikompilasi dengannya.
  </para>
<programlisting>
<![CDATA[
<div id="footer">Powered by Smarty {$smarty.version}</div>
]]>
</programlisting>
 </sect2>

 <sect2 id="language.variables.smarty.ldelim">
  <title>{$smarty.ldelim}, {$smarty.rdelim}</title>
  <para>
   Variabel ini dipakai untuk mencetak nilai pembatas-kiri dan pembatas-kanan
   secara literal, sama seperti <link linkend="language.function.ldelim">
   <varname>{ldelim},{rdelim}</varname></link>.
  </para>
  <para>
   Lihat juga
   <link linkend="language.assigned.variables">variabel yang ditempati</link> dan
   <link linkend="language.config.variables">variabel config</link>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
