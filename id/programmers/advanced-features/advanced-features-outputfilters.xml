<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
  <sect1 id="advanced.features.outputfilters">
   <title>Filter Output</title>
   <para>
    Ketika template dipanggil via
    <link linkend="api.display"><varname>display()</varname></link> atau
    <link linkend="api.fetch"><varname>fetch()</varname></link>, outputnya bisa
    dikirimkan melalui satu atau lebih filter output. Ini berbeda dari 
    <link linkend="advanced.features.postfilters">
    <varname>postfilters</varname></link>
    karena postfilters beroperasi pada template terkompilasi sebelum disimpan
    ke disk, sedangkan filter output beroperasi pada output template ketika ia 
    dijalankan.
   </para>

   <para>
    Filter output bisa 
    <link linkend="api.register.outputfilter">teregistrasi</link> atau diambil dari 
    <link linkend="variable.plugins.dir">direktori plugins</link> dengan 
    menggunakan metode
    <link linkend="api.load.filter"><varname>load_filter()</varname></link>
    atau dengan menyetel variabel <link linkend="variable.autoload.filters">
    <parameter>$autoload_filters</parameter></link>.
    Smarty akan mengoper output template sebagai argumen pertama,
    dan mengharapkan fungsi untuk mengembalikan hasil proses.
   </para>
   <example>
    <title>Menggunakan template outputfilter</title>
    <programlisting role="php">
<![CDATA[
<?php
// simpan ini dalam aplikasi anda
function protect_email($tpl_output, &$smarty)
{
    $tpl_output =
       preg_replace('!(\S+)@([a-zA-Z0-9\.\-]+\.([a-zA-Z]{2,3}|[0-9]{1,3}))!',
                    '$1%40$2', $tpl_output);
    return $tpl_output;
}

// daftarkan outputfilter
$smarty->register_outputfilter('protect_email');
$smarty->display('index.tpl');

// sekarang setiap ada alamat email dalam output template akan mempunyai
// perlindungan sederhana terhadap spambots
?>
]]>
    </programlisting>
   </example>
   <para>
   Lihat juga
   <link linkend="api.register.outputfilter"><varname>register_outpurfilter()</varname></link>,
   <link linkend="api.load.filter"><varname>load_filter()</varname></link>,
   <link linkend="variable.autoload.filters"><parameter>$autoload_filters</parameter></link>,
   <link linkend="advanced.features.postfilters">postfilters</link> dan
   <link linkend="variable.plugins.dir"><parameter>$plugins_dir</parameter></link>.
   </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
