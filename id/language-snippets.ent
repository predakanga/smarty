<!-- $Revision$ -->

<!ENTITY note.parameter.merge '<note>
 <title>Catatan Teknis</title>
 <para>
  Parameter <parameter>merge</parameter> merupakan kunci array, maka jika
  anda menggabung dua array berindeks secara numerik, keduanya bisa saling
  menimpa atau hasil dalam kunci non-sekuensial. Ini tidak seperti fungsi 
  PHP <ulink url="&url.php-manual;array_merge"> 
  <varname>array_merge()</varname></ulink> yang menghapus kunci numerik 
  dan menomorinya kembali.
 </para>
</note>'>

<!ENTITY note.parameter.function '<note>
 <title>Catatan Teknis</title>
 <para>
  Jika <parameter>fungsi</parameter> callback yang dipilih dalam bentuk 
  <literal>array(&amp;$object, $method)</literal>, hanya satu turunan dari 
  class yang sama dan dengan <literal>$method</literal> yang sama bisa 
  diregistrasi. <parameter>Fungsi</parameter> callback teregistrasi terbaru
  akan digunakan dalam skenario seperti itu.
 </para>
</note>'>

<!ENTITY parameter.compileid '<para>
 Sebagai parameter opsional ketiga, anda dapat mengoper 
 <parameter>$compile_id</parameter>.
 Ini dalam keadaan di mana anda ingin mengompilasi versi berbeda terhadap
 template yang sama, seperti memiliki template terpisa dikompilasi untuk 
 bahasa yang berbeda. Penggunaan lainnya untuk
 <parameter>$compile_id</parameter> ialah saat anda menggunakan lebih dari
 satu
 <link linkend="variable.template.dir"><parameter>$template_dir</parameter></link>
 tapi hanya satu
 <link linkend="variable.compile.dir"><parameter>$compile_dir</parameter></link>.
 Set <parameter>$compile_id</parameter> secara terpisah untuk setiap
 <link linkend="variable.template.dir"><parameter>$template_dir</parameter></link>,
 atau sebaliknya template dengan nama sama akan saling menimpa. Anda juga
 bisa menyetel variabel <link linkend="variable.compile.id">
 <parameter>$compile_id</parameter></link> sekali daripada mengoperkan ini
 ke setiap pemanggilan fungsi ini.
</para>'>

<!ENTITY api.register.snippet '<para>
   Fungsi-php callback <parameter>function</parameter> dapat berupa:
   <itemizedlist>
       <listitem><para>
       String yang berisi <parameter>nama</parameter> fungsi
       </para></listitem>

       <listitem><para>
       Sebuah array dalam bentuk <literal>array(&amp;$object, $method)</literal> dengan
       <literal>&amp;$object</literal> menjadi referensi ke sebuah
       obyek dan <literal>$method</literal> menjadi string yang
       berisi nama-metode
       </para></listitem>

       <listitem><para>
       Sebuah array dalam bentuk
       <literal>array($class, $method)</literal> dengan
       <literal>$class</literal> menjadi nama kelas dan 
       <literal>$method</literal> menjadi metode kelas.
       </para></listitem>
   </itemizedlist>
  </para>'>